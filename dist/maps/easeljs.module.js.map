{"version":3,"sources":["easeljs.module.js"],"names":["Tween","Timeline","Event","[object Object]","type","bubbles","cancelable","this","target","currentTarget","eventPhase","timeStamp","Date","getTime","defaultPrevented","propagationStopped","immediatePropagationStopped","removed","event","n","hasOwnProperty","props","constructor","name","EventDispatcher","p","prototype","addEventListener","on","removeEventListener","off","removeAllEventListeners","hasEventListener","dispatchEvent","_dispatchEvent","willTrigger","_listeners","_captureListeners","listener","useCapture","listeners","arr","push","scope","once","data","handleEvent","evt","call","remove","l","length","i","splice","eventObj","clone","e","parent","top","list","captureListeners","o","slice","Ticker","RAF_SYNCHED","RAF","TIMEOUT","super","timingMode","maxDelta","paused","_inited","_startTime","_pausedTime","_ticks","_pausedTicks","_interval","_lastTime","_times","_tickTimes","_timerId","_raf","interval","_setupTick","framerate","_getTime","f","window","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","init","ticks","times","Math","min","reduce","a","b","runTime","pauseable","_tick","mode","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","_handleRAF","bind","_handleSynch","setTimeout","_handleTimeout","time","elapsedTime","delta","unshift","pop","now","performance","_instance","toString","reset","getMeasuredTickTime","getMeasuredFPS","getEventTime","getTicks","StageGL","Error","_nextId","uid","Point","x","y","setValues","point","Matrix2D","c","d","tx","ty","a1","b1","c1","d1","tx1","matrix","append","prepend","scaleX","scaleY","rotation","skewX","skewY","regX","regY","r","cos","sin","DEG_TO_RAD","angle","pt","sqrt","atan2","abs","PI","identity","DisplayProps","visible","alpha","shadow","compositeOperation","appendMatrix","prependMatrix","Rectangle","width","height","left","bottom","right","rect","extend","x1","y1","x2","y2","Filter","usesContext","_multiPass","VTX_SHADER_BODY","FRAG_SHADER_BODY","gl","stage","shaderProgram","ctx","targetCtx","targetX","targetY","imageData","getImageData","_applyFilter","putImageData","BitmapCache","undefined","scale","offX","offY","cacheID","_filterOffX","_filterOffY","_cacheDataURLID","_cacheDataURL","_drawWidth","_drawHeight","_boundRect","output","filters","filterCount","getBounds","test","options","_options","_useWebGL","update","filterBounds","getFilterBounds","surface","cacheCanvas","ceil","_updateSurface","_drawToCache","_webGLCache","isCacheControlled","__lastRT","__rtA","_killTextureObject","__rtB","releaseTexture","toDataURL","drawImage","setValue","createjs","createCanvas","document","createElement","useGL","isWebGL","antialias","transparent","autoPurge","stageGL","updateViewport","getTargetRenderTexture","webGL","getContext","clearRect","save","globalCompositeOperation","setTransform","translate","draw","restore","_applyFilters","_invalid","cacheDraw","w","h","DisplayObject","bitmapCache","id","mouseEnabled","tickEnabled","transformMatrix","snapToPixel","mask","hitArea","cursor","_props","_rectangle","_bounds","_webGLRenderStyle","_StageGL_NONE","value","ignoreCache","drawCache","cache","mtx","graphics","isEmpty","getMatrix","transform","drawAsPath","clip","invert","_snapToPixelEnabled","globalAlpha","_applyShadow","define","release","getDataURL","getConcatenatedMatrix","transformPoint","localToGlobal","globalToLocal","copy","appendTransform","_hitTestContext","hit","_testHit","_cacheScale","_cacheOffsetX","_cacheOffsetY","_getBounds","_cloneProps","Shadow","shadowColor","color","shadowOffsetX","offsetX","shadowOffsetY","offsetY","shadowBlur","blur","evtObj","ls","suppressCrossDomainErrors","ignoreTransform","_transformBounds","bounds","x_a","x_b","y_c","y_d","minX","maxX","minY","maxY","evts","_MOUSE_EVENTS","canvas","_hitTestCanvas","snapToPixelEnabled","_StageGL_SPRITE","_StageGL_BITMAP","Container","children","mouseChildren","tickChildren","numChildren","hasContent","child","isVisible","updateContext","addChild","silent","_removeChildAt","indexOf","index","addChildAt","good","removeChild","indexes","sort","kids","sortFunction","index1","index2","o1","o2","child1","child2","getObjectUnderPoint","_getObjectsUnderPoint","recursive","_cloneChildren","removeAllChildren","mouse","activeListener","currentDepth","_testMask","_hasMouseEventListener","result","getConcatenatedDisplayProps","fillStyle","fill","MouseEvent","stageX","stageY","nativeEvent","pointerID","primary","rawX","rawY","relatedTarget","localX","localY","isTouch","Stage","autoClear","getElementById","mouseX","mouseY","drawRect","mouseInBounds","tickOnUpdate","mouseMoveOutside","preventSelection","_pointerData","_pointerCount","_primaryPointerID","_mouseOverIntervalID","_nextStage","_prevStage","enableDOMEvents","nextStage","tick","beginPath","backgroundColor","mimeType","fillRect","dataURL","frequency","clearInterval","_testMouseOver","setInterval","enable","_eventListeners","t","mouseup","_handleMouseUp","mousemove","_handleMouseMove","dblclick","_handleDoubleClick","mousedown","_handleMouseDown","getBoundingClientRect","err","offsetTop","offsetLeft","offsetWidth","offsetHeight","pageXOffset","scrollLeft","clientLeft","body","pageYOffset","scrollTop","clientTop","styles","getComputedStyle","currentStyle","padL","parseInt","paddingLeft","borderLeftWidth","padT","paddingTop","borderTopWidth","padR","paddingRight","borderRightWidth","padB","paddingBottom","borderBottomWidth","_handlePointerMove","pageX","pageY","owner","_getPointerData","inBounds","_updatePointerPosition","_dispatchMouseEvent","_getElementRect","posEvtObj","_handlePointerUp","clear","oTarget","down","_handlePointerDown","preventDefault","eventTarget","_mouseOverX","_mouseOverY","isEventTarget","common","oldList","_mouseOverTarget","oldTarget","style","pointerId","HTMLCanvasElement","VideoBuffer","video","readyState","_video","_canvas","_videoReady","videoWidth","videoHeight","currentTime","Bitmap","imageOrUri","image","src","sourceRect","naturalWidth","img","getImage","node","cloneNode","bmp","Sprite","spriteSheet","frameOrAnimation","currentFrame","currentAnimation","currentAnimationFrame","_animation","_currentFrame","_skipAdvance","gotoAndPlay","complete","_normalizeFrame","getFrame","_goto","fps","getFrameBounds","advance","frameDelta","animation","frame","speed","animFrame","frames","next","_dispatchAnimationEnd","getNumFrames","end","changed","isNaN","getAnimation","BitmapText","text","lineHeight","letterSpacing","spaceWidth","_oldProps","_oldStage","_drawAction","_updateState","_updateText","character","toUpperCase","toLowerCase","_getFrameIndex","ss","_getFrame","change","spaceW","lineH","pool","_spritePool","childIndex","numKids","sprite","hasSpace","_getSpaceWidth","_getLineHeight","charAt","gotoAndStop","maxPoolSize","DOMElement","htmlElement","position","transformOrigin","WebkitTransformOrigin","msTransformOrigin","MozTransformOrigin","OTransformOrigin","_handleDrawEnd","visibility","oldProps","oldMtx","equals","str","WebkitTransform","OTransform","msTransform","MozTransform","opacity","Graphics","command","_stroke","_strokeStyle","_oldStrokeStyle","_strokeDash","_oldStrokeDash","_fill","_strokeIgnoreScale","_commitIndex","_instructions","_activeInstructions","_dirty","_storeIndex","curveTo","quadraticCurveTo","mt","moveTo","lt","lineTo","at","arcTo","bt","bezierCurveTo","qt","arc","cp","closePath","beginFill","lf","beginLinearGradientFill","rf","beginRadialGradientFill","bf","beginBitmapFill","ef","endFill","setStrokeStyle","sd","setStrokeDash","s","beginStroke","beginLinearGradientStroke","rs","beginRadialGradientStroke","bs","beginBitmapStroke","es","endStroke","dr","rr","drawRoundRect","rc","drawRoundRectComplex","dc","drawCircle","de","drawEllipse","dp","drawPolyStar","decodePath","g","hue","saturation","lightness","instructions","_updateInstructions","instr","exec","instrs","path","MoveTo","LineTo","radius","ArcTo","startAngle","endAngle","anticlockwise","Arc","cpx","cpy","QuadraticCurveTo","cp1x","cp1y","cp2x","cp2y","BezierCurveTo","Rect","ClosePath","_setFill","Fill","colors","ratios","x0","y0","linearGradient","r0","r1","radialGradient","repetition","bitmap","thickness","caps","joints","miterLimit","ignoreScale","StrokeStyle","segments","offset","StrokeDash","_setStroke","Stroke","radiusTL","radiusTR","radiusBR","radiusBL","RoundRect","Circle","Ellipse","sides","pointSize","PolyStar","clean","paramCount","params","base64","_BASE_64","fi","pl","charCount","num","sign","apply","commit","active","commitIndex","beginCmd","ll","stroke","BeginPath","_ctx","createLinearGradient","addColorStop","createRadialGradient","createPattern","strokeStyle","lineWidth","lineCap","_STROKE_CAPS_MAP","lineJoin","_STROKE_JOINTS_MAP","setLineDash","lineDashOffset","max","mTL","mTR","mBR","mBL","rTL","rTR","rBR","rBL","k","ox","oy","xe","ye","xm","ym","ps","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","j","m","q","u","v","z","0","1","2","3","4","5","6","7","8","9","+","/","MovieClip","inited","INDEPENDENT","startPosition","loop","timeline","Object","assign","useTicks","actionsEnabled","autoReset","frameBounds","_synchOffset","_rawPosition","_t","_managed","_bound_resolveState","_resolveState","MovieClipPlugin","install","labels","currentLabel","duration","totalFrames","positionOrLabel","play","stop","_framerate","_updateTimeline","pos","resolve","rawPosition","jump","synced","tl","SINGLE_FRAME","setPosition","tweens","tween","passive","_stepPosition","_addManagedChild","_setState","state","removeChildAt","_off","_reset","SYNCHED","installPlugin","prop","startValues","endValues","ratio","wait","priority","Shadow","Shape","SpriteSheet","_animations","_frames","_images","_data","_loadCount","_frameHeight","_frameWidth","_numFrames","_regX","_regY","_spacing","_margin","_parseData","animations","frameIndex","rectangle","images","onload","_handleImageLoad","onerror","_handleImageError","Array","isArray","spacing","margin","count","_calculateFrames","anim","obj","errorEvent","maxFrames","frameCount","frameWidth","frameHeight","imgLoop","imgs","imgW","imgH","naturalHeight","Text","font","textAlign","textBaseline","maxWidth","outline","col","_drawText","_prepContext","_getMeasuredWidth","H_OFFSETS","getMeasuredLineHeight","V_OFFSETS","lines","vOffset","substr","paint","maxW","hardLines","String","split","measureText","words","wordW","_drawTextLine","strokeText","fillText","start","center","hanging","middle","alphabetic","ideographic","AlphaMapFilter","alphaMap","_alphaMap","_mapData","_mapTexture","createTexture","activeTexture","TEXTURE1","bindTexture","TEXTURE_2D","setTextureParams","texImage2D","RGBA","UNSIGNED_BYTE","uniform1i","getUniformLocation","_prepAlphaMap","map","AlphaMaskFilter","BlurFilter","blurX","blurY","quality","_blurX","_blurXTable","_lastBlurX","_blurY","_blurYTable","_lastBlurY","_quality","_lastQuality","FRAG_SHADER_TEMPLATE","_buildShader","xChange","yChange","qChange","_getTable","_updateShader","_compiledShader","_builtShader","uniform1fv","uniform2f","_viewportWidth","_viewportHeight","pow","pad","replace","toFixed","spread","EDGE","adjust","factor","currentValue","radiusX","radiusY","iterations","px","yp","yi","yw","pr","pg","pb","pa","divx","divy","w1","h1","rxp1","ryp1","ssx","sx","ssy","sy","si","MUL_TABLE","stx","SHG_TABLE","mty","sty","ms","ColorFilter","redMultiplier","greenMultiplier","blueMultiplier","alphaMultiplier","redOffset","greenOffset","blueOffset","alphaOffset","uniform4f","ColorMatrix","brightness","contrast","setColor","adjustColor","IDENTITY_MATRIX","adjustBrightness","adjustContrast","adjustSaturation","adjustHue","_cleanValue","_multiplyMatrix","DELTA_INDEX","lumR","lumG","lumB","cosVal","sinVal","_fixMatrix","LENGTH","val","limit","toArray","concat","freeze","ColorMatrixFilter","mat","colorMatrix","Float32Array","uniformMatrix4fv","m0","m1","m2","m3","m4","m5","m6","m7","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","ButtonHelper","outLabel","overLabel","downLabel","hitLabel","_isPressed","_isOver","_enabled","enabled","__reset","label","Touch","Touch","MSPointerEvent","navigator","msMaxTouchPoints","PointerEvent","maxTouchPoints","singleTouch","allowDefault","isSupported","__touch","pointers","multitouch","_IOS_enable","_IE_enable","_IOS_disable","_IE_disable","_IOS_handleEvent","touches","changedTouches","touch","identifier","_handleStart","_handleMove","_handleEnd","_IE_handleEvent","msTouchAction","touchAction","activeIDs","ids","srcElement","SpriteSheetBuilder","maxHeight","padding","timeSlice","progress","_nextFrameIndex","_index","_timerID","_scale","source","setupFunction","setupData","ERR_RUNNING","nominalBounds","funct","labelFunction","rects","baseFrameIndex","addFrame","_setupMovieClipFrame","_labels","lbls","addAnimation","_startBuild","_drawNext","_endBuild","_run","dataFrames","ERR_DIMENSIONS","_fillRow","_getSize","ae","size","maxH","sc","rx","floor","ry","rh","rw","round","ts","SpriteSheetUtils","SpriteSheetUtils","_workingCanvas","_workingContext","il","__tmp","fl","sfx","names","al","WebGLInspector","_stage","item","_log","info","alternateOutput","log","console","_batchID","_drawID","logContextInfo","_webGLContext","logDepth","logTextureFill","_drawBuffers_","_drawBuffers","_inspectorDrawBuffers","vocalDebug","batchReason","logFunc","getParameter","MAX_TEXTURE_IMAGE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_RENDERBUFFER_SIZE","MAX_VERTEX_ATTRIBS","VERSION","dict","_textureDictionary","_batchTextureCount","textureMax","location","origin","tex","shifted","_lastActiveIndex","_activeIndex","element","out","cjs","easeljs"],"mappings":"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","file":"../easeljs.module.js","sourcesContent":["/**\n * @license\n * EaselJS\n * Visit https://createjs.com for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Tween from '@createjs/tweenjs/src/Tween';\nimport Timeline from '@createjs/tweenjs/src/Timeline';\n\n/**\n * @license Event\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Contains properties and methods shared by all events for use with {@link core.EventDispatcher}.\n * Note that Event objects are often reused, so you should never\n * rely on an event object's state outside of the call stack it was received in.\n *\n * @memberof core\n * @example\n * const evt = new Event(\"myEvent\");\n * const dispatcher = new EventDispatcher();\n * dispatcher.on(\"myEvent\", event => console.log(event.type));\n * dispatcher.dispatchEvent(evt); // logs \"myEvent\"\n *\n * @param {string} type The event type.\n * @param {boolean} [bubbles=false] Indicates whether the event will bubble through the display list.\n * @param {boolean} [cancelable=false] Indicates whether the default behaviour of this event can be cancelled.\n */\nclass Event {\n\n\tconstructor (type, bubbles = false, cancelable = false) {\n\t\t/**\n\t\t * The type of event.\n\t\t * @type string\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t * The object that generated an event.\n\t\t *\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.target = null;\n\n\t\t/**\n\t\t * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n\t\t * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n\t\t * is generated from childObj, then a listener on parentObj would receive the event with\n\t\t * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n\t\t *\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.currentTarget = null;\n\n\t\t/**\n\t\t * For bubbling events, this indicates the current event phase:\n\t\t * <OL>\n\t\t * \t<LI> capture phase: starting from the top parent to the target</LI>\n\t\t * \t<LI> at target phase: currently being dispatched from the target</LI>\n\t\t * \t<LI> bubbling phase: from the target to the top parent</LI>\n\t\t * </OL>\n\t\t *\n\t\t * @type number\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.eventPhase = 0;\n\n\t\t/**\n\t\t * Indicates whether the event will bubble through the display list.\n\t\t *\n\t\t * @type boolean\n\t\t * @readonly\n\t\t */\n\t\tthis.bubbles = bubbles;\n\n\t\t/**\n\t\t * Indicates whether the default behaviour of this event can be cancelled via {@link core.Event#preventDefault}.\n\t\t *\n\t\t * @type boolean\n\t\t * @readonly\n\t\t */\n\t\tthis.cancelable = cancelable;\n\n\t\t/**\n\t\t * The epoch time at which this event was created.\n\t\t *\n\t\t * @type number\n\t\t * @readonly\n\t\t */\n\t\tthis.timeStamp = new Date().getTime();\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#preventDefault} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.defaultPrevented = false;\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#stopPropagation} or {@link core.Event#stopImmediatePropagation} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.propagationStopped = false;\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#stopImmediatePropagation} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.immediatePropagationStopped = false;\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#remove} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.removed = false;\n\t}\n\n\t/**\n\t * Sets {@link core.Event#defaultPrevented} to true if the event is cancelable.\n\t * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n\t * cancel the default behaviour associated with the event.\n\t * @return {core.Event} this, chainable\n\t */\n\tpreventDefault () {\n\t\tthis.defaultPrevented = this.cancelable;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets {@link core.Event#propagationStopped} to true.\n\t * Mirrors the DOM event standard.\n\t * @return {core.Event} this, chainable\n\t */\n\tstopPropagation () {\n\t\tthis.propagationStopped = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets {@link core.Event#propagationStopped} and {@link core.Event#immediatePropagationStopped} to true.\n\t * Mirrors the DOM event standard.\n\t * @return {core.Event} this, chainable\n\t */\n\tstopImmediatePropagation () {\n\t\tthis.immediatePropagationStopped = this.propagationStopped = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Causes the active listener to be removed via removeEventListener();\n\t *\n\t * @example\n\t * myBtn.addEventListener(\"click\", event => {\n\t *   event.remove(); // removes this listener.\n\t * });\n\t *\n\t * @return {core.Event} this, chainable\n\t */\n\tremove () {\n\t\tthis.removed = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of the Event instance.\n\t *\n\t * @return {core.Event} a clone of the Event instance.\n\t */\n\tclone () {\n\t\tconst event = new Event(this.type, this.bubbles, this.cancelable);\n\t\tfor (let n in this) {\n\t\t\tif (this.hasOwnProperty(n)) {\n\t\t\t\tevent[n] = this[n];\n\t\t\t}\n\t\t}\n\t\treturn event;\n\t}\n\n\t/**\n\t * Provides a return {core.Event} this, chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * @param {Object} props A generic object containing properties to copy to the instance.\n\t * @return {core.Event} this, chainable\n\t */\n\tset (props) {\n\t\tfor (let n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t *\n\t * @return {string} A string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (type=${this.type})]`;\n\t}\n\n}\n\n/**\n * @license EventDispatcher\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\n *\n * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\n * EventDispatcher {@link core.EventDispatcher.initialize} method.\n *\n * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\n * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\n * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\n *\n * EventDispatcher also exposes a {@link core.EventDispatcher#on} method, which makes it easier\n * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The\n * {@link core.EventDispatcher#off} method is merely an alias to {@link core.EventDispatcher#removeEventListener}.\n *\n * Another addition to the DOM Level 2 model is the {@link core.EventDispatcher#removeAllEventListeners}\n * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also\n * includes a {@link core.Event#remove} method which removes the active listener.\n *\n * @memberof core\n * @example\n * // add EventDispatcher capabilities to the \"MyClass\" class.\n * EventDispatcher.initialize(MyClass.prototype);\n *\n * // Add an event.\n * instance.addEventListener(\"eventName\", event => console.log(event.target + \" was clicked.\"));\n *\n * // scope (\"this\") can be be a challenge with events.\n * // using the {@link core.EventDispatcher#on} method to subscribe to events simplifies this.\n * instance.addEventListener(\"click\", event => console.log(instance === this)); // false, scope is ambiguous.\n * instance.on(\"click\", event => console.log(instance === this)); // true, `on` uses dispatcher scope by default.\n */\nclass EventDispatcher {\n\n\t/**\n\t * Static initializer to mix EventDispatcher methods into a target object or prototype.\n\t *\n\t * @static\n\t * @example\n\t * EventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t * EventDispatcher.initialize(myInstance); // add to a specific instance\n\t *\n\t * @param {Object} target The target object to inject EventDispatcher methods into.\n\t */\n\tstatic initialize (target) {\n\t\tconst p = EventDispatcher.prototype;\n\t\ttarget.addEventListener = p.addEventListener;\n\t\ttarget.on = p.on;\n\t\ttarget.removeEventListener = target.off = p.removeEventListener;\n\t\ttarget.removeAllEventListeners = p.removeAllEventListeners;\n\t\ttarget.hasEventListener = p.hasEventListener;\n\t\ttarget.dispatchEvent = p.dispatchEvent;\n\t\ttarget._dispatchEvent = p._dispatchEvent;\n\t\ttarget.willTrigger = p.willTrigger;\n\t}\n\n\tconstructor () {\n\t\t/**\n\t\t * @private\n\t\t * @default null\n\t\t * @type Object\n\t\t */\n\t\tthis._listeners = null;\n\n\t\t/**\n\t\t * @private\n\t\t * @default null\n\t\t * @type Object\n\t\t */\n\t\tthis._captureListeners = null;\n\t}\n\n\t/**\n\t * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\n\t * multiple callbacks getting fired.\n\t *\n\t * @example\n\t * displayObject.addEventListener(\"click\", event => console.log('clicked', event));\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function|Object} Returns the listener for chaining or assignment.\n\t */\n\taddEventListener (type, listener, useCapture = false) {\n\t\tlet listeners;\n\t\tif (useCapture) {\n\t\t\tlisteners = this._captureListeners = this._captureListeners || {};\n\t\t} else {\n\t\t\tlisteners = this._listeners = this._listeners || {};\n\t\t}\n\t\tlet arr = listeners[type];\n\t\tif (arr) {\n\t\t\tthis.removeEventListener(type, listener, useCapture);\n\t\t\tarr = listeners[type]; // remove may have deleted the array\n\t\t}\n\t\tif (arr) { arr.push(listener);  }\n\t\telse { listeners[type] = [listener]; }\n\t\treturn listener;\n\t}\n\n\t/**\n\t * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\n\t * only run once, associate arbitrary data with the listener, and remove the listener.\n\t *\n\t * This method works by creating an anonymous wrapper function and subscribing it with `addEventListener`.\n\t * The wrapper function is returned for use with `removeEventListener` (or `off`).\n\t *\n\t * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n\t * {@link core.Event#remove}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\n\t * to `on` with the same params will create multiple listeners.\n\t *\n\t * @example\n\t * const listener = myBtn.on(\"click\", handleClick, null, false, { count: 3 });\n\t * function handleClick (evt, data) {\n\t *   data.count -= 1;\n\t *   console.log(this == myBtn); // true - scope defaults to the dispatcher\n\t *   if (data.count == 0) {\n\t *     alert(\"clicked 3 times!\");\n\t *     myBtn.off(\"click\", listener);\n\t *     // alternately: evt.remove();\n\t *   }\n\t * }\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n\t * @param {Object} [scope=null] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\n\t * @param {boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\n\t * @param {*} [data={}] Arbitrary data that will be included as the second parameter when the listener is called.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\n\t */\n\ton (type, listener, scope = null, once = false, data = {}, useCapture = false) {\n\t\tif (listener.handleEvent) {\n\t\t\tscope = scope || listener;\n\t\t\tlistener = listener.handleEvent;\n\t\t}\n\t\tscope = scope || this;\n\t\treturn this.addEventListener(type, evt => {\n\t\t\tlistener.call(scope, evt, data);\n\t\t\tonce && evt.remove();\n\t\t}, useCapture);\n\t}\n\n\t/**\n\t * Removes the specified event listener.\n\t *\n\t * You must pass the exact function reference used when the event was added. If a proxy\n\t * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\n\t * closure will not work.\n\t *\n\t * @example\n\t * displayObject.removeEventListener(\"click\", handleClick);\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener The listener function or object.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t */\n\tremoveEventListener (type, listener, useCapture = false) {\n\t\tconst listeners = useCapture ? this._captureListeners : this._listeners;\n\t\tif (!listeners) { return; }\n\t\tconst arr = listeners[type];\n\t\tif (!arr) { return; }\n\t\tconst l = arr.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tif (arr[i] === listener) {\n\t\t\t\tif (l === 1) { delete(listeners[type]); } // allows for faster checks.\n\t\t\t\telse { arr.splice(i, 1); }\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n\t * `on` method.\n\t *\n\t * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See\n\t * {@link core.EventDispatcher#on} for an example.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener The listener function or object.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t */\n\toff (type, listener, useCapture = false) {\n\t\tthis.removeEventListener(type, listener, useCapture);\n\t}\n\n\t/**\n\t * Removes all listeners for the specified type, or all listeners of all types.\n\t *\n\t * @example\n\t * // remove all listeners\n\t * displayObject.removeAllEventListeners();\n\t *\n\t * // remove all click listeners\n\t * displayObject.removeAllEventListeners(\"click\");\n\t *\n\t * @param {string} [type=null] The string type of the event. If omitted, all listeners for all types will be removed.\n\t */\n\tremoveAllEventListeners (type = null) {\n\t\tif (type) {\n\t\t\tif (this._listeners) { delete(this._listeners[type]); }\n\t\t\tif (this._captureListeners) { delete(this._captureListeners[type]); }\n\t\t} else {\n\t\t\tthis._listeners = this._captureListeners = null;\n\t\t}\n\t}\n\n\t/**\n\t * Dispatches the specified event to all listeners.\n\t *\n\t * @example\n\t * // use a string event\n\t * this.dispatchEvent(\"complete\")\n\t *\n\t * // use an Event instance\n\t * const event = new createjs.Event(\"progress\");\n\t * this.dispatchEvent(event);\n\t *\n\t * @param {Object|Event|string} eventObj An object with a \"type\" property, or a string type.\n\t * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\n\t * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\n\t * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\n\t * @param {boolean} [bubbles=false] Specifies the `bubbles` value when a string was passed to eventObj.\n\t * @param {boolean} [cancelable=false] Specifies the `cancelable` value when a string was passed to eventObj.\n\t * @return {boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\n\t */\n\tdispatchEvent (eventObj, bubbles = false, cancelable = false) {\n\t\tif (typeof eventObj === \"string\") {\n\t\t\t// skip everything if there's no listeners and it doesn't bubble:\n\t\t\tconst listeners = this._listeners;\n\t\t\tif (!bubbles && (!listeners || !listeners[eventObj])) { return true; }\n\t\t\teventObj = new Event(eventObj, bubbles, cancelable);\n\t\t} else if (eventObj.target && eventObj.clone) {\n\t\t\t// redispatching an active event object, so clone it:\n\t\t\teventObj = eventObj.clone();\n\t\t}\n\n\t\t// TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\n\t\ttry { eventObj.target = this; } catch (e) {} // try/catch allows redispatching of native events\n\n\t\tif (!eventObj.bubbles || !this.parent) {\n\t\t\tthis._dispatchEvent(eventObj, 2);\n\t\t} else {\n\t\t\tlet top = this;\n\t\t\tconst list = [top];\n\t\t\twhile (top.parent) { list.push(top = top.parent); }\n\t\t\tconst l = list.length;\n\t\t\tlet i;\n\n\t\t\t// capture & atTarget\n\t\t\tfor (i = l - 1; i >= 0 && !eventObj.propagationStopped; i--) {\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 1+(i==0));\n\t\t\t}\n\t\t\t// bubbling\n\t\t\tfor (i = 1; i < l && !eventObj.propagationStopped; i++) {\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 3);\n\t\t\t}\n\t\t}\n\t\treturn !eventObj.defaultPrevented;\n\t}\n\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @return {boolean} Returns true if there is at least one listener for the specified event.\n\t */\n\thasEventListener (type) {\n\t\tconst listeners = this._listeners, captureListeners = this._captureListeners;\n\t\treturn !!((listeners && listeners[type]) || (captureListeners && captureListeners[type]));\n\t}\n\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type on this object or any of its\n\t * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\n\t * specified type is dispatched from this object, it will trigger at least one listener.\n\t *\n\t * This is similar to {@link core.EventDispatcher#hasEventListener}, but it searches the entire\n\t * event flow for a listener, not just this object.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @return {boolean} Returns `true` if there is at least one listener for the specified event.\n\t */\n\twillTrigger (type) {\n\t\tlet o = this;\n\t\twhile (o) {\n\t\t\tif (o.hasEventListener(type)) { return true; }\n\t\t\to = o.parent;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name + this.name ? ` ${this.name}` : \"\"}]`;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object|Event|string} eventObj\n\t * @param {Object} eventPhase\n\t */\n\t_dispatchEvent (eventObj, eventPhase) {\n\t\tconst listeners = eventPhase === 1 ? this._captureListeners : this._listeners;\n\t\tif (eventObj && listeners) {\n\t\t\tlet arr = listeners[eventObj.type];\n\t\t\tlet l;\n\t\t\tif (!arr || (l = arr.length) === 0) { return; }\n\t\t\ttry { eventObj.currentTarget = this; } catch (e) {}\n\t\t\ttry { eventObj.eventPhase = eventPhase; } catch (e) {}\n\t\t\teventObj.removed = false;\n\n\t\t\tarr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\n\t\t\tfor (let i = 0; i < l && !eventObj.immediatePropagationStopped; i++) {\n\t\t\t\tlet o = arr[i];\n\t\t\t\tif (o.handleEvent) { o.handleEvent(eventObj); }\n\t\t\t\telse { o(eventObj); }\n\t\t\t\tif (eventObj.removed) {\n\t\t\t\t\tthis.off(eventObj.type, o, eventPhase === 1);\n\t\t\t\t\teventObj.removed = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n/**\n * @license Ticker\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * The Ticker provides a centralized tick or heartbeat broadcast at a set interval. Listeners can subscribe to the tick\n * event to be notified when a set time interval has elapsed.\n *\n * Note that the interval that the tick event is called is a target interval, and may be broadcast at a slower interval\n * when under high CPU load. The Ticker class uses a static interface (ex. `Ticker.framerate = 30;`) and\n * can not be instantiated.\n *\n * @todo Pass timingMode, maxDelta, paused values as instantiation arguments?\n *\n * @memberof core\n * @example\n * Ticker.addEventListener(\"tick\", event => {\n *   // Actions carried out each tick (aka frame)\n *   if (!event.paused) {\n *     // Actions carried out when the Ticker is not paused.\n *   }\n * });\n * @example\n * // Ticker export explanation\n * import Ticker, { Ticker as TickerClass, getTicker } from \"@createjs/core\";\n * Ticker.name, Ticker.RAF // -> createjs.global, undefined\n * TickerClass.RAF // -> raf\n * Ticker === getTicker(\"createjs.global\") // -> true\n *\n * @extends core.EventDispatcher\n * @param {string} name The name assigned to this instance.\n */\nclass Ticker extends EventDispatcher {\n\n\t/**\n\t * In this mode, Ticker uses the requestAnimationFrame API, but attempts to synch the ticks to target framerate. It\n\t * uses a simple heuristic that compares the time of the RAF return to the target time for the current frame and\n\t * dispatches the tick when the time is within a certain threshold.\n\t *\n\t * This mode has a higher variance for time between frames than {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}},\n\t * but does not require that content be time based as with {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}} while\n\t * gaining the benefits of that API (screen synch, background throttling).\n\t *\n\t * Variance is usually lowest for framerates that are a divisor of the RAF frequency. This is usually 60, so\n\t * framerates of 10, 12, 15, 20, and 30 work well.\n\t *\n\t * Falls back to {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n\t * supported.\n\t *\n\t * @static\n\t * @type {string}\n\t * @default \"synched\"\n\t * @readonly\n\t */\n\tstatic get RAF_SYNCHED () { return \"synched\"; }\n\n\t/**\n\t * In this mode, Ticker passes through the requestAnimationFrame heartbeat, ignoring the target framerate completely.\n\t * Because requestAnimationFrame frequency is not deterministic, any content using this mode should be time based.\n\t * You can leverage {@link core.Ticker#getTime} and the {@link core.Ticker#event:tick}\n\t * event object's \"delta\" properties to make this easier.\n\t *\n\t * Falls back on {@link core.Ticker.TIMEOUT} if the requestAnimationFrame API is not supported.\n\t *\n\t * @static\n\t * @type {string}\n\t * @default \"raf\"\n\t * @readonly\n\t */\n\tstatic get RAF () { return \"raf\"; }\n\n\t/**\n\t * In this mode, Ticker uses the setTimeout API. This provides predictable, adaptive frame timing, but does not\n\t * provide the benefits of requestAnimationFrame (screen synch, background throttling).\n\t *\n\t * @static\n\t * @type {string}\n\t * @default \"timeout\"\n\t * @readonly\n\t */\n\tstatic get TIMEOUT () { return \"timeout\"; }\n\n\tconstructor (name) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The name of this instance.\n\t\t * @type {string}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Specifies the timing api (setTimeout or requestAnimationFrame) and mode to use.\n\t\t *\n\t\t * @see {@link core.Ticker.TIMEOUT}\n\t\t * @see {@link core.Ticker.RAF}\n\t\t * @see {@link core.Ticker.RAF_SYNCHED}\n\t\t *\n\t\t * @type {string}\n\t\t * @default Ticker.TIMEOUT\n\t\t */\n\t\tthis.timingMode = Ticker.TIMEOUT;\n\n\t\t/**\n\t\t * Specifies a maximum value for the delta property in the tick event object. This is useful when building time\n\t\t * based animations and systems to prevent issues caused by large time gaps caused by background tabs, system sleep,\n\t\t * alert dialogs, or other blocking routines. Double the expected frame duration is often an effective value\n\t\t * (ex. maxDelta=50 when running at 40fps).\n\t\t *\n\t\t * This does not impact any other values (ex. time, runTime, etc), so you may experience issues if you enable maxDelta\n\t\t * when using both delta and other values.\n\t\t *\n\t\t * If 0, there is no maximum.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.maxDelta = 0;\n\n\t\t/**\n\t\t * When the ticker is paused, all listeners will still receive a tick event, but the `paused` property\n\t\t * of the event will be `true`. Also, while paused the `runTime` will not increase.\n\t\t *\n\t\t * @example\n\t\t * Ticker.addEventListener(\"tick\", event => console.log(event.paused, Ticker.getTime(false), Ticker.getTime(true)));\n\t\t * Ticker.paused = true;\n\t\t *\n\t\t * @see {@link core.Ticker#event:tick}\n\t\t * @see {@link core.Ticker#getTime}\n\t\t * @see {@link core.Ticker#getEventTime}\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.paused = false;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._inited = false;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._startTime = 0;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._pausedTime = 0;\n\n\t\t/**\n\t\t * The number of ticks that have passed.\n\t\t *\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._ticks = 0;\n\n\t\t/**\n\t\t * The number of ticks that have passed while Ticker has been paused.\n\t\t *\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default\n\t\t */\n\t\tthis._pausedTicks = 0;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default\n\t\t */\n\t\tthis._interval = 50;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default\n\t\t */\n\t\tthis._lastTime = 0;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {Array}\n\t\t * @default null\n\t\t */\n\t\tthis._times = null;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {Array}\n\t\t * @default null\n\t\t */\n\t\tthis._tickTimes = null;\n\n\t\t/**\n\t\t * Stores the timeout or requestAnimationFrame id.\n\t\t *\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis._timerId = null;\n\n\t\t/**\n\t\t * True if currently using requestAnimationFrame, false if using setTimeout. This may be different than timingMode\n\t\t * if that property changed and a tick hasn't fired.\n\t\t *\n\t\t * @private\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis._raf = true;\n\t}\n\n\t/**\n\t * Indicates the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\n\t * Note that actual time between ticks may be more than specified depending on CPU load.\n\t * This property is ignored if the ticker is using the `RAF` timing mode.\n\t *\n\t * @type {number}\n\t */\n\tget interval () { return this._interval; }\n\tset interval (interval) {\n\t\tthis._interval = interval;\n\t\tif (!this._inited) { return; }\n\t\tthis._setupTick();\n\t}\n\n\t/**\n\t * Indicates the target frame rate in frames per second (FPS). Effectively just a shortcut to `interval`, where\n\t * `framerate == 1000/interval`.\n\t *\n\t * @type {number}\n\t */\n\tget framerate () { return 1000 / this._interval; }\n\tset framerate (framerate) { this.interval = 1000 / framerate; }\n\n\t/**\n\t * Starts the tick. This is called automatically when the first listener is added.\n\t */\n\tinit () {\n\t\tif (this._inited) { return; }\n\t\tthis._inited = true;\n\t\tthis._times = [];\n\t\tthis._tickTimes = [];\n\t\tthis._startTime = this._getTime();\n\t\tthis._times.push(this._lastTime = 0);\n\t\tthis._setupTick();\n\t}\n\n\t/**\n\t * Stops the Ticker and removes all listeners. Use init() to restart the Ticker.\n\t */\n\treset () {\n\t\tif (this._raf) {\n\t\t\tlet f = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame;\n\t\t\tf && f(this._timerId);\n\t\t} else {\n\t\t\tclearTimeout(this._timerId);\n\t\t}\n\t\tthis.removeAllEventListeners(\"tick\");\n\t\tthis._timerId = this._times = this._tickTimes = null;\n\t\tthis._startTime = this._lastTime = this._ticks = 0;\n\t\tthis._inited = false;\n\t}\n\n\t/**\n\t * Init the Ticker instance if it hasn't been already.\n\t */\n\taddEventListener (type, listener, useCapture) {\n\t\t!this._inited && this.init();\n\t\treturn super.addEventListener(type, listener, useCapture);\n\t}\n\n\t/**\n\t * Returns the average time spent within a tick. This can vary significantly from the value provided by getMeasuredFPS\n\t * because it only measures the time spent within the tick execution stack.\n\t *\n\t * Example 1: With a target FPS of 20, getMeasuredFPS() returns 20fps, which indicates an average of 50ms between\n\t * the end of one tick and the end of the next. However, getMeasuredTickTime() returns 15ms. This indicates that\n\t * there may be up to 35ms of \"idle\" time between the end of one tick and the start of the next.\n\t *\n\t * Example 2: With a target FPS of 30, getFPS() returns 10fps, which indicates an average of 100ms between the end of\n\t * one tick and the end of the next. However, getMeasuredTickTime() returns 20ms. This would indicate that something\n\t * other than the tick is using ~80ms (another script, DOM rendering, etc).\n\t *\n\t * @param {number} [ticks=null] The number of previous ticks over which to measure the average time spent in a tick.\n\t * Defaults to the number of ticks per second. To get only the last tick's time, pass in 1.\n\t * @return {number} The average time spent in a tick in milliseconds.\n\t */\n\tgetMeasuredTickTime (ticks = null) {\n\t\tconst times = this._tickTimes;\n\t\tif (!times || times.length < 1) { return -1; }\n\t\t// by default, calculate average for the past ~1 second:\n\t\tticks = Math.min(times.length, ticks || (this.framerate | 0));\n\t\treturn times.reduce((a, b) => a + b, 0) / ticks;\n\t}\n\n\t/**\n\t * Returns the actual frames / ticks per second.\n\t *\n\t * @param {number} [ticks=null] The number of previous ticks over which to measure the actual frames / ticks per second.\n\t * Defaults to the number of ticks per second.\n\t * @return {number} The actual frames / ticks per second. Depending on performance, this may differ\n\t * from the target frames per second.\n\t */\n\tgetMeasuredFPS (ticks = null) {\n\t\tconst times = this._times;\n\t\tif (!times || times.length < 2) { return -1; }\n\t\t// by default, calculate fps for the past ~1 second:\n\t\tticks = Math.min(times.length - 1, ticks || (this.framerate | 0));\n\t\treturn 1000 / ((times[0] - times[ticks]) / ticks);\n\t}\n\n\t/**\n\t * Returns the number of milliseconds that have elapsed since Ticker was initialized via {@link core.Ticker#init}.\n\t * Returns -1 if Ticker has not been initialized. For example, you could use\n\t * this in a time synchronized animation to determine the exact amount of time that has elapsed.\n\t *\n\t * @param {boolean} [runTime=false] If true only time elapsed while Ticker was not paused will be returned.\n\t * If false, the value returned will be total time elapsed since the first tick event listener was added.\n\t * @return {number} Number of milliseconds that have elapsed since Ticker was initialized or -1.\n\t */\n\tgetTime (runTime = false) {\n\t\treturn this._startTime ? this._getTime() - (runTime ? this._pausedTime : 0) : -1;\n\t}\n\n\t/**\n\t * Similar to {@link core.Ticker#getTime}, but returns the time on the most recent {@link core.Ticker#event:tick}\n\t * event object.\n\t *\n\t * @param {boolean} [runTime=false] If true, the runTime property will be returned instead of time.\n\t * @returns {number} The time or runTime property from the most recent tick event or -1.\n\t */\n\tgetEventTime (runTime = false) {\n\t\treturn this._startTime ? (this._lastTime || this._startTime) - (runTime ? this._pausedTime : 0) : -1;\n\t}\n\n\t/**\n\t * Returns the number of ticks that have been broadcast by Ticker.\n\t *\n\t * @param {boolean} [pauseable=false] Indicates whether to include ticks that would have been broadcast\n\t * while Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\n\t * If false, tick events that would have been broadcast while Ticker was paused will be included in the return\n\t * value.\n\t * @return {number} of ticks that have been broadcast.\n\t */\n\tgetTicks (pauseable = false) {\n\t\treturn this._ticks - (pauseable ? this._pausedTicks : 0);\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_handleSynch () {\n\t\tthis._timerId = null;\n\t\tthis._setupTick();\n\n\t\t// run if enough time has elapsed, with a little bit of flexibility to be early:\n\t\tif (this._getTime() - this._lastTime >= (this._interval - 1) * 0.97) {\n\t\t\tthis._tick();\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_handleRAF () {\n\t\tthis._timerId = null;\n\t\tthis._setupTick();\n\t\tthis._tick();\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_handleTimeout () {\n\t\tthis._timerId = null;\n\t\tthis._setupTick();\n\t\tthis._tick();\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_setupTick () {\n\t\tif (this._timerId != null) { return; } // avoid duplicates\n\t\tconst mode = this.timingMode || (this._raf && Ticker.RAF);\n\t\tif (mode === Ticker.RAF_SYNCHED || mode === Ticker.RAF) {\n\t\t\tconst f = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;\n\t\t\tif (f) {\n\t\t\t\tthis._timerId = f(mode === Ticker.RAF ? this._handleRAF.bind(this) : this._handleSynch.bind(this));\n\t\t\t\tthis._raf = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis._raf = false;\n\t\tthis._timerId = setTimeout(this._handleTimeout.bind(this), this._interval);\n\t}\n\n\t/**\n\t * @private\n\t * @emits core.Ticker#event:tick\n\t */\n\t_tick () {\n\t\tconst paused = this.paused, time = this._getTime(), elapsedTime = time - this._lastTime;\n\t\tthis._lastTime = time;\n\t\tthis._ticks++;\n\n\t\tif (paused) {\n\t\t\tthis._pausedTicks++;\n\t\t\tthis._pausedTime += elapsedTime;\n\t\t}\n\n\t\tif (this.hasEventListener(\"tick\")) {\n\t\t\tconst event = new Event(\"tick\");\n\t\t\tconst maxDelta = this.maxDelta;\n\t\t\tevent.delta = (maxDelta && elapsedTime > maxDelta) ? maxDelta : elapsedTime;\n\t\t\tevent.paused = paused;\n\t\t\tevent.time = time;\n\t\t\tevent.runTime = time - this._pausedTime;\n\t\t\tthis.dispatchEvent(event);\n\t\t}\n\n\t\tthis._tickTimes.unshift(this._getTime() - time);\n\t\twhile (this._tickTimes.length > 100) { this._tickTimes.pop(); }\n\n\t\tthis._times.unshift(time);\n\t\twhile (this._times.length > 100) { this._times.pop(); }\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_getTime () {\n\t\tconst now = window.performance && window.performance.now;\n\t\treturn ((now && now.call(performance)) || (new Date().getTime())) - this._startTime;\n\t}\n\n\tstatic on (type, listener, scope, once, data, useCapture) { return _instance.on(type, listener, scope, once, data, useCapture); }\n\tstatic removeEventListener (type, listener, useCapture) { _instance.removeEventListener(type, listener, useCapture); }\n\tstatic off (type, listener, useCapture) { _instance.off(type, listener, useCapture); }\n\tstatic removeAllEventListeners (type) { _instance.removeAllEventListeners(type); }\n\tstatic dispatchEvent (eventObj, bubbles, cancelable) { return _instance.dispatchEvent(eventObj, bubbles, cancelable); }\n\tstatic hasEventListener (type) { return _instance.hasEventListener(type); }\n\tstatic willTrigger (type) { return _instance.willTrigger(type); }\n\tstatic toString () { return _instance.toString(); }\n\tstatic init () { _instance.init(); }\n\tstatic reset () { _instance.reset(); }\n\tstatic addEventListener (type, listener, useCapture) { _instance.addEventListener(type, listener, useCapture); }\n\tstatic getMeasuredTickTime (ticks) { return _instance.getMeasuredTickTime(ticks); }\n\tstatic getMeasuredFPS (ticks) { return _instance.getMeasuredFPS(ticks); }\n\tstatic getTime (runTime) { return _instance.getTime(runTime); }\n\tstatic getEventTime (runTime) { return _instance.getEventTime(runTime); }\n\tstatic getTicks (pauseable) { return _instance.getTicks(pauseable); }\n\n\tstatic get interval () { return _instance.interval; }\n\tstatic set interval (interval) { _instance.interval = interval; }\n\tstatic get framerate () { return _instance.framerate; }\n\tstatic set framerate (framerate) { _instance.framerate = framerate; }\n\tstatic get name () { return _instance.name; }\n\tstatic set name (name) { _instance.name = name; }\n\tstatic get timingMode () { return _instance.timingMode; }\n\tstatic set timingMode (timingMode) { _instance.timingMode = timingMode; }\n\tstatic get maxDelta () { return _instance.maxDelta; }\n\tstatic set maxDelta (maxDelta) { _instance.maxDelta = maxDelta; }\n\tstatic get paused () { return _instance.paused; }\n\tstatic set paused (paused) { _instance.paused = paused; }\n\n}\n\n// the default Ticker instance\nconst _instance = new Ticker(\"createjs.global\");\n\n/**\n * @license\n *\n * StageGL\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nclass StageGL {\n\tconstructor () {\n\t\tthrow new Error(`\n\t\t\tStageGL is not currently supported on the EaselJS 2.0 branch.\n\t\t\tEnd of Q1 2018 is targetted for StageGL support.\n\t\t\tFollow @CreateJS on Twitter for updates.\n\t\t`);\n\t}\n}\n\n/**\n * @license uid\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/** @ignore */\nlet _nextId = 0;\n\n/**\n * Global utility for generating sequential unique ID numbers.\n *\n * @memberof easeljs\n * @name easeljs.uid\n * @example\n * import { uid } from \"@createjs/easeljs\";\n * var ids = [];\n * while (ids.length <= 3) {\n *   ids.push(uid());\n * }\n * // ids == [0, 1, 2, 3]\n */\nfunction uid () {\n\treturn _nextId++;\n}\n\n/**\n * @license Point\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Represents a point on a 2 dimensional x / y coordinate system.\n *\n * @memberof easeljs\n * @example\n * let point = new Point(0, 100);\n *\n * @param {Number} [x] X position.\n * @param {Number} [y] Y position.\n */\nclass Point {\n\n\tconstructor (x, y) {\n\t\tthis.setValues(x, y);\n\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * X position.\n\t\t * @property x\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Y position.\n\t\t * @property y\n\t\t * @type {Number}\n\t\t */\n\t}\n\n\t/**\n\t * Sets the specified values on this instance.\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @return {easeljs.Point} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tsetValues (x = 0, y = 0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Copies all properties from the specified point to this point.\n\t * @param {easeljs.Point} point The point to copy properties from.\n\t * @return {easeljs.Point} This point. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tcopy (point) {\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of the Point instance.\n\t * @return {easeljs.Point} a clone of the Point instance.\n\t */\n\tclone () {\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (x=${this.x} y=${this.y})]`;\n\t}\n\n}\n\n/**\n * @license Matrix2D\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Represents an affine transformation matrix, and provides tools for constructing and concatenating matrices.\n *\n * <pre>\n * This matrix can be visualized as:\n *\n * \t[ a  c  tx\n * \t  b  d  ty\n * \t  0  0  1  ]\n *\n * Note the locations of b and c.\n * </pre>\n *\n * @param {Number} [a] Specifies the a property for the new matrix.\n * @param {Number} [b] Specifies the b property for the new matrix.\n * @param {Number} [c] Specifies the c property for the new matrix.\n * @param {Number} [d] Specifies the d property for the new matrix.\n * @param {Number} [tx] Specifies the tx property for the new matrix.\n * @param {Number} [ty] Specifies the ty property for the new matrix.\n */\nclass Matrix2D {\n\n\tconstructor (a, b, c, d, tx, ty) {\n\t\tthis.setValues(a, b, c, d, tx, ty);\n\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * Position (0, 0) in a 3x3 affine transformation matrix.\n\t\t * @property a\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Position (0, 1) in a 3x3 affine transformation matrix.\n\t\t * @property b\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Position (1, 0) in a 3x3 affine transformation matrix.\n\t\t * @property c\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Position (1, 1) in a 3x3 affine transformation matrix.\n\t\t * @property d\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Position (2, 0) in a 3x3 affine transformation matrix.\n\t\t * @property tx\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Position (2, 1) in a 3x3 affine transformation matrix.\n\t\t * @property ty\n\t\t * @type {Number}\n\t\t */\n\t}\n\n\t/**\n\t * Sets the specified values on this instance.\n\t * @param {Number} [a=1] Specifies the a property for the new matrix.\n\t * @param {Number} [b=0] Specifies the b property for the new matrix.\n\t * @param {Number} [c=0] Specifies the c property for the new matrix.\n\t * @param {Number} [d=1] Specifies the d property for the new matrix.\n\t * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n\t * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n\t * @return {Matrix2D} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tsetValues (a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n\t\t// don't forget to update docs in the constructor if these change:\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends the specified matrix properties to this matrix. All parameters are required.\n\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @param {Number} c\n\t * @param {Number} d\n\t * @param {Number} tx\n\t * @param {Number} ty\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\tappend (a, b, c, d, tx, ty) {\n\t\tlet a1 = this.a;\n\t\tlet b1 = this.b;\n\t\tlet c1 = this.c;\n\t\tlet d1 = this.d;\n\t\tif (a != 1 || b != 0 || c != 0 || d != 1) {\n\t\t\tthis.a  = a1*a+c1*b;\n\t\t\tthis.b  = b1*a+d1*b;\n\t\t\tthis.c  = a1*c+c1*d;\n\t\t\tthis.d  = b1*c+d1*d;\n\t\t}\n\t\tthis.tx = a1*tx+c1*ty+this.tx;\n\t\tthis.ty = b1*tx+d1*ty+this.ty;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Prepends the specified matrix properties to this matrix.\n\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @param {Number} c\n\t * @param {Number} d\n\t * @param {Number} tx\n\t * @param {Number} ty\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\tprepend (a, b, c, d, tx, ty) {\n\t\tlet a1 = this.a;\n\t\tlet c1 = this.c;\n\t\tlet tx1 = this.tx;\n\n\t\tthis.a  = a*a1+c*this.b;\n\t\tthis.b  = b*a1+d*this.b;\n\t\tthis.c  = a*c1+c*this.d;\n\t\tthis.d  = b*c1+d*this.d;\n\t\tthis.tx = a*tx1+c*this.ty+tx;\n\t\tthis.ty = b*tx1+d*this.ty+ty;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends the specified matrix to this matrix.\n\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t * @param {easeljs.Matrix2D} matrix\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\tappendMatrix (matrix) {\n\t\treturn this.append(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t}\n\n\t/**\n\t * Prepends the specified matrix to this matrix.\n\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t *\n\t * @example <caption>Calculate the combined transformation for a child object</caption>\n\t * let o = displayObject;\n\t * let mtx = o.getMatrix();\n\t * while (o = o.parent) {\n\t * \t // prepend each parent's transformation in turn:\n\t * \t o.prependMatrix(o.getMatrix());\n\t * }\n\t *\n\t * @param {easeljs.Matrix2D} matrix\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\tprependMatrix (matrix) {\n\t\treturn this.prepend(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t}\n\n\t/**\n\t * Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\n\t *\n\t * @example <caption>Generate a matrix representing the transformations of a display object</caption>\n\t * let mtx = new Matrix2D();\n\t * mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);\n\t *\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} scaleX\n\t * @param {Number} scaleY\n\t * @param {Number} rotation\n\t * @param {Number} skewX\n\t * @param {Number} skewY\n\t * @param {Number} [regX]\n\t * @param {Number} [regY]\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\tappendTransform (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t\tlet r, cos, sin;\n\t\tif (rotation%360) {\n\t\t\tr = rotation*Matrix2D.DEG_TO_RAD;\n\t\t\tcos = Math.cos(r);\n\t\t\tsin = Math.sin(r);\n\t\t} else {\n\t\t\tcos = 1;\n\t\t\tsin = 0;\n\t\t}\n\n\t\tif (skewX || skewY) {\n\t\t\t// TODO: can this be combined into a single append operation?\n\t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\n\t\t} else {\n\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\n\t\t}\n\n\t\tif (regX || regY) {\n\t\t\t// append the registration offset:\n\t\t\tthis.tx -= regX*this.a+regY*this.c;\n\t\t\tthis.ty -= regX*this.b+regY*this.d;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Generates matrix properties from the specified display object transform properties, and prepends them to this matrix.\n\t *\n\t * Note that the above example would not account for {@link easeljs.DisplayObject#transformMatrix} values.\n\t * See {@link easeljs.Matrix2D#prependMatrix} for an example that does.\n\t *\n\t * @example <caption>Calculate the combined transformation for a child object</caption>\n\t * let o = displayObject;\n\t * let mtx = new Matrix2D();\n\t * do  {\n\t * \t // prepend each parent's transformation in turn:\n\t * \t mtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t * } while (o = o.parent);\n\t *\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} scaleX\n\t * @param {Number} scaleY\n\t * @param {Number} rotation\n\t * @param {Number} skewX\n\t * @param {Number} skewY\n\t * @param {Number} [regX]\n\t * @param {Number} [regY]\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t */\n\tprependTransform (x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t\tlet r, cos, sin;\n\t\tif (rotation%360) {\n\t\t\tr = rotation*Matrix2D.DEG_TO_RAD;\n\t\t\tcos = Math.cos(r);\n\t\t\tsin = Math.sin(r);\n\t\t} else {\n\t\t\tcos = 1;\n\t\t\tsin = 0;\n\t\t}\n\n\t\tif (regX || regY) {\n\t\t\t// prepend the registration offset:\n\t\t\tthis.tx -= regX; this.ty -= regY;\n\t\t}\n\t\tif (skewX || skewY) {\n\t\t\t// TODO: can this be combined into a single prepend operation?\n\t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\n\t\t\tthis.prepend(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t\t} else {\n\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Applies a clockwise rotation transformation to the matrix.\n\t * @param {Number} angle The angle to rotate by, in degrees. To use a value in radians, multiply it by `Math.PI/180`.\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\trotate (angle) {\n\t\tangle *= Matrix2D.DEG_TO_RAD;\n\t\tlet cos = Math.cos(angle);\n\t\tlet sin = Math.sin(angle);\n\n\t\tlet a1 = this.a;\n\t\tlet b1 = this.b;\n\n\t\tthis.a = a1*cos+this.c*sin;\n\t\tthis.b = b1*cos+this.d*sin;\n\t\tthis.c = -a1*sin+this.c*cos;\n\t\tthis.d = -b1*sin+this.d*cos;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Applies a skew transformation to the matrix.\n\t * @param {Number} skewX The amount to skew horizontally in degrees. To use a value in radians, multiply it by `Math.PI/180`.\n\t * @param {Number} skewY The amount to skew vertically in degrees.\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tskew (skewX, skewY) {\n\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), 0, 0);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Applies a scale transformation to the matrix.\n\t * @param {Number} x The amount to scale horizontally. E.G. a value of 2 will double the size in the X direction, and 0.5 will halve it.\n\t * @param {Number} y The amount to scale vertically.\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\tscale (x, y) {\n\t\tthis.a *= x;\n\t\tthis.b *= x;\n\t\tthis.c *= y;\n\t\tthis.d *= y;\n\t\t//this.tx *= x;\n\t\t//this.ty *= y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Translates the matrix on the x and y axes.\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\ttranslate (x, y) {\n\t\tthis.tx += this.a*x + this.c*y;\n\t\tthis.ty += this.b*x + this.d*y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation).\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\tidentity () {\n\t\tthis.a = this.d = 1;\n\t\tthis.b = this.c = this.tx = this.ty = 0;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Inverts the matrix, causing it to perform the opposite transformation.\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t */\n\tinvert () {\n\t\tlet a1 = this.a;\n\t\tlet b1 = this.b;\n\t\tlet c1 = this.c;\n\t\tlet d1 = this.d;\n\t\tlet tx1 = this.tx;\n\t\tlet n = a1*d1-b1*c1;\n\n\t\tthis.a = d1/n;\n\t\tthis.b = -b1/n;\n\t\tthis.c = -c1/n;\n\t\tthis.d = a1/n;\n\t\tthis.tx = (c1*this.ty-d1*tx1)/n;\n\t\tthis.ty = -(a1*this.ty-b1*tx1)/n;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns true if the matrix is an identity matrix.\n\t * @return {Boolean}\n\t */\n\tisIdentity () {\n\t\treturn this.tx === 0 && this.ty === 0 && this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1;\n\t}\n\n\t/**\n\t * Returns true if this matrix is equal to the specified matrix (all property values are equal).\n\t * @param {easeljs.Matrix2D} matrix The matrix to compare.\n\t * @return {Boolean}\n\t */\n\tequals (matrix) {\n\t\treturn this.tx === matrix.tx && this.ty === matrix.ty && this.a === matrix.a && this.b === matrix.b && this.c === matrix.c && this.d === matrix.d;\n\t}\n\n\t/**\n\t * Transforms a point according to this matrix.\n\t * @param {Number} x The x component of the point to transform.\n\t * @param {Number} y The y component of the point to transform.\n\t * @param {easeljs.Point | Object} [pt] An object to copy the result into. If omitted a generic object with x/y properties will be returned.\n\t * @return {easeljs.Point} This matrix. Useful for chaining method calls.\n\t */\n\ttransformPoint (x, y, pt = new Point()) {\n\t\tpt.x = x*this.a+y*this.c+this.tx;\n\t\tpt.y = x*this.b+y*this.d+this.ty;\n\t\treturn pt;\n\t}\n\n\t/**\n\t * Decomposes the matrix into transform properties (x, y, scaleX, scaleY, and rotation). Note that these values\n\t * may not match the transform properties you used to generate the matrix, though they will produce the same visual\n\t * results.\n\t * @param {Object} [target] The object to apply the transform properties to. If null, then a new object will be returned.\n\t * @return {Object} The target, or a new generic object with the transform properties applied.\n\t*/\n\tdecompose (target = {}) {\n\t\t// TODO: it would be nice to be able to solve for whether the matrix can be decomposed into only scale/rotation even when scale is negative\n\t\ttarget.x = this.tx;\n\t\ttarget.y = this.ty;\n\t\ttarget.scaleX = Math.sqrt(this.a * this.a + this.b * this.b);\n\t\ttarget.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);\n\n\t\tlet skewX = Math.atan2(-this.c, this.d);\n\t\tlet skewY = Math.atan2(this.b, this.a);\n\n\t\tlet delta = Math.abs(1-skewX/skewY);\n\t\tif (delta < 0.00001) { // effectively identical, can use rotation:\n\t\t\ttarget.rotation = skewY/Matrix2D.DEG_TO_RAD;\n\t\t\tif (this.a < 0 && this.d >= 0) {\n\t\t\t\ttarget.rotation += (target.rotation <= 0) ? 180 : -180;\n\t\t\t}\n\t\t\ttarget.skewX = target.skewY = 0;\n\t\t} else {\n\t\t\ttarget.skewX = skewX/Matrix2D.DEG_TO_RAD;\n\t\t\ttarget.skewY = skewY/Matrix2D.DEG_TO_RAD;\n\t\t}\n\t\treturn target;\n\t}\n\n\t/**\n\t * Copies all properties from the specified matrix to this matrix.\n\t * @param {easeljs.Matrix2D} matrix The matrix to copy properties from.\n\t * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tcopy (matrix) {\n\t\treturn this.setValues(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t}\n\n\t/**\n\t * Returns a clone of the Matrix2D instance.\n\t * @return {easeljs.Matrix2D} a clone of the Matrix2D instance.\n\t */\n\tclone () {\n\t\treturn new Matrix2D(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (a=${this.a} b=${this.b} c=${this.c} d=${this.d} tx=${this.tx} ty=${this.ty})]`;\n\t}\n\n}\n\n/**\n * Multiplier for converting degrees to radians. Used internally by Matrix2D.\n * @static\n * @type {Number}\n * @readonly\n */\nMatrix2D.DEG_TO_RAD = Math.PI/180;\n/**\n * An identity matrix, representing a null transformation.\n * @static\n * @type {easeljs.Matrix2D}\n * @readonly\n */\nMatrix2D.identity = new Matrix2D();\n\n/**\n * @license DisplayProps\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Used for calculating and encapsulating display related properties.\n * @memberof easeljs\n * @param {Number} [visible] Visible value.\n * @param {Number} [alpha] Alpha value.\n * @param {Number} [shadow] A Shadow instance or null.\n * @param {Number} [compositeOperation] A compositeOperation value or null.\n * @param {Number} [matrix] A transformation matrix. Defaults to a new identity matrix.\n */\nclass DisplayProps {\n\n\tconstructor (visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.setValues(visible, alpha, shadow, compositeOperation, matrix);\n\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * Property representing the alpha that will be applied to a display object.\n\t\t * @property alpha\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Property representing the shadow that will be applied to a display object.\n\t\t * @property shadow\n\t\t * @type {easeljs.Shadow}\n\t\t */\n\n\t\t/**\n\t\t * Property representing the compositeOperation that will be applied to a display object.\n\t\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing}\n\t\t * @property compositeOperation\n\t\t * @type {String}\n\t\t */\n\n\t\t/**\n\t\t * Property representing the value for visible that will be applied to a display object.\n\t\t * @property visible\n\t\t * @type {Boolean}\n\t\t */\n\n\t\t/**\n\t\t * The transformation matrix that will be applied to a display object.\n\t\t * @property matrix\n\t\t * @type {easeljs.Matrix2D}\n\t\t */\n\t}\n\n\t/**\n\t * Reinitializes the instance with the specified values.\n\t * @param {Number} [visible=true] Visible value.\n\t * @param {Number} [alpha=1] Alpha value.\n\t * @param {Number} [shadow] A Shadow instance or null.\n\t * @param {Number} [compositeOperation] A compositeOperation value or null.\n\t * @param {Number} [matrix] A transformation matrix. Defaults to an identity matrix.\n\t * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tsetValues (visible = true, alpha = 1, shadow, compositeOperation, matrix) {\n\t\tthis.visible = visible;\n\t\tthis.alpha = alpha;\n\t\tthis.shadow = shadow;\n\t\tthis.compositeOperation = compositeOperation;\n\t\tthis.matrix = matrix || (this.matrix&&this.matrix.identity()) || new Matrix2D();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Appends the specified display properties. This is generally used to apply a child's properties its parent's.\n\t * @param {Boolean} visible desired visible value\n\t * @param {Number} alpha desired alpha value\n\t * @param {easeljs.Shadow} shadow desired shadow value\n\t * @param {String} compositeOperation desired composite operation value\n\t * @param {easeljs.Matrix2D} [matrix] a Matrix2D instance\n\t * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tappend (visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.alpha *= alpha;\n\t\tthis.shadow = shadow || this.shadow;\n\t\tthis.compositeOperation = compositeOperation || this.compositeOperation;\n\t\tthis.visible = this.visible && visible;\n\t\tmatrix&&this.matrix.appendMatrix(matrix);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Prepends the specified display properties. This is generally used to apply a parent's properties to a child's.\n\t * For example, to get the combined display properties that would be applied to a child, you could use:\n\t *\n\t * @example\n\t * let o = displayObject;\n\t * let props = new DisplayProps();\n\t * do {\n\t * \t // prepend each parent's props in turn:\n\t * \t props.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation, o.getMatrix());\n\t * } while (o = o.parent);\n\t *\n\t * @param {Boolean} visible desired visible value\n\t * @param {Number} alpha desired alpha value\n\t * @param {easeljs.Shadow} shadow desired shadow value\n\t * @param {String} compositeOperation desired composite operation value\n\t * @param {easeljs.Matrix2D} [matrix] a Matrix2D instance\n\t * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tprepend (visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.alpha *= alpha;\n\t\tthis.shadow = this.shadow || shadow;\n\t\tthis.compositeOperation = this.compositeOperation || compositeOperation;\n\t\tthis.visible = this.visible && visible;\n\t\tmatrix&&this.matrix.prependMatrix(matrix);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Resets this instance and its matrix to default values.\n\t * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tidentity () {\n\t\tthis.visible = true;\n\t\tthis.alpha = 1;\n\t\tthis.shadow = this.compositeOperation = null;\n\t\tthis.matrix.identity();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of the DisplayProps instance. Clones the associated matrix.\n\t * @return {easeljs.DisplayProps} a clone of the DisplayProps instance.\n\t */\n\tclone () {\n\t\treturn new DisplayProps(this.alpha, this.shadow, this.compositeOperation, this.visible, this.matrix.clone());\n\t}\n\n}\n\n/**\n * @license Rectangle\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Represents a rectangle as defined by the points (x, y) and (x+width, y+height).\n * Used by {@link easeljs.DisplayObjects#getBounds}.\n *\n * @memberof easeljs\n * @example\n * let rect = new Rectangle(0, 0, 100, 100);\n *\n * @param {Number} [x] X position.\n * @param {Number} [y] Y position.\n * @param {Number} [width] The width of the Rectangle.\n * @param {Number} [height] The height of the Rectangle.\n */\nclass Rectangle {\n\n\tconstructor (x, y, width, height) {\n\t\tthis.setValues(x, y, width, height);\n\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * X position.\n\t\t * @property x\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Y position.\n\t\t * @property y\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Width.\n\t\t * @property width\n\t\t * @type {Number}\n\t\t */\n\n\t\t/**\n\t\t * Height.\n\t\t * @property height\n\t\t * @type {Number}\n\t\t */\n\t}\n\n\t/**\n\t * Sets the specified values on this instance.\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @param {Number} [width=0] The width of the Rectangle.\n\t * @param {Number} [height=0] The height of the Rectangle.\n\t * @return {easeljs.Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tsetValues (x = 0, y = 0, width = 0, height = 0) {\n\t\t// don't forget to update docs in the constructor if these change:\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Extends the rectangle's bounds to include the described point or rectangle.\n\t * @param {Number} x X position of the point or rectangle.\n\t * @param {Number} y Y position of the point or rectangle.\n\t * @param {Number} [width=0] The width of the rectangle.\n\t * @param {Number} [height=0] The height of the rectangle.\n\t * @return {easeljs.Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\textend (x, y, width = 0, height = 0) {\n\t\tif (x+width > this.x+this.width) { this.width = x+width-this.x; }\n\t\tif (y+height > this.y+this.height) { this.height = y+height-this.y; }\n\t\tif (x < this.x) { this.width += this.x-x; this.x = x; }\n\t\tif (y < this.y) { this.height += this.y-y; this.y = y; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds the specified padding to the rectangle's bounds.\n\t * @param {Number} top\n\t * @param {Number} left\n\t * @param {Number} bottom\n\t * @param {Number} right\n\t * @return {easeljs.Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tpad (top, left, bottom, right) {\n\t\tthis.x -= left;\n\t\tthis.y -= top;\n\t\tthis.width += left+right;\n\t\tthis.height += top+bottom;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Copies all properties from the specified rectangle to this rectangle.\n\t * @param {easeljs.Rectangle} rectangle The rectangle to copy properties from.\n\t * @return {easeljs.Rectangle} This rectangle. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tcopy (rect) {\n\t\treturn this.setValues(rect.x, rect.y, rect.width, rect.height);\n\t}\n\n\t/**\n\t * Returns true if this rectangle fully encloses the described point or rectangle.\n\t * @param {Number} x X position of the point or rectangle.\n\t * @param {Number} y Y position of the point or rectangle.\n\t * @param {Number} [width=0] The width of the rectangle.\n\t * @param {Number} [height=0] The height of the rectangle.\n\t * @return {Boolean} True if the described point or rectangle is contained within this rectangle.\n\t*/\n\tcontains (x, y, width = 0, height = 0) {\n\t\treturn (x >= this.x && x+width <= this.x+this.width && y >= this.y && y+height <= this.y+this.height);\n\t}\n\n\t/**\n\t * Returns a new rectangle which contains this rectangle and the specified rectangle.\n\t * @param {easeljs.Rectangle} rect The rectangle to calculate a union with.\n\t * @return {easeljs.Rectangle} A new rectangle describing the union.\n\t*/\n\tunion (rect) {\n\t\treturn this.clone().extend(rect.x, rect.y, rect.width, rect.height);\n\t}\n\n\t/**\n\t * Returns a new rectangle which describes the intersection (overlap) of this rectangle and the specified rectangle,\n\t * or null if they do not intersect.\n\t * @param {easeljs.Rectangle} rect The rectangle to calculate an intersection with.\n\t * @return {easeljs.Rectangle} A new rectangle describing the intersection or null.\n\t*/\n\tintersection (rect) {\n\t\tlet x1 = rect.x, y1 = rect.y, x2 = x1+rect.width, y2 = y1+rect.height;\n\t\tif (this.x > x1) { x1 = this.x; }\n\t\tif (this.y > y1) { y1 = this.y; }\n\t\tif (this.x + this.width < x2) { x2 = this.x + this.width; }\n\t\tif (this.y + this.height < y2) { y2 = this.y + this.height; }\n\t\treturn (x2 <= x1 || y2 <= y1) ? null : new Rectangle(x1, y1, x2-x1, y2-y1);\n\t}\n\n\t/**\n\t * Returns true if the specified rectangle intersects (has any overlap) with this rectangle.\n\t * @param {easeljs.Rectangle} rect The rectangle to compare.\n\t * @return {Boolean} True if the rectangles intersect.\n\t*/\n\tintersects (rect) {\n\t\treturn (rect.x <= this.x+this.width && this.x <= rect.x+rect.width && rect.y <= this.y+this.height && this.y <= rect.y + rect.height);\n\t}\n\n\t/**\n\t * Returns true if the width or height are equal or less than 0.\n\t * @return {Boolean} True if the rectangle is empty.\n\t*/\n\tisEmpty () {\n\t\treturn this.width <= 0 || this.height <= 0;\n\t}\n\n\t/**\n\t * Returns a clone of the Rectangle instance.\n\t * @return {easeljs.Rectangle} a clone of the Rectangle instance.\n\t */\n\tclone () {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (x=${this.x} y=${this.y} width=${this.width} height=${this.height})]`;\n\t}\n\n}\n\n/**\n * @license Filter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Base class that all filters should inherit from. Filters need to be applied to objects that have been cached using\n * the {@link easeljs.DisplayObject#cache} method. If an object changes, please cache it again, or use\n * {@link easeljs.DisplayObject#updateCache}. Note that the filters must be applied before caching.\n *\n * Note that each filter can implement a {@link easeljs.Filter#getBounds} method, which returns the\n * margins that need to be applied in order to fully display the filter. For example, the {@link easeljs.BlurFilter}\n * will cause an object to feather outwards, resulting in a margin around the shape.\n *\n * <h4>EaselJS Filters</h4>\n * EaselJS comes with a number of pre-built filters:\n * <ul>\n *   <li>{@link easeljs.AlphaMapFilter}: Map a greyscale image to the alpha channel of a display object</li>\n *   <li>{@link easeljs.AlphaMaskFilter}: Map an image's alpha channel to the alpha channel of a display object</li>\n *   <li>{@link easeljs.BlurFilter}: Apply vertical and horizontal blur to a display object</li>\n *   <li>{@link easeljs.ColorFilter}: Color transform a display object</li>\n *   <li>{@link easeljs.ColorMatrixFilter}: Transform an image using a {{#crossLink \"ColorMatrix\"}}{{/crossLink}}</li>\n * </ul>\n *\n * @memberof easeljs\n * @example\n * shape.filters = [\n *   new createjs.ColorFilter(0, 0, 0, 1, 255, 0, 0),\n *   new createjs.BlurFilter(5, 5, 10)\n * ];\n * shape.cache(0, 0, 100, 100);\n */\nclass Filter {\n\n\tconstructor () {\n\t\t/**\n\t\t * A flag stating that this filter uses a context draw mode and cannot be batched into imageData processing.\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.usesContext = false;\n\n\t\t/**\n\t\t * Another filter that is required to act as part of this filter and created and managed under the hood.\n\t\t * @private\n\t\t * @type {easeljs.Filter}\n\t\t * @default null\n\t\t */\n\t\tthis._multiPass = null;\n\n\t\t/**\n\t\t * Pre-processing shader code, will be parsed before being fed in.\n\t\t * This should be based upon StageGL.SHADER_VERTEX_BODY_REGULAR\n\t\t * @virtual\n\t\t * @type {String}\n\t\t * @readonly\n\t\t */\n\t\tthis.VTX_SHADER_BODY = null;\n\n\t\t/**\n\t\t * Pre-processing shader code, will be parsed before being fed in.\n\t\t * This should be based upon StageGL.SHADER_FRAGMENT_BODY_REGULAR\n\t\t * @virtual\n\t\t * @type {String}\n\t\t * @readonly\n\t\t */\n\t\tthis.FRAG_SHADER_BODY = null;\n\t}\n\n\t/**\n\t * Provides padding values for this filter. That is, how much the filter will extend the visual bounds of an object it is applied to.\n\t * @abstract\n\t * @param {easeljs.Rectangle} [rect] If specified, the provided Rectangle instance will be expanded by the padding amounts and returned.\n\t * @return {easeljs.Rectangle} If a `rect` param was provided, it is returned. If not, either a new rectangle with the padding values, or null if no padding is required for this filter.\n\t */\n\tgetBounds (rect) { }\n\n\t/**\n\t * @virtual\n\t * @abstract\n\t * @param {WebGLContext} gl The context associated with the stage performing the render.\n\t * @param {easeljs.StageGL} stage The stage instance that will be rendering.\n\t * @param {ShaderProgram} shaderProgram The compiled shader that is going to be sued to perform the render.\n\t */\n\tshaderParamSetup (gl, stage, shaderProgram) { }\n\n\t/**\n\t * Applies the filter to the specified context.\n\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t * @param {Number} x The x position to use for the source rect.\n\t * @param {Number} y The y position to use for the source rect.\n\t * @param {Number} width The width to use for the source rect.\n\t * @param {Number} height The height to use for the source rect.\n\t * @param {CanvasRenderingContext2D} [targetCtx] The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t * @param {Number} [targetX] The x position to draw the result to. Defaults to the value passed to x.\n\t * @param {Number} [targetY] The y position to draw the result to. Defaults to the value passed to y.\n\t * @return {Boolean} If the filter was applied successfully.\n\t */\n\tapplyFilter (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t\t// this is the default behaviour because most filters access pixel data. It is overridden when not needed.\n\t\ttargetCtx = targetCtx || ctx;\n\t\tif (targetX == null) { targetX = x; }\n\t\tif (targetY == null) { targetY = y; }\n\t\ttry {\n\t\t\tlet imageData = ctx.getImageData(x, y, width, height);\n\t\t\tif (this._applyFilter(imageData)) {\n\t\t\t\ttargetCtx.putImageData(imageData, targetX, targetY);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch (e) {}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * Returns a clone of this Filter instance.\n\t * @return {easeljs.Filter} A clone of the current Filter instance.\n\t */\n\tclone () {\n\t\treturn new Filter();\n\t}\n\n\t/**\n\t * @abstract\n\t * @param {ImageData} imageData Target ImageData instance.\n\t * @return {Boolean}\n\t */\n\t_applyFilter (imageData) { }\n\n}\n\n/**\n * @license BitmapCache\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * The BitmapCache is an internal representation of all the cache properties and logic required in order to \"cache\"\n * an object. This information and functionality used to be located on a {@link easeljs.DisplayObject#cache}\n * method in {@link easeljs.DisplayObject}, but was moved to its own class.\n *\n * Caching in this context is purely visual, and will render the DisplayObject out into an image to be used instead\n * of the object. The actual cache itself is still stored on the target with the {@link easeljs.DisplayObject#cacheCanvas}.\n *\n * Working with a singular image like a {@link easeljs.Bitmap}, there is little benefit to performing\n * a cache operation, as it is already a single image. Caching is best done on containers that have multiple complex\n * parts that do not change often, so that rendering the image will improve overall rendering speed. A cached object\n * will not visually update until explicitly told to do so with a call to {@link easeljs.Stage#update},\n * much like a Stage. If a cache is being updated every frame, it is likely not improving rendering performance.\n * Caches are best used when updates will be sparse.\n *\n * Caching is also a co-requisite for applying filters to prevent expensive filters running constantly without need.\n * The BitmapCache is also responsible for applying filters to objects, and reads each {@link easeljs.Filter}.\n * Real-time Filters are not recommended when dealing with a Context2D canvas if performance is a concern. For best\n * performance and to still allow for some visual effects, use a {{#crossLink \"DisplayObject/compositeOperation:property\"}}{{/crossLink}}\n * when possible.\n *\n * @memberof easeljs\n * @extends easeljs.Filter\n */\nclass BitmapCache extends Filter {\n\n\tconstructor () {\n\t\tsuper();\n\n\t\t/**\n\t\t * Width of the cache relative to the target object.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t */\n\t\tthis.width = undefined;\n\n\t\t/**\n\t\t * Height of the cache relative to the target object.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t */\n\t\tthis.height = undefined;\n\n\t\t/**\n\t\t * Horizontal position of the cache relative to the target's origin.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t */\n\t\tthis.x = undefined;\n\n\t\t/**\n\t\t * Vertical position of the cache relative to target's origin.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default undefined\n\t\t */\n\t\tthis.y = undefined;\n\n\t\t/**\n\t\t * The internal scale of the cache image, does not affects display size. This is useful to both increase and\n\t\t * decrease render quality. Objects with increased scales are more likely to look good when scaled up. Objects\n\t\t * with decreased scales can save on rendering performance.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.scale = 1;\n\n\t\t/**\n\t\t * The relative offset of the {@link easeljs.BitmapCache#x} position, used for drawing\n\t\t * into the cache with the correct offsets. Re-calculated every update call before drawing.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.offX = 0;\n\n\t\t/**\n\t\t * The relative offset of the {@link easeljs.BitmapCache#y} position, used for drawing\n\t\t * into the cache with the correct offsets. Re-calculated every update call before drawing.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.offY = 0;\n\n\t\t/**\n\t\t * Track how many times the cache has been updated, mostly used for preventing duplicate cacheURLs. This can be\n\t\t * useful to see if a cache has been updated.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.cacheID = 0;\n\n\t\t/**\n\t\t * Relative offset of the x position, used for drawing the cache into other scenes.\n\t\t * Re-calculated every update call before drawing.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @todo Is this description right? Its the same as offX.\n\t\t */\n\t\tthis._filterOffX = 0;\n\n\t\t/**\n\t\t * Relative offset of the y position, used for drawing into the cache into other scenes.\n\t\t * Re-calculated every update call before drawing.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @todo Is this description right? Its the same as offY.\n\t\t */\n\t\tthis._filterOffY = 0;\n\n\t\t/**\n\t\t * The cacheID when a DataURL was requested.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._cacheDataURLID = 0;\n\n\t\t/**\n\t\t * The cache's DataURL, generated on-demand using the getter.\n\t\t * @protected\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis._cacheDataURL = null;\n\n\t\t/**\n\t\t * Internal tracking of final bounding width, approximately `width*scale;` however, filters can complicate the actual value.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._drawWidth = 0;\n\n\t\t/**\n\t\t * Internal tracking of final bounding height, approximately `height*scale;` however, filters can complicate the actual value.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._drawHeight = 0;\n\n\t\t/**\n\t\t * Internal tracking of the last requested bounds, may happen repeadtedly so stored to avoid object creation.\n\t\t * @protected\n\t\t * @type {easeljs.Rectangle}\n\t\t * @default easeljs.Rectangle\n\t\t */\n\t\tthis._boundRect = new Rectangle();\n\n\t}\n\n\t/**\n\t * Returns the bounds that surround all applied filters. This relies on each filter to describe how it changes bounds.\n\t * @param {easeljs.DisplayObject} target The object to check the filter bounds for.\n\t * @param {easeljs.Rectangle} [output] Calculated bounds will be applied to this rect.\n\t * @return {easeljs.Rectangle}\n\t * @static\n\t */\n\tstatic getFilterBounds (target, output = new Rectangle()) {\n\t\tlet filters = target.filters;\n\t\tlet filterCount = filters && filters.length;\n\t\tif (!!filterCount <= 0) { return output; }\n\n\t\tfor (let i=0; i<filterCount; i++) {\n\t\t\tlet f = filters[i];\n\t\t\tif (!f || !f.getBounds) { continue; }\n\t\t\tlet test = f.getBounds();\n\t\t\tif (!test) { continue; }\n\t\t\tif (i==0) {\n\t\t\t\toutput.setValues(test.x, test.y, test.width, test.height);\n\t\t\t} else {\n\t\t\t\toutput.extend(test.x, test.y, test.width, test.height);\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t}\n\n\t/**\n\t * Directly called via {@link easeljs.DisplayObject#cache}. Creates and sets properties needed\n\t * for a cache to function, and performs the initial update.\n\t * @param {easeljs.DisplayObject} target The DisplayObject this cache is linked to.\n\t * @param {Number} [x=0] The x coordinate origin for the cache region.\n\t * @param {Number} [y=0] The y coordinate origin for the cache region.\n\t * @param {Number} [width=1] The width of the cache region.\n\t * @param {Number} [height=1] The height of the cache region.\n\t * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape\n\t * using `myShape.cache(0,0,100,100,2)`, then the resulting cacheCanvas will be 200x200 pixels. This lets you scale\n\t * and rotate cached elements with greater fidelity.\n\t * @param {Object} [options] When using things like {@link easeljs.StageGL} there may be\n\t * extra caching opportunities or requirements.\n\t */\n\tdefine (target, x = 0, y = 0, width = 1, height = 1, scale = 1, options) {\n\t\tif (!target) { throw \"No symbol to cache\"; }\n\t\tthis._options = options;\n\t\tthis._useWebGL = options !== undefined;\n\t\tthis.target = target;\n\n\t\tthis.width = width >= 1 ? width : 1;\n\t\tthis.height = height >= 1 ? height : 1;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.scale = scale;\n\n\t\tthis.update();\n\t}\n\n\t/**\n\t * Directly called via {@link easeljs.DisplayObject#updateCache}, but also internally. This\n\t * has the dual responsibility of making sure the surface is ready to be drawn to, and performing the draw. For\n\t * full details of each behaviour, check the protected functions {@link easeljs.BitmapCache#_updateSurface}\n\t * and {@link easeljs.BitmapCache#_drawToCache} respectively.\n\t * @param {String} [compositeOperation] The DisplayObject this cache is linked to.\n\t */\n\tupdate (compositeOperation) {\n\t\tif (!this.target) { throw \"define() must be called before update()\"; }\n\n\t\tlet filterBounds = BitmapCache.getFilterBounds(this.target);\n\t\tlet surface = this.target.cacheCanvas;\n\n\t\tthis._drawWidth = Math.ceil(this.width*this.scale) + filterBounds.width;\n\t\tthis._drawHeight = Math.ceil(this.height*this.scale) + filterBounds.height;\n\n\t\tif (!surface || this._drawWidth != surface.width || this._drawHeight != surface.height) {\n\t\t\tthis._updateSurface();\n\t\t}\n\n\t\tthis._filterOffX = filterBounds.x;\n\t\tthis._filterOffY = filterBounds.y;\n\t\tthis.offX = this.x*this.scale + this._filterOffX;\n\t\tthis.offY = this.y*this.scale + this._filterOffY;\n\n\t\tthis._drawToCache(compositeOperation);\n\n\t\tthis.cacheID = this.cacheID?this.cacheID+1:1;\n\t}\n\n\t/**\n\t * Reset and release all the properties and memory associated with this cache.\n\t */\n\trelease () {\n\t\tlet stage = this.target.stage;\n\t\tif (this._useWebGL && this._webGLCache) {\n\t\t\t// if it isn't cache controlled clean up after yourself\n\t\t\tif (!this._webGLCache.isCacheControlled) {\n\t\t\t\tif (this.__lastRT) { this.__lastRT = undefined; }\n\t\t\t\tif (this.__rtA) { this._webGLCache._killTextureObject(this.__rtA); }\n\t\t\t\tif (this.__rtB) { this._webGLCache._killTextureObject(this.__rtB); }\n\t\t\t\tif (this.target && this.target.cacheCanvas) { this._webGLCache._killTextureObject(this.target.cacheCanvas); }\n\t\t\t}\n\t\t\t// set the context to none and let the garbage collector get the rest when the canvas itself gets removed\n\t\t\tthis._webGLCache = false;\n\t\t} else if (stage instanceof StageGL) {\n\t\t\tstage.releaseTexture(this.target.cacheCanvas);\n\t\t}\n\t\tthis.target = this.target.cacheCanvas = null;\n\t\tthis.cacheID = this._cacheDataURLID = this._cacheDataURL = undefined;\n\t\tthis.width = this.height = this.x = this.y = this.offX = this.offY = 0;\n\t\tthis.scale = 1;\n\t}\n\n\t/**\n\t * Returns a data URL for the cache, or `null` if this display object is not cached.\n\t * Uses {@link easeljs.BitmapCache#cacheID} to ensure a new data URL is not generated if the\n\t * cache has not changed.\n\t * @return {String} The image data url for the cache.\n\t */\n\tgetCacheDataURL () {\n\t\tlet cacheCanvas = this.target && this.target.cacheCanvas;\n\t\tif (!cacheCanvas) { return null; }\n\t\tif (this.cacheID != this._cacheDataURLID) {\n\t\t\tthis._cacheDataURLID = this.cacheID;\n\t\t\tthis._cacheDataURL = cacheCanvas.toDataURL?cacheCanvas.toDataURL():null;\t// incase function is\n\t\t}\n\t\treturn this._cacheDataURL;\n\t}\n\n\t/**\n\t * Use context2D drawing commands to display the cache canvas being used.\n\t * @param {CanvasRenderingContext2D} ctx The context to draw into.\n\t * @return {Boolean} Whether the draw was handled successfully.\n\t */\n\tdraw (ctx) {\n\t\tif (!this.target) { return false; }\n\t\tctx.drawImage(\n\t\t\tthis.target.cacheCanvas,\n\t\t\tthis.x + (this._filterOffX/this.scale),\n\t\t\tthis.y + (this._filterOffY/this.scale),\n\t\t\tthis._drawWidth/this.scale,\n\t\t\tthis._drawHeight/this.scale\n\t\t);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Determine the bounds of the shape in local space.\n\t * @returns {easeljs.Rectangle}\n\t */\n\tgetBounds () {\n\t\tconst scale = this.scale;\n\t\treturn this._boundRect.setValue(\n\t\t\tthis._filterOffX/scale,\n\t\t\tthis._filterOffY/scale,\n\t\t\tthis.width/scale,\n\t\t\tthis.height/scale\n\t\t);\n\t}\n\n\t/**\n\t * Basic context2D caching works by creating a new canvas element and setting its physical size. This function will\n\t * create and or size the canvas as needed.\n\t * @protected\n\t */\n\t_updateSurface () {\n\t\tlet surface;\n\t\tif (!this._useWebGL) {\n\t\t\tsurface = this.target.cacheCanvas;\n\t\t\t// create it if it's missing\n\t\t\tif (!surface) {\n\t\t\t\tsurface = this.target.cacheCanvas = window.createjs&&createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\t\t\t}\n\t\t\t// now size it\n\t\t\tsurface.width = this._drawWidth;\n\t\t\tsurface.height = this._drawHeight;\n\t\t\t// skip the webgl-only updates\n\t\t\treturn;\n\t\t}\n\n\t\t// create it if it's missing\n\t\tif (!this._webGLCache) {\n\t\t\tif (this._options.useGL === \"stage\") {\n\t\t\t\tif(!(this.target.stage != null && this.target.stage.isWebGL)) {\n\t\t\t\t\tthrow `Cannot use 'stage' for cache because the object's parent stage is ${this.target.stage != null ? \"non WebGL.\" : \"not set, please addChild to the correct stage.\"}`;\n\t\t\t\t}\n\t\t\t\tthis.target.cacheCanvas = true; // will be replaced with RenderTexture, temporary positive value for old \"isCached\" checks\n\t\t\t\tthis._webGLCache = this.target.stage;\n\t\t\t} else if (this._options.useGL === \"new\") {\n\t\t\t\tthis.target.cacheCanvas = document.createElement(\"canvas\"); // we can turn off autopurge because we wont be making textures here\n\t\t\t\tthis._webGLCache = new StageGL(this.target.cacheCanvas, {antialias: true, transparent: true, autoPurge: -1});\n\t\t\t\tthis._webGLCache.isCacheControlled = true;    // use this flag to control stage sizing and final output\n\t\t\t} else {\n\t\t\t\tthrow \"Invalid option provided to useGL, expected ['stage', 'new', StageGL, undefined], got \"+ this._options.useGL;\n\t\t\t}\n\t\t}\n\n\t\t// now size render surfaces\n\t\tlet stageGL = this._webGLCache;\n\t\tsurface = this.target.cacheCanvas;\n\n\t\t// if we have a dedicated stage we've gotta size it\n\t\tif (stageGL.isCacheControlled) {\n\t\t\tsurface.width = this._drawWidth;\n\t\t\tsurface.height = this._drawHeight;\n\t\t\tstageGL.updateViewport(this._drawWidth, this._drawHeight);\n\t\t}\n\t\tif (this.target.filters) {\n\t\t\t// with filters we can't tell how many we'll need but the most we'll ever need is two, so make them now\n\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t} else if (!stageGL.isCacheControlled) {\n\t\t\t// without filters then we only need one RenderTexture, and that's only if its not a dedicated stage\n\t\t\tstageGL.getTargetRenderTexture(this.target, this._drawWidth,this._drawHeight);\n\t\t}\n\t}\n\n\t/**\n\t * Perform the cache draw out for context 2D now that the setup properties have been performed.\n\t * @protected\n\t */\n\t_drawToCache (compositeOperation) {\n\t\tlet target = this.target;\n\t\tlet surface = target.cacheCanvas;\n\t\tlet webGL = this._webGLCache;\n\n\t\tif (!this._useWebGL || !webGL) {\n\t\t\tlet ctx = surface.getContext(\"2d\");\n\n\t\t\tif (!compositeOperation) {\n\t\t\t\tctx.clearRect(0, 0, this._drawWidth+1, this._drawHeight+1);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.globalCompositeOperation = compositeOperation;\n\t\t\tctx.setTransform(this.scale,0,0,this.scale, -this._filterOffX,-this._filterOffY);\n\t\t\tctx.translate(-this.x, -this.y);\n\t\t\ttarget.draw(ctx, true);\n\t\t\tctx.restore();\n\n\t\t\tif (target.filters && target.filters.length) {\n\t\t\t\tthis._applyFilters(target);\n\t\t\t}\n\t\t\tsurface._invalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._webGLCache.cacheDraw(target, target.filters, this);\n\t\t// NOTE: we may of swapped around which element the surface is, so we re-fetch it\n\t\tsurface = this.target.cacheCanvas;\n\t\tsurface.width = this._drawWidth;\n\t\tsurface.height = this._drawHeight;\n\t\tsurface._invalid = true;\n\t}\n\n\t/**\n\t * Work through every filter and apply its individual transformation to it.\n\t * @protected\n\t */\n\t_applyFilters () {\n\t\tlet surface = this.target.cacheCanvas;\n\t\tlet filters = this.target.filters;\n\n\t\tlet w = this._drawWidth;\n\t\tlet h = this._drawHeight;\n\n\t\t// setup\n\t\tlet data = surface.getContext(\"2d\").getImageData(0,0, w,h);\n\n\t\t// apply\n\t\tlet l = filters.length;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tfilters[i]._applyFilter(data);\n\t\t}\n\n\t\t//done\n\t\tsurface.getContext(\"2d\").putImageData(data, 0,0);\n\t}\n\n}\n\n/**\n * Functionality injected to {@link easeljs.BitmapCache}. Ensure StageGL is loaded after all other\n * standard EaselJS classes are loaded but before making any DisplayObject instances for injection to take full effect.\n * Replaces the context2D cache draw with the option for WebGL or context2D drawing.\n * If options is set to \"true\" a StageGL is created and contained on the object for use when rendering a cache.\n * If options is a StageGL instance it will not create an instance but use the one provided.\n * If possible it is best to provide the StageGL instance that is a parent to this DisplayObject for performance reasons.\n * A StageGL cache does not infer the ability to draw objects a StageGL cannot currently draw,\n * i.e. do not use a WebGL context cache when caching a Shape, Text, etc.\n *\n * You can make your own StageGL and have it render to a canvas if you set \".isCacheControlled\" to true on your stage.\n * You may wish to create your own StageGL instance to control factors like background color/transparency, AA, and etc.\n * You must set \"options\" to its own stage if you wish to use the fast Render Textures available only to StageGLs.\n * If you use WebGL cache on a container with Shapes you will have to cache each shape individually before the container,\n * otherwise the WebGL cache will not render the shapes.\n *\n * @name easeljs.BitmapCache#cache\n *\n * @example <caption>WebGL cache with 2d context</caption>\n * let stage = new Stage();\n * let bmp = new Bitmap(src);\n * bmp.cache(0, 0, bmp.width, bmp.height, 1, true); // no StageGL to use, so make one\n * let shape = new Shape();\n * shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n * shape.cache(0, 0, 20, 20, 1); // cannot use WebGL cache\n *\n * @example <caption>WebGL cache with WebGL context</caption>\n * let stageGL = new StageGL();\n * let bmp = new Bitmap(src);\n * bmp.cache(0, 0, bmp.width, bmp.height, 1, stageGL); // use our StageGL to cache\n * let shape = new Shape();\n * shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n * shape.cache(0, 0, 20, 20, 1); // cannot use WebGL cache\n *\n * @param {Number} x The x coordinate origin for the cache region.\n * @param {Number} y The y coordinate origin for the cache region.\n * @param {Number} width The width of the cache region.\n * @param {Number} height The height of the cache region.\n * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\n * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n * \tcached elements with greater fidelity.\n * @param {Boolean | easeljs.StageGL} [options] Select whether to use context 2D, or WebGL rendering, and whether to make a new stage instance or use an existing one.\n */\n\n/**\n * @license DisplayObject\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * DisplayObject is an abstract class that should not be constructed directly. Instead construct subclasses such as\n * {@link easeljs.Container}, {@link easeljs.Bitmap}, and {@link easeljs.Shape}.\n * DisplayObject is the base class for all display classes in the EaselJS library. It defines the core properties and\n * methods that are shared between all display objects, such as transformation properties (x, y, scaleX, scaleY, etc),\n * caching, and mouse handlers.\n *\n * @memberof easeljs\n * @extends EventDispatcher\n */\nclass DisplayObject extends EventDispatcher {\n\n\tconstructor () {\n\t\tsuper();\n\n\t\t/**\n\t\t * The alpha (transparency) for this display object. 0 is fully transparent, 1 is fully opaque.\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.alpha = 1;\n\n\t\t/**\n\t\t * If a cache is active, this returns the canvas that holds the image of this display object.\n\t\t * Use this to display the result of a cache. This will be a HTMLCanvasElement unless special cache rules have been deliberately enabled for this cache.\n\t\t * @see {@link easeljs.DisplayObject#cache}\n\t\t * @type {HTMLCanvasElement | Object}\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.cacheCanvas = null;\n\n\t\t/**\n\t\t * If a cache has been made, this returns the class that is managing the cacheCanvas and its properties.\n\t\t * @see {@link easeljs.BitmapCache}\n\t\t * @type {easeljs.BitmapCache}\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.bitmapCache = null;\n\n\t\t/**\n\t\t * Unique ID for this display object. Makes display objects easier for some uses.\n\t\t * @type {Number}\n\t\t */\n\t\tthis.id = uid();\n\n\t\t/**\n\t\t * Indicates whether to include this object when running mouse interactions. Setting this to `false` for children\n\t\t * of a {@link easeljs.Container} will cause events on the Container to not fire when that child is\n\t\t * clicked. Setting this property to `false` does not prevent the {@link easeljs.Container#getObjectsUnderPoint}\n\t\t * method from returning the child.\n\t\t *\n\t\t * <strong>Note:</strong> In EaselJS 0.7.0, the `mouseEnabled` property will not work properly with nested Containers.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.mouseEnabled = true;\n\n\t\t/**\n\t\t * If false, the tick will not run on this display object (or its children). This can provide some performance benefits.\n\t\t * In addition to preventing the {@link core.Ticker#event:tick} event from being dispatched, it will also prevent tick related updates\n\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.tickEnabled = true;\n\n\t\t/**\n\t\t * An optional name for this display object. Included in {@link easeljs.DisplayObject#toString}. Useful for debugging.\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.name = null;\n\n\t\t/**\n\t\t * A reference to the {@link easeljs.Container} or {@link easeljs.Stage} object that\n\t\t * contains this display object, or null if it has not been added to one.\n\t\t * @type {easeljs.Container}\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.parent = null;\n\n\t\t/**\n\t\t * The left offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate\n\t\t * around its center, you would set regX and {@link easeljs.DisplayObject#regY} to 50.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.regX = 0;\n\n\t\t/**\n\t\t * The y offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate around\n\t\t * its center, you would set {@link easeljs.DisplayObject#regX} and regY to 50.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.regY = 0;\n\n\t\t/**\n\t\t * The rotation in degrees for this display object.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.rotation = 0;\n\n\t\t/**\n\t\t * The factor to stretch this display object horizontally. For example, setting scaleX to 2 will stretch the display\n\t\t * object to twice its nominal width. To horizontally flip an object, set the scale to a negative number.\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.scaleX = 1;\n\n\t\t/**\n\t\t * The factor to stretch this display object vertically. For example, setting scaleY to 0.5 will stretch the display\n\t\t * object to half its nominal height. To vertically flip an object, set the scale to a negative number.\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.scaleY = 1;\n\n\t\t/**\n\t\t * The factor to skew this display object horizontally.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.skewX = 0;\n\n\t\t/**\n\t\t * The factor to skew this display object vertically.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.skewY = 0;\n\n\t\t/**\n\t\t * A shadow object that defines the shadow to render on this display object. Set to `null` to remove a shadow. If\n\t\t * null, this property is inherited from the parent container.\n\t\t * @type {easeljs.Shadow}\n\t\t * @default null\n\t\t */\n\t\tthis.shadow = null;\n\n\t\t/**\n\t\t * Indicates whether this display object should be rendered to the canvas and included when running the Stage\n\t\t * {@link easeljs.Stage#getObjectsUnderPoint} method.\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.visible = true;\n\n\t\t/**\n\t\t * The x (horizontal) position of the display object, relative to its parent.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.x = 0;\n\n\t\t/**\n\t\t * The y (vertical) position of the display object, relative to its parent.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.y = 0;\n\n\t\t/**\n\t\t * If set, defines the transformation for this display object, overriding all other transformation properties\n\t\t * (x, y, rotation, scale, skew).\n\t\t * @type {easeljs.Matrix2D}\n\t\t * @default null\n\t\t */\n\t\tthis.transformMatrix = null;\n\n\t\t/**\n\t\t * The composite operation indicates how the pixels of this display object will be composited with the elements\n\t\t * behind it. If `null`, this property is inherited from the parent container.\n\t\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing \"WHATWG spec on compositing\"}\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.compositeOperation = null;\n\n\t\t/**\n\t\t * Indicates whether the display object should be drawn to a whole pixel when {@link easeljs.Stage#snapToPixelEnabled} is true.\n\t\t * To enable/disable snapping on whole categories of display objects, set this value on the prototype (Ex. Text.prototype.snapToPixel = true).\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.snapToPixel = true;\n\n\t\t/**\n\t\t * An array of Filter objects to apply to this display object. Filters are only applied / updated when {@link easeljs.DisplayObject#cache}\n\t\t * or {@link easeljs.DisplayObject#updateCache} is called on the display object, and only apply to the area that is cached.\n\t\t * @type {Array<easeljs.Filter>}\n\t\t * @default null\n\t\t */\n\t\tthis.filters = null;\n\n\t\t/**\n\t\t * A Shape instance that defines a vector mask (clipping path) for this display object.  The shape's transformation\n\t\t * will be applied relative to the display object's parent coordinates (as if it were a child of the parent).\n\t\t * @type {easeljs.Shape}\n\t\t * @default null\n\t\t */\n\t\tthis.mask = null;\n\n\t\t/**\n\t\t * A display object that will be tested when checking mouse interactions or testing {@link easeljs.Container#getObjectsUnderPoint}.\n\t\t * The hit area will have its transformation applied relative to this display object's coordinate space (as though\n\t\t * the hit test object were a child of this display object and relative to its regX/Y). The hitArea will be tested\n\t\t * using only its own `alpha` value regardless of the alpha value on the target display object, or the target's\n\t\t * ancestors (parents).\n\t\t *\n\t\t * If set on a {@link easeljs.Container}, children of the Container will not receive mouse events.\n\t\t * This is similar to setting {@link easeljs.DisplayObject#mouseChildren} to false.\n\t\t *\n\t\t * Note that hitArea is NOT currently used by the `hitTest()` method, nor is it supported for {@link easeljs.Stage}.\n\t\t *\n\t\t * @type {easeljs.DisplayObject}\n\t\t * @default null\n\t\t */\n\t\tthis.hitArea = null;\n\n\t\t/**\n\t\t * A CSS cursor (ex. \"pointer\", \"help\", \"text\", etc) that will be displayed when the user hovers over this display\n\t\t * object. You must enable mouseover events using the {@link easeljs.Stage#enableMouseOver} method to\n\t\t * use this property. Setting a non-null cursor on a Container will override the cursor set on its descendants.\n\t\t *\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.cursor = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.DisplayProps}\n\t\t */\n\t\tthis._props = new DisplayProps();\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Rectangle}\n\t\t */\n\t\tthis._rectangle = new Rectangle();\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Rectangle}\n\t\t * @default null\n\t\t */\n\t\tthis._bounds = null;\n\n\t\t/**\n\t\t * Where StageGL should look for required display properties, matters only for leaf display objects. Containers\n\t\t * or cached objects won't use this property, it's for native display of terminal elements.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._webGLRenderStyle = DisplayObject._StageGL_NONE;\n\t}\n\n\t/**\n\t * Returns the {@link easeljs.Stage} instance that this display object will be rendered on, or null if it has not been added to one.\n\t * @type {Stage}\n\t * @readonly\n\t */\n\tget stage () {\n\t\t// uses dynamic access to avoid circular dependencies;\n\t\tlet o = this;\n\t\twhile (o.parent) { o = o.parent; }\n\t\tif (/^\\[Stage(GL)?(\\s\\(name=\\w+\\))?\\]$/.test(o.toString())) { return o; }\n\t\treturn null;\n\t}\n\n\t/**\n\t * Set both the {@link easeljs.DisplayObject#scaleX} and the {@link easeljs.DisplayObject#scaleY} property to the same value.\n\t * Note that when you get the value, if the `scaleX` and `scaleY` are different values, it will return only the `scaleX`.\n\t * @type {Number}\n\t * @default 1\n\t */\n\tset scale (value) { this.scaleX = this.scaleY = value; }\n\tget scale () { return this.scaleX; }\n\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tisVisible () {\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n\t}\n\n\t/**\n\t * Alias for drawCache(). Used by grandchildren (or deeper) in their draw method to directly\n\t * call {@link easeljs.DisplayObject#drawCache}, bypassing their parent(s).\n\t *\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean}\n\t */\n\tdraw (ctx, ignoreCache = false) {\n\t\treturn this.drawCache(ctx, ignoreCache);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns `true` if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean}\n\t */\n\tdrawCache (ctx, ignoreCache = false) {\n\t\tlet cache = this.bitmapCache;\n\t\tif (cache && !ignoreCache) {\n\t\t\treturn cache.draw(ctx);\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Applies this display object's transformation, alpha, globalCompositeOperation, clipping path (mask), and shadow\n\t * to the specified context. This is typically called prior to {@link easeljs.DisplayObject#draw}.\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D to update.\n\t */\n\tupdateContext (ctx) {\n\t\tlet o=this, mask=o.mask, mtx=o._props.matrix;\n\n\t\tif (mask && mask.graphics && !mask.graphics.isEmpty()) {\n\t\t\tmask.getMatrix(mtx);\n\t\t\tctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n\n\t\t\tmask.graphics.drawAsPath(ctx);\n\t\t\tctx.clip();\n\n\t\t\tmtx.invert();\n\t\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n\t\t}\n\n\t\tthis.getMatrix(mtx);\n\t\tlet tx = mtx.tx, ty = mtx.ty;\n\t\tif (DisplayObject._snapToPixelEnabled && o.snapToPixel) {\n\t\t\ttx = tx + (tx < 0 ? -0.5 : 0.5) | 0;\n\t\t\tty = ty + (ty < 0 ? -0.5 : 0.5) | 0;\n\t\t}\n\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, tx, ty);\n\t\tctx.globalAlpha *= o.alpha;\n\t\tif (o.compositeOperation) { ctx.globalCompositeOperation = o.compositeOperation; }\n\t\tif (o.shadow) { this._applyShadow(ctx, o.shadow); }\n\t}\n\n\t/**\n\t * Draws the display object into a new element, which is then used for subsequent draws. Intended for complex content\n\t * that does not change frequently (ex. a Container with many children that do not move, or a complex vector Shape),\n\t * this can provide for much faster rendering because the content does not need to be re-rendered each tick. The\n\t * cached display object can be moved, rotated, faded, etc freely, however if its content changes, you must manually\n\t * update the cache by calling `updateCache()` again. You must specify the cached area via the x, y, w,\n\t * and h parameters. This defines the rectangle that will be rendered and cached using this display object's coordinates.\n\t *\n\t * Note that filters need to be defined <em>before</em> the cache is applied or you will have to call updateCache after\n\t * application. Check out the {@link easeljs.Filter} class for more information. Some filters\n\t * (ex. {@link easeljs.BlurFilter}) may not work as expected in conjunction with the scale param.\n\t *\n\t * Usually, the resulting cacheCanvas will have the dimensions width*scale by height*scale, however some filters (ex. BlurFilter)\n\t * will add padding to the canvas dimensions.\n\t *\n\t * Actual implementation of the caching mechanism can change with a {@link easeljs.StageGL} and so\n\t * all caching and filter behaviour has been moved to the {@link easeljs.BitmapCache}\n\t *\n\t * @example\n\t * // If you defined a Shape that drew a circle at 0, 0 with a radius of 25:\n\t * var shape = new createjs.Shape();\n\t * shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n\t * shape.cache(-25, -25, 50, 50);\n\t *\n\t * @param {Number} x The x coordinate origin for the cache region.\n\t * @param {Number} y The y coordinate origin for the cache region.\n\t * @param {Number} width The width of the cache region.\n\t * @param {Number} height The height of the cache region.\n\t * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\n\t * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n\t * \tcached elements with greater fidelity. Default is 1.\n\t * @param {Object} [options] When using alternate displays there may be extra caching opportunities or needs.\n\t */\n\tcache (x, y, width, height, scale = 1, options) {\n\t\tif (!this.bitmapCache) {\n\t\t\tthis.bitmapCache = new BitmapCache();\n\t\t}\n\t\tthis.bitmapCache.define(this, x, y, width, height, scale, options);\n\t}\n\n\t/**\n\t * Redraws the display object to its cache. Calling updateCache without an active cache will throw an error.\n\t * If compositeOperation is null the current cache will be cleared prior to drawing. Otherwise the display object\n\t * will be drawn over the existing cache using the specified compositeOperation.\n\t *\n\t * Actual implementation of the caching mechanism can change with a {@link easeljs.StageGL} and so\n\t * all caching and filter behaviour has been moved to the {@link easeljs.BitmapCache}\n\t *\n\t * @example\n\t * // clear current graphics\n\t * shapeInstance.clear();\n\t * // draw new instructions\n\t * shapeInstance.setStrokeStyle(3).beginStroke(\"#FF0000\").moveTo(100, 100).lineTo(200,200);\n\t * // update cache, drawing new line on top of old one\n\t * shapeInstance.updateCache();\n\t *\n\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing \"WHATWG spec on compositing\"}\n\t * @param {String} compositeOperation The compositeOperation to use, or null to clear the cache and redraw it.\n\t */\n\tupdateCache (compositeOperation) {\n\t\tif (!this.bitmapCache) {\n\t\t\tthrow \"No cache found. cache() must be called before updateCache()\";\n\t\t}\n\t\tthis.bitmapCache.update(compositeOperation);\n\t}\n\n\t/**\n\t * Clears the current cache.\n\t * @see {@link easeljs.DisplayObject.#cache}\n\t */\n\tuncache () {\n\t\tif (this.bitmapCache) {\n\t\t\tthis.bitmapCache.release();\n\t\t\tthis.bitmapCache = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a data URL for the cache, or null if this display object is not cached.\n\t * Only generated if the cache has changed, otherwise returns last result.\n\t * @return {String} The image data url for the cache.\n\t */\n\tgetCacheDataURL () {\n\t\treturn this.bitmapCache ? this.bitmapCache.getDataURL() : null;\n\t}\n\n\t/**\n\t * Transforms the specified x and y position from the coordinate space of the display object\n\t * to the global (stage) coordinate space. For example, this could be used to position an HTML label\n\t * over a specific point on a nested display object. Returns a Point instance with x and y properties\n\t * correlating to the transformed coordinates on the stage.\n\t *\n\t * @example\n\t * displayObject.x = 300;\n\t * displayObject.y = 200;\n\t * stage.addChild(displayObject);\n\t * let point = displayObject.localToGlobal(100, 100);\n\t * // Results in x=400, y=300\n\t *\n\t * @param {Number} x The x position in the source display object to transform.\n\t * @param {Number} y The y position in the source display object to transform.\n\t * @param {easeljs.Point | Object} [pt=Point] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n\t * @return {easeljs.Point} A Point instance with x and y properties correlating to the transformed coordinates\n\t * on the stage.\n\t */\n\tlocalToGlobal (x, y, pt = new Point()) {\n\t\treturn this.getConcatenatedMatrix(this._props.matrix).transformPoint(x, y, pt);\n\t}\n\n\t/**\n\t * Transforms the specified x and y position from the global (stage) coordinate space to the\n\t * coordinate space of the display object. For example, this could be used to determine\n\t * the current mouse position within the display object. Returns a Point instance with x and y properties\n\t * correlating to the transformed position in the display object's coordinate space.\n\t *\n\t * @example\n\t * displayObject.x = 300;\n\t * displayObject.y = 200;\n\t * stage.addChild(displayObject);\n\t * let point = displayObject.globalToLocal(100, 100);\n\t * // Results in x=-200, y=-100\n\t *\n\t * @param {Number} x The x position on the stage to transform.\n\t * @param {Number} y The y position on the stage to transform.\n\t * @param {easeljs.Point | Object} [pt=Point] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n\t * @return {easeljs.Point} A Point instance with x and y properties correlating to the transformed position in the\n\t * display object's coordinate space.\n\t */\n\tglobalToLocal (x, y, pt = new Point()) {\n\t\treturn this.getConcatenatedMatrix(this._props.matrix).invert().transformPoint(x, y, pt);\n\t}\n\n\t/**\n\t * Transforms the specified x and y position from the coordinate space of this display object to the coordinate\n\t * space of the target display object. Returns a Point instance with x and y properties correlating to the\n\t * transformed position in the target's coordinate space. Effectively the same as using the following code with\n\t * {@link easeljs.DisplayObject#localToGlobal} and {@link easeljs.DisplayObject#globalToLocal}.\n\t *\n\t * @example\n\t * // long way\n\t * let pt = this.localToGlobal(x, y);\n\t * pt = target.globalToLocal(pt.x, pt.y);\n\t * // shorthand\n\t * let pt = this.localToLocal(x, y, target);\n\t *\n\t * @param {Number} x The x position in the source display object to transform.\n\t * @param {Number} y The y position on the source display object to transform.\n\t * @param {easeljs.DisplayObject} target The target display object to which the coordinates will be transformed.\n\t * @param {easeljs.Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n\t * @return {easeljs.Point} Returns a Point instance with x and y properties correlating to the transformed position\n\t * in the target's coordinate space.\n\t */\n\tlocalToLocal (x, y, target, pt) {\n\t\tpt = this.localToGlobal(x, y, pt);\n\t\treturn target.globalToLocal(pt.x, pt.y, pt);\n\t}\n\n\t/**\n\t * Shortcut method to quickly set the transform properties on the display object. All parameters are optional.\n\t * Omitted parameters will have the default value set.\n\t *\n\t * @example\n\t * displayObject.setTransform(100, 100, 2, 2);\n\t *\n\t * @param {Number} [x=0] The horizontal translation (x position) in pixels\n\t * @param {Number} [y=0] The vertical translation (y position) in pixels\n\t * @param {Number} [scaleX=1] The horizontal scale, as a percentage of 1\n\t * @param {Number} [scaleY=1] the vertical scale, as a percentage of 1\n\t * @param {Number} [rotation=0] The rotation, in degrees\n\t * @param {Number} [skewX=0] The horizontal skew factor\n\t * @param {Number} [skewY=0] The vertical skew factor\n\t * @param {Number} [regX=0] The horizontal registration point in pixels\n\t * @param {Number} [regY=0] The vertical registration point in pixels\n\t * @return {easeljs.DisplayObject} Returns this instance. Useful for chaining commands.\n\t*/\n\tsetTransform (x=0, y=0, scaleX=1, scaleY=1, rotation=0, skewX=0, skewY=0, regX=0, regY=0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.scaleX = scaleX;\n\t\tthis.scaleY = scaleY;\n\t\tthis.rotation = rotation;\n\t\tthis.skewX = skewX;\n\t\tthis.skewY = skewY;\n\t\tthis.regX = regX;\n\t\tthis.regY = regY;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a matrix based on this object's current transform.\n\t * @param {easeljs.Matrix2D} [matrix] A Matrix2D object to populate with the calculated values. If null, a new Matrix object is returned.\n\t * @return {easeljs.Matrix2D} A matrix representing this display object's transform.\n\t */\n\tgetMatrix (matrix) {\n\t\tlet o = this, mtx = matrix&&matrix.identity() || new Matrix2D();\n\t\treturn o.transformMatrix ?  mtx.copy(o.transformMatrix) : mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t}\n\n\t/**\n\t * Generates a Matrix2D object representing the combined transform of the display object and all of its\n\t * parent Containers up to the highest level ancestor (usually the {@link easeljs.Stage}). This can\n\t * be used to transform positions between coordinate spaces, such as with {@link easeljs.DisplayObject#localToGlobal}\n\t * and {@link easeljs.DisplayObject#globalToLocal}.\n\t *\n\t * @param {easeljs.Matrix2D} [matrix] A Matrix2D object to populate with the calculated values. If null, a new Matrix2D object is returned.\n\t * @return {easeljs.Matrix2D} The combined matrix.\n\t */\n\tgetConcatenatedMatrix (matrix) {\n\t\tlet o = this, mtx = this.getMatrix(matrix);\n\t\twhile (o = o.parent) {\n\t\t\tmtx.prependMatrix(o.getMatrix(o._props.matrix));\n\t\t}\n\t\treturn mtx;\n\t}\n\n\t/**\n\t * Generates a DisplayProps object representing the combined display properties of the  object and all of its\n\t * parent Containers up to the highest level ancestor (usually the {@link easeljs.Stage}).\n\t * @param {easeljs.DisplayProps} [props] A DisplayProps object to populate with the calculated values. If null, a new DisplayProps object is returned.\n\t * @return {easeljs.DisplayProps} The combined display properties.\n\t */\n\tgetConcatenatedDisplayProps (props) {\n\t\tprops = props ? props.identity() : new DisplayProps();\n\t\tlet o = this, mtx = o.getMatrix(props.matrix);\n\t\tdo {\n\t\t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation);\n\n\t\t\t// we do this to avoid problems with the matrix being used for both operations when o._props.matrix is passed in as the props param.\n\t\t\t// this could be simplified (ie. just done as part of the prepend above) if we switched to using a pool.\n\t\t\tif (o != this) { mtx.prependMatrix(o.getMatrix(o._props.matrix)); }\n\t\t} while (o = o.parent);\n\t\treturn props;\n\t}\n\n\t/**\n\t * Tests whether the display object intersects the specified point in local coordinates (ie. draws a pixel with alpha > 0 at\n\t * the specified position). This ignores the alpha, shadow, hitArea, mask, and compositeOperation of the display object.\n\t *\n\t * Please note that shape-to-shape collision is not currently supported by EaselJS.\n\t *\n\t * @example\n\t * stage.addEventListener(\"stagemousedown\", event => {\n\t *   let hit = shape.hitTest(event.stageX, event.stageY);\n\t *   // hit == true when shape is clicked\n\t * });\n\t *\n\t * @param {Number} x The x position to check in the display object's local coordinates.\n\t * @param {Number} y The y position to check in the display object's local coordinates.\n\t * @return {Boolean} A Boolean indicating whether a visible portion of the DisplayObject intersect the specified\n\t * local Point.\n\t*/\n\thitTest (x, y) {\n\t\tlet ctx = DisplayObject._hitTestContext;\n\t\tctx.setTransform(1, 0, 0, 1, -x, -y);\n\t\tthis.draw(ctx);\n\n\t\tlet hit = this._testHit(ctx);\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, 2, 2);\n\t\treturn hit;\n\t}\n\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * @example\n\t * let graphics = new Graphics().beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n\t * let shape = stage.addChild(new Shape()).set({ graphics, x: 100, y: 100, alpha: 0.5 });\n\t *\n\t * @param {Object} props A generic object containing properties to copy to the DisplayObject instance.\n\t * @return {easeljs.DisplayObject} Returns the instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t*/\n\tset (props) {\n\t\tfor (let n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a rectangle representing this object's bounds in its local coordinate system (ie. with no transformation).\n\t * Objects that have been cached will return the bounds of the cache.\n\t *\n\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use\n\t * {@link easeljs.DisplayObject#setBounds} so that they are included when calculating Container bounds.\n\t *\n\t * <table>\n\t * \t<tr><td><b>All</b></td><td>\n\t * \t\tAll display objects support setting bounds manually using setBounds(). Likewise, display objects that\n\t * \t\thave been cached using cache() will return the bounds of their cache. Manual and cache bounds will override\n\t * \t\tthe automatic calculations listed below.\n\t * \t</td></tr>\n\t * \t<tr><td><b>Bitmap</b></td><td>\n\t * \t\tReturns the width and height of the sourceRect (if specified) or image, extending from (x=0,y=0).\n\t * \t</td></tr>\n\t * \t<tr><td><b>Sprite</b></td><td>\n\t * \t\tReturns the bounds of the current frame. May have non-zero x/y if a frame registration point was specified\n\t * \t\tin the spritesheet data. See also {@link easeljs.SpriteSheet#getFrameBounds}\n\t * \t</td></tr>\n\t * \t<tr><td><b>Container</b></td><td>\n\t * \t\tReturns the aggregate (combined) bounds of all children that return a non-null value from getBounds().\n\t * \t</td></tr>\n\t * \t<tr><td><b>Shape</b></td><td>\n\t * \t\tDoes not currently support automatic bounds calculations. Use setBounds() to manually define bounds.\n\t * \t</td></tr>\n\t * \t<tr><td><b>Text</b></td><td>\n\t * \t\tReturns approximate bounds. Horizontal values (x/width) are quite accurate, but vertical values (y/height) are\n\t * \t\tnot, especially when using textBaseline values other than \"top\".\n\t * \t</td></tr>\n\t * \t<tr><td><b>BitmapText</b></td><td>\n\t * \t\tReturns approximate bounds. Values will be more accurate if spritesheet frame registration points are close\n\t * \t\tto (x=0,y=0).\n\t * \t</td></tr>\n\t* </table>\n\t *\n\t * @example\n\t * /* Bounds can be expensive to calculate for some objects (ex. text, or containers with many children), and\n\t * are recalculated each time you call getBounds(). You can prevent recalculation on static objects by setting the\n\t * bounds explicitly. *\\/\n\t * let bounds = obj.getBounds();\n\t * obj.setBounds(bounds.x, bounds.y, bounds.width, bounds.height);\n\t * // getBounds will now use the set values, instead of recalculating\n\t *\n\t * @example\n\t * // To reduce memory impact, the returned Rectangle instance may be reused internally\n\t * let bounds = obj.getBounds().clone();\n\t * // OR:\n\t * rect.copy(obj.getBounds());\n\t *\n\t * @return {easeljs.Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\n\t */\n\tgetBounds () {\n\t\tif (this._bounds) { return this._rectangle.copy(this._bounds); }\n\t\tlet cacheCanvas = this.cacheCanvas;\n\t\tif (cacheCanvas) {\n\t\t\tlet scale = this._cacheScale;\n\t\t\treturn this._rectangle.setValues(this._cacheOffsetX, this._cacheOffsetY, cacheCanvas.width/scale, cacheCanvas.height/scale);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns a rectangle representing this object's bounds in its parent's coordinate system (ie. with transformations applied).\n\t * Objects that have been cached will return the transformed bounds of the cache.\n\t *\n\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use\n\t * {@link easeljs.DisplayObject#setBounds} so that they are included when calculating Container bounds.\n\t *\n\t * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\n\t * values if you need to retain it.\n\t *\n\t * Container instances calculate aggregate bounds for all children that return bounds via getBounds.\n\t * @return {easeljs.Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\n\t */\n\tgetTransformedBounds () {\n\t\treturn this._getBounds();\n\t}\n\n\t/**\n\t * Allows you to manually specify the bounds of an object that either cannot calculate their own bounds (ex. Shape &\n\t * Text) for future reference, or so the object can be included in Container bounds. Manually set bounds will always\n\t * override calculated bounds.\n\t *\n\t * The bounds should be specified in the object's local (untransformed) coordinates. For example, a Shape instance\n\t * with a 25px radius circle centered at 0,0 would have bounds of (-25, -25, 50, 50).\n\t *\n\t * @param {Number} x The x origin of the bounds. Pass null to remove the manual bounds.\n\t * @param {Number} y The y origin of the bounds.\n\t * @param {Number} width The width of the bounds.\n\t * @param {Number} height The height of the bounds.\n\t */\n\tsetBounds (x, y, width, height) {\n\t\tif (x == null) { this._bounds = null; }\n\t\tthis._bounds = (this._bounds || new Rectangle()).setValues(x, y, width, height);\n\t}\n\n\t/**\n\t * Returns a clone of this DisplayObject. Some properties that are specific to this instance's current context are\n\t * reverted to their defaults (for example .parent). Caches are not maintained across clones, and some elements\n\t * are copied by reference (masks, individual filter instances, hit area)\n\t *\n\t * @return {easeljs.DisplayObject} A clone of the current DisplayObject instance.\n\t */\n\tclone () {\n\t\treturn this._cloneProps(new DisplayObject());\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}${this.name ? ` (name=${this.name})` : \"\"}]`;\n\t}\n\n\t/**\n\t * @protected\n\t * @param {easeljs.DisplayObject} o The DisplayObject instance which will have properties from the current DisplayObject\n\t * instance copied into.\n\t * @return {easeljs.DisplayObject} o\n\t */\n\t_cloneProps (o) {\n\t\to.alpha = this.alpha;\n\t\to.mouseEnabled = this.mouseEnabled;\n\t\to.tickEnabled = this.tickEnabled;\n\t\to.name = this.name;\n\t\to.regX = this.regX;\n\t\to.regY = this.regY;\n\t\to.rotation = this.rotation;\n\t\to.scaleX = this.scaleX;\n\t\to.scaleY = this.scaleY;\n\t\to.shadow = this.shadow;\n\t\to.skewX = this.skewX;\n\t\to.skewY = this.skewY;\n\t\to.visible = this.visible;\n\t\to.x  = this.x;\n\t\to.y = this.y;\n\t\to.compositeOperation = this.compositeOperation;\n\t\to.snapToPixel = this.snapToPixel;\n\t\to.filters = this.filters==null?null:this.filters.slice(0);\n\t\to.mask = this.mask;\n\t\to.hitArea = this.hitArea;\n\t\to.cursor = this.cursor;\n\t\to._bounds = this._bounds;\n\t\treturn o;\n\t}\n\n\t/**\n\t * @protected\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {easeljs.Shadow} [shadow=Shadow]\n\t */\n\t_applyShadow (ctx, shadow = Shadow.identity) {\n\t\tshadow = shadow;\n\t\tctx.shadowColor = shadow.color;\n\t\tctx.shadowOffsetX = shadow.offsetX;\n\t\tctx.shadowOffsetY = shadow.offsetY;\n\t\tctx.shadowBlur = shadow.blur;\n\t}\n\n\t/**\n\t * @protected\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t */\n\t_tick (evtObj) {\n\t\t// because tick can be really performance sensitive, check for listeners before calling dispatchEvent.\n\t\tlet ls = this._listeners;\n\t\tif (ls && ls[\"tick\"]) {\n\t\t\t// reset & reuse the event object to avoid construction / GC costs:\n\t\t\tevtObj.target = null;\n\t\t\tevtObj.propagationStopped = evtObj.immediatePropagationStopped = false;\n\t\t\tthis.dispatchEvent(evtObj);\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @return {Boolean}\n\t */\n\t_testHit (ctx) {\n\t\ttry {\n\t\t\treturn ctx.getImageData(0, 0, 1, 1).data[3] > 1;\n\t\t} catch (e) {\n\t\t\tif (!DisplayObject.suppressCrossDomainErrors) {\n\t\t\t\tthrow \"An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.\";\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t * @param {easeljs.Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n\t * @return {easeljs.Rectangle}\n\t */\n\t_getBounds (matrix, ignoreTransform) {\n\t\treturn this._transformBounds(this.getBounds(), matrix, ignoreTransform);\n\t}\n\n\t/**\n\t * @protected\n\t * @param {easeljs.Rectangle} bounds\n\t * @param {easeljs.Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform\n\t * @return {easeljs.Rectangle}\n\t */\n\t_transformBounds (bounds, matrix, ignoreTransform) {\n\t\tif (!bounds) { return bounds; }\n\t\tlet { x, y, width, height } = bounds;\n\t\tlet mtx = this._props.matrix;\n\t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\n\t\tif (x || y) { mtx.appendTransform(0,0,1,1,0,0,0,-x,-y); } // TODO: simplify this.\n\t\tif (matrix) { mtx.prependMatrix(matrix); }\n\n\t\tlet x_a = width*mtx.a, x_b = width*mtx.b;\n\t\tlet y_c = height*mtx.c, y_d = height*mtx.d;\n\t\tlet tx = mtx.tx, ty = mtx.ty;\n\n\t\tlet minX = tx, maxX = tx, minY = ty, maxY = ty;\n\n\t\tif ((x = x_a + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n\t\tif ((x = x_a + y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n\t\tif ((x = y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\n\n\t\tif ((y = x_b + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n\t\tif ((y = x_b + y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n\t\tif ((y = y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\n\n\t\treturn bounds.setValues(minX, minY, maxX-minX, maxY-minY);\n\t}\n\n\t/**\n\t * Indicates whether the display object has any mouse event listeners or a cursor.\n\t * @protected\n\t * @return {Boolean}\n\t */\n\t_hasMouseEventListener () {\n\t\tlet evts = DisplayObject._MOUSE_EVENTS;\n\t\tfor (let i=0, l=evts.length; i<l; i++) {\n\t\t\tif (this.hasEventListener(evts[i])) { return true; }\n\t\t}\n\t\treturn !!this.cursor;\n\t}\n\n}\n\n{\n\tlet canvas = window.createjs && createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"); // prevent errors on load in browsers without canvas.\n\tif (canvas.getContext) {\n\t\t/**\n\t\t * @type {HTMLCanvasElement | Object}\n\t\t * @static\n\t\t */\n\t\tDisplayObject._hitTestCanvas = canvas;\n\t\t/**\n\t\t * @type {CanvasRenderingContext2D}\n\t\t * @static\n\t\t */\n\t\tDisplayObject._hitTestContext = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.height = 1;\n\t}\n}\n\n/**\n * Listing of mouse event names. Used in _hasMouseEventListener.\n * @static\n * @type {Array<String>}\n * @readonly\n */\nDisplayObject._MOUSE_EVENTS = [\"click\",\"dblclick\",\"mousedown\",\"mouseout\",\"mouseover\",\"pressmove\",\"pressup\",\"rollout\",\"rollover\"];\n\n/**\n * Suppresses errors generated when using features like hitTest, mouse events, and {{#crossLink \"getObjectsUnderPoint\"}}{{/crossLink}}\n * with cross domain content.\n * @static\n * @type {Boolean}\n * @default false\n */\nDisplayObject.suppressCrossDomainErrors = false;\n\n/**\n * @static\n * @type {Boolean}\n * @default false\n */\nDisplayObject.snapToPixelEnabled = false;\n\n/**\n * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n * @static\n * @type {Number}\n */\nDisplayObject._StageGL_NONE = 0;\n\n/**\n * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n * @static\n * @type {Number}\n */\nDisplayObject._StageGL_SPRITE = 1;\n\n/**\n * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n * @static\n * @type {Number}\n */\nDisplayObject._StageGL_BITMAP = 2;\n\n/**\n * Dispatched when the user presses their left mouse button over the display object.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#mousedown\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user presses their left mouse button and then releases it while over the display object.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#click\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user double clicks their left mouse button over this display object.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#dblclick\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user's mouse enters this display object. This event must be enabled using\n * {@link easeljs.Stage#enableMouseOver}.\n * @see {@link easeljs.DisplayObject#event:rollover}\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#mouseover\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user's mouse leaves this display object. This event must be enabled using\n * {@link easeljs.Stage#enableMouseOver}.\n * @see {@link easeljs.DisplayObject#event:rollout}\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#mouseout\n * @since 0.6.0\n */\n\n/**\n * This event is similar to {@link easeljs.DisplayObject#event:mouseover}, with the following\n * differences: it does not bubble, and it considers {@link easeljs.Container} instances as an\n * aggregate of their content.\n *\n * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n * shapeA and then directly on to shapeB. With a listener for {@link easeljs.DisplayObject#event:mouseover} on\n * myContainer, two events would be received, each targeting a child element:\n * <ol>\n *   <li>when the mouse enters shapeA (target=shapeA)</li>\n *   <li>when the mouse enters shapeB (target=shapeB)</li>\n * </ol>\n * However, with a listener for \"rollover\" instead, only a single event is received when the mouse first enters\n * the aggregate myContainer content (target=myContainer).\n *\n * This event must be enabled using {@link easeljs.Stage#enableMouseOver}.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#rollover\n * @since 0.7.0\n */\n\n/**\n * This event is similar to {@link easeljs.DisplayObject#event:mouseout}, with the following\n * differences: it does not bubble, and it considers {@link easeljs.Container} instances as an\n * aggregate of their content.\n *\n * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n * shapeA, then directly on to shapeB, then off both. With a listener for {@link easeljs.DisplayObject#event:mouseout}\n * on myContainer, two events would be received, each targeting a child element:<OL>\n * <LI>when the mouse leaves shapeA (target=shapeA)</LI>\n * <LI>when the mouse leaves shapeB (target=shapeB)</LI>\n * </OL>\n * However, with a listener for \"rollout\" instead, only a single event is received when the mouse leaves\n * the aggregate myContainer content (target=myContainer).\n *\n * This event must be enabled using {@link easeljs.Stage#enableMouseOver}.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#rollout\n * @since 0.7.0\n */\n\n/**\n * After a {@link easeljs.DisplayObject#event:mousedown} occurs on a display object, a pressmove\n * event will be generated on that object whenever the mouse moves until the mouse press is released. This can be\n * useful for dragging and similar operations.\n * @event easeljs.DisplayObject#pressmove\n * @since 0.7.0\n */\n\n/**\n * After a {@link easeljs.DisplayObject#event:mousedown} occurs on a display object, a pressup event\n * will be generated on that object when that mouse press is released. This can be useful for dragging and similar\n * operations.\n * @event easeljs.DisplayObject#pressup\n * @since 0.7.0\n */\n\n/**\n * Dispatched when the display object is added to a parent container.\n * @event easeljs.DisplayObject#added\n */\n\n/**\n * Dispatched when the display object is removed from its parent container.\n * @event easeljs.DisplayObject#removed\n */\n\n/**\n * Dispatched on each display object on a stage whenever the stage updates. This occurs immediately before the\n * rendering (draw) pass. When {@link easeljs.Stage#update} is called, first all display objects on\n * the stage dispatch the tick event, then all of the display objects are drawn to stage. Children will have their\n * tick event dispatched in order of their depth prior to the event being dispatched on their parent.\n * @event easeljs.DisplayObject#tick\n * @param {Object} target The object that dispatched the event.\n * @param {String} type The event type.\n * @param {Array} params An array containing any arguments that were passed to the Stage.update() method.\n * @since 0.6.0\n */\n\n/**\n * @license Container\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * A Container is a nestable display list that allows you to work with compound display elements. For  example you could\n * group arm, leg, torso and head {{#crossLink \"Bitmap\"}}{{/crossLink}} instances together into a Person Container, and\n * transform them as a group, while still being able to move the individual parts relative to each other. Children of\n * containers have their `transform` and `alpha` properties concatenated with their parent\n * Container.\n *\n * For example, a {{#crossLink \"Shape\"}}{{/crossLink}} with x=100 and alpha=0.5, placed in a Container with `x=50`\n * and `alpha=0.7` will be rendered to the canvas at `x=150` and `alpha=0.35`.\n * Containers have some overhead, so you generally shouldn't create a Container to hold a single child.\n *\n * @memberof easeljs\n * @extends easeljs.DisplayObject\n * @example\n * import { Container } from \"@createjs/easeljs\";\n * const container = new Container();\n * container.addChild(bitmapInstance, shapeInstance);\n * container.x = 100;\n */\nclass Container extends DisplayObject {\n\n\tconstructor () {\n\t\tsuper();\n\n\t\t/**\n\t\t * The array of children in the display list. You should usually use the child management methods such as\n\t\t * {@link easeljs.Container#addChild}, {@link easeljs.Container#removeChild}, {@link easeljs.Container#swapChildren},\n\t\t * etc, rather than accessing this directly, but it is included for advanced uses.\n\t\t * @type {Array}\n\t\t * @default []\n\t\t */\n\t\tthis.children = [];\n\n\t\t/**\n\t\t * Indicates whether the children of this container are independently enabled for mouse/pointer interaction.\n\t\t * If false, the children will be aggregated under the container - for example, a click on a child shape would\n\t\t * trigger a click event on the container.\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.mouseChildren = true;\n\n\t\t/**\n\t\t * If false, the tick will not be propagated to children of this Container. This can provide some performance benefits.\n\t\t * In addition to preventing the {@link core.Ticker#event:tick} event from being dispatched, it will also prevent tick related updates\n\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.tickChildren = true;\n\t}\n\n\t/**\n\t * Returns the number of children in the container.\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget numChildren () {\n\t\treturn this.children.length;\n\t}\n\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || this.children.length;\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\tdraw (ctx, ignoreCache = false) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\n\t\t// this ensures we don't have issues with display list changes that occur during a draw:\n\t\tlet list = this.children.slice();\n\t\tfor (let i=0,l=list.length; i<l; i++) {\n\t\t\tlet child = list[i];\n\t\t\tif (!child.isVisible()) { continue; }\n\n\t\t\t// draw the child:\n\t\t\tctx.save();\n\t\t\tchild.updateContext(ctx);\n\t\t\tchild.draw(ctx);\n\t\t\tctx.restore();\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Adds a child to the top of the display list.\n\t *\n\t * @example\n\t * container.addChild(bitmapInstance);\n\t * // You can also add multiple children at once:\n\t * container.addChild(bitmapInstance, shapeInstance, textInstance);\n\t *\n\t * @param {...easeljs.DisplayObject} children The display object(s) to add.\n\t * @return {easeljs.DisplayObject} The child that was added, or the last child if multiple children were added.\n\t */\n\taddChild (...children) {\n\t\tconst l = children.length;\n\t\tif (l === 0) { return null; }\n\t\tlet child = children[0];\n\t\tif (l > 1) {\n\t\t\tfor (let i = 0; i < l; i++) { child = this.addChild(children[i]); }\n\t\t\treturn child;\n\t\t}\n    // Note: a lot of duplication with addChildAt, but push is WAY faster than splice.\n    let parent = child.parent, silent = parent === this;\n    parent && parent._removeChildAt(parent.children.indexOf(child), silent);\n\t\tchild.parent = this;\n\t\tthis.children.push(child);\n    if (!silent) { child.dispatchEvent(\"added\"); }\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\n\t * setting its parent to this container.\n\t *\n\t * @example\n\t * container.addChildAt(child1, index);\n\t * // You can also add multiple children, such as:\n\t * container.addChildAt(child1, child2, ..., index);\n\t * // The index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list, you could use:\n\t * container.addChildAt(myShape, container.getChildIndex(otherShape));\n\t * // This would also bump otherShape's index up by one. Fails silently if the index is out of range.\n\t *\n\t * @param {...easeljs.DisplayObject} children The display object(s) to add.\n\t * @param {Number} index The index to add the child at.\n\t * @return {easeljs.DisplayObject} Returns the last child that was added, or the last child if multiple children were added.\n\t */\n\taddChildAt (...children) {\n\t\tconst l = children.length;\n    if (l === 0) { return null; }\n    let index = children.pop();\n\t\tif (index < 0 || index > this.children.length) { return children[l - 2]; }\n\t\tif (l > 2) {\n\t\t\tfor (let i = 0; i < l - 1; i++) { this.addChildAt(children[i], index++); }\n\t\t\treturn children[l - 2];\n\t\t}\n\t\tlet child = children[0];\n    let parent = child.parent, silent = parent === this;\n    parent && parent._removeChildAt(parent.children.indexOf(child), silent);\n\t\tchild.parent = this;\n\t\tthis.children.splice(index++, 0, child);\n    if (!silent) { child.dispatchEvent(\"added\"); }\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes the specified child from the display list. Note that it is faster to use removeChildAt() if the index is\n\t * already known.\n\t *\n\t * @example\n\t * container.removeChild(child);\n\t * // You can also remove multiple children:\n\t * container.removeChild(child1, child2, ...);\n\t *\n\t * @param {...easeljs.DisplayObject} children The display object(s) to remove.\n\t * @return {Boolean} true if the child (or children) was removed, or false if it was not in the display list.\n\t */\n\tremoveChild (...children) {\n\t\tconst l = children.length;\n    if (l === 0) { return true; }\n\t\tif (l > 1) {\n\t\t\tlet good = true;\n\t\t\tfor (let i = 0; i < l; i++) { good = good && this.removeChild(children[i]); }\n\t\t\treturn good;\n\t\t}\n\t\treturn this._removeChildAt(this.children.indexOf(children[0]));\n\t}\n\n\t/**\n\t * Removes the child at the specified index from the display list, and sets its parent to null.\n\t *\n\t * @example\n\t * container.removeChildAt(2);\n\t * // You can also remove multiple children:\n\t * container.removeChildAt(2, 7, ...)\n\t *\n\t * @param {...Number} indexes The indexes of children to remove.\n\t * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n\t */\n\tremoveChildAt (...indexes) {\n\t\tconst l = indexes.length;\n    if (l === 0) { return true; }\n\t\tif (l > 1) {\n\t\t\tindexes.sort((a, b) => b - a);\n\t\t\tlet good = true;\n\t\t\tfor (let i = 0; i < l; i++) { good = good && this._removeChildAt(indexes[i]); }\n\t\t\treturn good;\n\t\t}\n\t\treturn this._removeChildAt(indexes[0]);\n\t}\n\n\t/**\n\t * Removes all children from the display list.\n\t */\n\tremoveAllChildren () {\n\t\tlet kids = this.children;\n\t\twhile (kids.length) { this._removeChildAt(0); }\n\t}\n\n\t/**\n\t * Returns the child at the specified index.\n\t * @param {Number} index The index of the child to return.\n\t * @return {easeljs.DisplayObject} The child at the specified index. Returns null if there is no child at the index.\n\t */\n\tgetChildAt (index) {\n\t\treturn this.children[index];\n\t}\n\n\t/**\n\t * Returns the child with the specified name.\n\t * @param {String} name The name of the child to return.\n\t * @return {easeljs.DisplayObject} The child with the specified name.\n\t */\n\tgetChildByName (name) {\n\t\tlet kids = this.children;\n\t\tconst l = kids.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tif (kids[i].name === name) { return kids[i]; }\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Performs an array sort operation on the child list.\n\t *\n\t * @example\n\t * // Display children with a higher y in front.\n\t * container.sortChildren((obj1, obj2, options) => {\n\t * \t if (obj1.y > obj2.y) { return 1; }\n\t *   if (obj1.y < obj2.y) { return -1; }\n\t *   return 0;\n\t * });\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort}\n\t * @param {Function} sortFunction the function to use to sort the child list.\n\t */\n\tsortChildren (sortFunction) {\n\t\tthis.children.sort(sortFunction);\n\t}\n\n\t/**\n\t * Returns the index of the specified child in the display list, or -1 if it is not in the display list.\n\t * @param {easeljs.DisplayObject} child The child to return the index of.\n\t * @return {Number} The index of the specified child. -1 if the child is not found.\n\t */\n\tgetChildIndex (child) {\n\t\treturn this.children.indexOf(child);\n\t}\n\n\t/**\n\t * Swaps the children at the specified indexes. Fails silently if either index is out of range.\n\t * @param {Number} index1\n\t * @param {Number} index2\n\t */\n\tswapChildrenAt (index1, index2) {\n\t\tlet kids = this.children;\n\t\tlet o1 = kids[index1];\n\t\tlet o2 = kids[index2];\n\t\tif (!o1 || !o2) { return; }\n\t\tkids[index1] = o2;\n\t\tkids[index2] = o1;\n\t};\n\n\t/**\n\t * Swaps the specified children's depth in the display list. Fails silently if either child is not a child of this\n\t * Container.\n\t * @param {easeljs.DisplayObject} child1\n\t * @param {easeljs.DisplayObject} child2\n\t */\n\tswapChildren (child1, child2) {\n\t\tlet kids = this.children;\n\t\tconst l = kids.length;\n\t\tlet index1,index2;\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tif (kids[i] === child1) { index1 = i; }\n\t\t\tif (kids[i] === child2) { index2 = i; }\n\t\t\tif (index1 != null && index2 != null) { break; }\n\t\t}\n\t\tif (i === l) { return; } // TODO: throw error?\n\t\tkids[index1] = child2;\n\t\tkids[index2] = child1;\n\t}\n\n\t/**\n\t * Changes the depth of the specified child. Fails silently if the child is not a child of this container, or the index is out of range.\n\t * @param {easeljs.DisplayObject} child\n\t * @param {Number} index\n\t */\n\tsetChildIndex (child, index) {\n\t\tlet kids = this.children;\n\t\tconst l = kids.length;\n\t\tif (child.parent != this || index < 0 || index >= l) { return; }\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tif (kids[i] === child) { break; }\n\t\t}\n\t\tif (i === l || i === index) { return; }\n\t\tkids.splice(i, 1);\n\t\tkids.splice(index, 0, child);\n\t}\n\n\t/**\n\t * Returns true if the specified display object either is this container or is a descendent (child, grandchild, etc)\n\t * of this container.\n\t * @param {easeljs.DisplayObject} child The DisplayObject to be checked.\n\t * @return {Boolean} true if the specified display object either is this container or is a descendent.\n\t */\n\tcontains (child) {\n\t\twhile (child) {\n\t\t\tif (child === this) { return true; }\n\t\t\tchild = child.parent;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests whether the display object intersects the specified local point (ie. draws a pixel with alpha > 0 at the\n\t * specified position). This ignores the alpha, shadow and compositeOperation of the display object, and all\n\t * transform properties including regX/Y.\n\t * @param {Number} x The x position to check in the display object's local coordinates.\n\t * @param {Number} y The y position to check in the display object's local coordinates.\n\t * @return {Boolean} A Boolean indicating whether there is a visible section of a DisplayObject that overlaps the specified\n\t * coordinates.\n\t */\n\thitTest (x, y) {\n\t\t// TODO: optimize to use the fast cache check where possible.\n\t\treturn this.getObjectUnderPoint(x, y) != null;\n\t}\n\n\t/**\n\t * Returns an array of all display objects under the specified coordinates that are in this container's display\n\t * list. This routine ignores any display objects with {@link easeljs.DisplayObject#mouseEnabled} set to `false`.\n\t * The array will be sorted in order of visual depth, with the top-most display object at index 0.\n\t * This uses shape based hit detection, and can be an expensive operation to run, so it is best to use it carefully.\n\t * For example, if testing for objects under the mouse, test on tick (instead of on {@link easeljs.DisplayObject#event:mousemove}),\n\t * and only if the mouse's position has changed.\n\t *\n\t * <ul>\n\t *   <li>By default (mode=0) this method evaluates all display objects.</li>\n\t *   <li>By setting the `mode` parameter to `1`, the {@link easeljs.DisplayObject#mouseEnabled}\n\t *       and {@link easeljs.DisplayObject#mouseChildren} properties will be respected.</li>\n\t *   <li>Setting the `mode` to `2` additionally excludes display objects that do not have active mouse event\n\t *       listeners or a {@link easeljs.DisplayObject#cursor} property. That is, only objects\n\t *       that would normally intercept mouse interaction will be included. This can significantly improve performance\n\t *       in some cases by reducing the number of display objects that need to be tested.</li>\n\t * </ul>\n\t *\n\t * This method accounts for both {@link easeljs.DisplayObject#hitArea} and {@link easeljs.DisplayObject#mask}.\n\t *\n\t * @param {Number} x The x position in the container to test.\n\t * @param {Number} y The y position in the container to test.\n\t * @param {Number} [mode=0] The mode to use to determine which display objects to include. 0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n\t * @return {Array<easeljs.DisplayObject>} An array of DisplayObjects under the specified coordinates.\n\t */\n\tgetObjectsUnderPoint (x, y, mode = 0) {\n\t\tlet arr = [];\n\t\tlet pt = this.localToGlobal(x, y);\n\t\tthis._getObjectsUnderPoint(pt.x, pt.y, arr, mode > 0, mode === 1);\n\t\treturn arr;\n\t}\n\n\t/**\n\t * Similar to {@link easeljs.Container#getObjectsUnderPoint}, but returns only the top-most display\n\t * object. This runs significantly faster than `getObjectsUnderPoint()`, but is still potentially an expensive\n\t * operation.\n\t *\n\t * @param {Number} x The x position in the container to test.\n\t * @param {Number} y The y position in the container to test.\n\t * @param {Number} [mode=0] The mode to use to determine which display objects to include.  0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n\t * @return {easeljs.DisplayObject} The top-most display object under the specified coordinates.\n\t */\n\tgetObjectUnderPoint (x, y, mode = 0) {\n\t\tlet pt = this.localToGlobal(x, y);\n\t\treturn this._getObjectsUnderPoint(pt.x, pt.y, null, mode > 0, mode === 1);\n\t}\n\n\tgetBounds () {\n\t\treturn this._getBounds(null, true);\n\t}\n\n\tgetTransformedBounds () {\n\t\treturn this._getBounds();\n\t}\n\n\t/**\n\t * Returns a clone of this Container. Some properties that are specific to this instance's current context are\n\t * reverted to their defaults (for example `.parent`).\n\t * @param {Boolean} [recursive=false] If true, all of the descendants of this container will be cloned recursively. If false, the\n\t * properties of the container will be cloned, but the new instance will not have any children.\n\t * @return {easeljs.Container} A clone of the current Container instance.\n\t */\n\tclone (recursive = false) {\n\t\tlet o = this._cloneProps(new Container());\n\t\tif (recursive) { this._cloneChildren(o); }\n\t\treturn o;\n\t}\n\n\t_tick (evtObj) {\n\t\tif (this.tickChildren) {\n\t\t\tfor (let i = this.children.length - 1; i >= 0; i--) {\n\t\t\t\tlet child = this.children[i];\n\t\t\t\tif (child.tickEnabled && child._tick) { child._tick(evtObj); }\n\t\t\t}\n\t\t}\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * Recursively clones all children of this container, and adds them to the target container.\n\t * @protected\n\t * @param {easeljs.Container} o The target container.\n\t */\n\t_cloneChildren (o) {\n\t\tif (o.children.length) { o.removeAllChildren(); }\n\t\tlet arr = o.children;\n\t\tconst l = this.children.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tlet clone = this.children[i].clone(true);\n\t\t\tclone.parent = o;\n\t\t\tarr.push(clone);\n\t\t}\n\t}\n\n  /**\n   * Removes the child at the specified index from the display list, and sets its parent to null.\n   * Used by `removeChildAt`, `addChild`, and `addChildAt`.\n   *\n   * @protected\n   * @param {Number} index The index of the child to remove.\n   * @param {Boolean} [silent=false] Prevents dispatch of `removed` event if true.\n   * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n   */\n  _removeChildAt (index, silent = false) {\n\t\tif (index < 0 || index > this.children.length - 1) { return false; }\n\t\tlet child = this.children[index];\n\t\tif (child) { child.parent = null; }\n\t\tthis.children.splice(index, 1);\n\t\tif (!silent) { child.dispatchEvent(\"removed\"); }\n\t\treturn true;\n  }\n\n\t/**\n\t * @protected\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Array} arr\n\t * @param {Boolean} mouse If true, it will respect mouse interaction properties like mouseEnabled, mouseChildren, and active listeners.\n\t * @param {Boolean} activeListener If true, there is an active mouse event listener on a parent object.\n\t * @param {Number} [currentDepth=0] Indicates the current depth of the search.\n\t * @return {easeljs.DisplayObject}\n\t */\n\t_getObjectsUnderPoint (x, y, arr, mouse, activeListener, currentDepth = 0) {\n\t\tif (!currentDepth && !this._testMask(this, x, y)) { return null; }\n\t\tlet mtx, ctx = DisplayObject._hitTestContext;\n\t\tactiveListener = activeListener || (mouse && this._hasMouseEventListener());\n\n\t\t// draw children one at a time, and check if we get a hit:\n\t\tlet children = this.children;\n\t\tconst l = children.length;\n\t\tfor (let i = l - 1; i >= 0; i--) {\n\t\t\tlet child = children[i];\n\t\t\tlet hitArea = child.hitArea;\n\t\t\tif (!child.visible || (!hitArea && !child.isVisible()) || (mouse && !child.mouseEnabled)) { continue; }\n\t\t\tif (!hitArea && !this._testMask(child, x, y)) { continue; }\n\n\t\t\t// if a child container has a hitArea then we only need to check its hitArea, so we can treat it as a normal DO:\n\t\t\tif (!hitArea && child instanceof Container) {\n\t\t\t\tlet result = child._getObjectsUnderPoint(x, y, arr, mouse, activeListener, currentDepth + 1);\n\t\t\t\tif (!arr && result) { return (mouse && !this.mouseChildren) ? this : result; }\n\t\t\t} else {\n\t\t\t\tif (mouse && !activeListener && !child._hasMouseEventListener()) { continue; }\n\n\t\t\t\t// TODO: can we pass displayProps forward, to avoid having to calculate this backwards every time? It's kind of a mixed bag. When we're only hunting for DOs with event listeners, it may not make sense.\n\t\t\t\tlet props = child.getConcatenatedDisplayProps(child._props);\n\t\t\t\tmtx = props.matrix;\n\n\t\t\t\tif (hitArea) {\n\t\t\t\t\tmtx.appendMatrix(hitArea.getMatrix(hitArea._props.matrix));\n\t\t\t\t\tprops.alpha = hitArea.alpha;\n\t\t\t\t}\n\n\t\t\t\tctx.globalAlpha = props.alpha;\n\t\t\t\tctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx-x, mtx.ty-y);\n\t\t\t\t(hitArea || child).draw(ctx);\n\t\t\t\tif (!this._testHit(ctx)) { continue; }\n\t\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\t\tctx.clearRect(0, 0, 2, 2);\n\t\t\t\tif (arr) { arr.push(child); }\n\t\t\t\telse { return (mouse && !this.mouseChildren) ? this : child; }\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @protected\n\t * @param {easeljs.DisplayObject} target\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Boolean} Indicates whether the x/y is within the masked region.\n\t */\n\t_testMask (target, x, y) {\n\t\tlet mask = target.mask;\n\t\tif (!mask || !mask.graphics || mask.graphics.isEmpty()) { return true; }\n\n\t\tlet mtx = this._props.matrix, parent = target.parent;\n\t\tmtx = parent ? parent.getConcatenatedMatrix(mtx) : mtx.identity();\n\t\tmtx = mask.getMatrix(mask._props.matrix).prependMatrix(mtx);\n\n\t\tlet ctx = DisplayObject._hitTestContext;\n\t\tctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx-x, mtx.ty-y);\n\n\t\t// draw the mask as a solid fill:\n\t\tmask.graphics.drawAsPath(ctx);\n\t\tctx.fillStyle = \"#000\";\n\t\tctx.fill();\n\n\t\tif (!this._testHit(ctx)) { return false; }\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, 2, 2);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @protected\n\t * @param {easeljs.Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n\t * @return {easeljs.Rectangle}\n\t */\n\t_getBounds (matrix, ignoreTransform) {\n\t\tlet bounds = super.getBounds();\n\t\tif (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\n\n\t\tlet mtx = this._props.matrix;\n\t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\t\tif (matrix) { mtx.prependMatrix(matrix); }\n\n\t\tconst l = this.children.length;\n\t\tlet rect = null;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tlet child = this.children[i];\n\t\t\tif (!child.visible || !(bounds = child._getBounds(mtx))) { continue; }\n\t\t\tif (rect) { rect.extend(bounds.x, bounds.y, bounds.width, bounds.height); }\n\t\t\telse { rect = bounds.clone(); }\n\t\t}\n\t\treturn rect;\n\t}\n\n}\n\n/**\n * @license MouseEvent\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Passed as the parameter to all mouse/pointer/touch related events. For a listing of mouse events and their properties,\n * see the {@link easeljs.DisplayObject} and {@link easeljs.Stage} event listings.\n * @memberof easeljs\n * @extends core.Event\n * @param {String} type The event type.\n * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n * @param {Number} stageX The normalized x position relative to the stage.\n * @param {Number} stageY The normalized y position relative to the stage.\n * @param {easeljs.MouseEvent} nativeEvent The native DOM event related to this mouse event.\n * @param {Number} pointerID The unique id for the pointer.\n * @param {Boolean} primary Indicates whether this is the primary pointer in a multitouch environment.\n * @param {Number} rawX The raw x position relative to the stage.\n * @param {Number} rawY The raw y position relative to the stage.\n * @param {easeljs.DisplayObject} relatedTarget The secondary target for the event.\n */\nclass MouseEvent extends Event {\n\n\tconstructor (type, bubbles, cancelable, stageX, stageY, nativeEvent, pointerID, primary, rawX, rawY, relatedTarget) {\n\t\tsuper(type, bubbles, cancelable);\n\n// public properties:\n\t\t/**\n\t\t * The normalized x position on the stage. This will always be within the range 0 to stage width.\n\t\t * @type {Number}\n\t\t*/\n\t\tthis.stageX = stageX;\n\n\t\t/**\n\t\t * The normalized y position on the stage. This will always be within the range 0 to stage height.\n\t\t * @type {Number}\n\t\t */\n\t\tthis.stageY = stageY;\n\n\t\t/**\n\t\t * The raw x position relative to the stage. Normally this will be the same as the stageX value, unless\n\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t * @type {Number}\n\t\t*/\n\t\tthis.rawX = (rawX==null)?stageX:rawX;\n\n\t\t/**\n\t\t * The raw y position relative to the stage. Normally this will be the same as the stageY value, unless\n\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t * @type {Number}\n\t\t*/\n\t\tthis.rawY = (rawY==null)?stageY:rawY;\n\n\t\t/**\n\t\t * The native MouseEvent generated by the browser. The properties and API for this\n\t\t * event may differ between browsers. This property will be null if the\n\t\t * EaselJS property was not directly generated from a native MouseEvent.\n\t\t * @type {HTMLMouseEvent}\n\t\t */\n\t\tthis.nativeEvent = nativeEvent;\n\n\t\t/**\n\t\t * The unique id for the pointer (touch point or cursor). This will be either -1 for the mouse, or the system\n\t\t * supplied id value.\n\t\t * @type {Number}\n\t\t */\n\t\tthis.pointerID = pointerID;\n\n\t\t/**\n\t\t * Indicates whether this is the primary pointer in a multitouch environment. This will always be true for the mouse.\n\t\t * For touch pointers, the first pointer in the current stack will be considered the primary pointer.\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.primary = !!primary;\n\n\t\t/**\n\t\t * The secondary target for the event, if applicable. This is used for mouseout/rollout\n\t\t * events to indicate the object that the mouse entered from, mouseover/rollover for the object the mouse exited,\n\t\t * and stagemousedown/stagemouseup events for the object that was the under the cursor, if any.\n\t\t *\n\t\t * Only valid interaction targets will be returned (ie. objects with mouse listeners or a cursor set).\n\t\t * @type {easeljs.DisplayObject}\n\t\t */\n\t\tthis.relatedTarget = relatedTarget;\n\t}\n\n\t/**\n\t * Returns the x position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget localX () {\n\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).x;\n\t}\n\n\t/**\n\t * Returns the y position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget localY () {\n\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).y;\n\t}\n\n\t/**\n\t * Indicates whether the event was generated by a touch input (versus a mouse input).\n\t * @type {Boolean}\n\t * @readonly\n\t */\n\tget isTouch () {\n\t\treturn this.pointerID !== -1;\n\t}\n\n\t/**\n\t * Returns a clone of the MouseEvent instance.\n\t * @return {easeljs.MouseEvent} a clone of the MouseEvent instance.\n\t */\n\tclone () {\n\t\treturn new MouseEvent(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY);\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (type=${this.type} stageX=${this.stageX} stageY=${this.stageY})]`;\n\t}\n\n}\n\n/**\n * @license Stage\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * A stage is the root level {@link easeljs.Container} for a display list. Each time its {@link easeljs.Stage#tick}\n * method is called, it will render its display list to its target canvas.\n *\n * @memberof easeljs\n * @extends easeljs.Container\n * @example\n * let stage = new Stage(\"canvasElementId\");\n * let image = new Bitmap(\"imagePath.png\");\n * stage.addChild(image);\n * Ticker.addEventListener(\"tick\", event => {\n *   image.x += 10;\n * \t stage.update();\n * });\n *\n * @param {HTMLCanvasElement | String | Object} canvas A canvas object that the Stage will render to, or the string id\n * of a canvas object in the current document.\n */\nclass Stage extends Container {\n\n\tconstructor (canvas) {\n\t\tsuper();\n\n\t\t/**\n\t\t * Indicates whether the stage should automatically clear the canvas before each render. You can set this to `false`\n\t\t * to manually control clearing (for generative art, or when pointing multiple stages at the same canvas for\n\t\t * example).\n\t\t *\n\t\t * @example\n\t\t * let stage = new Stage(\"canvasId\");\n\t\t * stage.autoClear = false;\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.autoClear = true;\n\n\t\t/**\n\t\t * The canvas the stage will render to. Multiple stages can share a single canvas, but you must disable autoClear for all but the\n\t\t * first stage that will be ticked (or they will clear each other's render).\n\t\t *\n\t\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t\t * new canvas or mouse events will not work as expected.\n\t\t *\n\t\t * @example\n\t\t * stage.enableDOMEvents(false);\n\t\t * stage.canvas = anotherCanvas;\n\t\t * stage.enableDOMEvents(true);\n\t\t *\n\t\t * @type {HTMLCanvasElement | Object}\n\t\t */\n\t\tthis.canvas = (typeof canvas === \"string\") ? document.getElementById(canvas) : canvas;\n\n\t\t/**\n\t\t * The current mouse X position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.mouseX = 0;\n\n\t\t/**\n\t\t * The current mouse Y position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.mouseY = 0;\n\n\t\t/**\n\t\t * Specifies the area of the stage to affect when calling update. This can be use to selectively\n\t\t * re-draw specific regions of the canvas. If null, the whole canvas area is drawn.\n\t\t * @type {easeljs.Rectangle}\n\t\t */\n\t\tthis.drawRect = null;\n\n\t\t/**\n\t\t * Indicates whether display objects should be rendered on whole pixels. You can set the {@link easeljs.DisplayObject.snapToPixelEnabled}\n\t\t * property of display objects to false to enable/disable this behaviour on a per instance basis.\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.snapToPixelEnabled = false;\n\n\t\t/**\n\t\t * Indicates whether the mouse is currently within the bounds of the canvas.\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.mouseInBounds = false;\n\n\t\t/**\n\t\t * If true, tick callbacks will be called on all display objects on the stage prior to rendering to the canvas.\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.tickOnUpdate = true;\n\n\t\t/**\n\t\t * If true, mouse move events will continue to be called when the mouse leaves the target canvas.\n\t\t * See {@link easeljs.Stage#mouseInBounds}, and {@link easeljs.MouseEvent} x/y/rawX/rawY.\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.mouseMoveOutside = false;\n\n\n\t\t/**\n\t\t * Prevents selection of other elements in the html page if the user clicks and drags, or double clicks on the canvas.\n\t\t * This works by calling `preventDefault()` on any mousedown events (or touch equivalent) originating on the canvas.\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.preventSelection = true;\n\n\t\t/**\n\t\t * The hitArea property is not supported for Stage.\n\t\t * @property hitArea\n\t\t * @override\n\t\t * @default null\n\t\t * @private\n\t\t */\n\n\t\t/**\n\t\t * Holds objects with data for each active pointer id. Each object has the following properties:\n\t\t * x, y, event, target, overTarget, overX, overY, inBounds, posEvtObj (native event that last updated position)\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._pointerData = {};\n\n\t\t/**\n\t\t * Number of active pointers.\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\t\tthis._pointerCount = 0;\n\n\t\t/**\n\t\t * The ID of the primary pointer.\n\t\t * @type {String}\n\t\t * @private\n\t\t */\n\t\tthis._primaryPointerID = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._mouseOverIntervalID = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Stage}\n\t\t */\n\t\tthis._nextStage = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Stage}\n\t\t */\n\t\tthis._prevStage = null;\n\n\t\tthis.enableDOMEvents(true);\n\t}\n\n\t/**\n\t * Specifies a target stage that will have mouse/touch interactions relayed to it after this stage handles them.\n\t * This can be useful in cases where you have multiple layered canvases and want user interactions\n\t * events to pass through.\n\t *\n\t * MouseOver, MouseOut, RollOver, and RollOut interactions are also passed through using the mouse over settings\n\t * of the top-most stage, but are only processed if the target stage has mouse over interactions enabled.\n\t * Considerations when using roll over in relay targets:\n\t * <ol>\n\t *   <li> The top-most (first) stage must have mouse over interactions enabled (via enableMouseOver)</li>\n\t *   <li> All stages that wish to participate in mouse over interaction must enable them via enableMouseOver</li>\n\t *   <li> All relay targets will share the frequency value of the top-most stage</li>\n\t * </ol>\n\t *\n\t * @example <caption>Relay mouse events from topStage to bottomStage</caption>\n\t * topStage.nextStage = bottomStage;\n\t *\n\t * @example <caption>Disable DOM events</caption>\n\t * stage.enableDOMEvents(false);\n\t *\n\t * @type {easeljs.Stage}\n\t */\n\tget nextStage () { return this._nextStage; }\n\tset nextStage (stage) {\n\t\tif (this._nextStage) { this._nextStage._prevStage = null; }\n\t\tif (stage) { stage._prevStage = this; }\n\t\tthis._nextStage = stage;\n\t}\n\n// public methods:\n\t/**\n\t * Each time the update method is called, the stage will call {@link easeljs.Stage#tick}\n\t * unless {@link easeljs.Stage#tickOnupdate} is set to false,\n\t * and then render the display list to the canvas.\n\t *\n\t * @param {Object} [props] Props object to pass to `tick()`. Should usually be a {@link core.Ticker} event object, or similar object with a delta property.\n\t */\n\tupdate (props) {\n\t\tif (!this.canvas) { return; }\n\t\tif (this.tickOnUpdate) { this.tick(props); }\n\t\tif (this.dispatchEvent(\"drawstart\", false, true) === false) { return; }\n\t\tDisplayObject._snapToPixelEnabled = this.snapToPixelEnabled;\n\t\tlet r = this.drawRect, ctx = this.canvas.getContext(\"2d\");\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tif (this.autoClear) {\n\t\t\tif (r) { ctx.clearRect(r.x, r.y, r.width, r.height); }\n\t\t\telse { ctx.clearRect(0, 0, this.canvas.width+1, this.canvas.height+1); }\n\t\t}\n\t\tctx.save();\n\t\tif (this.drawRect) {\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(r.x, r.y, r.width, r.height);\n\t\t\tctx.clip();\n\t\t}\n\t\tthis.updateContext(ctx);\n\t\tthis.draw(ctx, false);\n\t\tctx.restore();\n\t\tthis.dispatchEvent(\"drawend\");\n\t}\n\n\t/**\n\t * Propagates a tick event through the display list. This is automatically called by {@link easeljs.Stage#update}\n\t * unless {@link easeljs.Stage#tickOnUpdate} is set to false.\n\t *\n\t * If a props object is passed to `tick()`, then all of its properties will be copied to the event object that is\n\t * propagated to listeners.\n\t *\n\t * Some time-based features in EaselJS (for example {@link easeljs.Sprite#framerate} require that\n\t * a {@link core.Ticker#event:tick} event object (or equivalent object with a delta property) be\n\t * passed as the `props` parameter to `tick()`.\n\t *\n\t * @example\n\t * Ticker.on(\"tick\", (evt) => {\n\t *   // clone the event object from Ticker, and add some custom data to it:\n\t * \t let data = evt.clone().set({ greeting: \"hello\", name: \"world\" });\n\t * \t // pass it to stage.update():\n\t * \t stage.update(data); // subsequently calls tick() with the same param\n\t * });\n\t *\n\t * shape.on(\"tick\", (evt) => {\n\t *   console.log(evt.delta); // the delta property from the Ticker tick event object\n\t * \t console.log(evt.greeting, evt.name); // custom data: \"hello world\"\n\t * });\n\t *\n\t * @emits easeljs.Stage#event:tickstart\n\t * @emits easeljs.Stage#event:tickend\n\t * @param {Object} [props] An object with properties that should be copied to the event object. Should usually be a Ticker event object, or similar object with a delta property.\n\t */\n\ttick (props) {\n\t\tif (!this.tickEnabled || this.dispatchEvent(\"tickstart\", false, true) === false) { return; }\n\t\tlet evtObj = new Event(\"tick\");\n\t\tif (props) {\n\t\t\tfor (let n in props) {\n\t\t\t\tif (props.hasOwnProperty(n)) { evtObj[n] = props[n]; }\n\t\t\t}\n\t\t}\n\t\tthis._tick(evtObj);\n\t\tthis.dispatchEvent(\"tickend\");\n\t}\n\n\t/**\n\t * Default event handler that calls the Stage {@link easeljs.Stage#update} method when a {@link easeljs.DisplayObject#event:tick}\n\t * event is received. This allows you to register a Stage instance as a event listener on {@link core.Ticker} directly.\n\t * Note that if you subscribe to ticks using this pattern, then the tick event object will be passed through to\n\t * display object tick handlers, instead of `delta` and `paused` parameters.\n\t */\n\thandleEvent (evt) {\n\t\tif (evt.type === \"tick\") { this.update(evt); }\n\t}\n\n\t/**\n\t * Clears the target canvas. Useful if {@link easeljs.State#autoClear} is set to `false`.\n\t */\n\tclear () {\n\t\tif (!this.canvas) { return; }\n\t\tlet ctx = this.canvas.getContext(\"2d\");\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, this.canvas.width+1, this.canvas.height+1);\n\t}\n\n\t/**\n\t * Returns a data url that contains a Base64-encoded image of the contents of the stage. The returned data url can\n\t * be specified as the src value of an image element.\n\t *\n\t * @param {String} [backgroundColor] The background color to be used for the generated image. Any valid CSS color\n\t * value is allowed. The default value is a transparent background.\n\t * @param {String} [mimeType=\"image/png\"] The MIME type of the image format to be create. If an unknown MIME type\n\t * is passed in, or if the browser does not support the specified MIME type, the default value will be used.\n\t * @return {String} a Base64 encoded image.\n\t */\n\ttoDataURL (backgroundColor, mimeType = \"image/png\") {\n\t\tlet data, ctx = this.canvas.getContext('2d'), w = this.canvas.width, h = this.canvas.height;\n\n\t\tif (backgroundColor) {\n\t\t\tdata = ctx.getImageData(0, 0, w, h);\n\t\t\tvar compositeOperation = ctx.globalCompositeOperation;\n\t\t\tctx.globalCompositeOperation = \"destination-over\";\n\n\t\t\tctx.fillStyle = backgroundColor;\n\t\t\tctx.fillRect(0, 0, w, h);\n\t\t}\n\n\t\tlet dataURL = this.canvas.toDataURL(mimeType);\n\n\t\tif (backgroundColor) {\n\t\t\tctx.putImageData(data, 0, 0);\n\t\t\tctx.globalCompositeOperation = compositeOperation;\n\t\t}\n\n\t\treturn dataURL;\n\t}\n\n\t/**\n\t * Enables or disables (by passing a frequency of 0) mouse over {@link easeljs.DisplayObject#event:mouseover}\n\t * and {@link easeljs.DisplayObject#event:mouseout} and roll over events {@link easeljs.DisplayObject#event:rollover}\n\t * and {@link easeljs.DisplayObject#event:rollout} for this stage's display list. These events can\n\t * be expensive to generate, so they are disabled by default. The frequency of the events can be controlled\n\t * independently of mouse move events via the optional `frequency` parameter.\n\t *\n\t * @example\n\t * const stage = new Stage(\"canvasId\");\n\t * stage.enableMouseOver(10); // 10 updates per second\n\t *\n\t * @param {Number} [frequency=20] Optional param specifying the maximum number of times per second to broadcast\n\t * mouse over/out events. Set to 0 to disable mouse over events completely. Maximum is 50. A lower frequency is less\n\t * responsive, but uses less CPU.\n\t */\n\tenableMouseOver (frequency = 20) {\n\t\tif (this._mouseOverIntervalID) {\n\t\t\tclearInterval(this._mouseOverIntervalID);\n\t\t\tthis._mouseOverIntervalID = null;\n\t\t\tif (frequency === 0) {\n\t\t\t\tthis._testMouseOver(true);\n\t\t\t}\n\t\t}\n\t\tif (frequency <= 0) { return; }\n\t\tthis._mouseOverIntervalID = setInterval(() => this._testMouseOver(), 1000/Math.min(50,frequency));\n\t}\n\n\t/**\n\t * Enables or disables the event listeners that stage adds to DOM elements (window, document and canvas). It is good\n\t * practice to disable events when disposing of a Stage instance, otherwise the stage will continue to receive\n\t * events from the page.\n\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t * new canvas or mouse events will not work as expected.\n\t *\n\t * @example\n\t * stage.enableDOMEvents(false);\n\t * stage.canvas = anotherCanvas;\n\t * stage.enableDOMEvents(true);\n\t *\n\t * @param {Boolean} [enable=true] Indicates whether to enable or disable the events.\n\t */\n\tenableDOMEvents (enable = true) {\n\t\tlet ls = this._eventListeners;\n\t\tif (!enable && ls) {\n\t\t\tfor (let n in ls) {\n\t\t\t\tlet o = ls[n];\n\t\t\t\to.t.removeEventListener(n, o.f, false);\n\t\t\t}\n\t\t\tthis._eventListeners = null;\n\t\t} else if (enable && !ls && this.canvas) {\n\t\t\tlet t = window.addEventListener ? window : document;\n\t\t\tls = this._eventListeners = {\n\t\t\t\tmouseup: {t, f:e => this._handleMouseUp(e) },\n\t\t\t\tmousemove: {t, f:e => this._handleMouseMove(e) },\n\t\t\t\tdblclick: {t:this.canvas, f:e => this._handleDoubleClick(e) },\n\t\t\t\tmousedown: {t:this.canvas, f:e => this._handleMouseDown(e) }\n\t\t\t};\n\t\t\tfor (let n in ls) {\n\t\t\t\tlet o = ls[n];\n\t\t\t\to.t.addEventListener && o.t.addEventListener(n, o.f, false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Stage instances cannot be cloned.\n\t * @throws Stage cannot be cloned\n\t * @override\n\t */\n\tclone () {\n\t\tthrow \"Stage cannot be cloned.\";\n\t}\n\n\t/**\n\t * @protected\n\t * @param {HTMLElement} e\n\t * @returns {Object}\n\t */\n\t_getElementRect (e) {\n\t\tlet bounds;\n\t\ttry { bounds = e.getBoundingClientRect(); } // this can fail on disconnected DOM elements in IE9\n\t\tcatch (err) { bounds = {top:e.offsetTop, left:e.offsetLeft, width:e.offsetWidth, height:e.offsetHeight}; }\n\n\t\tlet offX = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0);\n\t\tlet offY = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop  || document.body.clientTop  || 0);\n\n\t\tlet styles = window.getComputedStyle ? getComputedStyle(e, null) : e.currentStyle; // IE <9 compatibility.\n\t\tlet padL = parseInt(styles.paddingLeft)+parseInt(styles.borderLeftWidth);\n\t\tlet padT = parseInt(styles.paddingTop)+parseInt(styles.borderTopWidth);\n\t\tlet padR = parseInt(styles.paddingRight)+parseInt(styles.borderRightWidth);\n\t\tlet padB = parseInt(styles.paddingBottom)+parseInt(styles.borderBottomWidth);\n\n\t\t// note: in some browsers bounds properties are read only.\n\t\treturn {\n\t\t\tleft: bounds.left+offX+padL,\n\t\t\tright: bounds.right+offX-padR,\n\t\t\ttop: bounds.top+offY+padT,\n\t\t\tbottom: bounds.bottom+offY-padB\n\t\t};\n\t}\n\n\t/**\n\t * @protected\n\t * @param {Number} id\n\t * @returns {Object}\n\t */\n\t_getPointerData (id) {\n\t\tlet data = this._pointerData[id];\n\t\tif (!data) { data = this._pointerData[id] = {x:0, y:0}; }\n\t\treturn data;\n\t}\n\n\t/**\n\t * @protected\n\t * @param {easeljs.MouseEvent} [e=window.event]\n\t */\n\t_handleMouseMove (e = window.event) {\n\t\tthis._handlePointerMove(-1, e, e.pageX, e.pageY);\n\t}\n\n\t/**\n\t * @emits {@link easeljs.DisplayObject#event:mouseleave}\n\t * @emits {@link easeljs.DisplayObject#event:mouseenter}\n\t * @emits {@link easeljs.DisplayObject#event:pressmove}\n\t * @emits {@link easeljs.Stage#event:stagemousemove}\n\t * @protected\n\t * @param {Number} id\n\t * @param {easeljs.MouseEvent | Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handlePointerMove (id, e, pageX, pageY, owner) {\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\t\tif (!this.canvas) { return; }\n\t\tlet nextStage=this._nextStage, o=this._getPointerData(id);\n\n\t\tlet inBounds = o.inBounds;\n\t\tthis._updatePointerPosition(id, e, pageX, pageY);\n\t\tif (inBounds || o.inBounds || this.mouseMoveOutside) {\n\t\t\tif (id === -1 && o.inBounds === !inBounds) {\n\t\t\t\tthis._dispatchMouseEvent(this, (inBounds ? \"mouseleave\" : \"mouseenter\"), false, id, o, e);\n\t\t\t}\n\n\t\t\tthis._dispatchMouseEvent(this, \"stagemousemove\", false, id, o, e);\n\t\t\tthis._dispatchMouseEvent(o.target, \"pressmove\", true, id, o, e);\n\t\t}\n\n\t\tnextStage&&nextStage._handlePointerMove(id, e, pageX, pageY, null);\n\t}\n\n\t/**\n\t * @protected\n\t * @param {Number} id\n\t * @param {easeljs.MouseEvent | Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t */\n\t_updatePointerPosition (id, e, pageX, pageY) {\n\t\tlet rect = this._getElementRect(this.canvas);\n\t\tpageX -= rect.left;\n\t\tpageY -= rect.top;\n\n\t\tlet w = this.canvas.width;\n\t\tlet h = this.canvas.height;\n\t\tpageX /= (rect.right-rect.left)/w;\n\t\tpageY /= (rect.bottom-rect.top)/h;\n\t\tlet o = this._getPointerData(id);\n\t\tif (o.inBounds = (pageX >= 0 && pageY >= 0 && pageX <= w-1 && pageY <= h-1)) {\n\t\t\to.x = pageX;\n\t\t\to.y = pageY;\n\t\t} else if (this.mouseMoveOutside) {\n\t\t\to.x = pageX < 0 ? 0 : (pageX > w-1 ? w-1 : pageX);\n\t\t\to.y = pageY < 0 ? 0 : (pageY > h-1 ? h-1 : pageY);\n\t\t}\n\n\t\to.posEvtObj = e;\n\t\to.rawX = pageX;\n\t\to.rawY = pageY;\n\n\t\tif (id === this._primaryPointerID || id === -1) {\n\t\t\tthis.mouseX = o.x;\n\t\t\tthis.mouseY = o.y;\n\t\t\tthis.mouseInBounds = o.inBounds;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t * @param {easeljs.MouseEvent} e\n\t */\n\t_handleMouseUp (e) {\n\t\tthis._handlePointerUp(-1, e, false);\n\t}\n\n\t/**\n\t * @emits {@link easeljs.Stage#event:stagemouseup}\n\t * @emits {@link easeljs.DisplayObject#event:click}\n\t * @emits {@link easeljs.DisplayObject#event:pressup}\n\t * @protected\n\t * @param {Number} id\n\t * @param {easeljs.MouseEvent | Event} e\n\t * @param {Boolean} clear\n\t * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handlePointerUp (id, e, clear, owner) {\n\t\tlet nextStage = this._nextStage, o = this._getPointerData(id);\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\n\t\tlet target=null, oTarget = o.target;\n\t\tif (!owner && (oTarget || nextStage)) { target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\n\t\tif (o.down) { this._dispatchMouseEvent(this, \"stagemouseup\", false, id, o, e, target); o.down = false; }\n\n\t\tif (target === oTarget) { this._dispatchMouseEvent(oTarget, \"click\", true, id, o, e); }\n\t\tthis._dispatchMouseEvent(oTarget, \"pressup\", true, id, o, e);\n\n\t\tif (clear) {\n\t\t\tif (id==this._primaryPointerID) { this._primaryPointerID = null; }\n\t\t\tdelete(this._pointerData[id]);\n\t\t} else { o.target = null; }\n\n\t\tnextStage&&nextStage._handlePointerUp(id, e, clear, owner || target && this);\n\t}\n\n\t/**\n\t * @protected\n\t * @param {easeljs.MouseEvent} e\n\t */\n\t_handleMouseDown (e) {\n\t\tthis._handlePointerDown(-1, e, e.pageX, e.pageY);\n\t}\n\n\t/**\n\t * @emits {@link easeljs.Stage#event:stagemousedown}\n\t * @emits {@link easeljs.DisplayObject#event:mousedown}\n\t * @protected\n\t * @param {Number} id\n\t * @param {easeljs.MouseEvent | Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handlePointerDown (id, e, pageX, pageY, owner) {\n\t\tif (this.preventSelection) { e.preventDefault(); }\n\t\tif (this._primaryPointerID == null || id === -1) { this._primaryPointerID = id; } // mouse always takes over.\n\n\t\tif (pageY != null) { this._updatePointerPosition(id, e, pageX, pageY); }\n\t\tlet target = null, nextStage = this._nextStage, o = this._getPointerData(id);\n\t\tif (!owner) { target = o.target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\n\t\tif (o.inBounds) { this._dispatchMouseEvent(this, \"stagemousedown\", false, id, o, e, target); o.down = true; }\n\t\tthis._dispatchMouseEvent(target, \"mousedown\", true, id, o, e);\n\n\t\tnextStage&&nextStage._handlePointerDown(id, e, pageX, pageY, owner || target && this);\n\t}\n\n\t/**\n\t * @emits {@link easeljs.DisplayObject#event:mouseout}\n\t * @emits {@link easeljs.DisplayObject#event:rollout}\n\t * @emits {@link easeljs.DisplayObject#event:rollover}\n\t * @emits {@link easeljs.DisplayObject#event:mouseover}\n\t * @param {Boolean} clear If true, clears the mouseover / rollover (ie. no target)\n\t * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t * @param {easeljs.Stage} eventTarget The stage that the cursor is actively over.\n\t * @protected\n\t */\n\t_testMouseOver (clear, owner, eventTarget) {\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\n\t\tlet nextStage = this._nextStage;\n\t\tif (!this._mouseOverIntervalID) {\n\t\t\t// not enabled for mouseover, but should still relay the event.\n\t\t\tnextStage&&nextStage._testMouseOver(clear, owner, eventTarget);\n\t\t\treturn;\n\t\t}\n\t\tlet o = this._getPointerData(-1);\n\t\t// only update if the mouse position has changed. This provides a lot of optimization, but has some trade-offs.\n\t\tif (!o || (!clear && this.mouseX === this._mouseOverX && this.mouseY === this._mouseOverY && this.mouseInBounds)) { return; }\n\n\t\tlet e = o.posEvtObj;\n\t\tlet isEventTarget = eventTarget || e&&(e.target === this.canvas);\n\t\tlet target=null, common = -1, cursor=\"\";\n\n\t\tif (!owner && (clear || this.mouseInBounds && isEventTarget)) {\n\t\t\ttarget = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, true);\n\t\t\tthis._mouseOverX = this.mouseX;\n\t\t\tthis._mouseOverY = this.mouseY;\n\t\t}\n\n\t\tlet oldList = this._mouseOverTarget||[];\n\t\tlet oldTarget = oldList[oldList.length-1];\n\t\tlet list = this._mouseOverTarget = [];\n\n\t\t// generate ancestor list and check for cursor:\n\t\tlet t = target;\n\t\twhile (t) {\n\t\t\tlist.unshift(t);\n\t\t\tif (!cursor) { cursor = t.cursor; }\n\t\t\tt = t.parent;\n\t\t}\n\t\tthis.canvas.style.cursor = cursor;\n\t\tif (!owner && eventTarget) { eventTarget.canvas.style.cursor = cursor; }\n\n\t\t// find common ancestor:\n\t\tfor (let i=0,l=list.length; i<l; i++) {\n\t\t\tif (list[i] != oldList[i]) { break; }\n\t\t\tcommon = i;\n\t\t}\n\n\t\tif (oldTarget != target) {\n\t\t\tthis._dispatchMouseEvent(oldTarget, \"mouseout\", true, -1, o, e, target);\n\t\t}\n\n\t\tfor (let i=oldList.length-1; i>common; i--) {\n\t\t\tthis._dispatchMouseEvent(oldList[i], \"rollout\", false, -1, o, e, target);\n\t\t}\n\n\t\tfor (let i=list.length-1; i>common; i--) {\n\t\t\tthis._dispatchMouseEvent(list[i], \"rollover\", false, -1, o, e, oldTarget);\n\t\t}\n\n\t\tif (oldTarget != target) {\n\t\t\tthis._dispatchMouseEvent(target, \"mouseover\", true, -1, o, e, oldTarget);\n\t\t}\n\n\t\tnextStage&&nextStage._testMouseOver(clear, owner || target && this, eventTarget || isEventTarget && this);\n\t}\n\n\t/**\n\t * @emits {@link easeljs.DisplayObject#event:dblclick}\n\t * @protected\n\t * @param {easeljs.MouseEvent} e\n\t * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t */\n\t_handleDoubleClick (e, owner) {\n\t\tlet target=null, nextStage=this._nextStage, o=this._getPointerData(-1);\n\t\tif (!owner) {\n\t\t\ttarget = this._getObjectsUnderPoint(o.x, o.y, null, true);\n\t\t\tthis._dispatchMouseEvent(target, \"dblclick\", true, -1, o, e);\n\t\t}\n\t\tnextStage&&nextStage._handleDoubleClick(e, owner || target && this);\n\t}\n\n\t/**\n\t * @protected\n\t * @param {easeljs.DisplayObject} target\n\t * @param {String} type\n\t * @param {Boolean} bubbles\n\t * @param {Number} pointerId\n\t * @param {Object} o\n\t * @param {easeljs.MouseEvent} [nativeEvent]\n\t * @param {easeljs.DisplayObject} [relatedTarget]\n\t */\n\t_dispatchMouseEvent (target, type, bubbles, pointerId, o, nativeEvent, relatedTarget) {\n\t\t// TODO: might be worth either reusing MouseEvent instances, or adding a willTrigger method to avoid GC.\n\t\tif (!target || (!bubbles && !target.hasEventListener(type))) { return; }\n\t\t/*\n\t\t// TODO: account for stage transformations?\n\t\tthis._mtx = this.getConcatenatedMatrix(this._mtx).invert();\n\t\tlet pt = this._mtx.transformPoint(o.x, o.y);\n\t\tlet evt = new MouseEvent(type, bubbles, false, pt.x, pt.y, nativeEvent, pointerId, pointerId==this._primaryPointerID || pointerId==-1, o.rawX, o.rawY);\n\t\t*/\n\t\tlet evt = new MouseEvent(type, bubbles, false, o.x, o.y, nativeEvent, pointerId, pointerId === this._primaryPointerID || pointerId === -1, o.rawX, o.rawY, relatedTarget);\n\t\ttarget.dispatchEvent(evt);\n\t}\n\n}\n\n/**\n * Dispatched when the user moves the mouse over the canvas.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.Stage#stagemousemove\n * @since 0.6.0\n */\n/**\n * Dispatched when the user presses their left mouse button on the canvas.\n * You can use {@link easeljs.Stage#mouseInBounds} to check whether the mouse is currently within the stage bounds.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.Stage#stagemousedown\n * @since 0.6.0\n */\n/**\n * Dispatched when the user the user presses somewhere on the stage, then releases the mouse button anywhere that the page can detect it (this varies slightly between browsers).\n * You can use {@link easeljs.Stage#mouseInBounds} to check whether the mouse is currently within the stage bounds.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.Stage#stagemouseup\n * @since 0.6.0\n */\n/**\n * Dispatched when the mouse moves from within the canvas area (mouseInBounds === true) to outside it (mouseInBounds === false).\n * This is currently only dispatched for mouse input (not touch).\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.Stage#mouseleave\n * @since 0.7.0\n */\n/**\n * Dispatched when the mouse moves into the canvas area (mouseInBounds === false) from outside it (mouseInBounds === true).\n * This is currently only dispatched for mouse input (not touch).\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.Stage#mouseenter\n * @since 0.7.0\n */\n/**\n * Dispatched each update immediately before the tick event is propagated through the display list.\n * You can call preventDefault on the event object to cancel propagating the tick event.\n * @event easeljs.Stage#tickstart\n * @since 0.7.0\n */\n/**\n * Dispatched each update immediately after the tick event is propagated through the display list. Does not fire if\n * tickOnUpdate is false. Precedes the \"drawstart\" event.\n * @event easeljs.Stage#tickend\n * @since 0.7.0\n */\n/**\n * Dispatched each update immediately before the canvas is cleared and the display list is drawn to it.\n * You can call preventDefault on the event object to cancel the draw.\n * @event easeljs.Stage#drawstart\n * @since 0.7.0\n */\n/**\n * Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.\n * @event easeljs.Stage#drawend\n * @since 0.7.0\n */\n\n/**\n * @license Canvas\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Global utility for creating canvases.\n * @memberof easeljs\n * @name easeljs.createCanvas\n * @param {Number} [width=1]\n * @param {Number} [height=1]\n */\nfunction createCanvas (width=1, height=1) {\n\tlet c;\n\tif (window.createjs !== undefined && window.createjs.createCanvas !== undefined) {\n\t\tc = window.createjs.createCanvas();\n\t}\n\tif (!c && HTMLCanvasElement) {\n\t\tc = document.createElement('canvas');\n\t}\n\tif (c !== undefined) {\n\t\tc.width = width;\n\t\tc.height = height;\n\t\treturn c;\n\t}\n\n\tthrow \"Canvas not supported in this environment.\";\n}\n\n/**\n * @license VideoBuffer\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2010 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * When an HTML video seeks, including when looping, there is an indeterminate period before a new frame is available.\n * This can result in the video blinking or flashing when it is drawn to a canvas. The VideoBuffer class resolves\n * this issue by drawing each frame to an off-screen canvas and preserving the prior frame during a seek.\n *\n * @example\n * let buffer = new VideoBuffer(video);\n * let bitmap = new Bitmap(buffer);\n *\n * @param {HTMLVideoElement} video The HTML video element to buffer.\n */\nclass VideoBuffer {\n\n  constructor (video) {\n\n  \t/**\n  \t * Used by Bitmap to determine when the video buffer is ready to be drawn. Not intended for general use.\n  \t * @protected\n  \t * @type {Number}\n  \t */\n  \tthis.readyState = video.readyState;\n\n  \t/**\n  \t * @protected\n  \t * @type {HTMLVideoElement}\n  \t */\n  \tthis._video = video;\n\n  \t/**\n  \t * @protected\n  \t * @type {HTMLCanvasElement}\n  \t */\n  \tthis._canvas = null;\n\n  \t/**\n  \t * @protected\n  \t * @type {Number}\n  \t * @default -1\n  \t */\n  \tthis._lastTime = -1;\n\n  \tif (this.readyState < 2) {\n      video.addEventListener(\"canplaythrough\", this._videoReady.bind(this));\n    }\n    // {once: true} isn't supported everywhere, but its a non-critical optimization here.\n  }\n\n  /**\n   * Gets an HTML canvas element showing the current video frame, or the previous frame if in a seek / loop.\n   * Primarily for use by {@link easeljs.Bitmap}.\n   */\n  getImage () {\n  \tif (this.readyState < 2) { return; }\n  \tlet canvas = this._canvas, video = this._video;\n  \tif (!canvas) {\n\t\t\tcanvas = this._canvas = createCanvas();\n  \t\tcanvas.width = video.videoWidth;\n  \t\tcanvas.height = video.videoHeight;\n  \t}\n  \tif (video.readyState >= 2 && video.currentTime !== this._lastTime) {\n  \t\tconst ctx = canvas.getContext(\"2d\");\n  \t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n  \t\tctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n  \t\tthis._lastTime = video.currentTime;\n  \t}\n  \treturn canvas;\n  }\n\n  /**\n   * @protected\n   */\n  _videoReady () {\n  \tthis.readyState = 2;\n  }\n\n}\n\n/**\n * @license Bitmap\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * A Bitmap represents an Image, Canvas, or Video in the display list. A Bitmap can be instantiated using an existing\n * HTML element, or a string.\n *\n * <strong>Notes:</strong>\n * <ol>\n *     <li>When using a video source that may loop or seek, use a {@link easeljs.VideoBuffer} object to\n *      blinking / flashing.\n *     <li>When a string path or image tag that is not yet loaded is used, the stage may need to be redrawn before it\n *      will be displayed.</li>\n *     <li>Bitmaps with an SVG source currently will not respect an alpha value other than 0 or 1. To get around this,\n *     the Bitmap can be cached.</li>\n *     <li>Bitmaps with an SVG source will taint the canvas with cross-origin data, which prevents interactivity. This\n *     happens in all browsers except recent Firefox builds.</li>\n *     <li>Images loaded cross-origin will throw cross-origin security errors when interacted with using a mouse, using\n *     methods such as `getObjectUnderPoint`, or using filters, or caching. You can get around this by setting\n *     `crossOrigin` flags on your images before passing them to EaselJS, eg: `img.crossOrigin=\"Anonymous\";`</li>\n * </ol>\n *\n * @memberof easeljs\n * @extends easeljs.DisplayObject\n * @example\n * const bitmap = new Bitmap(\"imagePath.jpg\");\n *\n * @param {CanvasImageSource | String | Object} imageOrUri The source image to display. This can be a CanvasImageSource\n * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n * If the latter, a new Image instance with the URL as its src will be used.\n */\nclass Bitmap extends DisplayObject {\n\n\tconstructor (imageOrUri) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The source image to display. This can be a CanvasImageSource\n\t\t * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n\t\t * If the latter, a new Image instance with the URL as its src will be used.\n\t\t * @property image\n\t\t * @type {CanvasImageSource | Object}\n\t\t */\n\t\tif (typeof imageOrUri === \"string\") {\n\t\t\tthis.image = document.createElement(\"img\");\n\t\t\tthis.image.src = imageOrUri;\n\t\t} else {\n\t\t\tthis.image = imageOrUri;\n\t\t}\n\n\t\t/**\n\t\t * Specifies an area of the source image to draw. If omitted, the whole image will be drawn.\n\t\t * Note that video sources must have a width / height set to work correctly with `sourceRect`.\n\t\t * @type {easeljs.Rectangle}\n\t\t * @default null\n\t\t */\n\t\tthis.sourceRect = null;\n\n\t\t/**\n\t\t * Set as compatible with WebGL.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._webGLRenderStyle = DisplayObject._StageGL_BITMAP;\n\t}\n\n\tisVisible () {\n\t\tlet image = this.image;\n\t\tlet hasContent = this.cacheCanvas || (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\tdraw (ctx, ignoreCache = false) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\t\tlet img = this.image, rect = this.sourceRect;\n\t\tif (img instanceof VideoBuffer) { img = img.getImage(); }\n\t\tif (img == null) { return true; }\n\t\tif (rect) {\n\t\t\t// some browsers choke on out of bound values, so we'll fix them:\n\t\t\tlet x1 = rect.x, y1 = rect.y, x2 = x1 + rect.width, y2 = y1 + rect.height, x = 0, y = 0, w = img.width, h = img.height;\n\t\t\tif (x1 < 0) { x -= x1; x1 = 0; }\n\t\t\tif (x2 > w) { x2 = w; }\n\t\t\tif (y1 < 0) { y -= y1; y1 = 0; }\n\t\t\tif (y2 > h) { y2 = h; }\n\t\t\tctx.drawImage(img, x1, y1, x2-x1, y2-y1, x, y, x2-x1, y2-y1);\n\t\t} else {\n\t\t\tctx.drawImage(img, 0, 0);\n\t\t}\n\t\treturn true;\n\t}\n\n\t// Note, the doc sections below document using the specified APIs (from DisplayObject) from\n\t// Bitmap. This is why they have no method implementations.\n\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the {@link easeljs.DisplayObject#cache} method.\n\t *\n\t * @alias easeljs.Bitmap#cache\n\t */\n\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the {@link easeljs.DisplayObject#cache} method.\n\t *\n\t * @alias easeljs.Bitmap#updateCache\n\t */\n\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the {@link easeljs.DisplayObject#cache} method.\n\t *\n\t * @alias easeljs.Bitmap#uncache\n\t */\n\n\tgetBounds () {\n\t\tlet rect = super.getBounds();\n\t\tif (rect) { return rect; }\n\t\tlet image = this.image, o = this.sourceRect || image;\n\t\tlet hasContent = (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n\t\treturn hasContent ? this._rectangle.setValues(0, 0, o.width, o.height) : null;\n\t}\n\n\t/**\n\t * Returns a clone of the Bitmap instance.\n\t * @param {Boolean} [node] Whether the underlying DOM element should be cloned as well.\n\t * @return {easeljs.Bitmap} A clone of the Bitmap instance.\n\t */\n\tclone (node) {\n\t\tlet img = this.image;\n\t\tif (img != null && node != null) { img = img.cloneNode(); }\n\t\tlet bmp = new Bitmap(img);\n\t\tif (this.sourceRect) { bmp.sourceRect = this.sourceRect.clone(); }\n\t\tthis._cloneProps(bmp);\n\t\treturn bmp;\n\t}\n\n}\n\n/**\n * @license Sprite\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Displays a frame or sequence of frames (ie. an animation) from a SpriteSheet instance. A sprite sheet is a series of\n * images (usually animation frames) combined into a single image. For example, an animation consisting of 8 100x100\n * images could be combined into a 400x200 sprite sheet (4 frames across by 2 high). You can display individual frames,\n * play frames as an animation, and even sequence animations together.\n *\n * @memberof easeljs\n * @extends easeljs.DisplayObject\n * @example\n * let sprite = new Sprite(spriteSheet);\n * sprite.gotoAndStop(\"frameName\");\n *\n * Until {@link easeljs.Sprite#gotoAndStop} or {@link easeljs.Sprite#gotoAndPlay} is called,\n * only the first defined frame defined in the sprite sheet will be displayed.\n *\n * @see {@link easeljs.SpriteSheet \"More information on setting up frames and animations.\"}\n * @param {SpriteSheet} spriteSheet The SpriteSheet instance to play back. This includes the source image(s), frame\n * dimensions, and frame data.\n * @param {String | Number} [frameOrAnimation] The frame number or animation to play initially.\n */\nclass Sprite extends DisplayObject {\n\n\tconstructor (spriteSheet, frameOrAnimation) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The frame index that will be drawn when draw is called. Note that with some {@link easeljs.SpriteSheet}\n\t\t * definitions, this will advance non-sequentially. This will always be an integer value.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.currentFrame = 0;\n\n\t\t/**\n\t\t * Returns the name of the currently playing animation.\n\t\t * @type {String}\n\t\t * @readonly\n\t\t */\n\t\tthis.currentAnimation = null;\n\n\t\t/**\n\t\t * Prevents the animation from advancing each tick automatically. For example, you could create a sprite\n\t\t * sheet of icons, set paused to true, and display the appropriate icon by setting `currentFrame`.\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.paused = true;\n\n\t\t/**\n\t\t * The SpriteSheet instance to play back. This includes the source image, frame dimensions, and frame data.\n\t\t * @type {easeljs.SpriteSheet}\n\t\t * @readonly\n\t\t */\n\t\tthis.spriteSheet = spriteSheet;\n\n\t\t/**\n\t\t * Specifies the current frame index within the currently playing animation. When playing normally, this will increase\n\t\t * from 0 to n-1, where n is the number of frames in the current animation.\n\t\t * This could be a non-integer value if using time-based playback, or if the animation's speed is not an integer.\n\t\t * @see {@link easeljs.Sprite#framerate}\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.currentAnimationFrame = 0;\n\n\t\t/**\n\t\t * By default Sprite instances advance one frame per tick. Specifying a framerate for the Sprite (or its related\n\t\t * SpriteSheet) will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t * framerate.\n\t\t *\n\t\t * For example, if a Sprite with a framerate of 10 is placed on a Stage being updated at 40fps, then the Sprite will\n\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t * vary slightly between frames.\n\t\t *\n\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t * passed into {@link easeljs.Stage#update}.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.framerate = 0;\n\n\t\t/**\n\t\t * Current animation object.\n\t\t * @protected\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis._animation = null;\n\n\t\t/**\n\t\t * Current frame index.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default null\n\t\t */\n\t\tthis._currentFrame = null;\n\n\t\t/**\n\t\t * Skips the next auto advance. Used by gotoAndPlay to avoid immediately jumping to the next frame\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._skipAdvance = false;\n\n\t\t/**\n\t\t * Set as compatible with WebGL.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis._webGLRenderStyle = DisplayObject._StageGL_SPRITE;\n\n\t\tif (frameOrAnimation != null) {\n\t\t\tthis.gotoAndPlay(frameOrAnimation);\n\t\t}\n\t}\n\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || this.spriteSheet.complete;\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\tdraw (ctx, ignoreCache) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\t\tthis._normalizeFrame();\n\t\tlet o = this.spriteSheet.getFrame(this._currentFrame|0);\n\t\tif (!o) { return false; }\n\t\tlet rect = o.rect;\n\t\tif (rect.width && rect.height) { ctx.drawImage(o.image, rect.x, rect.y, rect.width, rect.height, -o.regX, -o.regY, rect.width, rect.height); }\n\t\treturn true;\n\t}\n\n\t// Note, the doc sections below document using the specified APIs (from DisplayObject) from\n\t// Bitmap. This is why they have no method implementations.\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @name easeljs.Sprite#cache\n\t */\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @name easeljs.Sprite#updateCache\n\t */\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @name easeljs.Sprite#uncache\n\t */\n\n\t/**\n\t * Play (unpause) the current animation. The Sprite will be paused if either {@link easeljs.Sprite#stop}\n\t * or {@link easeljs.Sprite#gotoAndStop} is called. Single frame animations will remain unchanged.\n\t */\n\tplay () {\n\t\tthis.paused = false;\n\t}\n\n\t/**\n\t * Stop playing a running animation. The Sprite will be playing if {@link easeljs.Sprite#gotoAndPlay} is called.\n\t * Note that calling `gotoAndPlay()` or {@link easeljs.Sprite#play} will resume playback.\n\t */\n\tstop () {\n\t\tthis.paused = true;\n\t}\n\n\t/**\n\t * Sets paused to false and plays the specified animation name, named frame, or frame number.\n\t * @param {String | Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t * and begin playing.\n\t */\n\tgotoAndPlay (frameOrAnimation) {\n\t\tthis.paused = false;\n\t\tthis._skipAdvance = true;\n\t\tthis._goto(frameOrAnimation);\n\t}\n\n\t/**\n\t * Sets paused to true and seeks to the specified animation name, named frame, or frame number.\n\t * @param {String | Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t * and stop.\n\t */\n\tgotoAndStop (frameOrAnimation) {\n\t\tthis.paused = true;\n\t\tthis._goto(frameOrAnimation);\n\t}\n\n\t/**\n\t * Advances the playhead. This occurs automatically each tick by default.\n\t * @param {Number} [time] The amount of time in ms to advance by. Only applicable if framerate is set on the Sprite\n\t * or its SpriteSheet.\n\t*/\n\tadvance (time) {\n\t\tlet fps = this.framerate || this.spriteSheet.framerate;\n\t\tlet t = (fps && time != null) ? time/(1000/fps) : 1;\n\t\tthis._normalizeFrame(t);\n\t}\n\n\t/**\n\t * Returns a {@link easeljs.Rectangle} instance defining the bounds of the current frame relative to\n\t * the origin. For example, a 90 x 70 frame with `regX=50` and `regY=40` would return a\n\t * rectangle with [x=-50, y=-40, width=90, height=70]. This ignores transformations on the display object.\n\t *\n\t * @see {@link easeljs.SpriteSheet#frameBounds}\n\t * @return {easeljs.Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n\t */\n\tgetBounds () {\n\t\t// TODO: should this normalizeFrame?\n\t\treturn super.getBounds() || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle);\n\t}\n\n\t/**\n\t * Returns a clone of the Sprite instance. Note that the same SpriteSheet is shared between cloned instances.\n\t * @return {easeljs.Sprite} a clone of the Sprite instance.\n\t */\n\tclone () {\n\t\treturn this._cloneProps(new Sprite(this.spriteSheet));\n\t}\n\n\t/**\n\t * @param {easeljs.Sprite} o\n\t * @return {easeljs.Sprite} o\n\t * @protected\n\t */\n\t_cloneProps (o) {\n\t\tsuper._cloneProps(o);\n\t\to.currentFrame = this.currentFrame;\n\t\to.currentAnimation = this.currentAnimation;\n\t\to.paused = this.paused;\n\t\to.currentAnimationFrame = this.currentAnimationFrame;\n\t\to.framerate = this.framerate;\n\n\t\to._animation = this._animation;\n\t\to._currentFrame = this._currentFrame;\n\t\to._skipAdvance = this._skipAdvance;\n\t\treturn o;\n\t}\n\n\t_tick (evtObj) {\n\t\tif (!this.paused) {\n\t\t\tif (!this._skipAdvance) { this.advance(evtObj&&evtObj.delta); }\n\t\t\tthis._skipAdvance = false;\n\t\t}\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * Normalizes the current frame, advancing animations and dispatching callbacks as appropriate.\n\t * @protected\n\t * @param {Number} [frameDelta=0]\n\t */\n\t_normalizeFrame (frameDelta = 0) {\n\t\tlet animation = this._animation;\n\t\tlet paused = this.paused;\n\t\tlet frame = this._currentFrame;\n\n\t\tif (animation) {\n\t\t\tlet speed = animation.speed || 1;\n\t\t\tlet animFrame = this.currentAnimationFrame;\n\t\t\tlet l = animation.frames.length;\n\t\t\tif (animFrame + frameDelta * speed >= l) {\n\t\t\t\tlet next = animation.next;\n\t\t\t\tif (this._dispatchAnimationEnd(animation, frame, paused, next, l - 1)) {\n\t\t\t\t\t// something changed in the event stack, so we shouldn't make any more changes here.\n\t\t\t\t\treturn;\n\t\t\t\t} else if (next) {\n\t\t\t\t\t// sequence. Automatically calls _normalizeFrame again with the remaining frames.\n\t\t\t\t\treturn this._goto(next, frameDelta - (l - animFrame) / speed);\n\t\t\t\t} else {\n\t\t\t\t\t// end.\n\t\t\t\t\tthis.paused = true;\n\t\t\t\t\tanimFrame = animation.frames.length - 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanimFrame += frameDelta * speed;\n\t\t\t}\n\t\t\tthis.currentAnimationFrame = animFrame;\n\t\t\tthis._currentFrame = animation.frames[animFrame | 0];\n\t\t} else {\n\t\t\tframe = (this._currentFrame += frameDelta);\n\t\t\tlet l = this.spriteSheet.getNumFrames();\n\t\t\tif (frame >= l && l > 0) {\n\t\t\t\tif (!this._dispatchAnimationEnd(animation, frame, paused, l - 1)) {\n\t\t\t\t\t// looped.\n\t\t\t\t\tif ((this._currentFrame -= l) >= l) { return this._normalizeFrame(); }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tframe = this._currentFrame | 0;\n\t\tif (this.currentFrame != frame) {\n\t\t\tthis.currentFrame = frame;\n\t\t\tthis.dispatchEvent(\"change\");\n\t\t}\n\t};\n\n\t/**\n\t * Dispatches the \"animationend\" event. Returns true if a handler changed the animation (ex. calling {@link easlejs.Sprite#stop},\n\t * {@link easeljs.Sprite#gotoAndPlay}, etc.)\n\t * @param animation\n\t * @param frame\n\t * @param paused\n\t * @param next\n\t * @param end\n\t * @private\n\t */\n\t_dispatchAnimationEnd (animation, frame, paused, next, end) {\n\t\tlet name = animation ? animation.name : null;\n\t\tif (this.hasEventListener(\"animationend\")) {\n\t\t\tlet evt = new Event(\"animationend\");\n\t\t\tevt.name = name;\n\t\t\tevt.next = next;\n\t\t\tthis.dispatchEvent(evt);\n\t\t}\n\t\t// did the animation get changed in the event stack?:\n\t\tlet changed = (this._animation != animation || this._currentFrame != frame);\n\t\t// if the animation hasn't changed, but the sprite was paused, then we want to stick to the last frame:\n\t\tif (!changed && !paused && this.paused) { this.currentAnimationFrame = end; changed = true; }\n\t\treturn changed;\n\t}\n\n\t/**\n\t * Moves the playhead to the specified frame number or animation.\n\t * @param {String | Number} frameOrAnimation The frame number or animation that the playhead should move to.\n\t * @param {Number} [frame=0] The frame of the animation to go to. Defaults to 0.\n\t * @protected\n\t */\n\t_goto (frameOrAnimation, frame = 0) {\n\t\tthis.currentAnimationFrame = 0;\n\t\tif (isNaN(frameOrAnimation)) {\n\t\t\tlet data = this.spriteSheet.getAnimation(frameOrAnimation);\n\t\t\tif (data) {\n\t\t\t\tthis._animation = data;\n\t\t\t\tthis.currentAnimation = frameOrAnimation;\n\t\t\t\tthis._normalizeFrame(frame);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentAnimation = this._animation = null;\n\t\t\tthis._currentFrame = frameOrAnimation;\n\t\t\tthis._normalizeFrame();\n\t\t}\n\t}\n\n}\n\n/**\n * Dispatched when an animation reaches its ends.\n * @event easeljs.Sprite#animationend\n * @property {Object} target The object that dispatched the event.\n * @property {String} type The event type.\n * @property {String} name The name of the animation that just ended.\n * @property {String} next The name of the next animation that will be played, or null. This will be the same as name if the animation is looping.\n * @since 0.6.0\n */\n\n/**\n * Dispatched any time the current frame changes. For example, this could be due to automatic advancement on a tick,\n * or calling gotoAndPlay() or gotoAndStop().\n * @event easeljs.Sprite#change\n * @property {Object} target The object that dispatched the event.\n * @property {String} type The event type.\n */\n\n/**\n * @license BitmapText\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Displays text using bitmap glyphs defined in a sprite sheet. Multi-line text is supported using new line characters,\n * but automatic wrapping is not supported. See the {@link easeljs.BitmapText#spriteSheet} property for more information on defining glyphs.\n *\n * <strong>Important:</strong> While BitmapText extends Container, it is not designed to be used as one.\n * As such, methods like addChild and removeChild are disabled.\n *\n * @memberof easeljs\n * @extends easeljs.Container\n *\n * @param {String} [text=\"\"] The text to display.\n * @param {SpriteSheet} [spriteSheet=null] The spritesheet that defines the character glyphs.\n */\nclass BitmapText extends Container {\n\n\tconstructor (text = \"\", spriteSheet = null) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The text to display.\n\t\t * @type {String}\n\t\t * @default \"\"\n\t\t */\n\t\tthis.text = text;\n\n\t\t/**\n\t\t * A SpriteSheet instance that defines the glyphs for this bitmap text. Each glyph/character\n\t\t * should have a single frame animation defined in the sprite sheet named the same as\n\t\t * corresponding character.\n\t\t *\n\t\t * @example\n\t\t * // the following animation definition would indicate that the frame at index 0 of the spritesheet should be drawn for the \"A\" character.\n\t\t * \"A\": {frames: [0]}\n\t\t * // The short form is also acceptable:\n\t\t * \"A\": 0\n\t\t *\n\t\t * Note that if a character in the text is not found in the sprite sheet, it will also\n\t\t * try to use the alternate case (upper or lower).\n\t\t *\n\t\t * @see {@link easeljs.SpriteSheet}\n\t\t * @type {easeljs.SpriteSheet}\n\t\t * @default null\n\t\t */\n\t\tthis.spriteSheet = spriteSheet;\n\n\t\t/**\n\t\t * The height of each line of text. If 0, then it will use a line height calculated\n\t\t * by checking for the height of the \"1\", \"T\", or \"L\" character (in that order). If\n\t\t * those characters are not defined, it will use the height of the first frame of the\n\t\t * sprite sheet.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.lineHeight = 0;\n\n\t\t/**\n\t\t * This spacing (in pixels) will be added after each character in the output.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.letterSpacing = 0;\n\n\t\t/**\n\t\t * If a space character is not defined in the sprite sheet, then empty pixels equal to\n\t\t * spaceWidth will be inserted instead. If 0, then it will use a value calculated\n\t\t * by checking for the width of the \"1\", \"l\", \"E\", or \"A\" character (in that order). If\n\t\t * those characters are not defined, it will use the width of the first frame of the\n\t\t * sprite sheet.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.spaceWidth = 0;\n\n\t \t/**\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis._oldProps = {text:0,spriteSheet:0,lineHeight:0,letterSpacing:0,spaceWidth:0};\n\n\t\t/**\n\t\t * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n\t\t * @type {easeljs.Stage}\n\t\t * @protected\n\t\t */\n\t\tthis._oldStage = null;\n\n\t\t/**\n\t\t * The event listener proxy triggered drawing draw for special circumstances.\n\t\t * @type {Function}\n\t\t * @protected\n\t\t */\n\t\tthis._drawAction = null;\n\n\t}\n\n\tdraw (ctx, ignoreCache) {\n\t\tif (this.drawCache(ctx, ignoreCache)) { return; }\n\t\tthis._updateState();\n\t\tsuper.draw(ctx, ignoreCache);\n\t}\n\n\tgetBounds () {\n\t\tthis._updateText();\n\t\treturn super.getBounds();\n\t}\n\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || (this.spriteSheet && this.spriteSheet.complete && this.text);\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX !== 0 && this.scaleY !== 0 && hasContent);\n\t}\n\n\tclone () {\n\t\treturn this._cloneProps(new BitmapText(this.text, this.spriteSheet));\n\t}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t */\n\taddChild () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t */\n\taddChildAt () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t */\n\tremoveChild () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t */\n\tremoveChildAt () {}\n\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t */\n\tremoveAllChildren () {}\n\n\t_updateState () {\n\t\tthis._updateText();\n\t}\n\n \t/**\n\t * @param {easeljs.BitmapText} o\n\t * @return {easeljs.BitmapText}\n\t * @protected\n\t */\n\t_cloneProps (o) {\n\t\tsuper._cloneProps(o);\n\t\to.lineHeight = this.lineHeight;\n\t\to.letterSpacing = this.letterSpacing;\n\t\to.spaceWidth = this.spaceWidth;\n\t\treturn o;\n\t}\n\n\t/**\n\t * @param {String} character\n\t * @param {easeljs.SpriteSheet} spriteSheet\n\t * @return {Number}\n\t * @protected\n\t */\n\t_getFrameIndex (character, spriteSheet) {\n\t\tlet c, o = spriteSheet.getAnimation(character);\n\t\tif (!o) {\n\t\t\t(character != (c = character.toUpperCase())) || (character != (c = character.toLowerCase())) || (c = null);\n\t\t\tif (c) { o = spriteSheet.getAnimation(c); }\n\t\t}\n\t\treturn o && o.frames[0];\n\t}\n\n\t/**\n\t * @param {String} character\n\t * @param {easeljs.SpriteSheet} spriteSheet\n\t * @return {Object}\n\t * @protected\n\t */\n\t_getFrame (character, spriteSheet) {\n\t\tlet index = this._getFrameIndex(character, spriteSheet);\n\t\treturn index == null ? index : spriteSheet.getFrame(index);\n\t}\n\n\t/**\n\t * @param {easeljs.SpriteSheet} ss\n\t * @return {Number}\n\t * @protected\n\t */\n\t_getLineHeight (ss) {\n\t\tlet frame = this._getFrame(\"1\", ss) || this._getFrame(\"T\", ss) || this._getFrame(\"L\", ss) || ss.getFrame(0);\n\t\treturn frame ? frame.rect.height : 1;\n\t}\n\n\t/**\n\t * @param {easeljs.SpriteSheet} ss\n\t * @return {Number}\n\t * @protected\n\t */\n\t_getSpaceWidth (ss) {\n\t\tlet frame = this._getFrame(\"1\", ss) || this._getFrame(\"l\", ss) || this._getFrame(\"e\", ss) || this._getFrame(\"a\", ss) || ss.getFrame(0);\n\t\treturn frame ? frame.rect.width : 1;\n\t}\n\n\t_tick (evtObj) {\n\t\tlet stage = this.stage;\n\t\tstage && stage.on(\"drawstart\", this._updateText, this, true);\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\t_updateText () {\n\t\tlet x = 0, y = 0, o = this._oldProps, change = false, spaceW = this.spaceWidth, lineH = this.lineHeight, ss = this.spriteSheet;\n\t\tlet pool = BitmapText._spritePool, kids = this.children, childIndex = 0, numKids = kids.length, sprite;\n\n\t\tfor (let n in o) {\n\t\t\tif (o[n] != this[n]) {\n\t\t\t\to[n] = this[n];\n\t\t\t\tchange = true;\n\t\t\t}\n\t\t}\n\t\tif (!change) { return; }\n\n\t\tlet hasSpace = !!this._getFrame(\" \", ss);\n\t\tif (!hasSpace && !spaceW) { spaceW = this._getSpaceWidth(ss); }\n\t\tif (!lineH) { lineH = this._getLineHeight(ss); }\n\n\t\tfor (let i = 0, l = this.text.length; i < l; i++) {\n\t\t\tlet character = this.text.charAt(i);\n\t\t\tif (character === \" \" && !hasSpace) {\n\t\t\t\tx += spaceW;\n\t\t\t\tcontinue;\n\t\t\t} else if (character === \"\\n\" || character === \"\\r\") {\n\t\t\t\tif (character === \"\\r\" && this.text.charAt(i+1) === \"\\n\") { i++; } // crlf\n\t\t\t\tx = 0;\n\t\t\t\ty += lineH;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet index = this._getFrameIndex(character, ss);\n\t\t\tif (index == null) { continue; }\n\n\t\t\tif (childIndex < numKids) {\n\t\t\t\tsprite = kids[childIndex];\n\t\t\t} else {\n\t\t\t\tkids.push(sprite = pool.length ? pool.pop() : new Sprite());\n\t\t\t\tsprite.parent = this;\n\t\t\t\tnumKids++;\n\t\t\t}\n\t\t\tsprite.spriteSheet = ss;\n\t\t\tsprite.gotoAndStop(index);\n\t\t\tsprite.x = x;\n\t\t\tsprite.y = y;\n\t\t\tchildIndex++;\n\n\t\t\tx += sprite.getBounds().width + this.letterSpacing;\n\t\t}\n\n\t\twhile (numKids > childIndex) {\n\t\t\t // faster than removeChild.\n\t\t\tpool.push(sprite = kids.pop());\n\t\t\tsprite.parent = null;\n\t\t\tnumKids--;\n\t\t}\n\t\tif (pool.length > BitmapText.maxPoolSize) { pool.length = BitmapText.maxPoolSize; }\n\t}\n\n}\n\n/**\n * BitmapText uses Sprite instances to draw text. To reduce the creation and destruction of instances (and thus garbage collection), it maintains\n * an internal object pool of sprite instances to reuse. Increasing this value can cause more sprites to be\n * retained, slightly increasing memory use, but reducing instantiation.\n * @type {Number}\n * @static\n * @default 100\n */\nBitmapText.maxPoolSize = 100;\n/**\n * Sprite object pool.\n * @type {Array}\n * @static\n * @private\n * @readonly\n */\nBitmapText._spritePool = [];\n\n/**\n * @license DOMElement\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * <b>This class is still experimental, and more advanced use is likely to be buggy. Please report bugs.</b>\n *\n * A DOMElement allows you to associate a HTMLElement with the display list. It will be transformed\n * within the DOM as though it is child of the {{#crossLink \"Container\"}}{{/crossLink}} it is added to. However, it is\n * not rendered to canvas, and as such will retain whatever z-index it has relative to the canvas (ie. it will be\n * drawn in front of or behind the canvas).\n *\n * The position of a DOMElement is relative to their parent node in the DOM. It is recommended that\n * the DOM Object be added to a div that also contains the canvas so that they share the same position\n * on the page.\n *\n * DOMElement is useful for positioning HTML elements over top of canvas content, and for elements\n * that you want to display outside the bounds of the canvas. For example, a tooltip with rich HTML\n * content.\n *\n * <h4>Mouse Interaction</h4>\n *\n * DOMElement instances are not full EaselJS display objects, and do not participate in EaselJS mouse\n * events or support methods like hitTest. To get mouse events from a DOMElement, you must instead add handlers to\n * the htmlElement (note, this does not support EventDispatcher)\n *\n *      var domElement = new createjs.DOMElement(htmlElement);\n *      domElement.htmlElement.onclick = function() {\n *          console.log(\"clicked\");\n *      }\n *\n * <strong>Important:</strong> This class needs to be notified it is about to be drawn, this will happen automatically\n * if you call stage.update, calling stage.draw or disabling tickEnabled will miss important steps and it will render\n * stale information.\n *\n * @memberof easeljs\n * @extends DisplayObject\n * @param {HTMLElement | String} htmlElement A reference or id for the DOM element to manage.\n */\nclass DOMElement extends DisplayObject {\n\n\tconstructor (htmlElement) {\n\t\tsuper();\n\n\t\tif (typeof htmlElement === \"string\") { htmlElement = document.getElementById(htmlElement); }\n\t\tthis.mouseEnabled = false;\n\n\t\tlet style = htmlElement.style;\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin = style.WebkitTransformOrigin = style.msTransformOrigin = style.MozTransformOrigin = style.OTransformOrigin = \"0% 0%\";\n\n\t\t/**\n\t\t * The DOM object to manage.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.htmlElement = htmlElement;\n\n\t\t/**\n\t\t * @type {easeljs.Matrix2D}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis._oldProps = null;\n\n\t\t/**\n\t\t * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n\t\t * @type {easeljs.Stage}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis._oldStage = null;\n\t\t/**\n\t\t * The event listener proxy triggered drawing draw for special circumstances.\n\t\t * @type {Function}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis._drawAction = null;\n\t}\n\n\tisVisible () {\n\t\treturn this.htmlElement != null;\n\t}\n\n\tdraw (ctx, ignoreCache) {\n\t\t// this relies on the _tick method because draw isn't called if the parent is not visible.\n\t\t// the actual update happens in _handleDrawEnd\n\t\treturn true;\n\t}\n\n\t/**\n\t * Disabled in DOMElement.\n\t */\n\tcache () {}\n\n\t/**\n\t * Disabled in DOMElement.\n\t */\n\tuncache () {}\n\n\t/**\n\t * Disabled in DOMElement.\n\t */\n\tupdateCache () {}\n\n\t/**\n\t * Disabled in DOMElement.\n\t */\n\thitTest () {}\n\n\t/**\n\t * Disabled in DOMElement.\n\t */\n\tlocalToGlobal () {}\n\n\t/**\n\t * Disabled in DOMElement.\n\t */\n\tglobalToLocal () {}\n\n\t/**\n\t * Disabled in DOMElement.\n\t */\n\tlocalToLocal () {}\n\n\t/**\n\t * DOMElement cannot be cloned.\n\t * @throws DOMElement cannot be cloned\n\t */\n\tclone () {\n\t\tthrow \"DOMElement cannot be cloned.\";\n\t}\n\n\t_tick (evtObj) {\n\t\tlet stage = this.stage;\n\t\tif (stage != null && stage !== this._oldStage) {\n\t\t\tthis._drawAction && stage.off(\"drawend\", this._drawAction);\n\t\t\tthis._drawAction = stage.on(\"drawend\", this._handleDrawEnd, this);\n\t\t\tthis._oldStage = stage;\n\t\t}\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * @param {core.Event} evt\n\t * @protected\n\t */\n\t_handleDrawEnd (evt) {\n\t\tlet o = this.htmlElement;\n\t\tif (!o) { return; }\n\t\tlet style = o.style;\n\n\t\tlet props = this.getConcatenatedDisplayProps(this._props), mtx = props.matrix;\n\n\t\tlet visibility = props.visible ? \"visible\" : \"hidden\";\n\t\tif (visibility != style.visibility) { style.visibility = visibility; }\n\t\tif (!props.visible) { return; }\n\n\t\tlet oldProps = this._oldProps, oldMtx = oldProps&&oldProps.matrix;\n\t\tlet n = 10000; // precision\n\n\t\tif (!oldMtx || !oldMtx.equals(mtx)) {\n\t\t\tlet str = \"matrix(\" + (mtx.a*n|0)/n +\",\"+ (mtx.b*n|0)/n +\",\"+ (mtx.c*n|0)/n +\",\"+ (mtx.d*n|0)/n +\",\"+ (mtx.tx+0.5|0);\n\t\t\tstyle.transform = style.WebkitTransform = style.OTransform = style.msTransform = str +\",\"+ (mtx.ty+0.5|0) +\")\";\n\t\t\tstyle.MozTransform = str +\"px,\"+ (mtx.ty+0.5|0) +\"px)\";\n\t\t\tif (!oldProps) { oldProps = this._oldProps = new DisplayProps(true, null); }\n\t\t\toldProps.matrix.copy(mtx);\n\t\t}\n\n\t\tif (oldProps.alpha != props.alpha) {\n\t\t\tstyle.opacity = \"\"+(props.alpha*n|0)/n;\n\t\t\toldProps.alpha = props.alpha;\n\t\t}\n\t}\n\n}\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event easeljs.DOMElement#click\n */\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event easeljs.DOMElement#dblClick\n */\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event easeljs.DOMElement#mousedown\n */\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event easeljs.DOMElement#mouseover\n */\n\n/**\n * Disabled in DOMElement.\n * @event easeljs.DOMElement#tick\n */\n\n/**\n * @license Graphics\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * The Graphics class exposes an easy to use API for generating vector drawing instructions and drawing them to a\n * specified context. Note that you can use Graphics without any dependency on the EaselJS framework by calling {@link easeljs.Graphics#draw}\n * directly, or it can be used with the {@link easeljs.Shape} object to draw vector graphics within the\n * context of an EaselJS display list.\n *\n * There are two approaches to working with Graphics object: calling methods on a Graphics instance (the \"Graphics API\"), or\n * instantiating Graphics command objects and adding them to the graphics queue via {@link easeljs.Graphics#append}.\n * The former abstracts the latter, simplifying beginning and ending paths, fills, and strokes.\n *\n * <h4>Tiny API</h4>\n * The Graphics class also includes a \"tiny API\", which is one or two-letter methods that are shortcuts for all of the\n * Graphics methods. These methods are great for creating compact instructions, and is used by the Toolkit for CreateJS\n * to generate readable code. All tiny methods are marked as protected, so you can view them by enabling protected\n * descriptions in the docs.\n *\n * <table>\n *     <tr><td><b>Tiny</b></td><td><b>Method</b></td><td><b>Tiny</b></td><td><b>Method</b></td></tr>\n *     <tr><td>mt</td><td>{@link easeljs.Graphics#moveTo}</td>\n *     <td>lt</td> <td>{@link easeljs.Graphics#lineTo}</td></tr>\n *     <tr><td>a/at</td><td>{@link easeljs.Graphics#arc} / {@link easeljs.Graphics#arcTo}</td>\n *     <td>bt</td><td>{@link easeljs.Graphics#bezierCurveTo}</td></tr>\n *     <tr><td>qt</td><td>{@link easeljs.Graphics#quadraticCurveTo} (also curveTo)</td>\n *     <td>r</td><td>{@link easeljs.Graphics#rect}</td></tr>\n *     <tr><td>cp</td><td>{@link easeljs.Graphics#closePath}</td>\n *     <td>c</td><td>{@link easeljs.Graphics#clear}</td></tr>\n *     <tr><td>f</td><td>{@link easeljs.Graphics#beginFill}</td>\n *     <td>lf</td><td>{@link easeljs.Graphics#beginLinearGradientFill}</td></tr>\n *     <tr><td>rf</td><td>{@link easeljs.Graphics#beginRadialGradientFill}</td>\n *     <td>bf</td><td>{@link easeljs.Graphics#beginBitmapFill}</td></tr>\n *     <tr><td>ef</td><td>{@link easeljs.Graphics#endFill}</td>\n *     <td>ss / sd</td><td>{@link easeljs.Graphics#setStrokeStyle} / {@link easeljs.Graphics#setStrokeDash}</td></tr>\n *     <tr><td>s</td><td>{@link easeljs.Graphics#beginStroke}</td>\n *     <td>ls</td><td>{@link easeljs.Graphics#beginLinearGradientStroke}</td></tr>\n *     <tr><td>rs</td><td>{@link easeljs.Graphics#beginRadialGradientStroke}</td>\n *     <td>bs</td><td>{@link easeljs.Graphics#beginBitmapStroke}</td></tr>\n *     <tr><td>es</td><td>{@link easeljs.Graphics#endStroke}</td>\n *     <td>dr</td><td>{@link easeljs.Graphics#drawRect}</td></tr>\n *     <tr><td>rr</td><td>{@link easeljs.Graphics#drawRoundRect}</td>\n *     <td>rc</td><td>{@link easeljs.Graphics#drawRoundRectComplex}</td></tr>\n *     <tr><td>dc</td><td>{@link easeljs.Graphics#drawCircle}</td>\n *     <td>de</td><td>{@link easeljs.Graphics#drawEllipse}</td></tr>\n *     <tr><td>dp</td><td>{@link easeljs.Graphics#drawPolyStar}</td>\n *     <td>p</td><td>{@link easeljs.Graphics#decodePath}</td></tr>\n * </table>\n *\n * @example\n * var g = new createjs.Graphics();\n * g.setStrokeStyle(1);\n * g.beginStroke(\"#000000\");\n * g.beginFill(\"red\");\n * g.drawCircle(0,0,30);\n *\n * @example\n * // All drawing methods in Graphics return the Graphics instance, so they can be chained together.\n * graphics.beginStroke(\"red\").beginFill(\"blue\").drawRect(20, 20, 100, 50);\n *\n * @example\n * // Each graphics API call generates a command object (see below). The last command to be created can be accessed via .command\n * let fillCommand = graphics.beginFill(\"red\").command;\n * fillCommand.style = \"blue\";\n * // or change it to a bitmap fill:\n * fillCommand.bitmap(img);\n *\n * @example\n * // For more direct control of rendering, you can instantiate and append command objects to the graphics queue directly.\n * // In this case, you need to manage path creation manually, and ensure that fill/stroke is applied to a defined path:\n *\n * // start a new path. Graphics.beginCmd is a reusable BeginPath instance:\n * graphics.append(Graphics.beginCmd);\n * // we need to define the path before applying the fill:\n * let circle = new Graphics.Circle(0,0,30);\n * graphics.append(circle);\n * // fill the path we just defined:\n * let fill = new Graphics.Fill(\"red\");\n * graphics.append(fill);\n *\n * // These approaches can be used together, for example to insert a custom command:\n * graphics.beginFill(\"red\");\n * let customCommand = new CustomSpiralCommand(etc);\n * graphics.append(customCommand);\n * graphics.beginFill(\"blue\");\n * graphics.drawCircle(0, 0, 30);\n *\n * @example <caption>Using the Tiny API</caption>\n * graphics.s(\"red\").f(\"blue\").r(20, 20, 100, 50);\n *\n * @see {@link easeljs.Graphics#append}\n * @memberof easeljs\n */\nclass Graphics {\n\n\tconstructor () {\n\t\t/**\n\t\t * Holds a reference to the last command that was created or appended. For example, you could retain a reference\n\t\t * to a Fill command in order to dynamically update the color later by using:\n\t\t *\n\t\t * @example\n\t\t * let fill = graphics.beginFill(\"red\").command;\n\t\t * // update color later:\n\t\t * fill.style = \"yellow\";\n\t\t *\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis.command = null;\n\n\n\t// private properties\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Graphics.Stroke}\n\t\t */\n\t\tthis._stroke = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Graphics.StrokeStyle}\n\t\t */\n\t\tthis._strokeStyle = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Graphics.StrokeStyle}\n\t\t */\n\t\tthis._oldStrokeStyle = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Graphics.StrokeDash}\n\t\t */\n\t\tthis._strokeDash = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Graphics.StrokeDash}\n\t\t */\n\t\tthis._oldStrokeDash = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {easeljs.Graphics.Fill}\n\t\t */\n\t\tthis._fill = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._strokeIgnoreScale = false;\n\n\t\t/**\n\t\t * Indicates the last instruction index that was committed.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._commitIndex = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._instructions = [];\n\n\t\t/**\n\t\t * Uncommitted instructions.\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._activeInstructions = [];\n\n\t\t/**\n\t\t * This indicates that there have been changes to the activeInstruction list since the last updateInstructions call.\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._dirty = false;\n\n\t\t/**\n\t\t * Index to draw from if a store operation has happened.\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._storeIndex = 0;\n\n\t\t/**\n\t\t * Maps the familiar ActionScript `curveTo()` method to the functionally similar {@link easeljs.Graphics#quadraticCurveTo} method.\n\t\t * @param {Number} cpx\n\t\t * @param {Number} cpy\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t */\n\t\tthis.curveTo = this.quadraticCurveTo;\n\n\t\t/**\n\t\t * Maps the familiar ActionScript `drawRect()` method to the functionally similar {@link easeljs.Graphics#rect} method.\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w Width of the rectangle\n\t\t * @param {Number} h Height of the rectangle\n\t\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t */\n\t\tthis.drawRect = this.rect;\n\n\t\t// tiny api\n\t\tthis.mt = this.moveTo;\n\t\tthis.lt = this.lineTo;\n\t\tthis.at = this.arcTo;\n\t\tthis.bt = this.bezierCurveTo;\n\t\tthis.qt = this.quadraticCurveTo;\n\t\tthis.a = this.arc;\n\t\tthis.r = this.rect;\n\t\tthis.cp = this.closePath;\n\t\tthis.c = this.clear;\n\t\tthis.f = this.beginFill;\n\t\tthis.lf = this.beginLinearGradientFill;\n\t\tthis.rf = this.beginRadialGradientFill;\n\t\tthis.bf = this.beginBitmapFill;\n\t\tthis.ef = this.endFill;\n\t\tthis.ss = this.setStrokeStyle;\n\t\tthis.sd = this.setStrokeDash;\n\t\tthis.s = this.beginStroke;\n\t\tthis.ls = this.beginLinearGradientStroke;\n\t\tthis.rs = this.beginRadialGradientStroke;\n\t\tthis.bs = this.beginBitmapStroke;\n\t\tthis.es = this.endStroke;\n\t\tthis.dr = this.drawRect;\n\t\tthis.rr = this.drawRoundRect;\n\t\tthis.rc = this.drawRoundRectComplex;\n\t\tthis.dc = this.drawCircle;\n\t\tthis.de = this.drawEllipse;\n\t\tthis.dp = this.drawPolyStar;\n\t\tthis.p = this.decodePath;\n\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Returns a CSS compatible color string based on the specified RGB numeric color values in the format\n\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n\t * It also supports passing a single hex color value as the first param, and an optional alpha value as the second\n\t * param.\n\t *\n\t * @example\n\t * Graphics.getRGB(50, 100, 150, 0.5); // rgba(50,100,150,0.5)\n\t * Graphics.getRGB(0xFF00FF, 0.2); // rgba(255,0,255,0.2)\n\t *\n\t * @static\n\t * @param {Number} r The red component for the color, between 0 and 0xFF (255).\n\t * @param {Number} g The green component for the color, between 0 and 0xFF (255).\n\t * @param {Number} b The blue component for the color, between 0 and 0xFF (255).\n\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t * @return {String} A CSS compatible color string based on the specified RGB numeric color values in the format\n\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n\t */\n\tstatic getRGB (r, g, b, alpha) {\n\t\tif (r != null && b == null) {\n\t\t\talpha = g;\n\t\t\tb = r&0xFF;\n\t\t\tg = r>>8&0xFF;\n\t\t\tr = r>>16&0xFF;\n\t\t}\n\t\tif (alpha == null) {\n\t\t\treturn `rgb(${r},${g},${b})`;\n\t\t} else {\n\t\t\treturn `rgba(${r},${g},${b},${alpha})`;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a CSS compatible color string based on the specified HSL numeric color values in the format \"hsla(360,100,100,1.0)\",\n\t * or if alpha is null then in the format \"hsl(360,100,100)\".\n\t *\n\t * @example\n\t * Graphics.getHSL(150, 100, 70); // hsl(150,100,70)\n\t *\n\t * @static\n\t * @param {Number} hue The hue component for the color, between 0 and 360.\n\t * @param {Number} saturation The saturation component for the color, between 0 and 100.\n\t * @param {Number} lightness The lightness component for the color, between 0 and 100.\n\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t * @return {String} A CSS compatible color string based on the specified HSL numeric color values in the format\n\t * \"hsla(360,100,100,1.0)\", or if alpha is null then in the format \"hsl(360,100,100)\".\n\t */\n\tstatic getHSL (hue, saturation, lightness, alpha) {\n\t\tif (alpha == null) {\n\t\t\treturn `hsl(${hue % 360},${saturation}%,${lightness}%)`;\n\t\t} else {\n\t\t\treturn `hsl(${hue % 360},${saturation}%,${lightness}%,${alpha})`;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the graphics instructions array. Each entry is a graphics command object (ex. Graphics.Fill, Graphics.Rect)\n\t * Modifying the returned array directly is not recommended, and is likely to result in unexpected behaviour.\n\t *\n\t * This property is mainly intended for introspection of the instructions (ex. for graphics export).\n\t * @type {Array}\n\t * @readonly\n\t */\n\tget instructions () {\n\t\tthis._updateInstructions();\n\t\treturn this._instructions;\n\t}\n\n\t/**\n\t * Returns true if this Graphics instance has no drawing commands.\n\t * @return {Boolean} Returns true if this Graphics instance has no drawing commands.\n\t */\n\tisEmpty () {\n\t\treturn !(this._instructions.length || this._activeInstructions.length);\n\t}\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t *\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Object} data Optional data that is passed to graphics command exec methods. When called from a Shape instance, the shape passes itself as the data parameter. This can be used by custom graphic commands to insert contextual data.\n\t */\n\tdraw (ctx, data) {\n\t\tthis._updateInstructions();\n\t\tlet instr = this._instructions;\n\t\tconst l = instr.length;\n\t\tfor (let i = this._storeIndex; i < l; i++) {\n\t\t\tinstr[i].exec(ctx, data);\n\t\t}\n\t}\n\n\t/**\n\t * Draws only the path described for this Graphics instance, skipping any non-path instructions, including fill and\n\t * stroke descriptions. Used for `DisplayObject.mask` to draw the clipping path, for example.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t *\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t */\n\tdrawAsPath (ctx) {\n\t\tthis._updateInstructions();\n\t\tlet instr, instrs = this._instructions;\n\t\tconst l = instrs.length;\n\t\tfor (let i = this._storeIndex; i < l; i++) {\n\t\t\t// the first command is always a beginPath command.\n\t\t\tif ((instr = instrs[i]).path !== false) { instr.exec(ctx); }\n\t\t}\n\t}\n\n\t/**\n\t * Moves the drawing point to the specified position.\n\t * A tiny API method \"mt\" also exists.\n\t * @param {Number} x The x coordinate the drawing point should move to.\n\t * @param {Number} y The y coordinate the drawing point should move to.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls).\n\t * @chainable\n\t */\n\tmoveTo (x, y) {\n\t\treturn this.append(new MoveTo(x,y), true);\n\t}\n\n\t/**\n\t * Draws a line from the current drawing point to the specified position, which become the new current drawing\n\t * point. Note that you *must* call {@link easeljs.Graphics#moveTo} before the first `lineTo()`.\n\t * A tiny API method \"lt\" also exists.\n\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#complex-shapes-(paths) \"WHATWG spec\"}\n\t * @param {Number} x The x coordinate the drawing point should draw to.\n\t * @param {Number} y The y coordinate the drawing point should draw to.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tlineTo (x, y) {\n\t\treturn this.append(new LineTo(x,y));\n\t}\n\n\t/**\n\t * Draws an arc with the specified control points and radius.\n\t * A tiny API method \"at\" also exists.\n\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arcto \"WHATWG spec\"}\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tarcTo (x1, y1, x2, y2, radius) {\n\t\treturn this.append(new ArcTo(x1, y1, x2, y2, radius));\n\t}\n\n\t/**\n\t * Draws an arc defined by the radius, startAngle and endAngle arguments, centered at the position (x, y).\n\t * A tiny API method \"a\" also exists.\n\t *\n\t * @example\n\t * // draw a full circle with a radius of 20 centered at (100, 100)\n\t * arc(100, 100, 20, 0, Math.PI*2);\n\t *\n\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arc \"WHATWG spec\"}\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle Measured in radians.\n\t * @param {Number} endAngle Measured in radians.\n\t * @param {Boolean} anticlockwise\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tarc (x, y, radius, startAngle, endAngle, anticlockwise) {\n\t\treturn this.append(new Arc(x, y, radius, startAngle, endAngle, anticlockwise));\n\t}\n\n\t/**\n\t * Draws a quadratic curve from the current drawing point to (x, y) using the control point (cpx, cpy).\n\t * A tiny API method \"qt\" also exists.\n\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-quadraticcurveto \"WHATWG spec\"}\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tquadraticCurveTo (cpx, cpy, x, y) {\n\t\treturn this.append(new QuadraticCurveTo(cpx, cpy, x, y));\n\t}\n\n\t/**\n\t * Draws a bezier curve from the current drawing point to (x, y) using the control points (cp1x, cp1y) and (cp2x, cp2y).\n\t * A tiny API method \"bt\" also exists.\n\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-beziercurveto \"WHATWG spec\"}\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbezierCurveTo (cp1x, cp1y, cp2x, cp2y, x, y) {\n\t\treturn this.append(new BezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y));\n\t}\n\n\t/**\n\t * Draws a rectangle at (x, y) with the specified width and height using the current fill and/or stroke.\n\t * A tiny API method \"r\" also exists.\n\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-rect \"WHATWG spec\"}\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\trect (x, y, w, h) {\n\t\treturn this.append(new Rect(x, y, w, h));\n\t}\n\n\t/**\n\t * Closes the current path, effectively drawing a line from the current drawing point to the first drawing point specified\n\t * since the fill or stroke was last set.\n\t * A tiny API method \"cp\" also exists.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tclosePath () {\n\t\treturn this._activeInstructions.length ? this.append(new ClosePath()) : this;\n\t}\n\n\t/**\n\t * Clears all drawing instructions, effectively resetting this Graphics instance. Any line and fill styles will need\n\t * to be redefined to draw shapes following a clear call.\n\t * A tiny API method \"c\" also exists.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tclear () {\n\t\tthis._instructions.length = this._activeInstructions.length = this._commitIndex = 0;\n\t\tthis._strokeStyle = this._oldStrokeStyle = this._stroke = this._fill = this._strokeDash = this._oldStrokeDash = null;\n\t\tthis._dirty = this._strokeIgnoreScale = false;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Begins a fill with the specified color. This ends the current sub-path.\n\t * A tiny API method \"f\" also exists.\n\t * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no fill.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginFill (color) {\n\t\treturn this._setFill(color ? new Fill(color) : null);\n\t}\n\n\t/**\n\t * Begins a linear gradient fill defined by the line (x0, y0) to (x1, y1).\n\t * A tiny API method \"lf\" also exists.\n\t *\n\t * @example <caption>Define a black to white vertical gradient ranging from 20px to 120px, and draw a square to display it</caption>\n\t * graphics.beginLinearGradientFill([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\t *\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n\t * drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n\t * the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginLinearGradientFill (colors, ratios, x0, y0, x1, y1) {\n\t\treturn this._setFill(new Fill().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t}\n\n\t/**\n\t * Begins a radial gradient fill. This ends the current sub-path.\n\t * A tiny API method \"rf\" also exists.\n\t *\n\t * @example <caption>Define a red to blue radial gradient centered at (100, 100), with a radius of 50, and draw a circle to display it</caption>\n\t * graphics.beginRadialGradientFill([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50).drawCircle(100, 100, 50);\n\t *\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginRadialGradientFill (colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\treturn this._setFill(new Fill().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t}\n\n\t/**\n\t * Begins a pattern fill using the specified image. This ends the current sub-path.\n\t * A tiny API method \"bf\" also exists.\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\t * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\t * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n\t * @param {easeljs.Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n\t * will be applied relative to the parent transform.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginBitmapFill (image, repetition, matrix) {\n\t\treturn this._setFill(new Fill(null, matrix).bitmap(image, repetition));\n\t}\n\n\t/**\n\t * Ends the current sub-path, and begins a new one with no fill. Functionally identical to `beginFill(null)`.\n\t * A tiny API method \"ef\" also exists.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tendFill () {\n\t\treturn this.beginFill();\n\t}\n\n\t/**\n\t * Sets the stroke style.\n\t * A tiny API method \"ss\" also exists.\n\t *\n\t * @example\n\t * graphics.setStrokeStyle(8,\"round\").beginStroke(\"#F00\");\n\t *\n\t * @param {Number} thickness The width of the stroke.\n\t * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n\t * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n\t * the tiny API.\n\t * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n\t * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n\t * for use with the tiny API.\n\t * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n\t * controls at what point a mitered joint will be clipped.\n\t * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n\t * of active transformations.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tsetStrokeStyle (thickness, caps = 0, joints = 0, miterLimit = 10, ignoreScale = false) {\n\t\tthis._updateInstructions(true);\n\t\tthis._strokeStyle = this.command = new StrokeStyle(thickness, caps, joints, miterLimit, ignoreScale);\n\n\t\t// ignoreScale lives on Stroke, not StrokeStyle, so we do a little trickery:\n\t\tif (this._stroke) { this._stroke.ignoreScale = ignoreScale; }\n\t\tthis._strokeIgnoreScale = ignoreScale;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets or clears the stroke dash pattern.\n\t * A tiny API method `sd` also exists.\n\t *\n\t * @example\n\t * graphics.setStrokeDash([20, 10], 0);\n\t *\n\t * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n\t * For example, `[20,10]` would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n\t * Passing null or an empty array will clear the existing stroke dash.\n\t * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tsetStrokeDash (segments, offset = 0) {\n\t\tthis._updateInstructions(true);\n\t\tthis._strokeDash = this.command = new StrokeDash(segments, offset);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Begins a stroke with the specified color. This ends the current sub-path.\n\t * A tiny API method \"s\" also exists.\n\t *\n\t * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no stroke.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginStroke (color) {\n\t\treturn this._setStroke(color ? new Stroke(color) : null);\n\t}\n\n\t/**\n\t * Begins a linear gradient stroke defined by the line (x0, y0) to (x1, y1). This ends the current sub-path.\n\t * A tiny API method \"ls\" also exists.\n\t *\n\t * @example <caption>Define a black to white vertical gradient ranging from 20px to 120px, and draw a square to display it</caption>\n\t * graphics.setStrokeStyle(10)\n\t *   .beginLinearGradientStroke([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120)\n\t *   .drawRect(20, 20, 120, 120);\n\t *\n\t * @param {Array<String>} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array<Number>} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginLinearGradientStroke (colors, ratios, x0, y0, x1, y1) {\n\t\treturn this._setStroke(new Stroke().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t}\n\n\t/**\n\t * Begins a radial gradient stroke. This ends the current sub-path.\n\t * A tiny API method \"rs\" also exists.\n\t *\n\t * @example <caption>Define a red to blue radial gradient centered at (100, 100), with a radius of 50, and draw a rectangle to display it</caption>\n\t * graphics.setStrokeStyle(10)\n\t *   .beginRadialGradientStroke([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50)\n\t *   .drawRect(50, 90, 150, 110);\n\t *\n\t * @param {Array<String>} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array<Number>} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n\t * to 100%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginRadialGradientStroke (colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\treturn this._setStroke(new Stroke().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t}\n\n\t/**\n\t * Begins a pattern fill using the specified image. This ends the current sub-path. Note that unlike bitmap fills,\n\t * strokes do not currently support a matrix parameter due to limitations in the canvas API.\n\t * A tiny API method \"bs\" also exists.\n\t *\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} [repetition=\"repeat\"] Indicates whether to repeat the image in the fill area. One of\n\t * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tbeginBitmapStroke (image, repetition = \"repeat\") {\n\t\t// NOTE: matrix is not supported for stroke because transforms on strokes also affect the drawn stroke width.\n\t\treturn this._setStroke(new Stroke().bitmap(image, repetition));\n\t}\n\n\t/**\n\t * Ends the current sub-path, and begins a new one with no stroke. Functionally identical to `beginStroke(null)`.\n\t * A tiny API method \"es\" also exists.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tendStroke () {\n\t\treturn this.beginStroke();\n\t}\n\n\t/**\n\t * Draws a rounded rectangle with all corners with the specified radius.\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radius Corner radius.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawRoundRect (x, y, w, h, radius) {\n\t\treturn this.drawRoundRectComplex(x, y, w, h, radius, radius, radius, radius);\n\t}\n\n\t/**\n\t * Draws a rounded rectangle with different corner radii. Supports positive and negative corner radii.\n\t * A tiny API method \"rc\" also exists.\n\t * @param {Number} x The horizontal coordinate to draw the round rect.\n\t * @param {Number} y The vertical coordinate to draw the round rect.\n\t * @param {Number} w The width of the round rect.\n\t * @param {Number} h The height of the round rect.\n\t * @param {Number} radiusTL Top left corner radius.\n\t * @param {Number} radiusTR Top right corner radius.\n\t * @param {Number} radiusBR Bottom right corner radius.\n\t * @param {Number} radiusBL Bottom left corner radius.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawRoundRectComplex (x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t\treturn this.append(new RoundRect(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL));\n\t}\n\n\t/**\n\t * Draws a circle with the specified radius at (x, y).\n\t * A tiny API method \"dc\" also exists.\n\t *\n\t * @example\n\t * let g = new Graphics();\n\t * g.setStrokeStyle(1);\n\t * g.beginStroke(Graphics.getRGB(0,0,0));\n\t * g.beginFill(Graphics.getRGB(255,0,0));\n\t * g.drawCircle(0,0,3);\n\t * let s = new Shape(g);\n\t * s.x = 100;\n\t * s.y = 100;\n\t * stage.addChild(s);\n\t * stage.update();\n\t *\n\t * @param {Number} x x coordinate center point of circle.\n\t * @param {Number} y y coordinate center point of circle.\n\t * @param {Number} radius Radius of circle.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawCircle (x, y, radius) {\n\t\treturn this.append(new Circle(x, y, radius));\n\t}\n\n\t/**\n\t * Draws an ellipse (oval) with a specified width (w) and height (h). Similar to {@link easels.Graphics#drawCircle},\n\t * except the width and height can be different.\n\t * A tiny API method \"de\" also exists.\n\t * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {@link easels.Graphics#drawCircle}\n\t * which draws from center.\n\t * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {@link easels.Graphics#drawCircle}\n\t * which draws from the center.\n\t * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n\t * number.\n\t * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawEllipse (x, y, w, h) {\n\t\treturn this.append(new Ellipse(x, y, w, h));\n\t}\n\n\t/**\n\t * Draws a star if pointSize is greater than 0, or a regular polygon if pointSize is 0 with the specified number of points.\n\t * A tiny API method \"dp\" also exists.\n\t *\n\t * @example <caption>Draw a 5 pointed star shape centered at 100, 100 and with a radius of 50</caption>\n\t * graphics.beginFill(\"#FF0\").drawPolyStar(100, 100, 50, 5, 0.6, -90);\n\t * // Note: -90 makes the first point vertical\n\t *\n\t * @param {Number} x Position of the center of the shape.\n\t * @param {Number} y Position of the center of the shape.\n\t * @param {Number} radius The outer radius of the shape.\n\t * @param {Number} sides The number of points on the star or sides on the polygon.\n\t * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n\t * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n\t * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n\t * directly to the right of the center.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdrawPolyStar (x, y, radius, sides, pointSize, angle) {\n\t\treturn this.append(new PolyStar(x, y, radius, sides, pointSize, angle));\n\t}\n\n\t/**\n\t * Appends a graphics command object to the graphics queue. Command objects expose an \"exec\" method\n\t * that accepts two parameters: the Context2D to operate on, and an arbitrary data object passed into\n\t * {@link easeljs.Graphics#draw}. The latter will usually be the Shape instance that called draw.\n\t *\n\t * This method is used internally by Graphics methods, such as drawCircle, but can also be used directly to insert\n\t * built-in or custom graphics commands.\n\t *\n\t * @example\n\t * // attach data to our shape, so we can access it during the draw:\n\t * shape.color = \"red\";\n\t *\n\t * // append a Circle command object:\n\t * shape.graphics.append(new Graphics.Circle(50, 50, 30));\n\t *\n\t * // append a custom command object with an exec method that sets the fill style\n\t * // based on the shape's data, and then fills the circle.\n\t * shape.graphics.append({\n\t *   exec: (ctx, shape) => {\n\t *     ctx.fillStyle = shape.color;\n\t *     ctx.fill();\n\t *   }\n\t * });\n\t *\n\t * @param {Object} command A graphics command object exposing an \"exec\" method.\n\t * @param {Boolean} clean The clean param is primarily for internal use. A value of true indicates that a command does not generate a path that should be stroked or filled.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tappend (command, clean) {\n\t\tthis._activeInstructions.push(command);\n\t\tthis.command = command;\n\t\tif (!clean) { this._dirty = true; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Decodes a compact encoded path string into a series of draw instructions.\n\t * This format is not intended to be human readable, and is meant for use by authoring tools.\n\t * The format uses a base64 character set, with each character representing 6 bits, to define a series of draw\n\t * commands.\n\t *\n\t * Each command is comprised of a single \"header\" character followed by a variable number of alternating x and y\n\t * position values. Reading the header bits from left to right (most to least significant): bits 1 to 3 specify the\n\t * type of operation (0-moveTo, 1-lineTo, 2-quadraticCurveTo, 3-bezierCurveTo, 4-closePath, 5-7 unused). Bit 4\n\t * indicates whether position values use 12 bits (2 characters) or 18 bits (3 characters), with a one indicating the\n\t * latter. Bits 5 and 6 are currently unused.\n\t *\n\t * Following the header is a series of 0 (closePath), 2 (moveTo, lineTo), 4 (quadraticCurveTo), or 6 (bezierCurveTo)\n\t * parameters. These parameters are alternating x/y positions represented by 2 or 3 characters (as indicated by the\n\t * 4th bit in the command char). These characters consist of a 1 bit sign (1 is negative, 0 is positive), followed\n\t * by an 11 (2 char) or 17 (3 char) bit integer value. All position values are in tenths of a pixel. Except in the\n\t * case of move operations which are absolute, this value is a delta from the previous x or y position (as\n\t * appropriate).\n\t *\n\t * For example, the string \"A3cAAMAu4AAA\" represents a line starting at -150,0 and ending at 150,0.\n\t * <br />A - bits 000000. First 3 bits (000) indicate a moveTo operation. 4th bit (0) indicates 2 chars per\n\t * parameter.\n\t * <br />n0 - 110111011100. Absolute x position of -150.0px. First bit indicates a negative value, remaining bits\n\t * indicate 1500 tenths of a pixel.\n\t * <br />AA - 000000000000. Absolute y position of 0.\n\t * <br />I - 001100. First 3 bits (001) indicate a lineTo operation. 4th bit (1) indicates 3 chars per parameter.\n\t * <br />Au4 - 000000101110111000. An x delta of 300.0px, which is added to the previous x value of -150.0px to\n\t * provide an absolute position of +150.0px.\n\t * <br />AAA - 000000000000000000. A y delta value of 0.\n\t *\n\t * A tiny API method \"p\" also exists.\n\t *\n\t * @param {String} str The path string to decode.\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tdecodePath (str) {\n\t\tlet instructions = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath];\n\t\tlet paramCount = [2, 2, 4, 6, 0];\n\t\tlet i = 0;\n\t\tconst l = str.length;\n\t\tlet params = [];\n\t\tlet x = 0, y = 0;\n\t\tlet base64 = Graphics._BASE_64;\n\n\t\twhile (i < l) {\n\t\t\tlet c = str.charAt(i);\n\t\t\tlet n = base64[c];\n\t\t\tlet fi = n>>3; // highest order bits 1-3 code for operation.\n\t\t\tlet f = instructions[fi];\n\t\t\t// check that we have a valid instruction & that the unused bits are empty:\n\t\t\tif (!f || (n&3)) { throw `Bad path data (@${i}):c`; }\n\t\t\tconst pl = paramCount[fi];\n\t\t\tif (!fi) { x=y=0; } // move operations reset the position.\n\t\t\tparams.length = 0;\n\t\t\ti++;\n\t\t\tlet charCount = (n>>2&1)+2;  // 4th header bit indicates number size for this operation.\n\t\t\tfor (let p = 0; p < pl; p++) {\n\t\t\t\tlet num = base64[str.charAt(i)];\n\t\t\t\tlet sign = (num>>5) ? -1 : 1;\n\t\t\t\tnum = ((num&31)<<6)|(base64[str.charAt(i+1)]);\n\t\t\t\tif (charCount === 3) { num = (num<<6)|(base64[str.charAt(i+2)]); }\n\t\t\t\tnum = sign*num/10;\n\t\t\t\tif (p%2) { x = (num += x); }\n\t\t\t\telse { y = (num += y); }\n\t\t\t\tparams[p] = num;\n\t\t\t\ti += charCount;\n\t\t\t}\n\t\t\tf.apply(this, params);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stores all graphics commands so they won't be executed in future draws. Calling store() a second time adds to\n\t * the existing store. This also affects `drawAsPath()`.\n\t *\n\t * This is useful in cases where you are creating vector graphics in an iterative manner (ex. generative art), so\n\t * that only new graphics need to be drawn (which can provide huge performance benefits), but you wish to retain all\n\t * of the vector instructions for later use (ex. scaling, modifying, or exporting).\n\t *\n\t * Note that calling store() will force the active path (if any) to be ended in a manner similar to changing\n\t * the fill or stroke.\n\t *\n\t * For example, consider a application where the user draws lines with the mouse. As each line segment (or collection of\n\t * segments) are added to a Shape, it can be rasterized using {@link easeljs.DisplayObject#updateCache},\n\t * and then stored, so that it can be redrawn at a different scale when the application is resized, or exported to SVGraphics.\n\t *\n\t * @example\n\t * // set up cache:\n\t * shape.cache(0,0,500,500,scale);\n\t *\n\t * // when the user drags, draw a new line:\n\t * shape.graphics.moveTo(oldX,oldY).lineTo(newX,newY);\n\t * // then draw it into the existing cache:\n\t * shape.updateCache(\"source-over\");\n\t * // store the new line, so it isn't redrawn next time:\n\t * shape.store();\n\t *\n\t * // then, when the window resizes, we can re-render at a different scale:\n\t * // first, unstore all our lines:\n\t * shape.unstore();\n\t * // then cache using the new scale:\n\t * shape.cache(0,0,500,500,newScale);\n\t * // finally, store the existing commands again:\n\t * shape.store();\n\t *\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tstore () {\n\t\tthis._updateInstructions(true);\n\t\tthis._storeIndex = this._instructions.length;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unstores any graphics commands that were previously stored using {@link easeljs.Graphics#store}\n\t * so that they will be executed in subsequent draw calls.\n\t *\n\t * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tunstore () {\n\t\tthis._storeIndex = 0;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of this Graphics instance. Note that the individual command objects are not cloned.\n\t * @return {easeljs.Graphics} A clone of the current Graphics instance.\n\t */\n\tclone () {\n\t\tlet o = new Graphics();\n\t\to.command = this.command;\n\t\to._stroke = this._stroke;\n\t\to._strokeStyle = this._strokeStyle;\n\t\to._strokeDash = this._strokeDash;\n\t\to._strokeIgnoreScale = this._strokeIgnoreScale;\n\t\to._fill = this._fill;\n\t\to._instructions = this._instructions.slice();\n\t\to._commitIndex = this._commitIndex;\n\t\to._activeInstructions = this._activeInstructions.slice();\n\t\to._dirty = this._dirty;\n\t\to._storeIndex = this._storeIndex;\n\t\treturn o;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * @param {Boolean} commit\n\t * @protected\n\t */\n\t_updateInstructions (commit) {\n\t\tlet instr = this._instructions, active = this._activeInstructions, commitIndex = this._commitIndex;\n\n\t\tif (this._dirty && active.length) {\n\t\t\tinstr.length = commitIndex; // remove old, uncommitted commands\n\t\t\tinstr.push(Graphics.beginCmd);\n\n\t\t\tconst l = active.length, ll = instr.length;\n\t\t\tinstr.length = ll+l;\n\t\t\tfor (let i = 0; i < l; i++) { instr[i+ll] = active[i]; }\n\n\t\t\tif (this._fill) { instr.push(this._fill); }\n\t\t\tif (this._stroke) {\n\t\t\t\t// doesn't need to be re-applied if it hasn't changed.\n\t\t\t\tif (this._strokeDash !== this._oldStrokeDash) {\n\t\t\t\t\tinstr.push(this._strokeDash);\n\t\t\t\t}\n\t\t\t\tif (this._strokeStyle !== this._oldStrokeStyle) {\n\t\t\t\t\tinstr.push(this._strokeStyle);\n\t\t\t\t}\n\t\t\t\tif (commit) {\n\t\t\t\t\tthis._oldStrokeDash = this._strokeDash;\n\t\t\t\t\tthis._oldStrokeStyle = this._strokeStyle;\n\t\t\t\t}\n\t\t\t\tinstr.push(this._stroke);\n\t\t\t}\n\n\t\t\tthis._dirty = false;\n\t\t}\n\n\t\tif (commit) {\n\t\t\tactive.length = 0;\n\t\t\tthis._commitIndex = instr.length;\n\t\t}\n\t};\n\n\t/**\n\t * @param {easeljs.Graphics.Fill} fill\n\t * @protected\n\t */\n\t_setFill (fill) {\n\t\tthis._updateInstructions(true);\n\t\tthis.command = this._fill = fill;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param {easeljs.Graphics.Stroke} stroke\n\t * @protected\n\t */\n\t_setStroke (stroke) {\n\t\tthis._updateInstructions(true);\n\t\tif (this.command = this._stroke = stroke) {\n\t\t\tstroke.ignoreScale = this._strokeIgnoreScale;\n\t\t}\n\t\treturn this;\n\t}\n\n\tstatic get LineTo () { return LineTo; }\n\tstatic get MoveTo () { return MoveTo; }\n\tstatic get ArcTo () { return ArcTo; }\n\tstatic get Arc () { return Arc; }\n\tstatic get QuadraticCurveTo () { return QuadraticCurveTo; }\n\tstatic get BezierCurveTo () { return BezierCurveTo; }\n\tstatic get Rect () { return Rect; }\n\tstatic get ClosePath () { return ClosePath; }\n\tstatic get BeginPath () { return BeginPath; }\n\tstatic get Fill () { return Fill; }\n\tstatic get Stroke () { return Stroke; }\n\tstatic get StrokeStyle () { return StrokeStyle; }\n\tstatic get StrokeDash () { return StrokeDash; }\n\tstatic get RoundRect () { return RoundRect; }\n\tstatic get Circle () { return Circle; }\n\tstatic get Ellipse () { return Ellipse; }\n\tstatic get PolyStar () { return PolyStar; }\n\n}\n\n/**\n * @see {@link easeljs.Graphics#lineTo}\n * @alias easeljs.Graphics.LineTo\n * @param {Number} x\n * @param {Number} y\n */\nclass LineTo {\n\tconstructor (x, y) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.x = x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y = y;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tctx.lineTo(this.x, this.y);\n\t}\n}\n\n/**\n * @see {@link easeljs.Graphics#moveTo}\n * @alias easeljs.Graphics.MoveTo\n * @param {Number} x\n * @param {Number} y\n */\nclass MoveTo {\n \tconstructor (x, y) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n \t\tthis.x = x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y = y;\n \t}\n\t/**\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n \texec (ctx) {\n \t\tctx.moveTo(this.x, this.y);\n \t}\n}\n\n\n/**\n * @see {@link easeljs.Graphics#arcTo}\n * @alias easeljs.Graphics.ArcTo\n * @param {Number} x1\n * @param {Number} y1\n * @param {Number} x2\n * @param {Number} y2\n * @param {Number} radius\n */\nclass ArcTo {\n \tconstructor (x1, y1, x2, y2, radius) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.x1 = x1;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y1 = y1;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.x2 = x2;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y2 = y2;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.radius = radius;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#arc}\n * @alias easeljs.Graphics.Arc\n * @param {Number} x\n * @param {Number} y\n * @param {Number} radius\n * @param {Number} startAngle\n * @param {Number} endAngle\n * @param {Boolean} [anticlockwise=false]\n */\nclass Arc {\n \tconstructor (x, y, radius, startAngle, endAngle, anticlockwise = false) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.radius = radius;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.startAngle = startAngle;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.endAngle = endAngle;\n\t\t/**\n\t\t * @type {Boolean}\n\t\t */\n\t \tthis.anticlockwise = anticlockwise;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#quadraticCurveTo}\n * @alias easeljs.Graphics.QuadraticCurveTo\n * @param {Number} cpx\n * @param {Number} cpy\n * @param {Number} x\n * @param {Number} y\n */\nclass QuadraticCurveTo {\n \tconstructor (cpx, cpy, x, y) {\n\t\t/**\n\t\t * @property cpx\n\t\t * @type Number\n\t\t */\n\t \tthis.cpx = cpx;\n\t\t/**\n\t\t * @property cpy\n\t\t * @type Number\n\t\t */\n\t\tthis.cpy = cpy;\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\tthis.y = y;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.quadraticCurveTo(this.cpx, this.cpy, this.x, this.y);\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#bezierCurveTo}\n * @alias easeljs.Graphics.BezierCurveTo\n * @param {Number} cp1x\n * @param {Number} cp1y\n * @param {Number} cp2x\n * @param {Number} cp2y\n * @param {Number} x\n * @param {Number} y\n */\nclass BezierCurveTo {\n \tconstructor (cp1x, cp1y, cp2x, cp2y, x, y) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.cp1x = cp1x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.cp1y = cp1y;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.cp2x = cp2x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.cp2y = cp2y;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y = y;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.x, this.y);\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#rect}\n * @alias easeljs.Graphics.Rect\n * @param {Number} x\n * @param {Number} y\n * @param {Number} w\n * @param {Number} h\n */\nclass Rect {\n \tconstructor (x, y, w, h) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.w = w;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.h = h;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.rect(this.x, this.y, this.w, this.h);\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#closePath}\n * @alias easeljs.Graphics.ClosePath\n */\nclass ClosePath {\n \tconstructor () { }\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.closePath();\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#beginPath}\n * @alias easeljs.Graphics.BeginPath\n */\nclass BeginPath {\n \tconstructor () { }\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.beginPath();\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#beginFill}\n * @alias easeljs.Graphics.Fill\n * @param {Object} style A valid Context2D fillStyle.\n * @param {Matrix2D} matrix\n */\nclass Fill {\n\tconstructor (style, matrix) {\n\t\t/**\n\t\t * A valid Context2D fillStyle.\n\t\t * @type {Object}\n\t\t */\n\t\tthis.style = style;\n\t\t/**\n\t\t * @type {easeljs.Matrix2D}\n\t\t */\n\t\tthis.matrix = matrix;\n\t\t/**\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.path = false;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tif (!this.style) { return; }\n\t\tctx.fillStyle = this.style;\n\t\tlet mtx = this.matrix;\n\t\tif (mtx) { ctx.save(); ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty); }\n\t\tctx.fill();\n\t\tif (mtx) { ctx.restore(); }\n\t}\n\t/**\n\t * Creates a linear gradient style and assigns it to {@link easeljs.Graphics.Fill#style}.\n\t * @see {@link easeljs.Graphics#beginLinearGradientFill}\n\t * @param {Array<String>} colors\n\t * @param {Array<Number>} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @return {easeljs.Graphics.Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tlinearGradient (colors, ratios, x0, y0, x1, y1) {\n\t\tlet o = this.style = Graphics._ctx.createLinearGradient(x0, y0, x1, y1);\n\t\tconst l = colors.length;\n\t\tfor (let i = 0; i < l; i++) { o.addColorStop(ratios[i], colors[i]); }\n\t\to.props = {colors, ratios, x0, y0, x1, y1, type:\"linear\"};\n\t\treturn this;\n\t}\n\t/**\n\t * Creates a linear gradient style and assigns it to {@link easeljs.Graphics.Fill#style}.\n\t * @see {@link easeljs.Graphics#beginRadialGradientFill}\n\t * @param {Array<String>} colors\n\t * @param {Array<Number>} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} r0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} r1\n\t * @return {easeljs.Graphics.Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tradialGradient (colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\tlet o = this.style = Graphics._ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\n\t\tconst l = colors.length;\n\t\tfor (let i = 0; i < l; i++) { o.addColorStop(ratios[i], colors[i]); }\n\t\to.props = {colors, ratios, x0, y0, r0, x1, y1, r1, type: \"radial\"};\n\t\treturn this;\n\t}\n\t/**\n\t * Creates a linear gradient style and assigns it to {@link easeljs.Graphics.Fill#style}.\n\t * @see {@link easeljs.Graphics#beginBitmapFill}\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image  Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} [repetition=\"\"] One of: repeat, repeat-x, repeat-y, or no-repeat.\n\t * @return {easeljs.Graphics.Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tbitmap (image, repetition = \"\") {\n\t\tif (image.naturalWidth || image.getContext || image.readyState >= 2) {\n\t\t\tlet o = this.style = Graphics._ctx.createPattern(image, repetition);\n\t\t\to.props = {image, repetition, type: \"bitmap\"};\n\t\t}\n\t\treturn this;\n\t}\n}\n\n/**\n * @see {@link easeljs.Graphics#beginStroke}\n * @alias easeljs.Graphics.Stroke\n * @extends easeljs.Graphics.Fill\n * @param {Object} style A valid Context2D fillStyle.\n * @param {Boolean} ignoreScale\n */\nclass Stroke extends Fill {\n\tconstructor (style, ignoreScale) {\n\t\tsuper();\n\t\t/**\n\t\t * A valid Context2D strokeStyle.\n\t\t * @type {Object}\n\t\t */\n\t\tthis.style = style;\n\t\t/**\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.ignoreScale = ignoreScale;\n\t\t/**\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.path = false;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @override\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tif (!this.style) { return; }\n\t\tctx.strokeStyle = this.style;\n\t\tif (this.ignoreScale) { ctx.save(); ctx.setTransform(1,0,0,1,0,0); }\n\t\tctx.stroke();\n\t\tif (this.ignoreScale) { ctx.restore(); }\n\t}\n}\n\n/**\n * @see {@link easeljs.Graphics#setStrokeStyle}\n * @alias easeljs.Graphics.StrokeStyle\n * @param {Number} [width=1]\n * @param {String} [caps=butt]\n * @param {String} [joints=miter]\n * @param {Number} [miterLimit=10]\n * @param {Boolean} [ignoreScale=false]\n */\nclass StrokeStyle {\n\tconstructor (width=1, caps=\"butt\", joints=\"miter\", miterLimit=10, ignoreScale=false) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.width = width;\n\t\t/**\n\t\t * One of: butt, round, square\n\t\t * @type {String}\n\t\t */\n\t\tthis.caps = caps;\n\t\t/**\n\t\t * One of: round, bevel, miter\n\t\t * @type {String}\n\t\t */\n\t\tthis.joints = joints;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.miterLimit = miterLimit;\n\t\t/**\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.ignoreScale = ignoreScale;\n\t\t/**\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.path = false;\n\t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\texec (ctx) {\n\t\tctx.lineWidth = this.width;\n\t\tctx.lineCap = (isNaN(this.caps) ? this.caps : Graphics._STROKE_CAPS_MAP[this.caps]);\n\t\tctx.lineJoin = (isNaN(this.joints) ? this.joints : Graphics._STROKE_JOINTS_MAP[this.joints]);\n\t\tctx.miterLimit = this.miterLimit;\n\t\tctx.ignoreScale = this.ignoreScale;\n\t}\n}\n\n/**\n * @see {@link easeljs.Graphics#setStrokeDash}\n * @alias easeljs.Graphics.StrokeDash\n * @param {Array} [segments=[]]\n * @param {Number} [offset=0]\n */\nclass StrokeDash {\n \tconstructor (segments=[], offset=0) {\n\t\t/**\n\t\t * @type {Array}\n\t\t */\n\t \tthis.segments = segments;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.offset = offset;\n \t}\n\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tif (ctx.setLineDash) { // feature detection.\n\t \t\tctx.setLineDash(this.segments);\n\t \t\tctx.lineDashOffset = this.offset;\n\t \t}\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#drawRoundRectComplex}\n * @alias easeljs.Graphics.RoundRect\n * @param {Number} x\n * @param {Number} y\n * @param {Number} w\n * @param {Number} h\n * @param {Number} radiusTL\n * @param {Number} radiusTR\n * @param {Number} radiusBR\n * @param {Number} radiusBL\n */\nclass RoundRect {\n \tconstructor (x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.w = w;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.h = h;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.radiusTL = radiusTL;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.radiusTR = radiusTR;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.radiusBR = radiusBR;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.radiusBL = radiusBL;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tlet max = (this.w<this.h?this.w:this.h)/2;\n\t \tlet mTL=0, mTR=0, mBR=0, mBL=0;\n\t \tlet x = this.x, y = this.y, w = this.w, h = this.h;\n\t \tlet rTL = this.radiusTL, rTR = this.radiusTR, rBR = this.radiusBR, rBL = this.radiusBL;\n\n\t \tif (rTL < 0) { rTL *= (mTL=-1); }\n\t \tif (rTL > max) { rTL = max; }\n\t \tif (rTR < 0) { rTR *= (mTR=-1); }\n\t \tif (rTR > max) { rTR = max; }\n\t \tif (rBR < 0) { rBR *= (mBR=-1); }\n\t \tif (rBR > max) { rBR = max; }\n\t \tif (rBL < 0) { rBL *= (mBL=-1); }\n\t \tif (rBL > max) { rBL = max; }\n\n\t \tctx.moveTo(x+w-rTR, y);\n\t \tctx.arcTo(x+w+rTR*mTR, y-rTR*mTR, x+w, y+rTR, rTR);\n\t \tctx.lineTo(x+w, y+h-rBR);\n\t \tctx.arcTo(x+w+rBR*mBR, y+h+rBR*mBR, x+w-rBR, y+h, rBR);\n\t \tctx.lineTo(x+rBL, y+h);\n\t \tctx.arcTo(x-rBL*mBL, y+h+rBL*mBL, x, y+h-rBL, rBL);\n\t \tctx.lineTo(x, y+rTL);\n\t \tctx.arcTo(x-rTL*mTL, y-rTL*mTL, x+rTL, y, rTL);\n\t \tctx.closePath();\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#drawCircle}\n * @alias easeljs.Graphics.Circle\n * @param {Number} x\n * @param {Number} y\n * @param {Number} radius\n */\nclass Circle {\n \tconstructor (x, y, radius) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.radius = radius;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tctx.arc(this.x, this.y, this.radius, 0, Math.PI*2);\n \t}\n}\n\n/**\n * @see {@link easeljs.Graphics#drawEllipse}\n * @alias easeljs.Graphics.Ellipse\n * @param {Number} x\n * @param {Number} y\n * @param {Number} w\n * @param {Number} h\n */\nclass Ellipse {\n \tconstructor (x, y, w, h) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.w = w;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.h = h;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tlet x = this.x, y = this.y;\n\t \tlet w = this.w, h = this.h;\n\n\t \tlet k = 0.5522848;\n\t \tlet ox = (w / 2) * k;\n\t \tlet oy = (h / 2) * k;\n\t \tlet xe = x + w;\n\t \tlet ye = y + h;\n\t \tlet xm = x + w / 2;\n\t \tlet ym = y + h / 2;\n\n\t \tctx.moveTo(x, ym);\n\t \tctx.bezierCurveTo(x, ym-oy, xm-ox, y, xm, y);\n\t \tctx.bezierCurveTo(xm+ox, y, xe, ym-oy, xe, ym);\n\t \tctx.bezierCurveTo(xe, ym+oy, xm+ox, ye, xm, ye);\n\t \tctx.bezierCurveTo(xm-ox, ye, x, ym+oy, x, ym);\n \t}\n}\n\n/**\n *  @see {@link easeljs.Graphics#drawPolyStar}\n * @alias easeljs.Graphics.PolyStar\n * @param {Number} x\n * @param {Number} y\n * @param {Number} radius\n * @param {Number} sides\n * @param {Number} [pointSize=0]\n * @param {Number} [angle=0]\n */\nclass PolyStar {\n \tconstructor (x, y, radius, sides, pointSize=0, angle=0) {\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.x = x;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.radius = radius;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.sides = sides;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.pointSize = pointSize;\n\t\t/**\n\t\t * @type {Number}\n\t\t */\n\t \tthis.angle = angle;\n \t}\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n \texec (ctx) {\n \t\tlet x = this.x, y = this.y;\n\t \tlet radius = this.radius;\n\t \tlet angle = this.angle/180*Math.PI;\n\t \tlet sides = this.sides;\n\t \tlet ps = 1-this.pointSize;\n\t \tlet a = Math.PI/sides;\n\n\t \tctx.moveTo(x+Math.cos(angle)*radius, y+Math.sin(angle)*radius);\n\t \tfor (let i = 0; i < sides; i++) {\n\t \t\tangle += a;\n\t \t\tif (ps != 1) {\n\t \t\t\tctx.lineTo(x+Math.cos(angle)*radius*ps, y+Math.sin(angle)*radius*ps);\n\t \t\t}\n\t \t\tangle += a;\n\t \t\tctx.lineTo(x+Math.cos(angle)*radius, y+Math.sin(angle)*radius);\n\t \t}\n\t \tctx.closePath();\n \t}\n}\n\n/**\n * A reusable instance of {@link easeljs.Graphics.BeginPath} to avoid unnecessary instantiation.\n * @static\n * @readonly\n * @type {easeljs.Graphics.BeginPath}\n */\nGraphics.beginCmd = new BeginPath();\n/**\n * Map of Base64 characters to values. Used by {@link easeljs.Graphics#decodePath}.\n * @static\n * @readonly\n * @protected\n * @type {Object}\n */\nGraphics._BASE_64 = {\"A\":0,\"B\":1,\"C\":2,\"D\":3,\"E\":4,\"F\":5,\"G\":6,\"H\":7,\"I\":8,\"J\":9,\"K\":10,\"L\":11,\"M\":12,\"N\":13,\"O\":14,\"P\":15,\"Q\":16,\"R\":17,\"S\":18,\"T\":19,\"U\":20,\"V\":21,\"W\":22,\"X\":23,\"Y\":24,\"Z\":25,\"a\":26,\"b\":27,\"c\":28,\"d\":29,\"e\":30,\"f\":31,\"g\":32,\"h\":33,\"i\":34,\"j\":35,\"k\":36,\"l\":37,\"m\":38,\"n\":39,\"o\":40,\"p\":41,\"q\":42,\"r\":43,\"s\":44,\"t\":45,\"u\":46,\"v\":47,\"w\":48,\"x\":49,\"y\":50,\"z\":51,\"0\":52,\"1\":53,\"2\":54,\"3\":55,\"4\":56,\"5\":57,\"6\":58,\"7\":59,\"8\":60,\"9\":61,\"+\":62,\"/\":63};\n/**\n * Maps numeric values for the caps parameter of {@link easeljs.Graphics#setStrokeStyle} to\n * corresponding string values. This is primarily for use with the tiny API.<br />\n * The mappings are as follows:\n * <ul>\n *   <li>0 to \"butt\"</li>\n *   <li>1 to \"round\"</li>\n *   <li>2 to \"square\".</li>\n * </ul>\n *\n * @example <caption>Set line caps to \"square\"</caption>\n * graphics.ss(16, 2);\n *\n * @static\n * @readonly\n * @protected\n * @type {Array<String>}\n */\nGraphics._STROKE_CAPS_MAP = [\"butt\",\"round\",\"square\"];\n/**\n * Maps numeric values for the joints parameter of {@link easeljs.Graphics#setStrokeStyle} to\n * corresponding string values. This is primarily for use with the tiny API.<br />\n * The mappings are as follows:\n * <ul>\n *   <li>0 to \"miter\"</li>\n *   <li>1 to \"round\"</li>\n *   <li>2 to \"bevel\".</li>\n * </ul>\n *\n * @example <caption>Set the line joints to \"bevel\"</caption>\n * graphics.ss(16, 0, 2);\n *\n * @static\n * @readonly\n * @protected\n * @type {Array<String>}\n */\nGraphics._STROKE_JOINTS_MAP = [\"miter\", \"round\", \"bevel\"];\n/**\n * @static\n * @readonly\n * @protected\n * @type {CanvasRenderingContext2D}\n */\nGraphics._ctx = createCanvas().getContext(\"2d\");\n\n/**\n * @license MovieClip\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * The MovieClip class associates a TweenJS Timeline with an EaselJS {@link easeljs.Container}. It allows\n * you to create objects which encapsulate timeline animations, state changes, and synched actions. Due to the\n * complexities inherent in correctly setting up a MovieClip, it is largely intended for tool output and is not included\n * in the main EaselJS library.\n *\n * Currently MovieClip only works properly if it is tick based (as opposed to time based) though some concessions have\n * been made to support time-based timelines in the future.\n *\n * It is recommended to use `tween.to()` to animate and set properties (use no duration to have it set\n * immediately), and the `tween.wait()` method to create delays between animations. Note that using the\n * `tween.set()` method to affect properties will likely not provide the desired result.\n *\n * @memberof easeljs\n * @example <caption>Animate two shapes back and forth</caption>\n * let stage = new Stage(\"canvas\");\n * Ticker.addEventListener(\"tick\", stage);\n *\n * let mc = new MovieClip(null, 0, true, {start:20});\n * stage.addChild(mc);\n *\n * let child1 = new Shape(\n *   new Graphics().beginFill(\"#999999\").drawCircle(30,30,30)\n * );\n * let child2 = new Shape(\n *   new Graphics().beginFill(\"#5a9cfb\").drawCircle(30,30,30)\n * );\n *\n * mc.timeline.addTween(\n *   Tween.get(child1).to({x:0}).to({x:60}, 50).to({x:0}, 50)\n * );\n * mc.timeline.addTween(\n *   Tween.get(child2).to({x:60}).to({x:0}, 50).to({x:60}, 50)\n * );\n *\n * mc.gotoAndPlay(\"start\");\n *\n * @extends easeljs.Container\n * @param {Object} [props] The configuration properties to apply to this instances.\n * This object will also be passed into the Timeline instance associated with this MovieClip.\n * See the documentation for Timeline for a list of supported props.\n */\nclass MovieClip extends Container {\n\n\tconstructor (props) {\n\t\tsuper();\n\t\t!MovieClip.inited && MovieClip.init();\n\n\t\t/**\n\t\t * Controls how this MovieClip advances its time. Must be one of 0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED).\n\t\t * See each constant for a description of the behaviour.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.mode = props.mode != null ? props.mode : MovieClip.INDEPENDENT;\n\n\t\t/**\n\t\t * Specifies what the first frame to play in this movieclip, or the only frame to display if mode is SINGLE_FRAME.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.startPosition = props.startPosition != null ? props.startPosition : 0;\n\n\t\t/**\n     * Specifies how many times this MovieClip should loop. A value of -1 indicates it should loop indefinitely. A value of\n     * 1 would cause it to loop once (ie. play a total of twice).\n     * @property loop\n\t\t * @type {Number}\n\t\t * @default -1\n\t\t */\n\t\tif (typeof props.loop === \"number\") {\n\t\t\tthis.loop = props.loop;\n\t\t} else if (props.loop === false) {\n\t\t\tthis.loop = 0;\n\t\t} else {\n\t\t\tthis.loop = -1;\n\t\t}\n\n\t\t/**\n\t\t * The current frame of the movieclip.\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.currentFrame = 0;\n\n\t\t/**\n     * The TweenJS Timeline that is associated with this MovieClip. This is created automatically when the MovieClip\n     * instance is initialized. Animations are created by adding <a href=\"http://tweenjs.com\">TweenJS</a> Tween\n     * instances to the timeline.\n     *\n     * Elements can be added and removed from the timeline by toggling an \"_off\" property\n     * using the `tweenInstance.to()` method. Note that using `Tween.set` is not recommended to\n     * create MovieClip animations. The following example will toggle the target off on frame 0, and then back on for\n     * frame 1. You can use the \"visible\" property to achieve the same effect.\n     *\n     * @example\n     * let tween = Tween.get(target).to({x:0}).to({x:100}, 30);\n     * let mc = new MovieClip();\n     * mc.timeline.addTween(tween);\n     *\n     * @example\n     * Tween.get(target).to({_off:false})\n     *   .wait(1).to({_off:true})\n     *   .wait(1).to({_off:false});\n     *\n     * @type {easeljs.Timeline}\n\t\t */\n\t\tthis.timeline = new Timeline(Object.assign({ useTicks: true, paused: true }, props));\n\n\t\t/**\n\t\t * If true, the MovieClip's position will not advance when ticked.\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.paused = props.paused != null ? props.paused : false;\n\n\t\t/**\n\t\t * If true, actions in this MovieClip's tweens will be run when the playhead advances.\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.actionsEnabled = true;\n\n\t\t/**\n\t\t * If true, the MovieClip will automatically be reset to its first frame whenever the timeline adds\n\t\t * it back onto the display list. This only applies to MovieClip instances with mode=INDEPENDENT.\n\t\t * <br><br>\n\t\t * For example, if you had a character animation with a \"body\" child MovieClip instance\n\t\t * with different costumes on each frame, you could set `body.autoReset = false`, so that\n\t\t * you can manually change the frame it is on, without worrying that it will be reset\n\t\t * automatically.\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.autoReset = true;\n\n\t\t/**\n\t\t * An array of bounds for each frame in the MovieClip. This is mainly intended for tool output.\n\t\t * @type {Array}\n\t\t */\n\t\tthis.frameBounds = this.frameBounds || props.frameBounds; // frameBounds are set on the prototype in Animate.\n\n\t\t/**\n\t\t * By default MovieClip instances advance one frame per tick. Specifying a framerate for the MovieClip\n\t\t * will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t * framerate.\n\t\t *\n\t\t * For example, if a MovieClip with a framerate of 10 is placed on a Stage being updated at 40fps, then the MovieClip will\n\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t * vary slightly between frames.\n\t\t *\n\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t * passed into {@link easeljs.Stage#update}.\n\t\t * @type {Number}\n\t\t * @default null\n\t\t */\n\t\tthis.framerate = null;\n\n\t\t/**\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @private\n\t\t */\n\t\tthis._synchOffset = 0;\n\n\t\t/**\n\t\t * @type {Number}\n\t\t * @default -1\n\t\t * @private\n\t\t */\n\t\tthis._rawPosition = -1; // TODO: evaluate using a ._reset Boolean prop instead of -1.\n\n\t\t/**\n\t\t * The time remaining from the previous tick, only applicable when .framerate is set.\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\t\tthis._t = 0;\n\n\t\t/**\n\t\t * List of display objects that are actively being managed by the MovieClip.\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._managed = {};\n\n\t\t/**\n\t\t * @type {Function}\n\t\t * @private\n\t\t */\n\t\tthis._bound_resolveState = this._resolveState.bind(this);\n\t}\n\n\tstatic init () {\n\t\tif (MovieClip.inited) { return; }\n\t\t// plugins introduce some overhead to Tween, so we only install this if an MC is instantiated.\n\t\tMovieClipPlugin.install();\n\t\tMovieClip.inited = true;\n\t}\n\n\t// TODO: can we just proxy `get currentFrame` to timeline.position as well? Ditto for `get loop` (or just remove entirely).\n\t//\n\t/**\n\t * Returns an array of objects with label and position (aka frame) properties, sorted by position.\n\t * @see {@link tweenjs.Timeline#labels}\n\t * @type {Array}\n\t * @readonly\n\t */\n\tget labels () {\n\t\treturn this.timeline.labels;\n\t}\n\n\t/**\n\t * Returns the name of the label on or immediately before the current frame.\n\t * @see {@link tweenjs.Timeline#currentLabel}\n\t * for more information.\n\t * @type {String}\n\t * @readonly\n\t */\n\tget currentLabel () {\n\t\treturn this.timeline.currentLabel;\n\t}\n\n\t /**\n \t * Returns the duration of this MovieClip in seconds or ticks.\n \t * @see {@link tweenjs.Timeline#duration}\n \t * @type {Number}\n \t * @readonly\n \t */\n \tget duration () {\n\t\treturn this.timeline.duration;\n\t}\n\n\t/**\n\t * Returns the duration of this MovieClip in seconds or ticks. Identical to {@link easeljs.MovieClip#duration}\n\t * and provided for Adobe Flash/Animate API compatibility.\n\t * @see {@link tweenjs.Timeline#duration}\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget totalFrames () {\n\t\treturn this.duration;\n\t}\n\n\tisVisible () {\n\t\t// children are placed in draw, so we can't determine if we have content.\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n\t}\n\n\tdraw (ctx, ignoreCache) {\n\t\t// draw to cache first:\n\t\tif (this.drawCache(ctx, ignoreCache)) { return true; }\n    this._updateState();\n\t\tsuper.draw(ctx, ignoreCache);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Sets paused to false.\n\t */\n\tplay () {\n\t\tthis.paused = false;\n\t}\n\n\t/**\n\t * Sets paused to true.\n\t */\n\tstop () {\n\t\tthis.paused = true;\n\t}\n\n\t/**\n\t * Advances this movie clip to the specified position or label and plays the timeline.\n\t * @param {String | Number} positionOrLabel The animation name or frame number to go to.\n\t */\n\tgotoAndPlay (positionOrLabel) {\n\t\tthis.play();\n\t\tthis._goto(positionOrLabel);\n\t}\n\n\t/**\n\t * Advances this movie clip to the specified position or label and stops the timeline.\n\t * @param {String | Number} positionOrLabel The animation or frame name to go to.\n\t */\n\tgotoAndStop (positionOrLabel) {\n\t\tthis.stop();\n\t\tthis._goto(positionOrLabel);\n\t}\n\n\t/**\n\t * Advances the playhead. This occurs automatically each tick by default.\n\t * @param {Number} [time] The amount of time in ms to advance by. Only applicable if framerate is set.\n\t*/\n\tadvance (time) {\n\t\tif (this.mode !== MovieClip.INDEPENDENT) { return; } // update happens in draw for synched clips\n\t\t// if this MC doesn't have a framerate, hunt ancestors for one:\n\t\tlet o = this, fps = o.framerate;\n\t\twhile ((o = o.parent) && fps === null) {\n\t\t\tif (o.mode === MovieClip.INDEPENDENT) { fps = o._framerate; }\n\t\t}\n\t\tthis._framerate = fps;\n\n\t\tif (this.paused) { return; }\n\t\t// calculate how many frames to advance:\n\t\tlet t = (fps !== null && fps !== -1 && time !== null) ? time / (1000 / fps) + this._t : 1;\n\t\tlet frames = t | 0;\n\t\tthis._t = t - frames; // leftover time, save to add to next advance.\n\n\t\twhile (frames--) {\n\t\t\tthis._updateTimeline(this._rawPosition + 1, false);\n\t\t}\n\t}\n\n\t/**\n\t * MovieClip instances cannot be cloned.\n\t * @throws MovieClip cannot be cloned.\n\t */\n\tclone () {\n\t\t// TODO: add support for this? Need to clone the Timeline & retarget tweens - pretty complex.\n\t\tthrow \"MovieClip cannot be cloned.\";\n\t}\n\n\t_updateState () {\n\t\tif (this._rawPosition === -1 || this.mode !== MovieClip.INDEPENDENT) { this._updateTimeline(-1); }\n\t}\n\n\t_tick (evtObj) {\n\t\tthis.advance(evtObj && evtObj.delta);\n\t\tsuper._tick(evtObj);\n\t}\n\n\t/**\n\t * @param {String | Number} positionOrLabel The animation name or frame number to go to.\n\t * @protected\n\t */\n\t_goto (positionOrLabel) {\n\t\tlet pos = this.timeline.resolve(positionOrLabel);\n\t\tif (pos == null) { return; }\n\t\tthis._t = 0;\n\t\tthis._updateTimeline(pos, true);\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_reset () {\n\t\tthis._rawPosition = -1;\n\t\tthis._t = this.currentFrame = 0;\n\t\tthis.paused = false;\n\t}\n\n\t/**\n\t * @param {Number} rawPosition\n\t * @param {Boolean} jump Indicates whether this update is due to jumping (via gotoAndXX) to a new position.\n\t * @protected\n\t */\n\t_updateTimeline (rawPosition, jump) {\n\t\tlet synced = this.mode !== MovieClip.INDEPENDENT, tl = this.timeline;\n\t\tif (synced) { rawPosition = this.startPosition + (this.mode === MovieClip.SINGLE_FRAME ? 0 : this._synchOffset); }\n\t\tif (rawPosition < 1) { rawPosition = 0; }\n\t\tif (this._rawPosition === rawPosition && !synced) { return; }\n\t\tthis._rawPosition = rawPosition;\n\n\t\t// update timeline position, ignoring actions if this is a graphic.\n\t\ttl.loop = this.loop; // TODO: should we maintain this on MovieClip, or just have it on timeline?\n\t\ttl.setPosition(rawPosition, synced || !this.actionsEnabled, jump, this._bound_resolveState);\n\t}\n\n\t/**\n\t * Renders position 0 without running actions or updating _rawPosition.\n\t * Primarily used by Animate CC to build out the first frame in the constructor of MC symbols.\n\t * NOTE: not tested when run after the MC advances past the first frame.\n\t * @protected\n\t */\n\t_renderFirstFrame () {\n\t\tconst tl = this.timeline, pos = tl.rawPosition;\n\t\ttl.setPosition(0, true, true, this._bound_resolveState);\n\t\ttl.rawPosition = pos;\n\t}\n\n\t/**\n\t * Runs via a callback after timeline property updates and before actions.\n\t * @protected\n\t */\n\t_resolveState () {\n\t\tlet tl = this.timeline;\n\t\tthis.currentFrame = tl.position;\n\n\t\tfor (let n in this._managed) { this._managed[n] = 1; }\n\n\t\tlet tweens = tl.tweens;\n\t\tfor (let tween of tweens) {\n\t\t\tlet target = tween.target;\n\t\t\tif (target === this || tween.passive) { continue; } // TODO: this assumes the actions tween from Animate has `this` as the target. Likely a better approach.\n\t\t\tlet offset = tween._stepPosition;\n\n\t\t\tif (target instanceof DisplayObject) {\n\t\t\t\t// motion tween.\n\t\t\t\tthis._addManagedChild(target, offset);\n\t\t\t} else {\n\t\t\t\t// state tween.\n\t\t\t\tthis._setState(target.state, offset);\n\t\t\t}\n\t\t}\n\n\t\tlet kids = this.children;\n\t\tfor (let i=kids.length-1; i>=0; i--) {\n\t\t\tlet id = kids[i].id;\n\t\t\tif (this._managed[id] === 1) {\n\t\t\t\tthis.removeChildAt(i);\n\t\t\t\tdelete(this._managed[id]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Array} state\n\t * @param {Number} offset\n\t * @protected\n\t */\n\t_setState (state, offset) {\n\t\tif (!state) { return; }\n\t\tfor (let i = state.length - 1; i >= 0; i--) {\n\t\t\tlet o = state[i];\n\t\t\tlet target = o.t;\n\t\t\tlet props = o.p;\n\t\t\tfor (let n in props) { target[n] = props[n]; }\n\t\t\tthis._addManagedChild(target, offset);\n\t\t}\n\t}\n\n\t/**\n\t * Adds a child to the timeline, and sets it up as a managed child.\n\t * @param {easeljs.MovieClip} child The child MovieClip to manage\n\t * @param {Number} offset\n\t * @private\n\t */\n\t_addManagedChild (child, offset) {\n\t\tif (child._off) { return; }\n\t\tthis.addChildAt(child, 0);\n\n\t\tif (child instanceof MovieClip) {\n\t\t\tchild._synchOffset = offset;\n\t\t\t// TODO: this does not precisely match Adobe Flash/Animate, which loses track of the clip if it is renamed or removed from the timeline, which causes it to reset.\n      // TODO: should also reset when MovieClip loops, though that will be a bit tricky to detect.\n\t\t\tif (child.mode === MovieClip.INDEPENDENT && child.autoReset && !this._managed[child.id]) { child._reset(); }\n\t\t}\n\t\tthis._managed[child.id] = 2;\n\t}\n\n\t/**\n\t * @param {easeljs.Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform\n\t * @return {easeljs.Rectangle}\n\t * @protected\n\t */\n\t_getBounds (matrix, ignoreTransform) {\n\t\tlet bounds = this.getBounds();\n\t\tif (!bounds && this.frameBounds) { bounds = this._rectangle.copy(this.frameBounds[this.currentFrame]); }\n\t\tif (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\n\t\treturn super._getBounds(matrix, ignoreTransform);\n\t}\n\n}\n\n/**\n * The MovieClip will advance independently of its parent, even if its parent is paused.\n * This is the default mode.\n * @static\n * @type {String}\n * @default independent\n * @readonly\n */\nMovieClip.INDEPENDENT = \"independent\";\n/**\n * The MovieClip will only display a single frame (as determined by the startPosition property).\n * @static\n * @type {String}\n * @default single\n * @readonly\n */\nMovieClip.SINGLE_FRAME = \"single\";\n/**\n * The MovieClip will be advanced only when its parent advances and will be synched to the position of\n * the parent MovieClip.\n * @static\n * @type {String}\n * @default synched\n * @readonly\n */\nMovieClip.SYNCHED = \"synched\";\n/**\n * Has the MovieClipPlugin been installed to TweenJS yet?\n * @static\n * @type {Boolean}\n * @default false\n * @readonly\n */\nMovieClip.inited = false;\n\n/**\n * This plugin works with <a href=\"http://tweenjs.com\" target=\"_blank\">TweenJS</a> to prevent the startPosition property from tweening.\n * @todo update to new plugin model\n * @static\n * @inner\n */\nclass MovieClipPlugin {\n\n\tconstructor () {\n\t\tthrow \"MovieClipPlugin cannot be instantiated.\";\n\t}\n\n\t/**\n\t * @private\n\t */\n\tstatic install () {\n\t\tTween.installPlugin(MovieClipPlugin);\n\t}\n\n\t/**\n\t * @param {tweenjs.Tween} tween\n\t * @param {String} prop\n\t * @param {String|Number|Boolean} value\n\t * @private\n\t */\n\tstatic init (tween, prop, value) {\n\t\treturn value;\n\t}\n\n\t/**\n\t * @param {tweenjs.Tween} tween\n\t * @param {String} prop\n\t * @param {String | Number | Boolean} value\n\t * @param {Array} startValues\n\t * @param {Array} endValues\n\t * @param {Number} ratio\n\t * @param {Object} wait\n\t * @param {Object} end\n\t * @return {*}\n\t */\n\tstatic tween (tween, prop, value, startValues, endValues, ratio, wait, end) {\n\t\tif (!(tween.target instanceof MovieClip)) { return value; }\n\t\treturn (ratio === 1 ? endValues[prop] : startValues[prop]);\n\t}\n\n}\n\n/**\n * @static\n * @type {Number}\n * @default 100\n * @readonly\n */\nMovieClipPlugin.priority = 100;\n\n/**\n * @license Shadow\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * This class encapsulates the properties required to define a shadow to apply to a {@link easeljs.DisplayObject}\n * via its `shadow` property.\n *\n * @memberof easeljs\n * @example\n * img.shadow = new Shadow(\"#000000\", 5, 5, 10);\n *\n * @param {String} [color=black] The color of the shadow. This can be any valid CSS color value.\n * @param {Number} [offsetX=0] The x offset of the shadow in pixels.\n * @param {Number} [offsetY=0] The y offset of the shadow in pixels.\n * @param {Number} [blur=0] The size of the blurring effect.\n */\nclass Shadow {\n\n\tconstructor (color = \"black\", offsetX = 0, offsetY = 0, blur = 0) {\n\t\t/**\n\t\t * The color of the shadow. This can be any valid CSS color value.\n\t\t * @type {String}\n\t\t * @default black\n\t\t */\n\t\tthis.color = color;\n\n\t\t/**\n\t\t * The x offset of the shadow.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.offsetX = offsetX;\n\n\t\t/**\n\t\t * The y offset of the shadow.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.offsetY = offsetY;\n\n\t\t/**\n\t\t * The blur of the shadow.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.blur = blur;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String}\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * Returns a clone of this Shadow instance.\n\t * @return {Shadow} A clone of the current Shadow instance.\n\t */\n\tclone () {\n\t\treturn new Shadow(this.color, this.offsetX, this.offsetY, this.blur);\n\t}\n\n}\n\n/**\n * An identity shadow object (all properties are set to 0).\n * @type {easeljs.Shadow}\n * @static\n * @readonly\n */\nShadow.identity = new Shadow(\"transparent\");\n\n/**\n * @license Shape\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * A Shape allows you to display vector art in the display list. It composites a {@link easeljs.Graphics}\n * instance which exposes all of the vector drawing methods. The Graphics instance can be shared between multiple Shape\n * instances to display the same vector graphics with different positions or transforms.\n *\n * If the vector art will not change between draws, you may want to use the {@link easeljs.DisplayObject#cache}\n * method to reduce the rendering cost.\n *\n * @memberof easeljs\n * @example\n * var graphics = new Graphics().beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n * var shape = new Shape(graphics);\n * // Alternatively use can also use the graphics property of the Shape class to renderer the same as above.\n * var shape = new Shape();\n * shape.graphics.beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n *\n * @extends easeljs.DisplayObject\n * @param {easeljs.Graphics} [graphics] The graphics instance to display. If null, a new Graphics instance will be created.\n */\nclass Shape extends DisplayObject {\n\n\tconstructor (graphics = new Graphics()) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The graphics instance to display.\n\t\t * @type {easeljs.Graphics}\n\t\t */\n\t\tthis.graphics = graphics;\n\t}\n\n\tisVisible () {\n\t\tlet hasContent = this.cacheCanvas || (this.graphics && !this.graphics.isEmpty());\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t}\n\n\tdraw (ctx, ignoreCache = false) {\n\t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\t\tthis.graphics.draw(ctx, this);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns a clone of this Shape. Some properties that are specific to this instance's current context are reverted to\n\t * their defaults (for example .parent).\n\t * @override\n\t * @param {Boolean} [recursive=false] If true, this Shape's {@link easeljs.Graphics} instance will also be\n\t * cloned. If false, the Graphics instance will be shared with the new Shape.\n\t */\n\tclone (recursive = false) {\n\t\tlet g = (recursive && this.graphics) ? this.graphics.clone() : this.graphics;\n\t\treturn this._cloneProps(new Shape(g));\n\t}\n\n}\n\n/**\n * @license SpriteSheet\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPliED, INCLUDING BUT NOT liMITED TO THE WARRANTIES\n * OF MERCHANTABIliTY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HolDERS BE liABLE FOR ANY CLAIM, DAMAGES OR OTHER liABIliTY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEAliNGS IN THE SOFTWARE.\n */\n\n/**\n * Encapsulates the properties and methods associated with a sprite sheet. A sprite sheet is a series of images (usually\n * animation frames) combined into a larger image (or images). For example, an animation consisting of eight 100x100\n * images could be combined into a single 400x200 sprite sheet (4 frames across by 2 high).\n * <br />\n * The data passed to the SpriteSheet constructor defines:\n * <ol>\n * \t<li> The source image or images to use.</li>\n * \t<li> The positions of individual image frames.</li>\n * \t<li> Sequences of frames that form named animations. Optional.</li>\n * \t<li> The target playback framerate. Optional.</li>\n * </ol>\n *\n * <h3>SpriteSheet Format</h3>\n * SpriteSheets are an object with two required properties (`images` and `frames`), and two optional properties\n * (`framerate` and `animations`). This makes them easy to define in javascript code, or in JSON.\n *\n * <h4>images</h4>\n * An array of source images. Images can be either an HTMlimage\n * instance, or a uri to an image. The former is recommended to control preloading.\n *\n * \timages: [image1, \"path/to/image2.png\"],\n *\n * <h4>frames</h4>\n * Defines the individual frames. There are two supported formats for frame data:\n * When all of the frames are the same size (in a grid), use an object with `width`, `height`, `regX`, `regY`,\n * and `count` properties.\n *\n * <ul>\n *  <li>`width` & `height` are required and specify the dimensions of the frames</li>\n *  <li>`regX` & `regY` indicate the registration point or \"origin\" of the frames</li>\n *  <li>`spacing` indicate the spacing between frames</li>\n *  <li>`margin` specify the margin around the image(s)</li>\n *  <li>`count` allows you to specify the total number of frames in the spritesheet; if omitted, this will\n *  be calculated based on the dimensions of the source images and the frames. Frames will be assigned\n *  indexes based on their position in the source images (left to right, top to bottom).</li>\n * </ul>\n *\n *  \tframes: {width:64, height:64, count:20, regX: 32, regY:64, spacing:0, margin:0}\n *\n * If the frames are of different sizes, use an array of frame definitions. Each definition is itself an array\n * with 4 required and 3 optional entries, in the order:\n *\n * <ul>\n *  <li>The first four, `x`, `y`, `width`, and `height` are required and define the frame rectangle.</li>\n *  <li>The fifth, `imageIndex`, specifies the index of the source image (defaults to 0)</li>\n *  <li>The last two, `regX` and `regY` specify the registration point of the frame</li>\n * </ul>\n *\n * \tframes: [\n * \t\t// x, y, width, height, imageIndex*, regX*, regY*\n * \t\t[64, 0, 96, 64],\n * \t\t[0, 0, 64, 64, 1, 32, 32]\n * \t\t// etc.\n * \t]\n *\n * <h4>animations</h4>\n * Optional. An object defining sequences of frames to play as named animations. Each property corresponds to an\n * animation of the same name. Each animation must specify the frames to play, and may\n * also include a relative playback `speed` (ex. 2 would playback at double speed, 0.5 at half), and\n * the name of the `next` animation to sequence to after it completes.\n *\n * There are three formats supported for defining the frames in an animation, which can be mixed and matched as appropriate:\n * <ol>\n * \t<li>for a single frame animation, you can simply specify the frame index\n *\n * \t\tanimations: {\n * \t\t\tsit: 7\n * \t\t}\n *\n * </li>\n * <li>\n *      for an animation of consecutive frames, you can use an array with two required, and two optional entries\n * \t\tin the order: `start`, `end`, `next`, and `speed`. This will play the frames from start to end inclusive.\n *\n * \t\tanimations: {\n * \t\t\t// start, end, next*, speed*\n * \t\t\trun: [0, 8],\n * \t\t\tjump: [9, 12, \"run\", 2]\n * \t\t}\n *\n *  </li>\n *  <li>\n *     for non-consecutive frames, you can use an object with a `frames` property defining an array of frame\n *     indexes to play in order. The object can also specify `next` and `speed` properties.\n *\n * \t\tanimations: {\n * \t\t\twalk: {\n * \t\t\t\tframes: [1,2,3,3,2,1]\n * \t\t\t},\n * \t\t\tshoot: {\n * \t\t\t\tframes: [1,4,5,6],\n * \t\t\t\tnext: \"walk\",\n * \t\t\t\tspeed: 0.5\n * \t\t\t}\n * \t\t}\n *\n *  </li>\n * </ol>\n * <strong>Note:</strong> the `speed` property was added in EaselJS 0.7.0. Earlier versions had a `frequency`\n * property instead, which was the inverse of `speed`. For example, a value of \"4\" would be 1/4 normal speed in\n * earlier versions, but is 4x normal speed in EaselJS 0.7.0+.\n *\n * <h4>framerate</h4>\n * Optional. Indicates the default framerate to play this spritesheet at in frames per second. See\n * {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} for more information.\n *\n * \t\tframerate: 20\n *\n * Note that the Sprite framerate will only work if the stage update method is provided with the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n * event generated by the {{#crossLink \"Ticker\"}}{{/crossLink}}.\n *\n * \t\tcreatejs.Ticker.on(\"tick\", handleTick);\n * \t\tfunction handleTick(event) {\n *\t\t\tstage.update(event);\n *\t\t}\n *\n * <h3>Example</h3>\n * To define a simple sprite sheet, with a single image \"sprites.jpg\" arranged in a regular 50x50 grid with three\n * animations: \"stand\" showing the first frame, \"run\" looping frame 1-5 inclusive, and \"jump\" playing frame 6-8 and\n * sequencing back to run.\n *\n * \t\tvar data = {\n * \t\t\timages: [\"sprites.jpg\"],\n * \t\t\tframes: {width:50, height:50},\n * \t\t\tanimations: {\n * \t\t\t\tstand:0,\n * \t\t\t\trun:[1,5],\n * \t\t\t\tjump:[6,8,\"run\"]\n * \t\t\t}\n * \t\t};\n * \t\tvar spriteSheet = new createjs.SpriteSheet(data);\n * \t\tvar animation = new createjs.Sprite(spriteSheet, \"run\");\n *\n * <h3>Generating SpriteSheet Images</h3>\n * Spritesheets can be created manually by combining images in PhotoShop, and specifying the frame size or\n * coordinates manually, however there are a number of tools that facilitate this.\n * <ul>\n *     <li>Exporting SpriteSheets or HTML5 content from Adobe Flash/Animate supports the EaselJS SpriteSheet format.</li>\n *     <li>The popular <a href=\"https://www.codeandweb.com/texturepacker/easeljs\" target=\"_blank\">Texture Packer</a> has\n *     EaselJS support.\n *     <li>SWF animations in Adobe Flash/Animate can be exported to SpriteSheets using <a href=\"http://createjs.com/zoe\" target=\"_blank\"></a></li>\n * </ul>\n *\n * <h3>Cross Origin Issues</h3>\n * <strong>Warning:</strong> Images loaded cross-origin will throw cross-origin security errors when interacted with\n * using:\n * <ul>\n *     <li>a mouse</li>\n *     <li>methods such as {{#crossLink \"Container/getObjectUnderPoint\"}}{{/crossLink}}</li>\n *     <li>Filters (see {{#crossLink \"Filter\"}}{{/crossLink}})</li>\n *     <li>caching (see {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}})</li>\n * </ul>\n * You can get around this by setting `crossOrigin` property on your images before passing them to EaselJS, or\n * setting the `crossOrigin` property on PreloadJS' LoadQueue or LoadItems.\n *\n * \t\tvar image = new Image();\n * \t\timg.crossOrigin=\"Anonymous\";\n * \t\timg.src = \"http://server-with-CORS-support.com/path/to/image.jpg\";\n *\n * If you pass string paths to SpriteSheets, they will not work cross-origin. The server that stores the image must\n * support cross-origin requests, or this will not work. For more information, check out\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\" target=\"_blank\">CORS overview on MDN</a>.\n *\n * @memberof easeljs\n * @extends core.EventDispatcher\n * @param {Object} data An object describing the SpriteSheet data.\n */\nclass SpriteSheet extends EventDispatcher {\n\n\tconstructor (data) {\n\t\tsuper();\n\n\t\t/**\n\t\t * Indicates whether all images are finished loading.\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t */\n\t\tthis.complete = true;\n\n\t\t/**\n\t\t * Specifies the framerate to use by default for Sprite instances using the SpriteSheet. See the Sprite class\n\t\t * {@link easeljs.Sprite#framerate} for more information.\n\t\t * @type Number\n\t\t */\n\t\tthis.framerate = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._animations = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._frames = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._images = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Object}\n\t\t */\n\t\tthis._data = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._loadCount = 0;\n\n\t\t// only used for simple frame defs:\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._frameHeight = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._frameWidth = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._numFrames = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._regX = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._regY = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._spacing = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._margin = 0;\n\n\t\tthis._parseData(data);\n\t}\n\n\t/**\n\t * Returns an array of all available animation names available on this sprite sheet as strings.\n\t * @type {Array}\n\t * @readonly\n\t */\n\tget animations () {\n\t\treturn this._animations.slice();\n\t}\n\n\t/**\n\t * Returns the total number of frames in the specified animation, or in the whole sprite\n\t * sheet if the animation param is omitted. Returns 0 if the spritesheet relies on calculated frame counts, and\n\t * the images have not been fully loaded.\n\t * @param {String} animation The name of the animation to get a frame count for.\n\t * @return {Number} The number of frames in the animation, or in the entire sprite sheet if the animation param is omitted.\n\t */\n\tgetNumFrames (animation) {\n\t\tif (animation == null) {\n\t\t\treturn this._frames ? this._frames.length : this._numFrames || 0;\n\t\t} else {\n\t\t\tlet data = this._data[animation];\n\t\t\tif (data == null) { return 0; }\n\t\t\telse { return data.frames.length; }\n\t\t}\n\t}\n\n\t/**\n\t * Returns an object defining the specified animation. The returned object contains:\n\t * <ul>\n\t * \t<li>frames: an array of the frame ids in the animation</li>\n\t * \t<li>speed: the playback speed for this animation</li>\n\t * \t<li>name: the name of the animation</li>\n\t * \t<li>next: the default animation to play next. If the animation loops, the name and next property will be the same.</li>\n\t * </ul>\n\t * @param {String} name The name of the animation to get.\n\t * @return {Object} a generic object with frames, speed, name, and next properties.\n\t */\n\tgetAnimation (name) {\n\t\treturn this._data[name];\n\t}\n\n\t/**\n\t * Returns an object specifying the image and source rect of the specified frame. The returned object has:\n\t * <ul>\n\t * \t<li>an image property holding a reference to the image object in which the frame is found</li>\n\t * \t<li>a rect property containing a Rectangle instance which defines the boundaries for the frame within that image.</li>\n\t * \t<li> A regX and regY property corresponding to the regX/Y values for the frame.\n\t * </ul>\n\t * @param {Number} frameIndex The index of the frame.\n\t * @return {Object} a generic object with image and rect properties. Returns null if the frame does not exist.\n\t */\n\tgetFrame (frameIndex) {\n\t\tlet frame;\n\t\tif (this._frames && (frame = this._frames[frameIndex])) { return frame; }\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns a {@link easeljs.Rectangle} instance defining the bounds of the specified frame relative\n\t * to the origin.\n\t *\n\t * @param {Number} frameIndex The index of the frame.\n\t * @param {easeljs.Rectangle} [rectangle] A Rectangle instance to copy the values into. By default a new instance is created.\n\t * @return {easeljs.Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n\t */\n\tgetFrameBounds (frameIndex, rectangle = new Rectangle()) {\n\t\tlet frame = this.getFrame(frameIndex);\n\t\treturn frame ? rectangle.setValues(-frame.regX, -frame.regY, frame.rect.width, frame.rect.height) : null;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * SpriteSheet cannot be cloned. A SpriteSheet can be shared by multiple Sprite instances without cloning it.\n\t * @override\n\t * @throws SpriteSheet cannot be cloned.\n\t */\n\tclone () {\n\t\tthrow \"SpriteSheet cannot be cloned.\";\n\t}\n\n\t/**\n\t * @param {Object} data An object describing the SpriteSheet data.\n\t * @protected\n\t */\n\t_parseData (data) {\n\t\tif (data == null) { return; }\n\t\tthis.framerate = data.framerate||0;\n\n\t\t// parse images:\n\t\tif (data.images) {\n\t\t\tfor (let img of data.images) {\n\t\t\t\tlet a = this._images = [];\n\t\t\t\tlet src;\n\t\t\t\tif (typeof img === \"string\") {\n\t\t\t\t\tsrc = img;\n\t\t\t\t\timg = document.createElement(\"img\");\n\t\t\t\t\timg.src = src;\n\t\t\t\t}\n\t\t\t\ta.push(img);\n\t\t\t\tif (!img.getContext && !img.naturalWidth) {\n\t\t\t\t\tthis._loadCount++;\n\t\t\t\t\tthis.complete = false;\n\t\t\t\t\timg.onload = () => this._handleImageLoad(src);\n\t\t\t\t\timg.onerror = () => this._handleImageError(src);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// parse frames:\n\t\tif (data.frames != null) {\n\t\t\tif (Array.isArray(data.frames)) {\n\t\t\t\tthis._frames = [];\n\t\t\t\tfor (let arr of data.frames) {\n\t\t\t\t\tthis._frames.push({image:this._images[arr[4]?arr[4]:0], rect:new Rectangle(arr[0],arr[1],arr[2],arr[3]), regX:arr[5]||0, regY:arr[6]||0 });\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet o = data.frames;\n\t\t\t\tthis._frameWidth = o.width;\n\t\t\t\tthis._frameHeight = o.height;\n\t\t\t\tthis._regX = o.regX||0;\n\t\t\t\tthis._regY = o.regY||0;\n\t\t\t\tthis._spacing = o.spacing||0;\n\t\t\t\tthis._margin = o.margin||0;\n\t\t\t\tthis._numFrames = o.count;\n\t\t\t\tif (this._loadCount === 0) { this._calculateFrames(); }\n\t\t\t}\n\t\t}\n\n\t\t// parse animations:\n\t\tthis._animations = [];\n\t\tif (data.animations != null) {\n\t\t\tthis._data = {};\n\t\t\tlet o = data.animations;\n\t\t\tfor (let name in o) {\n\t\t\t\tlet anim = { name };\n\t\t\t\tlet obj = o[name];\n\t\t\t\tlet a;\n\t\t\t\tif (typeof obj === \"number\") { // single frame\n\t\t\t\t\ta = anim.frames = [obj];\n\t\t\t\t} else if (Array.isArray(obj)) { // simple\n\t\t\t\t\tif (obj.length === 1) { anim.frames = [obj[0]]; }\n\t\t\t\t\telse {\n\t\t\t\t\t\tanim.speed = obj[3];\n\t\t\t\t\t\tanim.next = obj[2];\n\t\t\t\t\t\ta = anim.frames = [];\n\t\t\t\t\t\tfor (let i=obj[0];i<=obj[1];i++) {\n\t\t\t\t\t\t\ta.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else { // complex\n\t\t\t\t\tanim.speed = obj.speed;\n\t\t\t\t\tanim.next = obj.next;\n\t\t\t\t\tlet frames = obj.frames;\n\t\t\t\t\ta = anim.frames = (typeof frames === \"number\") ? [frames] : frames.slice(0);\n\t\t\t\t}\n\t\t\t\tif (anim.next === true || anim.next === undefined) { anim.next = name; } // loop\n\t\t\t\tif (anim.next === false || (a.length < 2 && anim.next === name)) { anim.next = null; } // stop\n\t\t\t\tif (!anim.speed) { anim.speed = 1; }\n\t\t\t\tthis._animations.push(name);\n\t\t\t\tthis._data[name] = anim;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @emits easeljs.SpriteSheet#event:complete\n\t * @protected\n\t * @param {Object} src\n\t */\n\t _handleImageLoad (src) {\n\t\tif (--this._loadCount === 0) {\n\t\t\tthis._calculateFrames();\n\t\t\tthis.complete = true;\n\t\t\tthis.dispatchEvent(\"complete\");\n\t\t}\n\t}\n\n\t/**\n\t * @emits easeljs.SpriteSheet#event:complete\n\t * @emits easeljs.SpriteSheet#event:error\n\t * @protected\n\t * @param {Object} src\n\t */\n\t_handleImageError (src) {\n\t\tlet errorEvent = new Event(\"error\");\n\t\terrorEvent.src = src;\n\t\tthis.dispatchEvent(errorEvent);\n\n\t\t// Complete is still dispatched.\n\t\tif (--this._loadCount === 0) {\n\t\t\tthis.dispatchEvent(\"complete\");\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\t_calculateFrames () {\n\t\tif (this._frames || this._frameWidth === 0) { return; }\n\n\t\tthis._frames = [];\n\n\t\tlet maxFrames = this._numFrames || 100000; // if we go over this, something is wrong.\n\t\tlet frameCount = 0, frameWidth = this._frameWidth, frameHeight = this._frameHeight;\n\t\tlet spacing = this._spacing, margin = this._margin;\n\n\t\timgLoop:\n\t\tfor (let i=0, imgs=this._images, l=imgs.length; i<l; i++) {\n\t\t\tlet img = imgs[i],\n\t\t\t\timgW = (img.width||img.naturalWidth),\n\t\t\t\timgH = (img.height||img.naturalHeight);\n\n\t\t\tlet y = margin;\n\t\t\twhile (y <= imgH-margin-frameHeight) {\n\t\t\t\tlet x = margin;\n\t\t\t\twhile (x <= imgW-margin-frameWidth) {\n\t\t\t\t\tif (frameCount >= maxFrames) { break imgLoop; }\n\t\t\t\t\tframeCount++;\n\t\t\t\t\tthis._frames.push({\n\t\t\t\t\t\timage: img,\n\t\t\t\t\t\trect: new Rectangle(x, y, frameWidth, frameHeight),\n\t\t\t\t\t\tregX: this._regX,\n\t\t\t\t\t\tregY: this._regY\n\t\t\t\t\t});\n\t\t\t\t\tx += frameWidth+spacing;\n\t\t\t\t}\n\t\t\t\ty += frameHeight+spacing;\n\t\t\t}\n\t\t}\n\t\tthis._numFrames = frameCount;\n\t}\n\n}\n\n/**\n * Dispatched when all images are loaded.  Note that this only fires if the images\n * were not fully loaded when the sprite sheet was initialized. You should check the complete property\n * to prior to adding a listener. Ex.\n *\n * \tvar sheet = new createjs.SpriteSheet(data);\n * \tif (!sheet.complete) {\n * \t\t// not preloaded, listen for the complete event:\n * \t\tsheet.addEventListener(\"complete\", handler);\n * \t}\n *\n * @event easeljs.SpriteSheet#complete\n * @property {Object} target The object that dispatched the event.\n * @property {String} type The event type.\n * @since 0.6.0\n */\n\n/**\n * Dispatched when getFrame is called with a valid frame index. This is primarily intended for use by {@link easeljs.SpriteSheetBuilder}\n * when doing on-demand rendering.\n * @event easeljs.SpriteSheet#getframe\n * @property {Number} index The frame index.\n * @property {Object} frame The frame object that getFrame will return.\n */\n\n/**\n * Dispatched when an image encounters an error. A SpriteSheet will dispatch an error event for each image that\n * encounters an error, and will still dispatch a {@link easeljs.SpriteSheet#event:complete}\n * event once all images are finished processing, even if an error is encountered.\n * @event easeljs.SpriteSheet#error\n * @property {String} src The source of the image that failed to load.\n * @since 0.8.2\n */\n\n/**\n * @license Text\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Display one or more lines of dynamic text (not user editable) in the display list. Line wrapping support (using the\n * lineWidth) is very basic, wrapping on spaces and tabs only. Note that as an alternative to Text, you can position HTML\n * text above or below the canvas relative to items in the display list using the {@link easeljs.DisplayObject#localToGlobal}\n * method, or using {@link easeljs.DOMElement}.\n *\n * <b>Please note that Text does not support HTML text, and can only display one font style at a time.</b> To use\n * multiple font styles, you will need to create multiple text instances, and position them manually.\n *\n * CreateJS Text supports web fonts (the same rules as Canvas). The font must be loaded and supported by the browser\n * before it can be displayed.\n *\n * <strong>Note:</strong> Text can be expensive to generate, so cache instances where possible. Be aware that not all\n * browsers will render Text exactly the same.\n *\n * @memberof easeljs\n * @extends easeljs.DisplayObject\n * @example\n * let text = new Text(\"Hello World\", \"20px Arial\", \"#ff7700\");\n * text.x = 100;\n * text.textBaseline = \"alphabetic\";\n *\n * @param {String} [text] The text to display.\n * @param {String} [font] The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold\n * 36px Arial\").\n * @param {String} [color] The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex.\n * \"#F00\", \"red\", or \"#FF0000\").\n */\nclass Text extends DisplayObject {\n\n\tconstructor (text, font, color) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The text to display.\n\t\t * @type {String}\n\t\t */\n\t\tthis.text = text;\n\n\t\t/**\n\t\t * The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold 36px Arial\").\n\t\t * @type {String}\n\t\t */\n\t\tthis.font = font;\n\n\t\t/**\n\t\t * The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex. \"#F00\"). Default is \"#000\".\n\t\t * It will also accept valid canvas fillStyle values.\n\t\t * @type {String}\n\t\t */\n\t\tthis.color = color;\n\n\t\t/**\n\t\t * The horizontal text alignment. Any of \"start\", \"end\", \"left\", \"right\", and \"center\".\n\t\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles \"WHATWG spec\"}\n\t\t * @type {String}\n\t\t * @default left\n\t\t */\n\t\tthis.textAlign = \"left\";\n\n\t\t/**\n\t\t * The vertical alignment point on the font. Any of \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", or \"bottom\".\n\t\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles \"WHATWG spec\"}\n\t\t * @type {String}\n\t\t * @default top\n\t\t*/\n\t\tthis.textBaseline = \"top\";\n\n\t\t/**\n\t\t * The maximum width to draw the text. If maxWidth is specified (not null), the text will be condensed or\n\t\t * shrunk to make it fit in this width.\n\t\t * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles \"WHATWG spec\"}\n\t\t * @type {Number}\n\t\t*/\n\t\tthis.maxWidth = null;\n\n\t\t/**\n\t\t * If greater than 0, the text will be drawn as a stroke (outline) of the specified width.\n\t\t * @type {Number}\n\t\t */\n\t\tthis.outline = 0;\n\n\t\t/**\n\t\t * Indicates the line height (vertical distance between baselines) for multi-line text. If null or 0,\n\t\t * the value of getMeasuredLineHeight is used.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.lineHeight = 0;\n\n\t\t/**\n\t\t * Indicates the maximum width for a line of text before it is wrapped to multiple lines. If null,\n\t\t * the text will not be wrapped.\n\t\t * @type {Number}\n\t\t */\n\t\tthis.lineWidth = null;\n\t}\n\n \tisVisible () {\n \t\tlet hasContent = this.cacheCanvas || (this.text != null && this.text !== \"\");\n \t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n \t}\n\n \tdraw (ctx, ignoreCache) {\n \t\tif (super.draw(ctx, ignoreCache)) { return true; }\n\n \t\tlet col = this.color || \"#000\";\n \t\tif (this.outline) { ctx.strokeStyle = col; ctx.lineWidth = this.outline*1; }\n \t\telse { ctx.fillStyle = col; }\n\n \t\tthis._drawText(this._prepContext(ctx));\n \t\treturn true;\n \t}\n\n \t/**\n \t * Returns the measured, untransformed width of the text without wrapping. Use getBounds for a more robust value.\n \t * @return {Number} The measured, untransformed width of the text.\n \t */\n \tgetMeasuredWidth () {\n \t\treturn this._getMeasuredWidth(this.text);\n \t}\n\n \t/**\n \t * Returns an approximate line height of the text, ignoring the lineHeight property. This is based on the measured\n \t * width of a \"M\" character multiplied by 1.2, which provides an approximate line height for most fonts.\n \t * @return {Number} an approximate line height of the text, ignoring the lineHeight property. This is\n \t * based on the measured width of a \"M\" character multiplied by 1.2, which approximates em for most fonts.\n \t */\n \tgetMeasuredLineHeight () {\n \t\treturn this._getMeasuredWidth(\"M\")*1.2;\n \t}\n\n \t/**\n \t * Returns the approximate height of multi-line text by multiplying the number of lines against either the\n \t * `lineHeight` (if specified) or {@link easeljs.Text#getMeasuredLineHeight}. Note that\n \t * this operation requires the text flowing logic to run, which has an associated CPU cost.\n \t * @return {Number} The approximate height of the untransformed multi-line text.\n \t */\n \tgetMeasuredHeight () {\n \t\treturn this._drawText(null, {}).height;\n \t}\n\n \tgetBounds () {\n \t\tlet rect = super.getBounds();\n \t\tif (rect) { return rect; }\n \t\tif (this.text == null || this.text === \"\") { return null; }\n \t\tlet o = this._drawText(null, {});\n \t\tlet w = (this.maxWidth && this.maxWidth < o.width) ? this.maxWidth : o.width;\n \t\tlet x = w * Text.H_OFFSETS[this.textAlign||\"left\"];\n \t\tlet lineHeight = this.lineHeight||this.getMeasuredLineHeight();\n \t\tlet y = lineHeight * Text.V_OFFSETS[this.textBaseline||\"top\"];\n \t\treturn this._rectangle.setValues(x, y, w, o.height);\n \t}\n\n \t/**\n \t * Returns an object with width, height, and lines properties. The width and height are the visual width and height\n \t * of the drawn text. The lines property contains an array of strings, one for\n \t * each line of text that will be drawn, accounting for line breaks and wrapping. These strings have trailing\n \t * whitespace removed.\n \t * @return {Object} An object with width, height, and lines properties.\n \t */\n \tgetMetrics () {\n \t\tlet o = {lines:[]};\n \t\to.lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n \t\to.vOffset = o.lineHeight * Text.V_OFFSETS[this.textBaseline||\"top\"];\n \t\treturn this._drawText(null, o, o.lines);\n \t}\n\n \t/**\n \t * Returns a clone of the Text instance.\n \t * @return {easeljs.Text} a clone of the Text instance.\n \t */\n \tclone () {\n \t\treturn this._cloneProps(new Text(this.text, this.font, this.color));\n \t}\n\n \t/**\n \t * Returns a string representation of this object.\n \t * @override\n \t * @return {String} a string representation of the instance.\n \t */\n \ttoString () {\n \t\treturn `[${this.constructor.name} (text=${this.text.length > 20 ? `${this.text.substr(0, 17)}...` : this.text})]`;\n \t}\n\n \t/**\n \t * @param {easeljs.Text} o\n \t * @protected\n \t * @return {easeljs.Text} o\n \t */\n \t_cloneProps (o) {\n \t\tsuper._cloneProps(o);\n \t\to.textAlign = this.textAlign;\n \t\to.textBaseline = this.textBaseline;\n \t\to.maxWidth = this.maxWidth;\n \t\to.outline = this.outline;\n \t\to.lineHeight = this.lineHeight;\n \t\to.lineWidth = this.lineWidth;\n \t\treturn o;\n \t}\n\n \t/**\n \t * @param {CanvasRenderingContext2D} ctx\n \t * @return {CanvasRenderingContext2D}\n \t * @protected\n \t */\n \t_prepContext (ctx) {\n \t\tctx.font = this.font||\"10px sans-serif\";\n \t\tctx.textAlign = this.textAlign||\"left\";\n \t\tctx.textBaseline = this.textBaseline||\"top\";\n\t\tctx.lineJoin = \"miter\";\n\t\tctx.miterLimit = 2.5;\n\t\treturn ctx;\n\t}\n\n\t/**\n\t * Draws multiline text.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Object} o\n\t * @param {Array} lines\n\t * @return {Object}\n\t * @protected\n\t */\n \t_drawText (ctx, o, lines) {\n \t\tconst paint = !!ctx;\n \t\tif (!paint) {\n \t\t\tctx = Text._ctx;\n \t\t\tctx.save();\n \t\t\tthis._prepContext(ctx);\n \t\t}\n \t\tlet lineHeight = this.lineHeight||this.getMeasuredLineHeight();\n\n \t\tlet maxW = 0, count = 0;\n \t\tlet hardLines = String(this.text).split(/(?:\\r\\n|\\r|\\n)/);\n \t\tfor (let str of hardLines) {\n \t\t\tlet w = null;\n\n \t\t\tif (this.lineWidth != null && (w = ctx.measureText(str).width) > this.lineWidth) {\n \t\t\t\t// text wrapping:\n \t\t\t\tlet words = str.split(/(\\s)/);\n \t\t\t\tstr = words[0];\n \t\t\t\tw = ctx.measureText(str).width;\n\n\t\t\t\tconst l = words.length;\n \t\t\t\tfor (let i=1; i<l; i+=2) {\n \t\t\t\t\t// Line needs to wrap:\n \t\t\t\t\tlet wordW = ctx.measureText(words[i] + words[i+1]).width;\n \t\t\t\t\tif (w + wordW > this.lineWidth) {\n \t\t\t\t\t\tif (paint) { this._drawTextLine(ctx, str, count*lineHeight); }\n \t\t\t\t\t\tif (lines) { lines.push(str); }\n \t\t\t\t\t\tif (w > maxW) { maxW = w; }\n \t\t\t\t\t\tstr = words[i+1];\n \t\t\t\t\t\tw = ctx.measureText(str).width;\n \t\t\t\t\t\tcount++;\n \t\t\t\t\t} else {\n \t\t\t\t\t\tstr += words[i] + words[i+1];\n \t\t\t\t\t\tw += wordW;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n\n \t\t\tif (paint) { this._drawTextLine(ctx, str, count*lineHeight); }\n \t\t\tif (lines) { lines.push(str); }\n \t\t\tif (o && w == null) { w = ctx.measureText(str).width; }\n \t\t\tif (w > maxW) { maxW = w; }\n \t\t\tcount++;\n \t\t}\n\n \t\tif (o) {\n \t\t\to.width = maxW;\n \t\t\to.height = count*lineHeight;\n \t\t}\n \t\tif (!paint) { ctx.restore(); }\n \t\treturn o;\n \t}\n\n \t/**\n \t * @param {CanvasRenderingContext2D} ctx\n \t * @param {String} text\n \t * @param {Number} y\n \t * @protected\n \t */\n \t_drawTextLine (ctx, text, y) {\n \t\t// Chrome 17 will fail to draw the text if the last param is included but null, so we feed it a large value instead:\n \t\tif (this.outline) { ctx.strokeText(text, 0, y, this.maxWidth||0xFFFF); }\n \t\telse { ctx.fillText(text, 0, y, this.maxWidth||0xFFFF); }\n \t}\n\n \t/**\n \t * @param {String} text\n \t * @protected\n \t */\n \t_getMeasuredWidth (text) {\n \t\tlet ctx = Text._ctx;\n \t\tctx.save();\n \t\tlet w = this._prepContext(ctx).measureText(text).width;\n \t\tctx.restore();\n \t\treturn w;\n \t}\n\n}\n\n/**\n * Lookup table for the ratio to offset bounds x calculations based on the textAlign property.\n * @type {Object}\n * @readonly\n * @static\n */\nText.H_OFFSETS = {start: 0, left: 0, center: -0.5, end: -1, right: -1};\n/**\n * Lookup table for the ratio to offset bounds y calculations based on the textBaseline property.\n * @type {Object}\n * @readonly\n * @static\n */\nText.V_OFFSETS = {top: 0, hanging: -0.01, middle: -0.4, alphabetic: -0.8, ideographic: -0.85, bottom: -1};\n\n/**\n * @property _ctx\n * @type {CanvasRenderingContext2D}\n * @private\n * @static\n */\nText._ctx = createCanvas().getContext(\"2d\");\n\n/**\n * @license AlphaMapFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Applies a greyscale alpha map image (or canvas) to the target, such that the alpha channel of the result will\n * be copied from the red channel of the map, and the RGB channels will be copied from the target.\n *\n * Generally, it is recommended that you use {@link easeljs.AlphaMaskFilter}, because it has much better performance.\n *\n * @memberof easeljs\n * @extends easeljs.Filter\n * @example *\n * let box = new Shape();\n * box.graphics.beginLinearGradientFill([\"#ff0000\", \"#0000ff\"], [0, 1], 0, 0, 0, 100)\n * box.graphics.drawRect(0, 0, 100, 100);\n * box.cache(0, 0, 100, 100);\n * let bmp = new Bitmap(\"path/to/image.jpg\");\n * bmp.filters = [ new AlphaMapFilter(box.cacheCanvas) ];\n * bmp.cache(0, 0, 100, 100);\n *\n * @param {HTMLImageElement | HTMLCanvasElement} alphaMap The greyscale image (or canvas) to use as the alpha value for the\n * result. This should be exactly the same dimensions as the target.\n */\nclass AlphaMapFilter extends Filter {\n\n\tconstructor (alphaMap) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The greyscale image (or canvas) to use as the alpha value for the result. This should be exactly the same\n\t\t * dimensions as the target.\n\t\t * @type {HTMLImageElement | HTMLCanvasElement}\n\t\t */\n\t\tthis.alphaMap = alphaMap;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {HTMLImageElement | HTMLCanvasElement}\n\t\t * @default null\n\t\t */\n\t\tthis._alphaMap = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Uint8ClampedArray}\n\t\t * @default null\n\t\t */\n\t\tthis._mapData = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {*}\n\t\t * @default null\n\t\t */\n\t\tthis._mapTexture = null;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform sampler2D uAlphaSampler;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\t\t\t\tvec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\n\n\t\t\t\t// some image formats can have transparent white rgba(1,1,1, 0) when put on the GPU, this means we need a slight tweak\n\t\t\t\t// using ceil ensure that the colour will be used so long as it exists but pure transparency will be treated black\n\t\t\t\tgl_FragColor = vec4(color.rgb, color.a * (alphaMap.r * ceil(alphaMap.a)));\n\t\t\t}\n\t\t`;\n\t}\n\n\t/**\n\t * @todo docs\n\t * @param {*} gl\n\t * @param {*} stage\n\t * @param {*} shaderProgram\n\t */\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tif (!this._mapTexture) { this._mapTexture = gl.createTexture(); }\n\n\t\tgl.activeTexture(gl.TEXTURE1);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n\t\tstage.setTextureParams(gl);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.alphaMap);\n\n\t\tgl.uniform1i(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uAlphaSampler\"),\n\t\t\t1\n\t\t);\n\t}\n\n\t/**\n\t * @return {easeljs.AlphaMapFilter}\n\t */\n\tclone () {\n\t\tlet o = new AlphaMapFilter(this.alphaMap);\n\t\to._alphaMap = this._alphaMap;\n\t\to._mapData = this._mapData;\n\t\treturn o;\n\t}\n\n\t_applyFilter (imageData) {\n\t\tif (!this.alphaMap) { return true; }\n\t\tif (!this._prepAlphaMap()) { return false; }\n\n\t\t// TODO: update to support scenarios where the target has different dimensions.\n\t\tlet data = imageData.data;\n\t\tlet map = this._mapData;\n\t\tconst l = data.length;\n\t\tfor (let i=0; i<l; i += 4) { data[i + 3] = map[i] || 0; }\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\t_prepAlphaMap () {\n\t\tif (!this.alphaMap) { return false; }\n\t\tif (this.alphaMap === this._alphaMap && this._mapData) { return true; }\n\t\tthis._mapData = null;\n\n\t\tlet map = this._alphaMap = this.alphaMap;\n\t\tlet canvas = map;\n\t\tlet ctx;\n\t\tif (map instanceof HTMLCanvasElement) {\n\t\t\tctx = canvas.getContext(\"2d\");\n\t\t} else {\n\t\t\tcanvas = window.createjs && createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n\t\t\tcanvas.width = map.width;\n\t\t\tcanvas.height = map.height;\n\t\t\tctx = canvas.getContext(\"2d\");\n\t\t\tctx.drawImage(map, 0, 0);\n\t\t}\n\n\t\ttry {\n\t\t\tthis._mapData = ctx.getImageData(0, 0, map.width, map.height).data;\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t//if (!this.suppressCrossDomainErrors) throw new Error(\"unable to access local image data: \" + e);\n\t\t\treturn false;\n\t\t}\n\t}\n\n}\n\n/**\n * @license AlphaMaskFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Applies the alpha from the mask image (or canvas) to the target, such that the alpha channel of the result will\n * be derived from the mask, and the RGB channels will be copied from the target. This can be used, for example, to\n * apply an alpha mask to a display object. This can also be used to combine a JPG compressed RGB image with a PNG32\n * alpha mask, which can result in a much smaller file size than a single PNG32 containing ARGB.\n *\n * <b>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</b>\n *\n * @memberof easeljs\n * @extends easeljs.Filter\n * @example\n * var box = new Shape();\n * box.graphics.beginLinearGradientFill([\"#000000\", \"rgba(0, 0, 0, 0)\"], [0, 1], 0, 0, 100, 100)\n * box.graphics.drawRect(0, 0, 100, 100);\n * box.cache(0, 0, 100, 100);\n * var bmp = new Bitmap(\"path/to/image.jpg\");\n * bmp.filters = [ new AlphaMaskFilter(box.cacheCanvas) ];\n * bmp.cache(0, 0, 100, 100);\n *\n * @param {HTMLImageElement | HTMLCanvasElement} mask\n */\nclass AlphaMaskFilter extends Filter {\n\n\tconstructor (mask) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The image (or canvas) to use as the mask.\n\t\t * @type {HTMLImageElement | HTMLCanvasElement}\n\t\t */\n\t\tthis.mask = mask;\n\n\t\tthis.usesContext = true;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform sampler2D uAlphaSampler;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\t\t\t\tvec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\n\n\t\t\t\tgl_FragColor = vec4(color.rgb, color.a * alphaMap.a);\n\t\t\t}\n\t\t`;\n\t}\n\n\t/**\n\t * Applies the filter to the specified context.\n\t *\n\t * <strong>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</strong>\n\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t * @param {Number} x The x position to use for the source rect.\n\t * @param {Number} y The y position to use for the source rect.\n\t * @param {Number} width The width to use for the source rect.\n\t * @param {Number} height The height to use for the source rect.\n\t * @param {CanvasRenderingContext2D} [targetCtx] NOT SUPPORTED IN THIS FILTER. The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t * @param {Number} [targetX] NOT SUPPORTED IN THIS FILTER. The x position to draw the result to. Defaults to the value passed to x.\n\t * @param {Number} [targetY] NOT SUPPORTED IN THIS FILTER. The y position to draw the result to. Defaults to the value passed to y.\n\t * @return {Boolean} If the filter was applied successfully.\n\t */\n\tapplyFilter (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t\tif (!this.mask) { return true; }\n\t\ttargetCtx = targetCtx || ctx;\n\t\tif (targetX == null) { targetX = x; }\n\t\tif (targetY == null) { targetY = y; }\n\n\t\ttargetCtx.save();\n\t\tif (ctx != targetCtx) {\n\t\t\t// TODO: support targetCtx and targetX/Y\n\t\t\t// clearRect, then draw the ctx in?\n\t\t\treturn false;\n\t\t}\n\n\t\ttargetCtx.globalCompositeOperation = \"destination-in\";\n\t\ttargetCtx.drawImage(this.mask, targetX, targetY);\n\t\ttargetCtx.restore();\n\t\treturn true;\n\t}\n\n\t/**\n\t * @return {easeljs.AlphaMaskFilter}\n\t */\n\tclone () {\n\t\treturn new AlphaMaskFilter(this.mask);\n\t}\n\n\t/**\n\t * @todo docs\n\t * @param {*} gl\n\t * @param {*} stage\n\t * @param {*} shaderProgram\n\t */\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tif(!this._mapTexture) { this._mapTexture = gl.createTexture(); }\n\n\t\tgl.activeTexture(gl.TEXTURE1);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n\t\tstage.setTextureParams(gl);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.mask);\n\n\t\tgl.uniform1i(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uAlphaSampler\"),\n\t\t\t1\n\t\t);\n\t}\n\n}\n\n/**\n * @license BlurFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * BoxBlur Algorithm by Mario Klingemann, quasimondo.com\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Applies a box blur to DisplayObjects. Note that this filter is fairly CPU intensive, particularly if the quality is\n * set higher than 1.\n *\n * @memberof easeljs\n * @extends easeljs.Filter\n * @example\n * let shape = new Shape().set({x:100,y:100});\n * shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n * let blurFilter = new BlurFilter(5, 5, 1);\n * shape.filters = [blurFilter];\n * let bounds = blurFilter.getBounds();\n * shape.cache(-50+bounds.x, -50+bounds.y, 100+bounds.width, 100+bounds.height);\n *\n * @param {Number} [blurX=0] The horizontal blur radius in pixels.\n * @param {Number} [blurY=0] The vertical blur radius in pixels.\n * @param {Number} [quality=1] The number of blur iterations.\n */\nclass BlurFilter extends Filter {\n\n\tconstructor (blurX = 0, blurY = 0, quality = 1) {\n\t\tsuper();\n\n\t\t/**\n\t\t * @protected\n\t\t * @default 0\n\t\t * @type {Number}\n\t\t */\n\t\tthis._blurX = blurX;\n\t\t/**\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._blurXTable = [];\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default null\n\t\t */\n\t\tthis._lastBlurX = null;\n\n\t\t/**\n\t\t * @default 0\n\t\t * @type {Number}\n\t\t */\n\t\tthis._blurY = blurY;\n\t\t/**\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._blurYTable = [];\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default null\n\t\t */\n\t\tthis._lastBlurY = null;\n\n\t\t/**\n\t\t * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n\t\t * smoother blur, but take twice as long to run.\n\t\t * @default 1\n\t\t * @type {Number}\n\t\t */\n\t\tthis._quality = (isNaN(quality) || quality < 1) ? 1 : quality;\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default null\n\t\t */\n\t\tthis._lastQuality = null;\n\n\t\tthis.FRAG_SHADER_TEMPLATE = `\n\t\t\tuniform float xWeight[{{blurX}}];\n\t\t\tuniform float yWeight[{{blurY}}];\n\t\t\tuniform vec2 textureOffset;\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = vec4(0.0);\n\n\t\t\t\tfloat xAdj = ({{blurX}}.0-1.0)/2.0;\n\t\t\t\tfloat yAdj = ({{blurY}}.0-1.0)/2.0;\n\t\t\t\tvec2 sampleOffset;\n\n\t\t\t\tfor(int i=0; i<{{blurX}}; i++) {\n\t\t\t\t\tfor(int j=0; j<{{blurY}}; j++) {\n\t\t\t\t\t\tsampleOffset = vRenderCoord + (textureOffset * vec2(float(i)-xAdj, float(j)-yAdj));\n\t\t\t\t\t\tcolor += texture2D(uSampler, sampleOffset) * (xWeight[i] * yWeight[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = color.rgba;\n\t\t\t}\n\t\t`;\n\t}\n\n\t/**\n\t * Horizontal blur radius in pixels.\n\t * @type {Number}\n\t */\n\tget blurX () { return this._blurX; }\n\tset blurX (blurX) {\n\t\tif (isNaN(blurX) || blurX < 0) { blurX = 0; }\n\t\tthis._blurX = blurX;\n\t}\n\n\t/**\n\t * Vertical blur radius in pixels.\n\t * @type {Number}\n\t */\n\tget blurY () { return this._blurY; }\n\tset blurY (blurY) {\n\t\tif (isNaN(blurY) || blurY < 0) { blurY = 0; }\n\t\tthis._blurY = blurY;\n\t}\n\n\t/**\n\t * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n\t * smoother blur, but take twice as long to run.\n\t * @type {Number}\n\t */\n\tget quality () { return this._quality | 0; }\n\tset quality (quality) {\n\t\tif (isNaN(quality) || quality < 0) { quality = 0; }\n\t\tthis._quality = quality;\n\t}\n\n\t/**\n\t * @protected\n\t * @type {*}\n\t */\n\tget _buildShader () {\n\t\tconst xChange = this._lastBlurX !== this._blurX;\n\t\tconst yChange = this._lastBlurY !== this._blurY;\n\t\tconst qChange = this._lastQuality !== this._quality;\n\t\tif (xChange || yChange || qChange) {\n\t\t\t\tif (xChange || qChange) { this._blurXTable = this._getTable(this._blurX * this._quality); }\n\t\t\t\tif (yChange || qChange) { this._blurYTable = this._getTable(this._blurY * this._quality); }\n\t\t\t\tthis._updateShader();\n\t\t\t\tthis._lastBlurX = this._blurX;\n\t\t\t\tthis._lastBlurY = this._blurY;\n\t\t\t\tthis._lastQuality = this._quality;\n\t\t\t\treturn undefined; // force a rebuild\n\t\t}\n\t\treturn this._compiledShader;\n\t}\n\tset _builtShader (value) { this._compiledShader = value; }\n\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\t// load the normalized gaussian weight tables\n\t\tgl.uniform1fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"xWeight\"),\n\t\t\tthis._blurXTable\n\t\t);\n\t\tgl.uniform1fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"yWeight\"),\n\t\t\tthis._blurYTable\n\t\t);\n\n\t\t// what is the size of a single pixel in -1, 1 (webGL) space\n\t\tgl.uniform2f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"textureOffset\"),\n\t\t\t2/(stage._viewportWidth*this._quality), 2/(stage._viewportHeight*this._quality)\n\t\t);\n\t}\n\n\tgetBounds (rect) {\n\t\tlet x = this.blurX|0, y = this.blurY| 0;\n\t\tif (x <= 0 && y <= 0) { return rect; }\n\t\tlet q = Math.pow(this.quality, 0.2);\n\t\treturn (rect || new Rectangle()).pad(y*q+1,x*q+1,y*q+1,x*q+1);\n\t}\n\n\t/**\n\t * @return {easeljs.BlurFilter}\n\t */\n\tclone () {\n\t\treturn new BlurFilter(this.blurX, this.blurY, this.quality);\n\t}\n\n\t_updateShader () {\n\t\tlet result = this.FRAG_SHADER_TEMPLATE;\n\t\tresult = result.replace(/{{blurX}}/g, this._blurXTable.length.toFixed(0));\n\t\tresult = result.replace(/{{blurY}}/g, this._blurYTable.length.toFixed(0));\n\t\tthis.FRAG_SHADER_BODY = result;\n\t}\n\n\t_getTable (spread) {\n\t\tconst EDGE = 4.2;\n\t\tif (spread <= 1) { return [1]; }\n\n\t\tlet result = [];\n\t\tlet count = Math.ceil(spread*2);\n\t\tcount += (count%2)?0:1;\n\t\tlet adjust = (count/2)|0;\n\t\tfor (let i = -adjust; i<=adjust; i++) {\n\t\t\tlet x = (i/adjust)*EDGE;\n\t\t\tresult.push(1/Math.sqrt(2*Math.PI) * Math.pow(Math.E, -(Math.pow(x,2)/4)));\n\t\t}\n\t\tlet factor = result.reduce((a, b) => a + b, 0);\n\t\treturn result.map(currentValue => currentValue / factor);\n\t}\n\n\t_applyFilter (imageData) {\n\t\tlet radiusX = this._blurX >> 1;\n\t\tif (isNaN(radiusX) || radiusX < 0) return false;\n\t\tlet radiusY = this._blurY >> 1;\n\t\tif (isNaN(radiusY) || radiusY < 0) return false;\n\t\tif (radiusX === 0 && radiusY === 0) return false;\n\n\t\tlet iterations = this.quality;\n\t\tif (isNaN(iterations) || iterations < 1) iterations = 1;\n\t\titerations |= 0;\n\t\tif (iterations > 3) iterations = 3;\n\t\tif (iterations < 1) iterations = 1;\n\n\t\tlet px = imageData.data;\n\t\tlet x=0, y=0, i=0, p=0, yp=0, yi=0, yw=0, r=0, g=0, b=0, a=0, pr=0, pg=0, pb=0, pa=0;\n\n\t\tlet divx = (radiusX + radiusX + 1) | 0;\n\t\tlet divy = (radiusY + radiusY + 1) | 0;\n\t\tlet w = imageData.width | 0;\n\t\tlet h = imageData.height | 0;\n\n\t\tlet w1 = (w - 1) | 0;\n\t\tlet h1 = (h - 1) | 0;\n\t\tlet rxp1 = (radiusX + 1) | 0;\n\t\tlet ryp1 = (radiusY + 1) | 0;\n\n\t\tlet ssx = {r:0,b:0,g:0,a:0};\n\t\tlet sx = ssx;\n\t\tfor ( i = 1; i < divx; i++ )\n\t\t{\n\t\t\tsx = sx.n = {r:0,b:0,g:0,a:0};\n\t\t}\n\t\tsx.n = ssx;\n\n\t\tlet ssy = {r:0,b:0,g:0,a:0};\n\t\tlet sy = ssy;\n\t\tfor ( i = 1; i < divy; i++ )\n\t\t{\n\t\t\tsy = sy.n = {r:0,b:0,g:0,a:0};\n\t\t}\n\t\tsy.n = ssy;\n\n\t\tlet si = null;\n\n\n\t\tlet mtx = BlurFilter.MUL_TABLE[radiusX] | 0;\n\t\tlet stx = BlurFilter.SHG_TABLE[radiusX] | 0;\n\t\tlet mty = BlurFilter.MUL_TABLE[radiusY] | 0;\n\t\tlet sty = BlurFilter.SHG_TABLE[radiusY] | 0;\n\n\t\twhile (iterations-- > 0) {\n\n\t\t\tyw = yi = 0;\n\t\t\tlet ms = mtx;\n\t\t\tlet ss = stx;\n\t\t\tfor (y = h; --y > -1;) {\n\t\t\t\tr = rxp1 * (pr = px[(yi) | 0]);\n\t\t\t\tg = rxp1 * (pg = px[(yi + 1) | 0]);\n\t\t\t\tb = rxp1 * (pb = px[(yi + 2) | 0]);\n\t\t\t\ta = rxp1 * (pa = px[(yi + 3) | 0]);\n\n\t\t\t\tsx = ssx;\n\n\t\t\t\tfor( i = rxp1; --i > -1; )\n\t\t\t\t{\n\t\t\t\t\tsx.r = pr;\n\t\t\t\t\tsx.g = pg;\n\t\t\t\t\tsx.b = pb;\n\t\t\t\t\tsx.a = pa;\n\t\t\t\t\tsx = sx.n;\n\t\t\t\t}\n\n\t\t\t\tfor( i = 1; i < rxp1; i++ )\n\t\t\t\t{\n\t\t\t\t\tp = (yi + ((w1 < i ? w1 : i) << 2)) | 0;\n\t\t\t\t\tr += ( sx.r = px[p]);\n\t\t\t\t\tg += ( sx.g = px[p+1]);\n\t\t\t\t\tb += ( sx.b = px[p+2]);\n\t\t\t\t\ta += ( sx.a = px[p+3]);\n\n\t\t\t\t\tsx = sx.n;\n\t\t\t\t}\n\n\t\t\t\tsi = ssx;\n\t\t\t\tfor ( x = 0; x < w; x++ )\n\t\t\t\t{\n\t\t\t\t\tpx[yi++] = (r * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (g * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (b * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (a * ms) >>> ss;\n\n\t\t\t\t\tp = ((yw + ((p = x + radiusX + 1) < w1 ? p : w1)) << 2);\n\n\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\tsi = si.n;\n\n\t\t\t\t}\n\t\t\t\tyw += w;\n\t\t\t}\n\n\t\t\tms = mty;\n\t\t\tss = sty;\n\t\t\tfor (x = 0; x < w; x++) {\n\t\t\t\tyi = (x << 2) | 0;\n\n\t\t\t\tr = (ryp1 * (pr = px[yi])) | 0;\n\t\t\t\tg = (ryp1 * (pg = px[(yi + 1) | 0])) | 0;\n\t\t\t\tb = (ryp1 * (pb = px[(yi + 2) | 0])) | 0;\n\t\t\t\ta = (ryp1 * (pa = px[(yi + 3) | 0])) | 0;\n\n\t\t\t\tsy = ssy;\n\t\t\t\tfor( i = 0; i < ryp1; i++ )\n\t\t\t\t{\n\t\t\t\t\tsy.r = pr;\n\t\t\t\t\tsy.g = pg;\n\t\t\t\t\tsy.b = pb;\n\t\t\t\t\tsy.a = pa;\n\t\t\t\t\tsy = sy.n;\n\t\t\t\t}\n\n\t\t\t\typ = w;\n\n\t\t\t\tfor( i = 1; i <= radiusY; i++ )\n\t\t\t\t{\n\t\t\t\t\tyi = ( yp + x ) << 2;\n\n\t\t\t\t\tr += ( sy.r = px[yi]);\n\t\t\t\t\tg += ( sy.g = px[yi+1]);\n\t\t\t\t\tb += ( sy.b = px[yi+2]);\n\t\t\t\t\ta += ( sy.a = px[yi+3]);\n\n\t\t\t\t\tsy = sy.n;\n\n\t\t\t\t\tif( i < h1 )\n\t\t\t\t\t{\n\t\t\t\t\t\typ += w;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tyi = x;\n\t\t\t\tsi = ssy;\n\t\t\t\tif ( iterations > 0 )\n\t\t\t\t{\n\t\t\t\t\tfor ( y = 0; y < h; y++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tp = yi << 2;\n\t\t\t\t\t\tpx[p+3] = pa =(a * ms) >>> ss;\n\t\t\t\t\t\tif ( pa > 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpx[p]   = ((r * ms) >>> ss );\n\t\t\t\t\t\t\tpx[p+1] = ((g * ms) >>> ss );\n\t\t\t\t\t\t\tpx[p+2] = ((b * ms) >>> ss );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpx[p] = px[p+1] = px[p+2] = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp = ( x + (( ( p = y + ryp1) < h1 ? p : h1 ) * w )) << 2;\n\n\t\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\t\tsi = si.n;\n\n\t\t\t\t\t\tyi += w;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor ( y = 0; y < h; y++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tp = yi << 2;\n\t\t\t\t\t\tpx[p+3] = pa =(a * ms) >>> ss;\n\t\t\t\t\t\tif ( pa > 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpa = 255 / pa;\n\t\t\t\t\t\t\tpx[p]   = ((r * ms) >>> ss ) * pa;\n\t\t\t\t\t\t\tpx[p+1] = ((g * ms) >>> ss ) * pa;\n\t\t\t\t\t\t\tpx[p+2] = ((b * ms) >>> ss ) * pa;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpx[p] = px[p+1] = px[p+2] = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp = ( x + (( ( p = y + ryp1) < h1 ? p : h1 ) * w )) << 2;\n\n\t\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\t\tsi = si.n;\n\n\t\t\t\t\t\tyi += w;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn true;\n\t}\n\n}\n\n/**\n * Array of multiply values for blur calculations.\n * @type {Array}\n * @protected\n * @readonly\n * @static\n */\nBlurFilter.MUL_TABLE = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1];\n/**\n * Array of shift values for blur calculations.\n * @type {Array}\n * @protected\n * @static\n */\nBlurFilter.SHG_TABLE = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9];\n\n/**\n * @license ColorFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Applies a color transform to DisplayObjects.\n *\n * @memberof easeljs\n * @extends easeljs.Filter\n * @example\n * let shape = new Shape().set({ x: 100, y: 100 });\n * shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n * shape.filters = [ new ColorFilter(0,0,0,1, 0,0,255,0) ];\n * shape.cache(-50, -50, 100, 100);\n *\n * @param {Number} [redMultiplier=1] The amount to multiply against the red channel. This is a range between 0 and 1.\n * @param {Number} [greenMultiplier=1] The amount to multiply against the green channel. This is a range between 0 and 1.\n * @param {Number} [blueMultiplier=1] The amount to multiply against the blue channel. This is a range between 0 and 1.\n * @param {Number} [alphaMultiplier=1] The amount to multiply against the alpha channel. This is a range between 0 and 1.\n * @param {Number} [redOffset=0] The amount to add to the red channel after it has been multiplied. This is a range\n * between -255 and 255.\n * @param {Number} [greenOffset=0] The amount to add to the green channel after it has been multiplied. This is a range\n * between -255 and 255.\n * @param {Number} [blueOffset=0] The amount to add to the blue channel after it has been multiplied. This is a range\n * between -255 and 255.\n * @param {Number} [alphaOffset=0] The amount to add to the alpha channel after it has been multiplied. This is a range\n * between -255 and 255.\n */\nclass ColorFilter extends Filter {\n\n\tconstructor (redMultiplier = 1, greenMultiplier = 1, blueMultiplier = 1, alphaMultiplier = 1, redOffset = 0, greenOffset = 0, blueOffset = 0, alphaOffset = 0) {\n\t\tsuper();\n\n\t\t/**\n\t\t * Red channel multiplier.\n\t\t * @type {Number}\n\t\t */\n\t\tthis.redMultiplier = redMultiplier;\n\n\t\t/**\n\t\t * Green channel multiplier.\n\t\t * @type {Number}\n\t\t */\n\t\tthis.greenMultiplier = greenMultiplier;\n\n\t\t/**\n\t\t * Blue channel multiplier.\n\t\t * @type {Number}\n\t\t */\n\t\tthis.blueMultiplier = blueMultiplier;\n\n\t\t/**\n\t\t * Alpha channel multiplier.\n\t\t * @type {Number}\n\t\t */\n\t\tthis.alphaMultiplier = alphaMultiplier;\n\n\t\t/**\n\t\t * Red channel offset (added to value).\n\t\t * @type {Number}\n\t\t */\n\t\tthis.redOffset = redOffset;\n\n\t\t/**\n\t\t * Green channel offset (added to value).\n\t\t * @type {Number}\n\t\t */\n\t\tthis.greenOffset = greenOffset;\n\n\t\t/**\n\t\t * Blue channel offset (added to value).\n\t\t * @type {Number}\n\t\t */\n\t\tthis.blueOffset = blueOffset;\n\n\t\t/**\n\t\t * Alpha channel offset (added to value).\n\t\t * @type {Number}\n\t\t */\n\t\tthis.alphaOffset = alphaOffset;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform vec4 uColorMultiplier;\n\t\t\tuniform vec4 uColorOffset;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\n\t\t\t\tgl_FragColor = (color * uColorMultiplier) + uColorOffset;\n\t\t\t}\n\t\t`;\n\n\t}\n\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMultiplier\"),\n\t\t\tthis.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier\n\t\t);\n\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorOffset\"),\n\t\t\tthis.redOffset/255, this.greenOffset/255, this.blueOffset/255, this.alphaOffset/255\n\t\t);\n\t}\n\n\t/**\n\t * @return {easeljs.ColorFilter}\n\t */\n\tclone () {\n\t\treturn new ColorFilter(\n\t\t\tthis.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier,\n\t\t\tthis.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset\n\t\t);\n\t}\n\n\t_applyFilter (imageData) {\n\t\tlet data = imageData.data;\n\t\tconst l = data.length;\n\t\tfor (let i=0; i<l; i+=4) {\n\t\t\tdata[i] = data[i]*this.redMultiplier+this.redOffset;\n\t\t\tdata[i+1] = data[i+1]*this.greenMultiplier+this.greenOffset;\n\t\t\tdata[i+2] = data[i+2]*this.blueMultiplier+this.blueOffset;\n\t\t\tdata[i+3] = data[i+3]*this.alphaMultiplier+this.alphaOffset;\n\t\t}\n\t\treturn true;\n\t}\n\n}\n\n/**\n * @license ColorMatrix\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Provides helper functions for assembling a matrix for use with the {@link easeljs.ColorMatrixFilter}.\n * Most methods return the instance to facilitate chained calls.\n *\n * @memberof easeljs\n * @example\n * colorMatrix.adjustHue(20).adjustBrightness(50);\n *\n * @param {Number} brightness\n * @param {Number} contrast\n * @param {Number} saturation\n * @param {Number} hue\n */\nclass ColorMatrix {\n\n\tconstructor (brightness, contrast, saturation, hue) {\n\t\tthis.setColor(brightness, contrast, saturation, hue);\n\t}\n\n\t/**\n\t * Resets the instance with the specified values.\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tsetColor (brightness, contrast, saturation, hue) {\n\t\treturn this.reset().adjustColor(brightness, contrast, saturation, hue);\n\t}\n\n\t/**\n\t * Resets the matrix to identity values.\n\t * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\treset () {\n\t\treturn this.copy(ColorMatrix.IDENTITY_MATRIX);\n\t}\n\n\t/**\n\t * Shortcut method to adjust brightness, contrast, saturation and hue. Equivalent to calling adjustHue(hue), adjustContrast(contrast),\n\t * adjustBrightness(brightness), adjustSaturation(saturation), in that order.\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustColor (brightness, contrast, saturation, hue) {\n\t\treturn this.adjustBrightness(brightness).adjustContrast(contrast).adjustSaturation(saturation).adjustHue(hue);\n\t}\n\n\t/**\n\t * Adjusts the brightness of pixel color by adding the specified value to the red, green and blue channels.\n\t * Positive values will make the image brighter, negative values will make it darker.\n\t * @param {Number} value A value between -255 & 255 that will be added to the RGB channels.\n\t * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustBrightness (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 255);\n\t\tthis._multiplyMatrix([\n\t\t\t1,0,0,0,value,\n\t\t\t0,1,0,0,value,\n\t\t\t0,0,1,0,value,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adjusts the contrast of pixel color.\n\t * Positive values will increase contrast, negative values will decrease contrast.\n\t * @param {Number} value A value between -100 & 100.\n\t * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustContrast (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 100);\n\t\tlet x;\n\t\tif (value<0) {\n\t\t\tx = 127+value/100*127;\n\t\t} else {\n\t\t\tx = value%1;\n\t\t\tif (x === 0) {\n\t\t\t\tx = ColorMatrix.DELTA_INDEX[value];\n\t\t\t} else {\n\t\t\t\tx = ColorMatrix.DELTA_INDEX[(value<<0)]*(1-x)+ColorMatrix.DELTA_INDEX[(value<<0)+1]*x; // use linear interpolation for more granularity.\n\t\t\t}\n\t\t\tx = x*127+127;\n\t\t}\n\t\tthis._multiplyMatrix([\n\t\t\tx/127,0,0,0,0.5*(127-x),\n\t\t\t0,x/127,0,0,0.5*(127-x),\n\t\t\t0,0,x/127,0,0.5*(127-x),\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adjusts the color saturation of the pixel.\n\t * Positive values will increase saturation, negative values will decrease saturation (trend towards greyscale).\n\t * @param {Number} value A value between -100 & 100.\n\t * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustSaturation (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 100);\n\t\tlet x = 1+((value > 0) ? 3*value/100 : value/100);\n\t\tlet lumR = 0.3086;\n\t\tlet lumG = 0.6094;\n\t\tlet lumB = 0.0820;\n\t\tthis._multiplyMatrix([\n\t\t\tlumR*(1-x)+x,lumG*(1-x),lumB*(1-x),0,0,\n\t\t\tlumR*(1-x),lumG*(1-x)+x,lumB*(1-x),0,0,\n\t\t\tlumR*(1-x),lumG*(1-x),lumB*(1-x)+x,0,0,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\n\t/**\n\t * Adjusts the hue of the pixel color.\n\t * @param {Number} value A value between -180 & 180.\n\t * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tadjustHue (value) {\n\t\tif (value === 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value, 180)/180*Math.PI;\n\t\tlet cosVal = Math.cos(value);\n\t\tlet sinVal = Math.sin(value);\n\t\tlet lumR = 0.213;\n\t\tlet lumG = 0.715;\n\t\tlet lumB = 0.072;\n\t\tthis._multiplyMatrix([\n\t\t\tlumR+cosVal*(1-lumR)+sinVal*(-lumR),lumG+cosVal*(-lumG)+sinVal*(-lumG),lumB+cosVal*(-lumB)+sinVal*(1-lumB),0,0,\n\t\t\tlumR+cosVal*(-lumR)+sinVal*(0.143),lumG+cosVal*(1-lumG)+sinVal*(0.140),lumB+cosVal*(-lumB)+sinVal*(-0.283),0,0,\n\t\t\tlumR+cosVal*(-lumR)+sinVal*(-(1-lumR)),lumG+cosVal*(-lumG)+sinVal*(lumG),lumB+cosVal*(1-lumB)+sinVal*(lumB),0,0,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Concatenates (multiplies) the specified matrix with this one.\n\t * @param {Array} matrix An array or ColorMatrix instance.\n\t * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tconcat (matrix) {\n\t\tmatrix = this._fixMatrix(matrix);\n\t\tif (matrix.length != ColorMatrix.LENGTH) { return this; }\n\t\tthis._multiplyMatrix(matrix);\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {easeljs.ColorMatrix} A clone of this ColorMatrix.\n\t */\n\tclone () {\n\t\treturn (new ColorMatrix()).copy(this);\n\t}\n\n\t/**\n\t * Return a length 25 (5x5) array instance containing this matrix's values.\n\t * @return {Array} An array holding this matrix's values.\n\t */\n\ttoArray () {\n\t\tconst arr = [];\n\t\tconst l = ColorMatrix.LENGTH;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tarr[i] = this[i];\n\t\t}\n\t\treturn arr;\n\t}\n\n\t/**\n\t * Copy the specified matrix's values to this matrix.\n\t * @param {Array | easeljs.ColorMatrix} matrix An array or ColorMatrix instance.\n\t * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tcopy (matrix) {\n\t\tconst l = ColorMatrix.LENGTH;\n\t\tfor (let i=0;i<l;i++) {\n\t\t\tthis[i] = matrix[i];\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * @param {Array} matrix\n\t * @protected\n\t */\n\t_multiplyMatrix (matrix) {\n\t\tlet col = [];\n\n\t\tfor (let i=0;i<5;i++) {\n\t\t\tfor (let j=0;j<5;j++) {\n\t\t\t\tcol[j] = this[j+i*5];\n\t\t\t}\n\t\t\tfor (let j=0;j<5;j++) {\n\t\t\t\tlet val=0;\n\t\t\t\tfor (let k=0;k<5;k++) {\n\t\t\t\t\tval += matrix[j+k*5]*col[k];\n\t\t\t\t}\n\t\t\t\tthis[j+i*5] = val;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Make sure values are within the specified range, hue has a limit of 180, brightness is 255, others are 100.\n\t * @param {Number} value The raw number\n\t * @param {Number} limit The maximum that the number can be. The minimum is the limit * -1.\n\t * @protected\n\t */\n\t_cleanValue (value, limit) {\n\t\treturn Math.min(limit, Math.max(-limit, value));\n\t}\n\n\t/**\n\t * Makes sure matrixes are 5x5 (25 long).\n\t * @param {Array} matrix\n\t * @protected\n\t */\n\t_fixMatrix (matrix) {\n\t\tif (matrix instanceof ColorMatrix) { matrix = matrix.toArray(); }\n\t\tif (matrix.length < ColorMatrix.LENGTH) {\n\t\t\tmatrix = matrix.slice(0, matrix.length).concat(ColorMatrix.IDENTITY_MATRIX.slice(matrix.length, ColorMatrix.LENGTH));\n\t\t} else if (matrix.length > ColorMatrix.LENGTH) {\n\t\t\tmatrix = matrix.slice(0, ColorMatrix.LENGTH);\n\t\t}\n\t\treturn matrix;\n\t}\n\n}\n\n/**\n * Array of delta values for contrast calculations.\n * @type {Array<Number>}\n * @protected\n * @readonly\n * @static\n */\nColorMatrix.DELTA_INDEX = Object.freeze([\n \t0,    0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1,  0.11,\n \t0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24,\n \t0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42,\n \t0.44, 0.46, 0.48, 0.5,  0.53, 0.56, 0.59, 0.62, 0.65, 0.68,\n \t0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98,\n \t1.0,  1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54,\n \t1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0,  2.12, 2.25,\n \t2.37, 2.50, 2.62, 2.75, 2.87, 3.0,  3.2,  3.4,  3.6,  3.8,\n \t4.0,  4.3,  4.7,  4.9,  5.0,  5.5,  6.0,  6.5,  6.8,  7.0,\n \t7.3,  7.5,  7.8,  8.0,  8.4,  8.7,  9.0,  9.4,  9.6,  9.8,\n \t10.0\n]);\n/**\n * Identity matrix values.\n * @type {Array<Number>}\n * @protected\n * @readonly\n * @static\n */\nColorMatrix.IDENTITY_MATRIX = Object.freeze([\n \t1,0,0,0,0,\n \t0,1,0,0,0,\n \t0,0,1,0,0,\n \t0,0,0,1,0,\n \t0,0,0,0,1\n]);\n/**\n * The constant length of a color matrix.\n * @type {Number}\n * @protected\n * @readonly\n * @static\n */\nColorMatrix.LENGTH = 25;\n\n/**\n * @license ColorMatrixFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Allows you to carry out complex color operations such as modifying saturation, brightness, or inverting. See the\n * {@link easeljs.ColorMatrix} for more information on changing colors. For an easier color transform,\n * consider the {@link easeljs.ColorFilter}.\n *\n *\n * @memberof easeljs\n * @extends easeljs.Filter\n * @example\n * let shape = new Shape().set({ x: 100, y: 100 });\n * shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 50);\n * let matrix = new ColorMatrix().adjustHue(180).adjustSaturation(100);\n * shape.filters = [ new ColorMatrixFilter(matrix) ];\n * shape.cache(-50, -50, 100, 100);\n *\n * @param {Array | easeljs.ColorMatrix} matrix A 4x5 matrix describing the color operation to perform.\n */\nclass ColorMatrixFilter extends Filter {\n\n\tconstructor (matrix) {\n\t\tsuper();\n\n\t\t/**\n\t\t * A 4x5 matrix describing the color operation to perform.\n\t\t * @type {Array | easeljs.ColorMatrix}\n\t\t */\n\t\tthis.matrix = matrix;\n\n\t\tthis.FRAG_SHADER_BODY = `\n\t\t\tuniform mat4 uColorMatrix;\n\t\t\tuniform vec4 uColorMatrixOffset;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\n\t\t\t\tmat4 m = uColorMatrix;\n\t\t\t\tvec4 newColor = vec4(0,0,0,0);\n\t\t\t\tnewColor.r = color.r*m[0][0] + color.g*m[0][1] + color.b*m[0][2] + color.a*m[0][3];\n\t\t\t\tnewColor.g = color.r*m[1][0] + color.g*m[1][1] + color.b*m[1][2] + color.a*m[1][3];\n\t\t\t\tnewColor.b = color.r*m[2][0] + color.g*m[2][1] + color.b*m[2][2] + color.a*m[2][3];\n\t\t\t\tnewColor.a = color.r*m[3][0] + color.g*m[3][1] + color.b*m[3][2] + color.a*m[3][3];\n\n\t\t\t\tgl_FragColor = newColor + uColorMatrixOffset;\n\t\t\t}\n\t\t`;\n\t}\n\n\tshaderParamSetup (gl, stage, shaderProgram) {\n\t\tlet mat = this.matrix;\n\t\tlet colorMatrix = new Float32Array([\n\t\t\tmat[0],mat[1],mat[2],mat[3],\n\t\t\tmat[5],mat[6],mat[7],mat[8],\n\t\t\tmat[10],mat[11],mat[12],mat[13],\n\t\t\tmat[15],mat[16],mat[17],mat[18]\n\t\t]);\n\n\t\tgl.uniformMatrix4fv(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMatrix\"),\n\t\t\tfalse, colorMatrix\n\t\t);\n\t\tgl.uniform4f(\n\t\t\tgl.getUniformLocation(shaderProgram, \"uColorMatrixOffset\"),\n\t\t\tmat[4]/255, mat[9]/255, mat[14]/255, mat[19]/255\n\t\t);\n\t}\n\n\t/**\n\t * @return {easeljs.ColorMatrixFilter}\n\t */\n\tclone () {\n\t\treturn new ColorMatrixFilter(this.matrix);\n\t}\n\n\t_applyFilter (imageData) {\n\t\tlet data = imageData.data;\n\t\tconst l = data.length;\n\t\tlet r,g,b,a;\n\t\tlet mtx = this.matrix;\n\t\tlet m0 =  mtx[0],  m1 =  mtx[1],  m2 =  mtx[2],  m3 =  mtx[3],  m4 =  mtx[4];\n\t\tlet m5 =  mtx[5],  m6 =  mtx[6],  m7 =  mtx[7],  m8 =  mtx[8],  m9 =  mtx[9];\n\t\tlet m10 = mtx[10], m11 = mtx[11], m12 = mtx[12], m13 = mtx[13], m14 = mtx[14];\n\t\tlet m15 = mtx[15], m16 = mtx[16], m17 = mtx[17], m18 = mtx[18], m19 = mtx[19];\n\n\t\tfor (let i=0; i<l; i+=4) {\n\t\t\tr = data[i];\n\t\t\tg = data[i+1];\n\t\t\tb = data[i+2];\n\t\t\ta = data[i+3];\n\t\t\tdata[i] = r*m0+g*m1+b*m2+a*m3+m4; // red\n\t\t\tdata[i+1] = r*m5+g*m6+b*m7+a*m8+m9; // green\n\t\t\tdata[i+2] = r*m10+g*m11+b*m12+a*m13+m14; // blue\n\t\t\tdata[i+3] = r*m15+g*m16+b*m17+a*m18+m19; // alpha\n\t\t}\n\n\t\treturn true;\n\t}\n\n}\n\n/*\n* @license ButtonHelper\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * The ButtonHelper is a helper class to create interactive buttons from {@link easeljs.MovieClip} or\n * {@link easeljs.Sprite} instances. This class will intercept mouse events from an object, and\n * automatically call {@link easeljs.Sprite#gotoAndStop} or {@link easlejs.Sprite#gotoAndPlay},\n * to the respective animation labels, add a pointer cursor, and allows the user to define a hit state frame.\n *\n * The ButtonHelper instance does not need to be added to the stage, but a reference should be maintained to prevent\n * garbage collection.\n *\n * Note that over states will not work unless you call {@link easeljs.Stage#enableMouseOver}.\n *\n * @memberof easeljs\n * @example\n * let helper = new ButtonHelper(sprite, \"out\", \"over\", \"down\", false, sprite, \"hit\");\n * sprite.addEventListener(\"click\", (evt) => {\n *   // clicked\n * }));\n *\n * @param {easeljs.Sprite | easeljs.MovieClip} target The instance to manage.\n * @param {String} [outLabel=\"out\"] The label or animation to go to when the user rolls out of the button.\n * @param {String} [overLabel=\"over\"] The label or animation to go to when the user rolls over the button.\n * @param {String} [downLabel=\"down\"] The label or animation to go to when the user presses the button.\n * @param {Boolean} [play=false] If the helper should call \"gotoAndPlay\" or \"gotoAndStop\" on the button when changing\n * states.\n * @param {easeljs.DisplayObject} [hitArea] An optional item to use as the hit state for the button. If this is not defined,\n * then the button's visible states will be used instead. Note that the same instance as the \"target\" argument can be\n * used for the hitState.\n * @param {String} [hitLabel] The label or animation on the hitArea instance that defines the hitArea bounds. If this is\n * null, then the default state of the hitArea will be used.\n */\nclass ButtonHelper {\n\n\tconstructor (target, outLabel = \"out\", overLabel = \"over\", downLabel = \"down\", play = false, hitArea, hitLabel) {\n\t\tif (!target.addEventListener) { return; }\n\n\t\t/**\n\t\t * The target for this button helper.\n\t\t * @type {easeljs.MovieClip | easeljs.Sprite}\n\t\t * @readonly\n\t\t */\n\t\tthis.target = target;\n\n\t\t/**\n\t\t * The label name or frame number to display when the user mouses out of the target.\n\t\t * @default \"over\"\n\t\t * @type {String | Number}\n\t\t */\n\t\tthis.overLabel = overLabel;\n\n\t\t/**\n\t\t * The label name or frame number to display when the user mouses over the target.\n\t\t * @default \"out\"\n\t\t * @type {String | Number}\n\t\t */\n\t\tthis.outLabel = outLabel;\n\n\t\t/**\n\t\t * The label name or frame number to display when the user presses on the target.\n\t\t * @default \"down\"\n\t\t * @type {String | Number}\n\t\t */\n\t\tthis.downLabel = downLabel == null;\n\n\t\t/**\n\t\t * If true, then ButtonHelper will call gotoAndPlay, if false, it will use gotoAndStop.\n\t\t * @default false\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.play = play;\n\n\t\t/**\n\t\t * @type {Boolean}\n\t\t * @protected\n\t\t */\n\t\tthis._isPressed = false;\n\n\t\t/**\n\t\t * @type {Boolean}\n\t\t * @protected\n\t\t */\n\t\tthis._isOver = false;\n\n\t\t/**\n\t\t * @type {Boolean}\n\t\t * @protected\n\t\t */\n\t\tthis._enabled = false;\n\n\t\ttarget.mouseChildren = false; // prevents issues when children are removed from the display list when state changes.\n\t\tthis.enabled = true;\n\t\tthis.handleEvent({});\n\t\tif (hitArea) {\n\t\t\tif (hitLabel) {\n\t\t\t\thitArea.actionsEnabled = false;\n\t\t\t\thitArea.gotoAndStop&&hitArea.gotoAndStop(hitLabel);\n\t\t\t}\n\t\t\ttarget.hitArea = hitArea;\n\t\t}\n\t}\n\n\t/**\n\t * Enables or disables the button functionality on the target.\n\t * @type {Boolean}\n\t */\n\tget enabled () { return this._enabled; }\n\tset enabled (enabled) {\n\t\tif (enabled === this._enabled) { return; }\n\t\tlet o = this.target;\n\t\tthis._enabled = enabled;\n\t\tif (enabled) {\n\t\t\to.cursor = \"pointer\";\n\t\t\to.addEventListener(\"rollover\", this);\n\t\t\to.addEventListener(\"rollout\", this);\n\t\t\to.addEventListener(\"mousedown\", this);\n\t\t\to.addEventListener(\"pressup\", this);\n\t\t\tif (o._reset) { o.__reset = o._reset; o._reset = this._reset;}\n\t\t} else {\n\t\t\to.cursor = null;\n\t\t\to.removeEventListener(\"rollover\", this);\n\t\t\to.removeEventListener(\"rollout\", this);\n\t\t\to.removeEventListener(\"mousedown\", this);\n\t\t\to.removeEventListener(\"pressup\", this);\n\t\t\tif (o.__reset) { o._reset = o.__reset; delete(o.__reset); }\n\t\t}\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * @param {Object} evt The mouse event to handle.\n\t * @protected\n\t */\n\thandleEvent (evt) {\n\t\tlet label, t = this.target, type = evt.type;\n\t\tif (type === \"mousedown\") {\n\t\t\tthis._isPressed = true;\n\t\t\tlabel = this.downLabel;\n\t\t} else if (type === \"pressup\") {\n\t\t\tthis._isPressed = false;\n\t\t\tlabel = this._isOver ? this.overLabel : this.outLabel;\n\t\t} else if (type === \"rollover\") {\n\t\t\tthis._isOver = true;\n\t\t\tlabel = this._isPressed ? this.downLabel : this.overLabel;\n\t\t} else { // rollout and default\n\t\t\tthis._isOver = false;\n\t\t\tlabel = this._isPressed ? this.overLabel : this.outLabel;\n\t\t}\n\t\tif (this.play) {\n\t\t\tt.gotoAndPlay&&t.gotoAndPlay(label);\n\t\t} else {\n\t\t\tt.gotoAndStop&&t.gotoAndStop(label);\n\t\t}\n\t}\n\n\t/**\n\t * Injected into target. Preserves the paused state through a reset.\n\t * @protected\n\t */\n\t_reset () {\n\t\t// TODO: explore better ways to handle this issue. This is hacky & disrupts object signatures.\n\t\tlet p = this.paused;\n\t\tthis.__reset();\n\t\tthis.paused = p;\n\t}\n\n}\n\n/**\n * @license Touch\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Global utility for working with multi-touch enabled devices in EaselJS. Currently supports W3C Touch API (iOS and\n * modern Android browser) and the Pointer API (IE), including ms-prefixed events in IE10, and unprefixed in IE11.\n *\n * Ensure that you {{#crossLink \"Touch/disable\"}}{{/crossLink}} touch when cleaning up your application. You do not have\n * to check if touch is supported to enable it, as it will fail gracefully if it is not supported.\n *\n * <strong>Note:</strong> It is important to disable Touch on a stage that you are no longer using:\n *\n * @memberof easeljs\n * @name easeljs.Touch\n * @example\n * let stage = new Stage(\"canvasId\");\n * Touch.enable(stage);\n */\nvar Touch = Touch = {\n\n\t/**\n\t * Returns `true` if touch is supported in the current browser.\n\t * @return {Boolean} Indicates whether touch is supported in the current browser.\n\t */\n\tisSupported () {\n\t\treturn\t!!(('ontouchstart' in window) // iOS & Android\n\t\t\t|| (window.MSPointerEvent && window.navigator.msMaxTouchPoints > 0) // IE10\n\t\t\t|| (window.PointerEvent && window.navigator.maxTouchPoints > 0)); // IE11+\n\t},\n\n\t/**\n\t * Enables touch interaction for the specified EaselJS {@link easeljs.Stage}. Currently supports iOS\n\t * (and compatible browsers, such as modern Android browsers), and IE10/11. Supports both single touch and\n\t * multi-touch modes. Extends the EaselJS {@link easeljs.MouseEvent} model, but without support for\n\t * double click or over/out events.\n\t * @param {easeljs.Stage} stage The Stage to enable touch on.\n\t * @param {Boolean} [singleTouch=false] If `true`, only a single touch will be active at a time.\n\t * @param {Boolean} [allowDefault=false] If `true`, then default gesture actions (ex. scrolling, zooming) will be\n\t * allowed when the user is interacting with the target canvas.\n\t * @return {Boolean} Returns `true` if touch was successfully enabled on the target stage.\n\t */\n\tenable (stage, singleTouch = false, allowDefault = false) {\n\t\tif (!stage || !stage.canvas || !this.isSupported()) { return false; }\n\t\tif (stage.__touch) { return true; }\n\n\t\t// inject required properties on stage:\n\t\tstage.__touch = {pointers:{}, multitouch:!singleTouch, preventDefault:!allowDefault, count:0};\n\n\t\t// note that in the future we may need to disable the standard mouse event model before adding\n\t\t// these to prevent duplicate calls. It doesn't seem to be an issue with iOS devices though.\n\t\tif ('ontouchstart' in window) { this._IOS_enable(stage); }\n\t\telse if (window.PointerEvent || window.MSPointerEvent) { this._IE_enable(stage); }\n\t\treturn true;\n\t},\n\n\t/**\n\t * Removes all listeners that were set up when calling `Touch.enable()` on a stage.\n\t * @param {easeljs.Stage} stage The Stage to disable touch on.\n\t */\n\tdisable (stage) {\n\t\tif (!stage) { return; }\n\t\tif ('ontouchstart' in window) { this._IOS_disable(stage); }\n\t\telse if (window.PointerEvent || window.MSPointerEvent) { this._IE_disable(stage); }\n\t\tdelete stage.__touch;\n\t},\n\n\t/**\n\t * @private\n\t * @param {easeljs.Stage} stage\n\t */\n\t_IOS_enable (stage) {\n\t\tlet canvas = stage.canvas;\n\t\tlet f = stage.__touch.f = e => this._IOS_handleEvent(stage, e);\n\t\tcanvas.addEventListener(\"touchstart\", f, false);\n\t\tcanvas.addEventListener(\"touchmove\", f, false);\n\t\tcanvas.addEventListener(\"touchend\", f, false);\n\t\tcanvas.addEventListener(\"touchcancel\", f, false);\n\t},\n\n\t/**\n\t * @private\n\t * @param {easeljs.Stage} stage\n\t */\n\t_IOS_disable (stage) {\n\t\tlet canvas = stage.canvas;\n\t\tif (!canvas) { return; }\n\t\tlet f = stage.__touch.f;\n\t\tcanvas.removeEventListener(\"touchstart\", f, false);\n\t\tcanvas.removeEventListener(\"touchmove\", f, false);\n\t\tcanvas.removeEventListener(\"touchend\", f, false);\n\t\tcanvas.removeEventListener(\"touchcancel\", f, false);\n\t},\n\n\t/**\n\t * @private\n\t * @param {easeljs.Stage} stage\n\t * @param {Object} e The event to handle\n\t */\n\t_IOS_handleEvent (stage, e) {\n\t\tif (!stage) { return; }\n\t\tif (stage.__touch.preventDefault) { e.preventDefault&&e.preventDefault(); }\n\t\tlet touches = e.changedTouches;\n\t\tlet type = e.type;\n\t\tconst l = touches.length;\n\t\tfor (let touch of touches) {\n\t\t\tlet id = touch.identifier;\n\t\t\tif (touch.target != stage.canvas) { continue; }\n\n\t\t\tif (type === \"touchstart\") {\n\t\t\t\tthis._handleStart(stage, id, e, touch.pageX, touch.pageY);\n\t\t\t} else if (type === \"touchmove\") {\n\t\t\t\tthis._handleMove(stage, id, e, touch.pageX, touch.pageY);\n\t\t\t} else if (type === \"touchend\" || type === \"touchcancel\") {\n\t\t\t\tthis._handleEnd(stage, id, e);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t * @param {easeljs.Stage} stage\n\t */\n\t_IE_enable (stage) {\n\t\tlet canvas = stage.canvas;\n\t\tlet f = stage.__touch.f = e => this._IE_handleEvent(stage,e);\n\n\t\tif (window.PointerEvent === undefined) {\n\t\t\tcanvas.addEventListener(\"MSPointerDown\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerMove\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerUp\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerCancel\", f, false);\n\t\t\tif (stage.__touch.preventDefault) { canvas.style.msTouchAction = \"none\"; }\n\t\t} else {\n\t\t\tcanvas.addEventListener(\"pointerdown\", f, false);\n\t\t\twindow.addEventListener(\"pointermove\", f, false);\n\t\t\twindow.addEventListener(\"pointerup\", f, false);\n\t\t\twindow.addEventListener(\"pointercancel\", f, false);\n\t\t\tif (stage.__touch.preventDefault) { canvas.style.touchAction = \"none\"; }\n\n\t\t}\n\t\tstage.__touch.activeIDs = {};\n\t},\n\n\t/**\n\t * @private\n\t * @param {easeljs.Stage} stage\n\t */\n\t_IE_disable (stage) {\n\t\tlet f = stage.__touch.f;\n\n\t\tif (window.PointerEvent === undefined) {\n\t\t\twindow.removeEventListener(\"MSPointerMove\", f, false);\n\t\t\twindow.removeEventListener(\"MSPointerUp\", f, false);\n\t\t\twindow.removeEventListener(\"MSPointerCancel\", f, false);\n\t\t\tif (stage.canvas) {\n\t\t\t\tstage.canvas.removeEventListener(\"MSPointerDown\", f, false);\n\t\t\t}\n\t\t} else {\n\t\t\twindow.removeEventListener(\"pointermove\", f, false);\n\t\t\twindow.removeEventListener(\"pointerup\", f, false);\n\t\t\twindow.removeEventListener(\"pointercancel\", f, false);\n\t\t\tif (stage.canvas) {\n\t\t\t\tstage.canvas.removeEventListener(\"pointerdown\", f, false);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t * @param {easeljs.Stage} stage\n\t * @param {Object} e The event to handle.\n\t */\n\t_IE_handleEvent (stage, e) {\n\t\tif (!stage) { return; }\n\t\tif (stage.__touch.preventDefault) { e.preventDefault && e.preventDefault(); }\n\t\tlet type = e.type;\n\t\tlet id = e.pointerId;\n\t\tlet ids = stage.__touch.activeIDs;\n\n\t\tif (type === \"MSPointerDown\" || type === \"pointerdown\") {\n\t\t\tif (e.srcElement != stage.canvas) { return; }\n\t\t\tids[id] = true;\n\t\t\tthis._handleStart(stage, id, e, e.pageX, e.pageY);\n\t\t} else if (ids[id]) { // it's an id we're watching\n\t\t\tif (type === \"MSPointerMove\" || type === \"pointermove\") {\n\t\t\t\tthis._handleMove(stage, id, e, e.pageX, e.pageY);\n\t\t\t} else if (type === \"MSPointerUp\" || type === \"MSPointerCancel\"\n\t\t\t\t\t|| type === \"pointerup\" || type === \"pointercancel\") {\n\t\t\t\tdelete(ids[id]);\n\t\t\t\tthis._handleEnd(stage, id, e);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t * @param {easeljs.Stage} stage\n\t * @param {String | Number} id\n\t * @param {Object} e\n\t * @param {Number} x\n\t * @param {Number} y\n\t */\n\t_handleStart (stage, id, e, x, y) {\n\t\tlet props = stage.__touch;\n\t\tif (!props.multitouch && props.count) { return; }\n\t\tlet ids = props.pointers;\n\t\tif (ids[id]) { return; }\n\t\tids[id] = true;\n\t\tprops.count++;\n\t\tstage._handlePointerDown(id, e, x, y);\n\t},\n\n\t/**\n\t * @private\n\t * @param {easeljs.Stage} stage\n\t * @param {String | Number} id\n\t * @param {Object} e\n\t * @param {Number} x\n\t * @param {Number} y\n\t */\n\t_handleMove (stage, id, e, x, y) {\n\t\tif (!stage.__touch.pointers[id]) { return; }\n\t\tstage._handlePointerMove(id, e, x, y);\n\t},\n\n\t/**\n\t * @private\n\t * @param {easeljs.Stage} stage\n\t * @param {String | Number} id\n\t * @param {Object} e\n\t */\n\t_handleEnd (stage, id, e) {\n\t\t// TODO: cancel should be handled differently for proper UI (ex. an up would trigger a click, a cancel would more closely resemble an out).\n\t\tlet props = stage.__touch;\n\t\tlet ids = props.pointers;\n\t\tif (!ids[id]) { return; }\n\t\tprops.count--;\n\t\tstage._handlePointerUp(id, e, true);\n\t\tdelete(ids[id]);\n\t}\n\n};\n\n/**\n * @license SpriteSheetBuilder\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * The SpriteSheetBuilder allows you to generate {@link easeljs.SpriteSheet} instances at run time\n * from any display object. This can allow you to maintain your assets as vector graphics (for low file size), and\n * render them at run time as SpriteSheets for better performance.\n *\n * SpriteSheets can be built either synchronously, or asynchronously, so that large SpriteSheets can be generated\n * without locking the UI.\n *\n * Note that the \"images\" used in the generated SpriteSheet are actually canvas elements, and that they will be\n * sized to the nearest power of 2 up to the value of {@link easeljs.SpriteSheetBuilder#maxWidth}\n * or {@link easeljs.SpriteSheetBuilder#maxHeight}.\n *\n * @memberof easeljs\n * @extends core.EventDispatcher\n *\n * @param {Number} [framerate=0] The {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} of\n * {@link easeljs.SpriteSheet} instances that are created.\n */\nclass SpriteSheetBuilder extends EventDispatcher {\n\n\tconstructor (framerate = 0) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The maximum width for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t * dimensions, then additional images will be created as needed.\n\t\t * @type {Number}\n\t\t * @default 2048\n\t\t*/\n\t\tthis.maxWidth = 2048;\n\n\t\t/**\n\t\t * The maximum height for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t * dimensions, then additional images will be created as needed.\n\t\t * @type {Number}\n\t\t * @default 2048\n\t\t */\n\t\tthis.maxHeight = 2048;\n\n\t\t/**\n\t\t * The SpriteSheet that was generated. This will be null before a build is completed successfully.\n\t\t * @type {easeljs.SpriteSheet}\n\t\t */\n\t\tthis.spriteSheet = null;\n\n\t\t/**\n\t\t * The scale to apply when drawing all frames to the SpriteSheet. This is multiplied against any scale specified\n\t\t * in the addFrame call. This can be used, for example, to generate a SpriteSheet at run time that is tailored\n\t\t * to the a specific device resolution (ex. tablet vs mobile).\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.scale = 1;\n\n\t\t/**\n\t\t* The padding to use between frames. This is helpful to preserve antialiasing on drawn vector content.\n\t\t* @type {Number}\n\t\t* @default 1\n\t\t*/\n\t\tthis.padding = 1;\n\n\t\t/**\n\t\t * A number from 0.01 to 0.99 that indicates what percentage of time the builder can use. This can be\n\t\t * thought of as the number of seconds per second the builder will use. For example, with a timeSlice value of 0.3,\n\t\t * the builder will run 20 times per second, using approximately 15ms per build (30% of available time, or 0.3s per second).\n\t\t * Defaults to 0.3.\n\t\t * @type {Number}\n\t\t * @default 0.3\n\t\t */\n\t\tthis.timeSlice = 0.3;\n\n\t\t/**\n\t\t * A value between 0 and 1 that indicates the progress of a build, or -1 if a build has not\n\t\t * been initiated.\n\t\t * @type {Number}\n\t\t * @default -1\n\t\t * @readonly\n\t\t */\n\t\tthis.progress = -1;\n\n\t\t/**\n\t\t * A {@link easeljs.SpriteSheet#framerate} value that will be passed to new SpriteSheet instances that are\n\t\t * created. If no framerate is specified (or it is 0), then SpriteSheets will use the {@link core.Ticker} framerate.\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.framerate = framerate;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._frames = [];\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._animations = {};\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._data = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._nextFrameIndex = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._index = 0;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._timerID = null;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t */\n\t\tthis._scale = 1;\n\t}\n\n\t/**\n\t * Adds a frame to the {@link easeljs.SpriteSheet}. Note that the frame will not be drawn until you\n\t * call {@link easeljs.SpriteSheetBuilder#build} method. The optional setup params allow you to have\n\t * a function run immediately before the draw occurs. For example, this allows you to add a single source multiple\n\t * times, but manipulate it or its children to change it to generate different frames.\n\t *\n\t * Note that the source's transformations (x, y, scale, rotate, alpha) will be ignored, except for regX/Y. To apply\n\t * transforms to a source object and have them captured in the SpriteSheet, simply place it into a {@link easeljs.Container}\n\t * and pass in the Container as the source.\n\t * @param {easeljs.DisplayObject} source The source {{#crossLink \"DisplayObject\"}}{{/crossLink}}  to draw as the frame.\n\t * @param {easeljs.Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the\n\t * source to draw to the frame. If not specified, it will look for a `getBounds` method, bounds property, or\n\t * `nominalBounds` property on the source to use. If one is not found, the frame will be skipped.\n\t * @param {Number} [scale=1] Optional. The scale to draw this frame at. Default is 1.\n\t * @param {Function} [setupFunction] A function to call immediately before drawing this frame. It will be called with two parameters: the source, and setupData.\n\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t * @return {Number} The index of the frame that was just added, or null if a sourceRect could not be determined.\n\t */\n\taddFrame (source, sourceRect, scale = 1, setupFunction, setupData) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tlet rect = sourceRect||source.bounds||source.nominalBounds||(source.getBounds&&source.getBounds());\n\t\tif (!rect) { return null; }\n\t\treturn this._frames.push({ source, sourceRect: rect, scale, funct: setupFunction, data: setupData, index: this._frames.length, height: rect.height*scale }) - 1;\n\t}\n\n\t/**\n\t * Adds an animation that will be included in the created {@link easeljs.SpriteSheet}.\n\t * @param {String} name The name for the animation.\n\t * @param {Array} frames An array of frame indexes that comprise the animation. Ex. [3,6,5] would describe an animation\n\t * that played frame indexes 3, 6, and 5 in that order.\n\t * @param {String} [next] Specifies the name of the animation to continue to after this animation ends. You can\n\t * also pass false to have the animation stop when it ends. By default it will loop to the start of the same animation.\n\t * @param {Number} [speed] Specifies a frame advance speed for this animation. For example, a value of 0.5 would\n\t * cause the animation to advance every second tick. Note that earlier versions used `frequency` instead, which had\n\t * the opposite effect.\n\t */\n\taddAnimation (name, frames, next, speed) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis._animations[name] = { frames, next, speed };\n\t}\n\n\t/**\n\t * This will take a {@link easeljs.MovieClip} instance, and add its frames and labels to this\n\t * builder. Labels will be added as an animation running from the label index to the next label. For example, if\n\t * there is a label named \"foo\" at frame 0 and a label named \"bar\" at frame 10, in a MovieClip with 15 frames, it\n\t * will add an animation named \"foo\" that runs from frame index 0 to 9, and an animation named \"bar\" that runs from\n\t * frame index 10 to 14.\n\t *\n\t * Note that this will iterate through the full MovieClip with {@link easeljs.MovieClip#actionsEnabled}\n\t * set to `false`, ending on the last frame.\n\t * @param {easeljs.MovieClip} source The source MovieClip instance to add to the SpriteSheet.\n\t * @param {easeljs.Rectangle} [sourceRect] A Rectangle defining the portion of the source to\n\t * draw to the frame. If not specified, it will look for a {{#crossLink \"DisplayObject/getBounds\"}}{{/crossLink}}\n\t * method, `frameBounds` Array, `bounds` property, or `nominalBounds` property on the source to use. If one is not\n\t * found, the MovieClip will be skipped.\n\t * @param {Number} [scale=1] The scale to draw the movie clip at.\n\t * @param {Function} [setupFunction] A function to call immediately before drawing each frame. It will be called\n\t * with three parameters: the source, setupData, and the frame index.\n\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t * @param {Function} [labelFunction] This method will be called for each MovieClip label that is added with four\n\t * parameters: the label name, the source MovieClip instance, the starting frame index (in the movieclip timeline)\n\t * and the end index. It must return a new name for the label/animation, or `false` to exclude the label.\n\t */\n\taddMovieClip (source, sourceRect, scale = 1, setupFunction, setupData, labelFunction) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tlet rects = source.frameBounds;\n\t\tlet rect = sourceRect||source.bounds||source.nominalBounds||(source.getBounds&&source.getBounds());\n\t\tif (!rect && !rects) { return; }\n\n\t\tlet baseFrameIndex = this._frames.length;\n\t\tconst duration = source.timeline.duration;\n\t\tfor (let i=0; i<duration; i++) {\n\t\t\tlet r = (rects&&rects[i]) ? rects[i] : rect;\n\t\t\tthis.addFrame(source, r, scale, this._setupMovieClipFrame, {i, f:setupFunction, d:setupData});\n\t\t}\n\t\tconst labels = source.timeline._labels;\n\t\tlet lbls = [];\n\t\tfor (let n in labels) {\n\t\t\tlbls.push({index:labels[n], label:n});\n\t\t}\n\t\tif (lbls.length) {\n\t\t\tlbls.sort((a, b) => a.index-b.index);\n\t\t\tfor (let i=0,l=lbls.length; i<l; i++) {\n\t\t\t\tlet label = lbls[i].label;\n\t\t\t\tlet start = baseFrameIndex+lbls[i].index;\n\t\t\t\tlet end = baseFrameIndex+((i === l-1) ? duration : lbls[i+1].index);\n\t\t\t\tlet frames = [];\n\t\t\t\tfor (let i=start; i<end; i++) { frames.push(i); }\n\t\t\t\tif (labelFunction) {\n\t\t\t\t\tlabel = labelFunction(label, source, start, end);\n\t\t\t\t\tif (!label) { continue; }\n\t\t\t\t}\n\t\t\t\tthis.addAnimation(label, frames, true); // for now, this loops all animations.\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Builds a {@link easeljs.SpriteSheet} instance based on the current frames.\n\t * @return {easeljs.SpriteSheet} The created SpriteSheet instance, or null if a build is already running or an error\n\t * occurred.\n\t */\n\tbuild () {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis._startBuild();\n\t\twhile (this._drawNext()) {}\n\t\tthis._endBuild();\n\t\treturn this.spriteSheet;\n\t}\n\n\t/**\n\t * Asynchronously builds a {@link easeljs.SpriteSheet} instance based on the current frames. It will\n\t * run 20 times per second, using an amount of time defined by `timeSlice`. When it is complete it will call the\n\t * specified callback.\n\t * @param {Number} [timeSlice] Sets the timeSlice property on this instance.\n\t */\n\tbuildAsync (timeSlice) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis.timeSlice = timeSlice;\n\t\tthis._startBuild();\n\t\tthis._timerID = setTimeout(() => this._run(), 50-Math.max(0.01, Math.min(0.99, this.timeSlice||0.3))*50);\n\t}\n\n\t/**\n\t * Stops the current asynchronous build.\n\t */\n\tstopAsync () {\n\t\tclearTimeout(this._timerID);\n\t\tthis._data = null;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @override\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}]`;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\t_startBuild () {\n\t\tlet pad = this.padding||0;\n\t\tthis.progress = 0;\n\t\tthis.spriteSheet = null;\n\t\tthis._index = 0;\n\t\tthis._scale = this.scale;\n\t\tlet dataFrames = [];\n\t\tthis._data = {\n\t\t\timages: [],\n\t\t\tframes: dataFrames,\n\t\t\tframerate: this.framerate,\n\t\t\tanimations: this._animations // TODO: should we \"clone\" _animations in case someone adds more animations after a build?\n\t\t};\n\n\t\tlet frames = this._frames.slice();\n\t\tframes.sort((a, b) => (a.height<=b.height) ? -1 : 1);\n\n\t\tif (frames[frames.length-1].height+pad*2 > this.maxHeight) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n\t\tlet y=0, x=0;\n\t\tlet img = 0;\n\t\twhile (frames.length) {\n\t\t\tlet o = this._fillRow(frames, y, img, dataFrames, pad);\n\t\t\tif (o.w > x) { x = o.w; }\n\t\t\ty += o.h;\n\t\t\tif (!o.h || !frames.length) {\n\t\t\t\tlet canvas = window.createjs&&createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\t\t\t\tcanvas.width = this._getSize(x,this.maxWidth);\n\t\t\t\tcanvas.height = this._getSize(y,this.maxHeight);\n\t\t\t\tthis._data.images[img] = canvas;\n\t\t\t\tif (!o.h) {\n\t\t\t\t\tx=y=0;\n\t\t\t\t\timg++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t */\n\t_setupMovieClipFrame (source, data) {\n\t\tlet ae = source.actionsEnabled;\n\t\tsource.actionsEnabled = false;\n\t\tsource.gotoAndStop(data.i);\n\t\tsource.actionsEnabled = ae;\n\t\tdata.f&&data.f(source, data.d, data.i);\n\t}\n\n\t/**\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t */\n\t_getSize (size, max) {\n\t\tlet pow = 4;\n\t\twhile (Math.pow(2, ++pow) < size) {}\n\t\treturn Math.min(max, Math.pow(2, pow));\n\t};\n\n\t/**\n\t * @protected\n\t * @param {Array} frames\n\t * @param {Number} y\n\t * @param {HTMLImageElement} img\n\t * @param {Object} dataFrames\n\t * @param {Number} pad\n\t * @return {Number} The width & height of the row.\n\t */\n\t_fillRow (frames, y, img, dataFrames, pad) {\n\t\tlet w = this.maxWidth;\n\t\tlet maxH = this.maxHeight;\n\t\ty += pad;\n\t\tlet h = maxH-y;\n\t\tlet x = pad;\n\t\tlet height = 0;\n\t\tfor (let i=frames.length-1; i>=0; i--) {\n\t\t\tlet frame = frames[i];\n\t\t\tlet sc = this._scale*frame.scale;\n\t\t\tlet rect = frame.sourceRect;\n\t\t\tlet source = frame.source;\n\t\t\tlet rx = Math.floor(sc*rect.x-pad);\n\t\t\tlet ry = Math.floor(sc*rect.y-pad);\n\t\t\tlet rh = Math.ceil(sc*rect.height+pad*2);\n\t\t\tlet rw = Math.ceil(sc*rect.width+pad*2);\n\t\t\tif (rw > w) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n\t\t\tif (rh > h || x+rw > w) { continue; }\n\t\t\tframe.img = img;\n\t\t\tframe.rect = new Rectangle(x,y,rw,rh);\n\t\t\theight = height || rh;\n\t\t\tframes.splice(i,1);\n\t\t\tdataFrames[frame.index] = [x,y,rw,rh,img,Math.round(-rx+sc*source.regX-pad),Math.round(-ry+sc*source.regY-pad)];\n\t\t\tx += rw;\n\t\t}\n\t\treturn {w:x, h:height};\n\t}\n\n\t/**\n\t * @protected\n\t */\n\t_endBuild () {\n\t\tthis.spriteSheet = new SpriteSheet(this._data);\n\t\tthis._data = null;\n\t\tthis.progress = 1;\n\t\tthis.dispatchEvent(\"complete\");\n\t}\n\n\t/**\n\t * @protected\n\t */\n\t_run () {\n\t\tlet ts = Math.max(0.01, Math.min(0.99, this.timeSlice||0.3))*50;\n\t\tlet t = (new Date()).getTime()+ts;\n\t\tlet complete = false;\n\t\twhile (t > (new Date()).getTime()) {\n\t\t\tif (!this._drawNext()) { complete = true; break; }\n\t\t}\n\t\tif (complete) {\n\t\t\tthis._endBuild();\n\t\t} else {\n\t\t\tthis._timerID = setTimeout(() => this._run(), 50-ts);\n\t\t}\n\t\tlet p = this.progress = this._index/this._frames.length;\n\t\tif (this.hasEventListener(\"progress\")) {\n\t\t\tlet evt = new Event(\"progress\");\n\t\t\tevt.progress = p;\n\t\t\tthis.dispatchEvent(evt);\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t * @return {Boolean} Returns false if this is the last draw.\n\t */\n\t_drawNext () {\n\t\tlet frame = this._frames[this._index];\n\t\tlet sc = frame.scale*this._scale;\n\t\tlet rect = frame.rect;\n\t\tlet sourceRect = frame.sourceRect;\n\t\tlet canvas = this._data.images[frame.img];\n\t\tlet ctx = canvas.getContext(\"2d\");\n\t\tframe.funct&&frame.funct(frame.source, frame.data);\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(rect.x, rect.y, rect.width, rect.height);\n\t\tctx.clip();\n\t\tctx.translate(Math.ceil(rect.x-sourceRect.x*sc), Math.ceil(rect.y-sourceRect.y*sc));\n\t\tctx.scale(sc,sc);\n\t\tframe.source.draw(ctx); // display object will draw itself.\n\t\tctx.restore();\n\t\treturn (++this._index) < this._frames.length;\n\t}\n\n}\n\n/**\n * @static\n * @readonly\n * @protected\n * @type {String}\n */\nSpriteSheetBuilder.ERR_DIMENSIONS = \"frame dimensions exceed max spritesheet dimensions\";\n/**\n * @static\n * @readonly\n * @protected\n * @type {String}\n */\nSpriteSheetBuilder.ERR_RUNNING = \"a build is already running\";\n\n/**\n * Dispatched when a build completes.\n * @event easeljs.SpriteSheetBuilder#complete\n * @property {Object} target The object that dispatched the event.\n * @property {String} type The event type.\n * @since 0.6.0\n */\n\n/**\n * Dispatched when an asynchronous build has progress.\n * @event easeljs.SpriteSheetBuilder#progress\n * @property {Object} target The object that dispatched the event.\n * @property {String} type The event type.\n * @property {Number} progress The current progress value (0-1).\n * @since 0.6.0\n */\n\n/*\n* @license SpriteSheetUtils\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * The SpriteSheetUtils class is a collection of static methods for working with {{#crossLink \"SpriteSheet\"}}{{/crossLink}}s.\n * A sprite sheet is a series of images (usually animation frames) combined into a single image on a regular grid. For\n * example, an animation consisting of 8 100x100 images could be combined into a 400x200 sprite sheet (4 frames across\n * by 2 high). The SpriteSheetUtils class uses a static interface and should not be instantiated.\n *\n * @memberof easeljs\n * @name easeljs.SpriteSheetUtils\n */\nvar SpriteSheetUtils = SpriteSheetUtils = {\n\n\t/**\n\t * @protected\n\t * @type {HTMLCanvasElement | Object}\n\t */\n\t_workingCanvas: createCanvas(),\n\n\t/**\n\t * @protected\n\t * @type {CanvasRenderingContext2D}\n\t */\n\tget _workingContext () { return this._workingCanvas.getContext(\"2d\"); },\n\n\t/**\n\t * Returns a single frame of the specified sprite sheet as a new PNG image. An example of when this may be useful is\n\t * to use a spritesheet frame as the source for a bitmap fill.\n\t *\n\t * <strong>WARNING:</strong> In almost all cases it is better to display a single frame using a {@link easeljs.Sprite}\n\t * with a {@link easeljs.Sprite#gotoAndStop} call than it is to slice out a frame using this\n\t * method and display it with a Bitmap instance. You can also crop an image using the {@link easeljs.Bitmap#sourceRect}\n\t * property of {@link easeljs.Bitmap}.\n\t *\n\t * The extractFrame method may cause cross-domain warnings since it accesses pixels directly on the canvas.\n\t *\n\t * @param {easeljs.SpriteSheet} spriteSheet The SpriteSheet instance to extract a frame from.\n\t * @param {Number | String} frameOrAnimation The frame number or animation name to extract. If an animation\n\t * name is specified, only the first frame of the animation will be extracted.\n\t * @return {HTMLImageElement} a single frame of the specified sprite sheet as a new PNG image.\n\t */\n\textractFrame (spriteSheet, frameOrAnimation) {\n\t\tif (isNaN(frameOrAnimation)) {\n\t\t\tframeOrAnimation = spriteSheet.getAnimation(frameOrAnimation).frames[0];\n\t\t}\n\t\tlet data = spriteSheet.getFrame(frameOrAnimation);\n\t\tif (!data) { return null; }\n\t\tlet r = data.rect;\n\t\tlet canvas = this._workingCanvas;\n\t\tcanvas.width = r.width;\n\t\tcanvas.height = r.height;\n\t\tthis._workingContext.drawImage(data.image, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height);\n\t\tlet img = document.createElement(\"img\");\n\t\timg.src = canvas.toDataURL(\"image/png\");\n\t\treturn img;\n\t},\n\n\t/**\n\t * @protected\n\t * @param {easeljs.SpriteSheet} spriteSheet\n\t * @param {Number} count\n\t * @param {Number} h\n\t * @param {Number} v\n\t */\n\t_flip (spriteSheet, count, h, v) {\n\t\tlet imgs = spriteSheet._images;\n\t\tlet canvas = this._workingCanvas;\n\t\tlet ctx = this._workingContext;\n\t\tconst il = imgs.length/count;\n\t\tfor (let i=0; i<il; i++) {\n\t\t\tlet src = imgs[i];\n\t\t\tsrc.__tmp = i; // a bit hacky, but faster than doing indexOf below.\n\t\t\tctx.setTransform(1,0,0,1,0,0);\n\t\t\tctx.clearRect(0,0,canvas.width+1,canvas.height+1);\n\t\t\tcanvas.width = src.width;\n\t\t\tcanvas.height = src.height;\n\t\t\tctx.setTransform(h?-1:1, 0, 0, v?-1:1, h?src.width:0, v?src.height:0);\n\t\t\tctx.drawImage(src,0,0);\n\t\t\tlet img = document.createElement(\"img\");\n\t\t\timg.src = canvas.toDataURL(\"image/png\");\n\t\t\t// work around a strange bug in Safari:\n\t\t\timg.width = (src.width||src.naturalWidth);\n\t\t\timg.height = (src.height||src.naturalHeight);\n\t\t\timgs.push(img);\n\t\t}\n\n\t\tlet frames = spriteSheet._frames;\n\t\tconst fl = frames.length/count;\n\t\tfor (let i=0; i<fl; i++) {\n\t\t\tlet src = frames[i];\n\t\t\tlet rect = src.rect.clone();\n\t\t\tlet img = imgs[src.image.__tmp+il*count];\n\n\t\t\tlet frame = {image:img,rect,regX:src.regX,regY:src.regY};\n\t\t\tif (h) {\n\t\t\t\trect.x = (img.width||img.naturalWidth)-rect.x-rect.width; // update rect\n\t\t\t\tframe.regX = rect.width-src.regX; // update registration point\n\t\t\t}\n\t\t\tif (v) {\n\t\t\t\trect.y = (img.height||img.naturalHeight)-rect.y-rect.height;  // update rect\n\t\t\t\tframe.regY = rect.height-src.regY; // update registration point\n\t\t\t}\n\t\t\tframes.push(frame);\n\t\t}\n\n\t\tlet sfx = `_${h?\"h\":\"\"}${v?\"v\":\"\"}`;\n\t\tlet names = spriteSheet._animations;\n\t\tlet data = spriteSheet._data;\n\t\tconst al = names.length/count;\n\t\tfor (let i=0; i<al; i++) {\n\t\t\tlet name = names[i];\n\t\t\tlet src = data[name];\n\t\t\tlet anim = {name:name+sfx,speed:src.speed,next:src.next,frames:[]};\n\t\t\tif (src.next) { anim.next += sfx; }\n\t\t\tlet frames = src.frames;\n\t\t\tfor (let i=0,l=frames.length;i<l;i++) {\n\t\t\t\tanim.frames.push(frames[i]+fl*count);\n\t\t\t}\n\t\t\tdata[anim.name] = anim;\n\t\t\tnames.push(anim.name);\n\t\t}\n\t}\n\n};\n\n/**\n * @license WebGLInspector\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n /**\n  * A utility and helper class designed to work with {{#crossLink \"StageGL\"}}{{/crossLink}} to help investigate and\n  * test performance or display problems. It contains logging functions to analyze behaviour and performance testing\n  * utilities.\n  *\n  * @memberof easeljs\n  * @extends core.EventDispatcher\n  *\n  * @param {StageGL} stage The default stage to use when none is supplied.\n  */\nclass WebGLInspector extends EventDispatcher {\n\n\tconstructor (stage) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The internal reference to the default stage this Inspector is for.\n\t\t * @protected\n\t\t * @type {easeljs.StageGL}\n\t\t */\n\t\tthis._stage = stage;\n\t}\n\n\t/**\n\t * Utility function for use with {@link easeljs.WebGLInspector#logDepth}. Logs an item's position and registration.\n\t * Useful to see if something is being forced off screen or has an integer position.\n\t * @param {easeljs.DisplayObject} item The item we're currently logging about.\n\t * @param {String} [prepend] The string to show before the item, usually formatting for a tree view.\n\t * @static\n\t */\n\tstatic dispProps (item, prepend = \"\") {\n\t\tlet p = `\\tP: ${item.x.toFixed(2)}x${item.y.toFixed(2)}\\t`;\n\t\tlet r = `\\tR: ${item.regX.toFixed(2)}x${item.regY.toFixed(2)}\\t`;\n\t\tWebGLInspector._log(prepend, `${item.toString()}\\t`, p, r);\n\t}\n\n\t/**\n\t * Log with alternateOutput if available, defaulting to the console.\n\t * @param {...*} info The info to log.\n\t * @static\n\t */\n\tstatic _log (...info) {\n\t\tif (WebGLInspector.alternateOutput) {\n\t\t\tWebGLInspector.alternateOutput.log(...info);\n\t\t} else {\n\t\t\tconsole.log(...info);\n\t\t}\n\t}\n\n\t/**\n\t * Perform all of the logging reports at once.\n\t * @param {easeljs.StageGL} [stage] The stage to log information for.\n\t */\n\tlog (stage) {\n\t\tif (!stage) { stage = this._stage; }\n\t\tWebGLInspector._log(`Batches Per Draw: ${(stage._batchID/stage._drawID).toFixed(4)}`);\n\t\tthis.logContextInfo(stage._webGLContext);\n\t\tthis.logDepth(stage.children, \"\");\n\t\tthis.logTextureFill(stage);\n\t}\n\n\t/**\n\t * Replace the stage's Draw command with an empty draw command. This is useful for testing performance, and ignoring rendering.\n\t * @param {StageGL} [stage=] The stage to log information for.\n\t * @param {Boolean} [enabled] Force enabled. If left undefined, it will toggle.\n\t */\n\ttoggleGPUDraw (stage, enabled) {\n\t\tif (!stage) { stage = this._stage; }\n\n\t\tif (enabled === undefined) {\n\t\t\tenabled = !!stage._drawBuffers_;\n\t\t}\n\n\t\tif (enabled && stage._drawBuffers_) {\n\t\t\tstage._drawBuffers = stage._drawBuffers_;\n\t\t\tstage._drawBuffers_ = undefined;\n\t\t} else {\n\t\t\tstage._drawBuffers_ = stage._drawBuffers;\n\t\t\tstage._drawBuffers = function _inspectorDrawBuffers (gl) {\n\t\t\t\tif (this.vocalDebug) {\n\t\t\t\t\tWebGLInspector._log(`BlankDraw[${this._drawID}:${this._batchID}] : ${this.batchReason}`);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Recursively walk the entire display tree, log the attached items, and display it in a tree view.\n\t * @param {Array} [children] The children array to walk through.\n\t * @param {String} [prepend] What to prepend to this output from this point onwards.\n\t * @param {Function} [logFunc] Custom logging function, mainly for filtering or formatting output.\n\t */\n\tlogDepth (children, prepend = \"\", logFunc = WebGLInspector._log) {\n\t\tif (!children) { children = this._stage.children; }\n\t\tconst l = children.length;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tlet child = children[i];\n\t\t\tlogFunc(`${prepend}-`, child);\n\t\t\tif (child.children && child.children.length) {\n\t\t\t\tthis.logDepth(child.children, `|${prepend}`, logFunc);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Examine the context and provide information about its capabilities.\n\t * @param {WebGLRenderingContext} [gl] The WebGL context to inspect.\n\t */\n\tlogContextInfo (gl) {\n\t\tif (!gl) { gl = this._stage._webGLContext; }\n\t\tlet data = `\n\t\t\t== LOG:\\n\n\t\t\tMax textures per draw: ${gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)}\\n\n\t\t\tMax textures active: ${gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS)}\\n\n\t\t\t\\n\n\t\t\tMax texture size: ${gl.getParameter(gl.MAX_TEXTURE_SIZE)/2}\\n\n\t\t\tMax cache size: ${gl.getParameter(gl.MAX_RENDERBUFFER_SIZE)/2}\\n\n\t\t\t\\n\n\t\t\tMax attributes per vertex: ${gl.getParameter(gl.MAX_VERTEX_ATTRIBS)}\\n\n\t\t\tWebGL Version string: ${gl.getParameter(gl.VERSION)}\\n\n\t\t\t======\n\t\t`;\n\t\tWebGLInspector._log(data);\n\t}\n\n\t/**\n\t * Simulate renders and watch what happens for textures moving around between draw calls. A texture moving between\n\t * slots means it was removed and then re-added to draw calls. Performance may be better if it was allowed to stay\n\t * in place.\n\t * @param {StageGL} [stage] The stage to log information for.\n\t */\n\tlogTextureFill (stage) {\n\t\tif (!stage) { stage = this._stage; }\n\n\t\tlet dict = stage._textureDictionary;\n\t\tlet count = stage._batchTextureCount;\n\t\tWebGLInspector._log(`${textureMax}: ${count}`);\n\t\tlet output = [];\n\t\tfor (let n in dict) {\n\t\t\tlet str = n.replace(window.location.origin, \"\");\n\t\t\tlet tex = dict[n];\n\t\t\tlet shifted = tex._lastActiveIndex?tex._lastActiveIndex === tex._activeIndex:false;\n\t\t\toutput.push({src, element:tex, shifted});\n\t\t\ttex._lastActiveIndex = tex._activeIndex;\n\t\t}\n\n\t\toutput.sort((a,b) => {\n\t\t\tif (a.element._drawID === stage._drawID) { return 1; }\n\t\t\tif (a.element._drawID < b.element._drawID) { return -1; }\n\t\t\treturn 0;\n\t\t});\n\n\t\tconst l = output.length;\n\t\tfor (let i=0; i<l; i++) {\n\t\t\tlet out = output[i];\n\t\t\tlet active = out.element._drawID === stage._drawID;\n\t\t\tWebGLInspector._log(`[${out.src}] ${active?\"ACTIVE\":\"stale\"} ${out.shifted?\"steady\":\"DRIFT\"}`, out.element);\n\t\t}\n\t}\n\n}\n\n/**\n * Alternate output for debugging situations where \"console\" is not available, i.e. Mobile or remote debugging.\n * Expects object with a \"log\" function that takes any number of params.\n * @type {Console}\n * @default null\n * @static\n * @protected\n */\nWebGLInspector.alternateOutput = null;\n\n/**\n * The core classes of EaselJS.\n * @namespace easeljs\n *\n * @example\n * import { Stage, Shape } from \"@createjs/easeljs\";\n * const stage = new Stage(\"myCanvas\");\n * const shape = new Shape();\n * shape.graphics.beginFill(\"red\").drawCircle(0, 0, 50);\n * stage.addChild(shape);\n * stage.update();\n */\n\nexport { StageGL, Stage, Container, DisplayObject, Bitmap, BitmapText, DOMElement, Graphics, MovieClip, Shadow as Shadow, Shape, Sprite, SpriteSheet, Text, MouseEvent, AlphaMapFilter, AlphaMaskFilter, BitmapCache, BlurFilter, ColorFilter, ColorMatrix, ColorMatrixFilter, Filter, DisplayProps, Matrix2D, Point, Rectangle, ButtonHelper, Touch as Touch, SpriteSheetBuilder, SpriteSheetUtils as SpriteSheetUtils, uid, createCanvas, WebGLInspector };\n\nexport { Event, EventDispatcher, Ticker };\n\n\t\t\t\tvar cjs = window.createjs = window.createjs || {};\n\t\t\t\tvar v = cjs.v = cjs.v || {};\n\t\t\t\nv.easeljs = \"NEXT\";\n"]}