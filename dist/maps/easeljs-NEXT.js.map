{"version":3,"sources":["easeljs-NEXT.js"],"names":["exports","Tween","Timeline","hasOwnProperty","Event","[object Object]","type","bubbles","cancelable","this","target","currentTarget","eventPhase","timeStamp","Date","getTime","defaultPrevented","propagationStopped","immediatePropagationStopped","removed","event","n","props","constructor","name","EventDispatcher","p","prototype","addEventListener","on","removeEventListener","off","removeAllEventListeners","hasEventListener","dispatchEvent","_dispatchEvent","willTrigger","_listeners","_captureListeners","listener","useCapture","listeners","arr","push","scope","once","data","handleEvent","evt","call","remove","l","length","i","splice","eventObj","clone","e","parent","top","list","captureListeners","o","slice","Ticker","RAF_SYNCHED","RAF","TIMEOUT","super","timingMode","maxDelta","paused","_inited","_startTime","_pausedTime","_ticks","_pausedTicks","_interval","_lastTime","_times","_tickTimes","_timerId","_raf","interval","_setupTick","framerate","_getTime","f","window","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","init","ticks","times","Math","min","reduce","a","b","runTime","pauseable","_tick","mode","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","_handleRAF","bind","_handleSynch","setTimeout","_handleTimeout","time","elapsedTime","delta","unshift","pop","now","performance","_instance","toString","reset","getMeasuredTickTime","getMeasuredFPS","getEventTime","getTicks","StageGL","Error","_nextId","uid","Point","x","y","setValues","point","Matrix2D","c","d","tx","ty","a1","b1","c1","d1","tx1","matrix","append","prepend","scaleX","scaleY","rotation","skewX","skewY","regX","regY","r","cos","sin","DEG_TO_RAD","angle","pt","sqrt","atan2","abs","PI","identity","DisplayProps","visible","alpha","shadow","compositeOperation","appendMatrix","prependMatrix","Rectangle","width","height","left","bottom","right","rect","extend","x1","y1","x2","y2","Filter","usesContext","_multiPass","VTX_SHADER_BODY","FRAG_SHADER_BODY","gl","stage","shaderProgram","ctx","targetCtx","targetX","targetY","imageData","getImageData","_applyFilter","putImageData","BitmapCache","undefined","scale","offX","offY","cacheID","_filterOffX","_filterOffY","_cacheDataURLID","_cacheDataURL","_drawWidth","_drawHeight","_boundRect","output","filters","filterCount","getBounds","test","options","_options","_useWebGL","update","filterBounds","getFilterBounds","surface","cacheCanvas","ceil","_updateSurface","_drawToCache","_webGLCache","isCacheControlled","__lastRT","__rtA","_killTextureObject","__rtB","releaseTexture","toDataURL","drawImage","setValue","createjs","createCanvas","document","createElement","useGL","isWebGL","antialias","transparent","autoPurge","stageGL","updateViewport","getTargetRenderTexture","webGL","getContext","clearRect","save","globalCompositeOperation","setTransform","translate","draw","restore","_applyFilters","_invalid","cacheDraw","w","h","DisplayObject","bitmapCache","id","mouseEnabled","tickEnabled","transformMatrix","snapToPixel","mask","hitArea","cursor","_props","_rectangle","_bounds","_webGLRenderStyle","_StageGL_NONE","value","ignoreCache","drawCache","cache","mtx","graphics","isEmpty","getMatrix","transform","drawAsPath","clip","invert","_snapToPixelEnabled","globalAlpha","_applyShadow","define","release","getDataURL","getConcatenatedMatrix","transformPoint","localToGlobal","globalToLocal","copy","appendTransform","_hitTestContext","hit","_testHit","_cacheScale","_cacheOffsetX","_cacheOffsetY","_getBounds","_cloneProps","Shadow","shadowColor","color","shadowOffsetX","offsetX","shadowOffsetY","offsetY","shadowBlur","blur","evtObj","ls","suppressCrossDomainErrors","ignoreTransform","_transformBounds","bounds","x_a","x_b","y_c","y_d","minX","maxX","minY","maxY","evts","_MOUSE_EVENTS","canvas","_hitTestCanvas","snapToPixelEnabled","_StageGL_SPRITE","_StageGL_BITMAP","Container","children","mouseChildren","tickChildren","numChildren","hasContent","child","isVisible","updateContext","addChild","silent","_removeChildAt","indexOf","index","addChildAt","good","removeChild","indexes","sort","kids","sortFunction","index1","index2","o1","o2","child1","child2","getObjectUnderPoint","_getObjectsUnderPoint","recursive","_cloneChildren","removeAllChildren","mouse","activeListener","currentDepth","_testMask","_hasMouseEventListener","result","getConcatenatedDisplayProps","fillStyle","fill","MouseEvent","stageX","stageY","nativeEvent","pointerID","primary","rawX","rawY","relatedTarget","localX","localY","isTouch","Stage","autoClear","getElementById","mouseX","mouseY","drawRect","mouseInBounds","tickOnUpdate","mouseMoveOutside","preventSelection","_pointerData","_pointerCount","_primaryPointerID","_mouseOverIntervalID","_nextStage","_prevStage","enableDOMEvents","nextStage","tick","beginPath","backgroundColor","mimeType","fillRect","dataURL","frequency","clearInterval","_testMouseOver","setInterval","enable","_eventListeners","t","mouseup","_handleMouseUp","mousemove","_handleMouseMove","dblclick","_handleDoubleClick","mousedown","_handleMouseDown","getBoundingClientRect","err","offsetTop","offsetLeft","offsetWidth","offsetHeight","pageXOffset","scrollLeft","clientLeft","body","pageYOffset","scrollTop","clientTop","styles","getComputedStyle","currentStyle","padL","parseInt","paddingLeft","borderLeftWidth","padT","paddingTop","borderTopWidth","padR","paddingRight","borderRightWidth","padB","paddingBottom","borderBottomWidth","_handlePointerMove","pageX","pageY","owner","_getPointerData","inBounds","_updatePointerPosition","_dispatchMouseEvent","_getElementRect","posEvtObj","_handlePointerUp","clear","oTarget","down","_handlePointerDown","preventDefault","eventTarget","_mouseOverX","_mouseOverY","isEventTarget","common","oldList","_mouseOverTarget","oldTarget","style","pointerId","HTMLCanvasElement","VideoBuffer","video","readyState","_video","_canvas","_videoReady","videoWidth","videoHeight","currentTime","Bitmap","imageOrUri","image","src","sourceRect","naturalWidth","img","getImage","node","cloneNode","bmp","Sprite","spriteSheet","frameOrAnimation","currentFrame","currentAnimation","currentAnimationFrame","_animation","_currentFrame","_skipAdvance","gotoAndPlay","complete","_normalizeFrame","getFrame","_goto","fps","getFrameBounds","advance","frameDelta","animation","frame","speed","animFrame","frames","next","_dispatchAnimationEnd","getNumFrames","end","changed","isNaN","getAnimation","BitmapText","text","lineHeight","letterSpacing","spaceWidth","_oldProps","_oldStage","_drawAction","_updateState","_updateText","character","toUpperCase","toLowerCase","_getFrameIndex","ss","_getFrame","change","spaceW","lineH","pool","_spritePool","childIndex","numKids","sprite","hasSpace","_getSpaceWidth","_getLineHeight","charAt","gotoAndStop","maxPoolSize","DOMElement","htmlElement","position","transformOrigin","WebkitTransformOrigin","msTransformOrigin","MozTransformOrigin","OTransformOrigin","_handleDrawEnd","visibility","oldProps","oldMtx","equals","str","WebkitTransform","OTransform","msTransform","MozTransform","opacity","Graphics","command","_stroke","_strokeStyle","_oldStrokeStyle","_strokeDash","_oldStrokeDash","_fill","_strokeIgnoreScale","_commitIndex","_instructions","_activeInstructions","_dirty","_storeIndex","curveTo","quadraticCurveTo","mt","moveTo","lt","lineTo","at","arcTo","bt","bezierCurveTo","qt","arc","cp","closePath","beginFill","lf","beginLinearGradientFill","rf","beginRadialGradientFill","bf","beginBitmapFill","ef","endFill","setStrokeStyle","sd","setStrokeDash","s","beginStroke","beginLinearGradientStroke","rs","beginRadialGradientStroke","bs","beginBitmapStroke","es","endStroke","dr","rr","drawRoundRect","rc","drawRoundRectComplex","dc","drawCircle","de","drawEllipse","dp","drawPolyStar","decodePath","g","hue","saturation","lightness","instructions","_updateInstructions","instr","exec","instrs","path","MoveTo","LineTo","radius","ArcTo","startAngle","endAngle","anticlockwise","Arc","cpx","cpy","QuadraticCurveTo","cp1x","cp1y","cp2x","cp2y","BezierCurveTo","Rect","ClosePath","_setFill","Fill","colors","ratios","x0","y0","linearGradient","r0","r1","radialGradient","repetition","bitmap","thickness","caps","joints","miterLimit","ignoreScale","StrokeStyle","segments","offset","StrokeDash","_setStroke","Stroke","radiusTL","radiusTR","radiusBR","radiusBL","RoundRect","Circle","Ellipse","sides","pointSize","PolyStar","clean","paramCount","params","base64","_BASE_64","fi","pl","charCount","num","sign","apply","commit","active","commitIndex","beginCmd","ll","stroke","BeginPath","_ctx","createLinearGradient","addColorStop","createRadialGradient","createPattern","strokeStyle","lineWidth","lineCap","_STROKE_CAPS_MAP","lineJoin","_STROKE_JOINTS_MAP","setLineDash","lineDashOffset","max","mTL","mTR","mBR","mBL","rTL","rTR","rBR","rBL","k","ox","oy","xe","ye","xm","ym","ps","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","j","m","q","u","v","z","0","1","2","3","4","5","6","7","8","9","+","/","MovieClip","inited","INDEPENDENT","startPosition","loop","timeline","Object","assign","useTicks","actionsEnabled","autoReset","frameBounds","_synchOffset","_rawPosition","_t","_managed","_bound_resolveState","_resolveState","MovieClipPlugin","install","labels","currentLabel","duration","totalFrames","positionOrLabel","play","stop","_framerate","_updateTimeline","pos","resolve","rawPosition","jump","synced","tl","SINGLE_FRAME","setPosition","tweens","tween","passive","_stepPosition","_addManagedChild","_setState","state","removeChildAt","_off","_reset","SYNCHED","installPlugin","prop","startValues","endValues","ratio","wait","priority","Shadow","Shape","SpriteSheet","_animations","_frames","_images","_data","_loadCount","_frameHeight","_frameWidth","_numFrames","_regX","_regY","_spacing","_margin","_parseData","animations","frameIndex","rectangle","images","onload","_handleImageLoad","onerror","_handleImageError","Array","isArray","spacing","margin","count","_calculateFrames","anim","obj","errorEvent","maxFrames","frameCount","frameWidth","frameHeight","imgLoop","imgs","imgW","imgH","naturalHeight","Text","font","textAlign","textBaseline","maxWidth","outline","col","_drawText","_prepContext","_getMeasuredWidth","H_OFFSETS","getMeasuredLineHeight","V_OFFSETS","lines","vOffset","substr","paint","maxW","hardLines","String","split","measureText","words","wordW","_drawTextLine","strokeText","fillText","start","center","hanging","middle","alphabetic","ideographic","AlphaMapFilter","alphaMap","_alphaMap","_mapData","_mapTexture","createTexture","activeTexture","TEXTURE1","bindTexture","TEXTURE_2D","setTextureParams","texImage2D","RGBA","UNSIGNED_BYTE","uniform1i","getUniformLocation","_prepAlphaMap","map","AlphaMaskFilter","BlurFilter","blurX","blurY","quality","_blurX","_blurXTable","_lastBlurX","_blurY","_blurYTable","_lastBlurY","_quality","_lastQuality","FRAG_SHADER_TEMPLATE","_buildShader","xChange","yChange","qChange","_getTable","_updateShader","_compiledShader","_builtShader","uniform1fv","uniform2f","_viewportWidth","_viewportHeight","pow","pad","replace","toFixed","spread","EDGE","adjust","factor","currentValue","radiusX","radiusY","iterations","px","yp","yi","yw","pr","pg","pb","pa","divx","divy","w1","h1","rxp1","ryp1","ssx","sx","ssy","sy","si","MUL_TABLE","stx","SHG_TABLE","mty","sty","ms","ColorFilter","redMultiplier","greenMultiplier","blueMultiplier","alphaMultiplier","redOffset","greenOffset","blueOffset","alphaOffset","uniform4f","ColorMatrix","brightness","contrast","setColor","adjustColor","IDENTITY_MATRIX","adjustBrightness","adjustContrast","adjustSaturation","adjustHue","_cleanValue","_multiplyMatrix","DELTA_INDEX","lumR","lumG","lumB","cosVal","sinVal","_fixMatrix","LENGTH","val","limit","toArray","concat","freeze","ColorMatrixFilter","mat","colorMatrix","Float32Array","uniformMatrix4fv","m0","m1","m2","m3","m4","m5","m6","m7","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","ButtonHelper","outLabel","overLabel","downLabel","hitLabel","_isPressed","_isOver","_enabled","enabled","__reset","label","Touch","Touch","MSPointerEvent","navigator","msMaxTouchPoints","PointerEvent","maxTouchPoints","singleTouch","allowDefault","isSupported","__touch","pointers","multitouch","_IOS_enable","_IE_enable","_IOS_disable","_IE_disable","_IOS_handleEvent","touches","changedTouches","touch","identifier","_handleStart","_handleMove","_handleEnd","_IE_handleEvent","msTouchAction","touchAction","activeIDs","ids","srcElement","SpriteSheetBuilder","maxHeight","padding","timeSlice","progress","_nextFrameIndex","_index","_timerID","_scale","source","setupFunction","setupData","ERR_RUNNING","nominalBounds","funct","labelFunction","rects","baseFrameIndex","addFrame","_setupMovieClipFrame","_labels","lbls","addAnimation","_startBuild","_drawNext","_endBuild","_run","dataFrames","ERR_DIMENSIONS","_fillRow","_getSize","ae","size","maxH","sc","rx","floor","ry","rh","rw","round","ts","SpriteSheetUtils","SpriteSheetUtils","_workingCanvas","_workingContext","il","__tmp","fl","sfx","names","al","WebGLInspector","_stage","item","_log","info","alternateOutput","log","console","_batchID","_drawID","logContextInfo","_webGLContext","logDepth","logTextureFill","_drawBuffers_","_drawBuffers","_inspectorDrawBuffers","vocalDebug","batchReason","logFunc","getParameter","MAX_TEXTURE_IMAGE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_RENDERBUFFER_SIZE","MAX_VERTEX_ATTRIBS","VERSION","dict","_textureDictionary","_batchTextureCount","textureMax","location","origin","tex","shifted","_lastActiveIndex","_activeIndex","element","out","versions","easeljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;CA6BC,SAAUA,SAAQC,OAAMC;EACxB;EAEAD,QAAQA,SAASA,MAAME,eAAe,aAAaF,MAAM,aAAaA;EACtEC,WAAWA,YAAYA,SAASC,eAAe,aAAaD,SAAS,aAAaA;QA8C5EE;IACJC,YAAYC,MAAMC,UAAU,OAAOC,aAAa;MAK9CC,KAAKH,OAAOA;MASZG,KAAKC,SAAS;MAYdD,KAAKE,gBAAgB;MAcrBF,KAAKG,aAAa;MAQlBH,KAAKF,UAAUA;MAQfE,KAAKD,aAAaA;MAQlBC,KAAKI,YAAY,IAAIC,OAAOC;MAS5BN,KAAKO,mBAAmB;MASxBP,KAAKQ,qBAAqB;MAS1BR,KAAKS,8BAA8B;MASnCT,KAAKU,UAAU;;IAUjBd;MACEI,KAAKO,mBAAmBP,KAAKD;MAC7B,OAAOC;;IASTJ;MACEI,KAAKQ,qBAAqB;MAC1B,OAAOR;;IASTJ;MACEI,KAAKS,8BAA8BT,KAAKQ,qBAAqB;MAC7D,OAAOR;;IAcTJ;MACEI,KAAKU,UAAU;MACf,OAAOV;;IASTJ;MACE,MAAMe,QAAQ,IAAIhB,MAAMK,KAAKH,MAAMG,KAAKF,SAASE,KAAKD;MAEtD,KAAK,IAAIa,KAAKZ,MAAM;QAClB,IAAIA,KAAKN,eAAekB,IAAI;UAC1BD,MAAMC,KAAKZ,KAAKY;;;MAIpB,OAAOD;;IAUTf,IAAIiB;MACF,KAAK,IAAID,KAAKC,OAAO;QACnBb,KAAKY,KAAKC,MAAMD;;MAGlB,OAAOZ;;IASTJ;MACE,WAAWI,KAAKc,YAAYC,cAAcf,KAAKH;;;QAgE7CmB;IAWJpB,kBAAkBK;MAChB,MAAMgB,IAAID,gBAAgBE;MAC1BjB,OAAOkB,mBAAmBF,EAAEE;MAC5BlB,OAAOmB,KAAKH,EAAEG;MACdnB,OAAOoB,sBAAsBpB,OAAOqB,MAAML,EAAEI;MAC5CpB,OAAOsB,0BAA0BN,EAAEM;MACnCtB,OAAOuB,mBAAmBP,EAAEO;MAC5BvB,OAAOwB,gBAAgBR,EAAEQ;MACzBxB,OAAOyB,iBAAiBT,EAAES;MAC1BzB,OAAO0B,cAAcV,EAAEU;;IAGzB/B;MAMEI,KAAK4B,aAAa;MAOlB5B,KAAK6B,oBAAoB;;IAgB3BjC,iBAAiBC,MAAMiC,UAAUC,aAAa;MAC5C,IAAIC;MAEJ,IAAID,YAAY;QACdC,YAAYhC,KAAK6B,oBAAoB7B,KAAK6B;aACrC;QACLG,YAAYhC,KAAK4B,aAAa5B,KAAK4B;;MAGrC,IAAIK,MAAMD,UAAUnC;MAEpB,IAAIoC,KAAK;QACPjC,KAAKqB,oBAAoBxB,MAAMiC,UAAUC;QACzCE,MAAMD,UAAUnC;;MAGlB,IAAIoC,KAAK;QACPA,IAAIC,KAAKJ;aACJ;QACLE,UAAUnC,UAASiC;;MAGrB,OAAOA;;IAmCTlC,GAAGC,MAAMiC,UAAUK,QAAQ,MAAMC,OAAO,OAAOC,WAAWN,aAAa;MACrE,IAAID,SAASQ,aAAa;QACxBH,QAAQA,SAASL;QACjBA,WAAWA,SAASQ;;MAGtBH,QAAQA,SAASnC;MACjB,OAAOA,KAAKmB,iBAAiBtB,MAAM0C;QACjCT,SAASU,KAAKL,OAAOI,KAAKF;QAC1BD,QAAQG,IAAIE;SACXV;;IAkBLnC,oBAAoBC,MAAMiC,UAAUC,aAAa;MAC/C,MAAMC,YAAYD,aAAa/B,KAAK6B,oBAAoB7B,KAAK4B;MAE7D,KAAKI,WAAW;QACd;;MAGF,MAAMC,MAAMD,UAAUnC;MAEtB,KAAKoC,KAAK;QACR;;MAGF,MAAMS,IAAIT,IAAIU;MAEd,KAAK,IAAIC,IAAI,GAAGA,IAAIF,GAAGE,KAAK;QAC1B,IAAIX,IAAIW,OAAOd,UAAU;UACvB,IAAIY,MAAM,GAAG;mBACJV,UAAUnC;iBAEd;YACDoC,IAAIY,OAAOD,GAAG;;UAGlB;;;;IAiBNhD,IAAIC,MAAMiC,UAAUC,aAAa;MAC/B/B,KAAKqB,oBAAoBxB,MAAMiC,UAAUC;;IAgB3CnC,wBAAwBC,OAAO;MAC7B,IAAIA,MAAM;QACR,IAAIG,KAAK4B,YAAY;iBACZ5B,KAAK4B,WAAW/B;;QAGzB,IAAIG,KAAK6B,mBAAmB;iBACnB7B,KAAK6B,kBAAkBhC;;aAE3B;QACLG,KAAK4B,aAAa5B,KAAK6B,oBAAoB;;;IAwB/CjC,cAAckD,UAAUhD,UAAU,OAAOC,aAAa;MACpD,WAAW+C,aAAa,UAAU;QAEhC,MAAMd,YAAYhC,KAAK4B;QAEvB,KAAK9B,aAAakC,cAAcA,UAAUc,YAAY;UACpD,OAAO;;QAGTA,WAAW,IAAInD,MAAMmD,UAAUhD,SAASC;aACnC,IAAI+C,SAAS7C,UAAU6C,SAASC,OAAO;QAE5CD,WAAWA,SAASC;;MAItB;QACED,SAAS7C,SAASD;QAClB,OAAOgD;MAGT,KAAKF,SAAShD,YAAYE,KAAKiD,QAAQ;QACrCjD,KAAK0B,eAAeoB,UAAU;aACzB;QACL,IAAII,MAAMlD;QACV,MAAMmD,SAAQD;QAEd,OAAOA,IAAID,QAAQ;UACjBE,KAAKjB,KAAKgB,MAAMA,IAAID;;QAGtB,MAAMP,IAAIS,KAAKR;QACf,IAAIC;QAEJ,KAAKA,IAAIF,IAAI,GAAGE,KAAK,MAAME,SAAStC,oBAAoBoC,KAAK;UAC3DO,KAAKP,GAAGlB,eAAeoB,UAAU,KAAKF,KAAK;;QAI7C,KAAKA,IAAI,GAAGA,IAAIF,MAAMI,SAAStC,oBAAoBoC,KAAK;UACtDO,KAAKP,GAAGlB,eAAeoB,UAAU;;;MAIrC,QAAQA,SAASvC;;IAUnBX,iBAAiBC;MACf,MAAMmC,YAAYhC,KAAK4B,YACjBwB,mBAAmBpD,KAAK6B;MAC9B,UAAUG,aAAaA,UAAUnC,SAASuD,oBAAoBA,iBAAiBvD;;IAejFD,YAAYC;MACV,IAAIwD,IAAIrD;MAER,OAAOqD,GAAG;QACR,IAAIA,EAAE7B,iBAAiB3B,OAAO;UAC5B,OAAO;;QAGTwD,IAAIA,EAAEJ;;MAGR,OAAO;;IAOTrD;MACE,WAAWI,KAAKc,YAAYC,OAAOf,KAAKe,WAAWf,KAAKe,SAAS;;IASnEnB,eAAekD,UAAU3C;MACvB,MAAM6B,YAAY7B,eAAe,IAAIH,KAAK6B,oBAAoB7B,KAAK4B;MAEnE,IAAIkB,YAAYd,WAAW;QACzB,IAAIC,MAAMD,UAAUc,SAASjD;QAC7B,IAAI6C;QAEJ,KAAKT,QAAQS,IAAIT,IAAIU,YAAY,GAAG;UAClC;;QAGF;UACEG,SAAS5C,gBAAgBF;UACzB,OAAOgD;QAET;UACEF,SAAS3C,aAAaA;UACtB,OAAO6C;QAETF,SAASpC,UAAU;QACnBuB,MAAMA,IAAIqB;QAEV,KAAK,IAAIV,IAAI,GAAGA,IAAIF,MAAMI,SAASrC,6BAA6BmC,KAAK;UACnE,IAAIS,IAAIpB,IAAIW;UAEZ,IAAIS,EAAEf,aAAa;YACjBe,EAAEf,YAAYQ;iBACT;YACLO,EAAEP;;UAGJ,IAAIA,SAASpC,SAAS;YACpBV,KAAKsB,IAAIwB,SAASjD,MAAMwD,GAAGlD,eAAe;YAC1C2C,SAASpC,UAAU;;;;;;QAgEvB6C,eAAevC;IAqBnBwC;MACE,OAAO;;IAiBTC;MACE,OAAO;;IAaTC;MACE,OAAO;;IAGT9D,YAAYmB;MACV4C;MAMA3D,KAAKe,OAAOA;MAYZf,KAAK4D,aAAaL,OAAOG;MAgBzB1D,KAAK6D,WAAW;MAiBhB7D,KAAK8D,SAAS;MAOd9D,KAAK+D,UAAU;MAOf/D,KAAKgE,aAAa;MAOlBhE,KAAKiE,cAAc;MASnBjE,KAAKkE,SAAS;MASdlE,KAAKmE,eAAe;MAOpBnE,KAAKoE,YAAY;MAOjBpE,KAAKqE,YAAY;MAOjBrE,KAAKsE,SAAS;MAOdtE,KAAKuE,aAAa;MASlBvE,KAAKwE,WAAW;MAUhBxE,KAAKyE,OAAO;;IAWdC;MACE,OAAO1E,KAAKoE;;IAGdM,aAAaA;MACX1E,KAAKoE,YAAYM;MAEjB,KAAK1E,KAAK+D,SAAS;QACjB;;MAGF/D,KAAK2E;;IAUPC;MACE,OAAO,MAAO5E,KAAKoE;;IAGrBQ,cAAcA;MACZ5E,KAAK0E,WAAW,MAAOE;;IAOzBhF;MACE,IAAII,KAAK+D,SAAS;QAChB;;MAGF/D,KAAK+D,UAAU;MACf/D,KAAKsE;MACLtE,KAAKuE;MACLvE,KAAKgE,aAAahE,KAAK6E;MAEvB7E,KAAKsE,OAAOpC,KAAKlC,KAAKqE,YAAY;MAElCrE,KAAK2E;;IAOP/E;MACE,IAAII,KAAKyE,MAAM;QACb,IAAIK,IAAIC,OAAOC,wBAAwBD,OAAOE,8BAA8BF,OAAOG,2BAA2BH,OAAOI,yBAAyBJ,OAAOK;QACrJN,KAAKA,EAAE9E,KAAKwE;aACP;QACLa,aAAarF,KAAKwE;;MAGpBxE,KAAKuB,wBAAwB;MAC7BvB,KAAKwE,WAAWxE,KAAKsE,SAAStE,KAAKuE,aAAa;MAChDvE,KAAKgE,aAAahE,KAAKqE,YAAYrE,KAAKkE,SAAS;MACjDlE,KAAK+D,UAAU;;IAOjBnE,iBAAiBC,MAAMiC,UAAUC;OAC9B/B,KAAK+D,WAAW/D,KAAKsF;MACtB,OAAO3B,MAAMxC,iBAAiBtB,MAAMiC,UAAUC;;IAoBhDnC,oBAAoB2F,QAAQ;MAC1B,MAAMC,QAAQxF,KAAKuE;MAEnB,KAAKiB,SAASA,MAAM7C,SAAS,GAAG;QAC9B,QAAQ;;MAIV4C,QAAQE,KAAKC,IAAIF,MAAM7C,QAAQ4C,SAASvF,KAAK4E,YAAY;MACzD,OAAOY,MAAMG,OAAO,CAACC,GAAGC,MAAMD,IAAIC,GAAG,KAAKN;;IAY5C3F,eAAe2F,QAAQ;MACrB,MAAMC,QAAQxF,KAAKsE;MAEnB,KAAKkB,SAASA,MAAM7C,SAAS,GAAG;QAC9B,QAAQ;;MAIV4C,QAAQE,KAAKC,IAAIF,MAAM7C,SAAS,GAAG4C,SAASvF,KAAK4E,YAAY;MAC7D,OAAO,QAASY,MAAM,KAAKA,MAAMD,UAAUA;;IAa7C3F,QAAQkG,UAAU;MAChB,OAAO9F,KAAKgE,aAAahE,KAAK6E,cAAciB,UAAU9F,KAAKiE,cAAc,MAAM;;IAWjFrE,aAAakG,UAAU;MACrB,OAAO9F,KAAKgE,cAAchE,KAAKqE,aAAarE,KAAKgE,eAAe8B,UAAU9F,KAAKiE,cAAc,MAAM;;IAarGrE,SAASmG,YAAY;MACnB,OAAO/F,KAAKkE,UAAU6B,YAAY/F,KAAKmE,eAAe;;IAOxDvE;MACEI,KAAKwE,WAAW;MAEhBxE,KAAK2E;MAGL,IAAI3E,KAAK6E,aAAa7E,KAAKqE,cAAcrE,KAAKoE,YAAY,KAAK,KAAM;QACnEpE,KAAKgG;;;IAQTpG;MACEI,KAAKwE,WAAW;MAEhBxE,KAAK2E;MAEL3E,KAAKgG;;IAOPpG;MACEI,KAAKwE,WAAW;MAEhBxE,KAAK2E;MAEL3E,KAAKgG;;IAOPpG;MACE,IAAII,KAAKwE,YAAY,MAAM;QACzB;;MAIF,MAAMyB,OAAOjG,KAAK4D,cAAc5D,KAAKyE,QAAQlB,OAAOE;MAEpD,IAAIwC,SAAS1C,OAAOC,eAAeyC,SAAS1C,OAAOE,KAAK;QACtD,MAAMqB,IAAIC,OAAOmB,yBAAyBnB,OAAOoB,+BAA+BpB,OAAOqB,4BAA4BrB,OAAOsB,0BAA0BtB,OAAOuB;QAE3J,IAAIxB,GAAG;UACL9E,KAAKwE,WAAWM,EAAEmB,SAAS1C,OAAOE,MAAMzD,KAAKuG,WAAWC,KAAKxG,QAAQA,KAAKyG,aAAaD,KAAKxG;UAC5FA,KAAKyE,OAAO;UACZ;;;MAIJzE,KAAKyE,OAAO;MACZzE,KAAKwE,WAAWkC,WAAW1G,KAAK2G,eAAeH,KAAKxG,OAAOA,KAAKoE;;IAQlExE;MACE,MAAMkE,SAAS9D,KAAK8D,QACd8C,OAAO5G,KAAK6E,YACZgC,cAAcD,OAAO5G,KAAKqE;MAEhCrE,KAAKqE,YAAYuC;MACjB5G,KAAKkE;MAEL,IAAIJ,QAAQ;QACV9D,KAAKmE;QACLnE,KAAKiE,eAAe4C;;MAGtB,IAAI7G,KAAKwB,iBAAiB,SAAS;QACjC,MAAMb,QAAQ,IAAIhB,MAAM;QACxB,MAAMkE,WAAW7D,KAAK6D;QACtBlD,MAAMmG,QAAQjD,YAAYgD,cAAchD,WAAWA,WAAWgD;QAC9DlG,MAAMmD,SAASA;QACfnD,MAAMiG,OAAOA;QACbjG,MAAMmF,UAAUc,OAAO5G,KAAKiE;QAC5BjE,KAAKyB,cAAcd;;MAGrBX,KAAKuE,WAAWwC,QAAQ/G,KAAK6E,aAAa+B;MAE1C,OAAO5G,KAAKuE,WAAW5B,SAAS,KAAK;QACnC3C,KAAKuE,WAAWyC;;MAGlBhH,KAAKsE,OAAOyC,QAAQH;MAEpB,OAAO5G,KAAKsE,OAAO3B,SAAS,KAAK;QAC/B3C,KAAKsE,OAAO0C;;;IAQhBpH;MACE,MAAMqH,MAAMlC,OAAOmC,eAAenC,OAAOmC,YAAYD;MACrD,QAAQA,OAAOA,IAAIzE,KAAK0E,gBAAgB,IAAI7G,OAAOC,aAAaN,KAAKgE;;IAGvEpE,UAAUC,MAAMiC,UAAUK,OAAOC,MAAMC,MAAMN;MAC3C,OAAOoF,UAAU/F,GAAGvB,MAAMiC,UAAUK,OAAOC,MAAMC,MAAMN;;IAGzDnC,2BAA2BC,MAAMiC,UAAUC;MACzCoF,UAAU9F,oBAAoBxB,MAAMiC,UAAUC;;IAGhDnC,WAAWC,MAAMiC,UAAUC;MACzBoF,UAAU7F,IAAIzB,MAAMiC,UAAUC;;IAGhCnC,+BAA+BC;MAC7BsH,UAAU5F,wBAAwB1B;;IAGpCD,qBAAqBkD,UAAUhD,SAASC;MACtC,OAAOoH,UAAU1F,cAAcqB,UAAUhD,SAASC;;IAGpDH,wBAAwBC;MACtB,OAAOsH,UAAU3F,iBAAiB3B;;IAGpCD,mBAAmBC;MACjB,OAAOsH,UAAUxF,YAAY9B;;IAG/BD;MACE,OAAOuH,UAAUC;;IAGnBxH;MACEuH,UAAU7B;;IAGZ1F;MACEuH,UAAUE;;IAGZzH,wBAAwBC,MAAMiC,UAAUC;MACtCoF,UAAUhG,iBAAiBtB,MAAMiC,UAAUC;;IAG7CnC,2BAA2B2F;MACzB,OAAO4B,UAAUG,oBAAoB/B;;IAGvC3F,sBAAsB2F;MACpB,OAAO4B,UAAUI,eAAehC;;IAGlC3F,eAAekG;MACb,OAAOqB,UAAU7G,QAAQwF;;IAG3BlG,oBAAoBkG;MAClB,OAAOqB,UAAUK,aAAa1B;;IAGhClG,gBAAgBmG;MACd,OAAOoB,UAAUM,SAAS1B;;IAG5BrB;MACE,OAAOyC,UAAUzC;;IAGnBA,oBAAoBA;MAClByC,UAAUzC,WAAWA;;IAGvBE;MACE,OAAOuC,UAAUvC;;IAGnBA,qBAAqBA;MACnBuC,UAAUvC,YAAYA;;IAGxB7D;MACE,OAAOoG,UAAUpG;;IAGnBA,gBAAgBA;MACdoG,UAAUpG,OAAOA;;IAGnB6C;MACE,OAAOuD,UAAUvD;;IAGnBA,sBAAsBA;MACpBuD,UAAUvD,aAAaA;;IAGzBC;MACE,OAAOsD,UAAUtD;;IAGnBA,oBAAoBA;MAClBsD,UAAUtD,WAAWA;;IAGvBC;MACE,OAAOqD,UAAUrD;;IAGnBA,kBAAkBA;MAChBqD,UAAUrD,SAASA;;;EAKvB,MAAMqD,YAAY,IAAI5D,OAAO;QA+BvBmE;IACJ9H;MACE,MAAM,IAAI+H;;;EAsCd,IAAIC,UAAU;EAed,SAASC;IACP,OAAOD;;QAyCHE;IACJlI,YAAYmI,GAAGC;MACbhI,KAAKiI,UAAUF,GAAGC;;IAuBpBpI,UAAUmI,IAAI,GAAGC,IAAI;MACnBhI,KAAK+H,IAAIA;MACT/H,KAAKgI,IAAIA;MACT,OAAOhI;;IAUTJ,KAAKsI;MACHlI,KAAK+H,IAAIG,MAAMH;MACf/H,KAAKgI,IAAIE,MAAMF;MACf,OAAOhI;;IAQTJ;MACE,OAAO,IAAIkI,MAAM9H,KAAK+H,GAAG/H,KAAKgI;;IAQhCpI;MACE,WAAWI,KAAKc,YAAYC,WAAWf,KAAK+H,OAAO/H,KAAKgI;;;QAqDtDG;IACJvI,YAAYgG,GAAGC,GAAGuC,GAAGC,GAAGC,IAAIC;MAC1BvI,KAAKiI,UAAUrC,GAAGC,GAAGuC,GAAGC,GAAGC,IAAIC;;IAmDjC3I,UAAUgG,IAAI,GAAGC,IAAI,GAAGuC,IAAI,GAAGC,IAAI,GAAGC,KAAK,GAAGC,KAAK;MAEjDvI,KAAK4F,IAAIA;MACT5F,KAAK6F,IAAIA;MACT7F,KAAKoI,IAAIA;MACTpI,KAAKqI,IAAIA;MACTrI,KAAKsI,KAAKA;MACVtI,KAAKuI,KAAKA;MACV,OAAOvI;;IAgBTJ,OAAOgG,GAAGC,GAAGuC,GAAGC,GAAGC,IAAIC;MACrB,IAAIC,KAAKxI,KAAK4F;MACd,IAAI6C,KAAKzI,KAAK6F;MACd,IAAI6C,KAAK1I,KAAKoI;MACd,IAAIO,KAAK3I,KAAKqI;MAEd,IAAIzC,KAAK,KAAKC,KAAK,KAAKuC,KAAK,KAAKC,KAAK,GAAG;QACxCrI,KAAK4F,IAAI4C,KAAK5C,IAAI8C,KAAK7C;QACvB7F,KAAK6F,IAAI4C,KAAK7C,IAAI+C,KAAK9C;QACvB7F,KAAKoI,IAAII,KAAKJ,IAAIM,KAAKL;QACvBrI,KAAKqI,IAAII,KAAKL,IAAIO,KAAKN;;MAGzBrI,KAAKsI,KAAKE,KAAKF,KAAKI,KAAKH,KAAKvI,KAAKsI;MACnCtI,KAAKuI,KAAKE,KAAKH,KAAKK,KAAKJ,KAAKvI,KAAKuI;MACnC,OAAOvI;;IAeTJ,QAAQgG,GAAGC,GAAGuC,GAAGC,GAAGC,IAAIC;MACtB,IAAIC,KAAKxI,KAAK4F;MACd,IAAI8C,KAAK1I,KAAKoI;MACd,IAAIQ,MAAM5I,KAAKsI;MACftI,KAAK4F,IAAIA,IAAI4C,KAAKJ,IAAIpI,KAAK6F;MAC3B7F,KAAK6F,IAAIA,IAAI2C,KAAKH,IAAIrI,KAAK6F;MAC3B7F,KAAKoI,IAAIxC,IAAI8C,KAAKN,IAAIpI,KAAKqI;MAC3BrI,KAAKqI,IAAIxC,IAAI6C,KAAKL,IAAIrI,KAAKqI;MAC3BrI,KAAKsI,KAAK1C,IAAIgD,MAAMR,IAAIpI,KAAKuI,KAAKD;MAClCtI,KAAKuI,KAAK1C,IAAI+C,MAAMP,IAAIrI,KAAKuI,KAAKA;MAClC,OAAOvI;;IAWTJ,aAAaiJ;MACX,OAAO7I,KAAK8I,OAAOD,OAAOjD,GAAGiD,OAAOhD,GAAGgD,OAAOT,GAAGS,OAAOR,GAAGQ,OAAOP,IAAIO,OAAON;;IAoB/E3I,cAAciJ;MACZ,OAAO7I,KAAK+I,QAAQF,OAAOjD,GAAGiD,OAAOhD,GAAGgD,OAAOT,GAAGS,OAAOR,GAAGQ,OAAOP,IAAIO,OAAON;;IAuBhF3I,gBAAgBmI,GAAGC,GAAGgB,QAAQC,QAAQC,UAAUC,OAAOC,OAAOC,MAAMC;MAClE,IAAIC,GAAGC,KAAKC;MAEZ,IAAIP,WAAW,KAAK;QAClBK,IAAIL,WAAWf,SAASuB;QACxBF,MAAM/D,KAAK+D,IAAID;QACfE,MAAMhE,KAAKgE,IAAIF;aACV;QACLC,MAAM;QACNC,MAAM;;MAGR,IAAIN,SAASC,OAAO;QAElBD,SAAShB,SAASuB;QAClBN,SAASjB,SAASuB;QAClB1J,KAAK8I,OAAOrD,KAAK+D,IAAIJ,QAAQ3D,KAAKgE,IAAIL,SAAS3D,KAAKgE,IAAIN,QAAQ1D,KAAK+D,IAAIL,QAAQpB,GAAGC;QACpFhI,KAAK8I,OAAOU,MAAMR,QAAQS,MAAMT,SAASS,MAAMR,QAAQO,MAAMP,QAAQ,GAAG;aACnE;QACLjJ,KAAK8I,OAAOU,MAAMR,QAAQS,MAAMT,SAASS,MAAMR,QAAQO,MAAMP,QAAQlB,GAAGC;;MAG1E,IAAIqB,QAAQC,MAAM;QAEhBtJ,KAAKsI,MAAMe,OAAOrJ,KAAK4F,IAAI0D,OAAOtJ,KAAKoI;QACvCpI,KAAKuI,MAAMc,OAAOrJ,KAAK6F,IAAIyD,OAAOtJ,KAAKqI;;MAGzC,OAAOrI;;IA6BTJ,iBAAiBmI,GAAGC,GAAGgB,QAAQC,QAAQC,UAAUC,OAAOC,OAAOC,MAAMC;MACnE,IAAIC,GAAGC,KAAKC;MAEZ,IAAIP,WAAW,KAAK;QAClBK,IAAIL,WAAWf,SAASuB;QACxBF,MAAM/D,KAAK+D,IAAID;QACfE,MAAMhE,KAAKgE,IAAIF;aACV;QACLC,MAAM;QACNC,MAAM;;MAGR,IAAIJ,QAAQC,MAAM;QAEhBtJ,KAAKsI,MAAMe;QACXrJ,KAAKuI,MAAMe;;MAGb,IAAIH,SAASC,OAAO;QAElBD,SAAShB,SAASuB;QAClBN,SAASjB,SAASuB;QAClB1J,KAAK+I,QAAQS,MAAMR,QAAQS,MAAMT,SAASS,MAAMR,QAAQO,MAAMP,QAAQ,GAAG;QACzEjJ,KAAK+I,QAAQtD,KAAK+D,IAAIJ,QAAQ3D,KAAKgE,IAAIL,SAAS3D,KAAKgE,IAAIN,QAAQ1D,KAAK+D,IAAIL,QAAQpB,GAAGC;aAChF;QACLhI,KAAK+I,QAAQS,MAAMR,QAAQS,MAAMT,SAASS,MAAMR,QAAQO,MAAMP,QAAQlB,GAAGC;;MAG3E,OAAOhI;;IAUTJ,OAAO+J;MACLA,SAASxB,SAASuB;MAClB,IAAIF,MAAM/D,KAAK+D,IAAIG;MACnB,IAAIF,MAAMhE,KAAKgE,IAAIE;MACnB,IAAInB,KAAKxI,KAAK4F;MACd,IAAI6C,KAAKzI,KAAK6F;MACd7F,KAAK4F,IAAI4C,KAAKgB,MAAMxJ,KAAKoI,IAAIqB;MAC7BzJ,KAAK6F,IAAI4C,KAAKe,MAAMxJ,KAAKqI,IAAIoB;MAC7BzJ,KAAKoI,KAAKI,KAAKiB,MAAMzJ,KAAKoI,IAAIoB;MAC9BxJ,KAAKqI,KAAKI,KAAKgB,MAAMzJ,KAAKqI,IAAImB;MAC9B,OAAOxJ;;IAWTJ,KAAKuJ,OAAOC;MACVD,SAAShB,SAASuB;MAClBN,SAASjB,SAASuB;MAClB1J,KAAK8I,OAAOrD,KAAK+D,IAAIJ,QAAQ3D,KAAKgE,IAAIL,SAAS3D,KAAKgE,IAAIN,QAAQ1D,KAAK+D,IAAIL,QAAQ,GAAG;MACpF,OAAOnJ;;IAWTJ,MAAMmI,GAAGC;MACPhI,KAAK4F,KAAKmC;MACV/H,KAAK6F,KAAKkC;MACV/H,KAAKoI,KAAKJ;MACVhI,KAAKqI,KAAKL;MAGV,OAAOhI;;IAWTJ,UAAUmI,GAAGC;MACXhI,KAAKsI,MAAMtI,KAAK4F,IAAImC,IAAI/H,KAAKoI,IAAIJ;MACjChI,KAAKuI,MAAMvI,KAAK6F,IAAIkC,IAAI/H,KAAKqI,IAAIL;MACjC,OAAOhI;;IASTJ;MACEI,KAAK4F,IAAI5F,KAAKqI,IAAI;MAClBrI,KAAK6F,IAAI7F,KAAKoI,IAAIpI,KAAKsI,KAAKtI,KAAKuI,KAAK;MACtC,OAAOvI;;IASTJ;MACE,IAAI4I,KAAKxI,KAAK4F;MACd,IAAI6C,KAAKzI,KAAK6F;MACd,IAAI6C,KAAK1I,KAAKoI;MACd,IAAIO,KAAK3I,KAAKqI;MACd,IAAIO,MAAM5I,KAAKsI;MACf,IAAI1H,IAAI4H,KAAKG,KAAKF,KAAKC;MACvB1I,KAAK4F,IAAI+C,KAAK/H;MACdZ,KAAK6F,KAAK4C,KAAK7H;MACfZ,KAAKoI,KAAKM,KAAK9H;MACfZ,KAAKqI,IAAIG,KAAK5H;MACdZ,KAAKsI,MAAMI,KAAK1I,KAAKuI,KAAKI,KAAKC,OAAOhI;MACtCZ,KAAKuI,OAAOC,KAAKxI,KAAKuI,KAAKE,KAAKG,OAAOhI;MACvC,OAAOZ;;IAQTJ;MACE,OAAOI,KAAKsI,OAAO,KAAKtI,KAAKuI,OAAO,KAAKvI,KAAK4F,MAAM,KAAK5F,KAAK6F,MAAM,KAAK7F,KAAKoI,MAAM,KAAKpI,KAAKqI,MAAM;;IAStGzI,OAAOiJ;MACL,OAAO7I,KAAKsI,OAAOO,OAAOP,MAAMtI,KAAKuI,OAAOM,OAAON,MAAMvI,KAAK4F,MAAMiD,OAAOjD,KAAK5F,KAAK6F,MAAMgD,OAAOhD,KAAK7F,KAAKoI,MAAMS,OAAOT,KAAKpI,KAAKqI,MAAMQ,OAAOR;;IAWlJzI,eAAemI,GAAGC,GAAG4B,KAAK,IAAI9B;MAC5B8B,GAAG7B,IAAIA,IAAI/H,KAAK4F,IAAIoC,IAAIhI,KAAKoI,IAAIpI,KAAKsI;MACtCsB,GAAG5B,IAAID,IAAI/H,KAAK6F,IAAImC,IAAIhI,KAAKqI,IAAIrI,KAAKuI;MACtC,OAAOqB;;IAWThK,UAAUK;MAERA,OAAO8H,IAAI/H,KAAKsI;MAChBrI,OAAO+H,IAAIhI,KAAKuI;MAChBtI,OAAO+I,SAASvD,KAAKoE,KAAK7J,KAAK4F,IAAI5F,KAAK4F,IAAI5F,KAAK6F,IAAI7F,KAAK6F;MAC1D5F,OAAOgJ,SAASxD,KAAKoE,KAAK7J,KAAKoI,IAAIpI,KAAKoI,IAAIpI,KAAKqI,IAAIrI,KAAKqI;MAC1D,IAAIc,QAAQ1D,KAAKqE,OAAO9J,KAAKoI,GAAGpI,KAAKqI;MACrC,IAAIe,QAAQ3D,KAAKqE,MAAM9J,KAAK6F,GAAG7F,KAAK4F;MACpC,IAAIkB,QAAQrB,KAAKsE,IAAI,IAAIZ,QAAQC;MAEjC,IAAItC,QAAQ,MAAS;QAEnB7G,OAAOiJ,WAAWE,QAAQjB,SAASuB;QAEnC,IAAI1J,KAAK4F,IAAI,KAAK5F,KAAKqI,KAAK,GAAG;UAC7BpI,OAAOiJ,YAAYjJ,OAAOiJ,YAAY,IAAI,OAAO;;QAGnDjJ,OAAOkJ,QAAQlJ,OAAOmJ,QAAQ;aACzB;QACLnJ,OAAOkJ,QAAQA,QAAQhB,SAASuB;QAChCzJ,OAAOmJ,QAAQA,QAAQjB,SAASuB;;MAGlC,OAAOzJ;;IAUTL,KAAKiJ;MACH,OAAO7I,KAAKiI,UAAUY,OAAOjD,GAAGiD,OAAOhD,GAAGgD,OAAOT,GAAGS,OAAOR,GAAGQ,OAAOP,IAAIO,OAAON;;IAQlF3I;MACE,OAAO,IAAIuI,SAASnI,KAAK4F,GAAG5F,KAAK6F,GAAG7F,KAAKoI,GAAGpI,KAAKqI,GAAGrI,KAAKsI,IAAItI,KAAKuI;;IAQpE3I;MACE,WAAWI,KAAKc,YAAYC,WAAWf,KAAK4F,OAAO5F,KAAK6F,OAAO7F,KAAKoI,OAAOpI,KAAKqI,QAAQrI,KAAKsI,SAAStI,KAAKuI;;;EAW/GJ,SAASuB,aAAajE,KAAKuE,KAAK;EAQhC7B,SAAS8B,WAAW,IAAI9B;QAuClB+B;IACJtK,YAAYuK,SAASC,OAAOC,QAAQC,oBAAoBzB;MACtD7I,KAAKiI,UAAUkC,SAASC,OAAOC,QAAQC,oBAAoBzB;;IA6C7DjJ,UAAUuK,UAAU,MAAMC,QAAQ,GAAGC,QAAQC,oBAAoBzB;MAC/D7I,KAAKmK,UAAUA;MACfnK,KAAKoK,QAAQA;MACbpK,KAAKqK,SAASA;MACdrK,KAAKsK,qBAAqBA;MAC1BtK,KAAK6I,SAASA,UAAU7I,KAAK6I,UAAU7I,KAAK6I,OAAOoB,cAAc,IAAI9B;MACrE,OAAOnI;;IAcTJ,OAAOuK,SAASC,OAAOC,QAAQC,oBAAoBzB;MACjD7I,KAAKoK,SAASA;MACdpK,KAAKqK,SAASA,UAAUrK,KAAKqK;MAC7BrK,KAAKsK,qBAAqBA,sBAAsBtK,KAAKsK;MACrDtK,KAAKmK,UAAUnK,KAAKmK,WAAWA;MAC/BtB,UAAU7I,KAAK6I,OAAO0B,aAAa1B;MACnC,OAAO7I;;IAwBTJ,QAAQuK,SAASC,OAAOC,QAAQC,oBAAoBzB;MAClD7I,KAAKoK,SAASA;MACdpK,KAAKqK,SAASrK,KAAKqK,UAAUA;MAC7BrK,KAAKsK,qBAAqBtK,KAAKsK,sBAAsBA;MACrDtK,KAAKmK,UAAUnK,KAAKmK,WAAWA;MAC/BtB,UAAU7I,KAAK6I,OAAO2B,cAAc3B;MACpC,OAAO7I;;IASTJ;MACEI,KAAKmK,UAAU;MACfnK,KAAKoK,QAAQ;MACbpK,KAAKqK,SAASrK,KAAKsK,qBAAqB;MACxCtK,KAAK6I,OAAOoB;MACZ,OAAOjK;;IAQTJ;MACE,OAAO,IAAIsK,aAAalK,KAAKoK,OAAOpK,KAAKqK,QAAQrK,KAAKsK,oBAAoBtK,KAAKmK,SAASnK,KAAK6I,OAAO9F;;;QA8ClG0H;IACJ7K,YAAYmI,GAAGC,GAAG0C,OAAOC;MACvB3K,KAAKiI,UAAUF,GAAGC,GAAG0C,OAAOC;;IAqC9B/K,UAAUmI,IAAI,GAAGC,IAAI,GAAG0C,QAAQ,GAAGC,SAAS;MAE1C3K,KAAK+H,IAAIA;MACT/H,KAAKgI,IAAIA;MACThI,KAAK0K,QAAQA;MACb1K,KAAK2K,SAASA;MACd,OAAO3K;;IAaTJ,OAAOmI,GAAGC,GAAG0C,QAAQ,GAAGC,SAAS;MAC/B,IAAI5C,IAAI2C,QAAQ1K,KAAK+H,IAAI/H,KAAK0K,OAAO;QACnC1K,KAAK0K,QAAQ3C,IAAI2C,QAAQ1K,KAAK+H;;MAGhC,IAAIC,IAAI2C,SAAS3K,KAAKgI,IAAIhI,KAAK2K,QAAQ;QACrC3K,KAAK2K,SAAS3C,IAAI2C,SAAS3K,KAAKgI;;MAGlC,IAAID,IAAI/H,KAAK+H,GAAG;QACd/H,KAAK0K,SAAS1K,KAAK+H,IAAIA;QACvB/H,KAAK+H,IAAIA;;MAGX,IAAIC,IAAIhI,KAAKgI,GAAG;QACdhI,KAAK2K,UAAU3K,KAAKgI,IAAIA;QACxBhI,KAAKgI,IAAIA;;MAGX,OAAOhI;;IAaTJ,IAAIsD,KAAK0H,MAAMC,QAAQC;MACrB9K,KAAK+H,KAAK6C;MACV5K,KAAKgI,KAAK9E;MACVlD,KAAK0K,SAASE,OAAOE;MACrB9K,KAAK2K,UAAUzH,MAAM2H;MACrB,OAAO7K;;IAUTJ,KAAKmL;MACH,OAAO/K,KAAKiI,UAAU8C,KAAKhD,GAAGgD,KAAK/C,GAAG+C,KAAKL,OAAOK,KAAKJ;;IAYzD/K,SAASmI,GAAGC,GAAG0C,QAAQ,GAAGC,SAAS;MACjC,OAAO5C,KAAK/H,KAAK+H,KAAKA,IAAI2C,SAAS1K,KAAK+H,IAAI/H,KAAK0K,SAAS1C,KAAKhI,KAAKgI,KAAKA,IAAI2C,UAAU3K,KAAKgI,IAAIhI,KAAK2K;;IASvG/K,MAAMmL;MACJ,OAAO/K,KAAK+C,QAAQiI,OAAOD,KAAKhD,GAAGgD,KAAK/C,GAAG+C,KAAKL,OAAOK,KAAKJ;;IAU9D/K,aAAamL;MACX,IAAIE,KAAKF,KAAKhD,GACVmD,KAAKH,KAAK/C,GACVmD,KAAKF,KAAKF,KAAKL,OACfU,KAAKF,KAAKH,KAAKJ;MAEnB,IAAI3K,KAAK+H,IAAIkD,IAAI;QACfA,KAAKjL,KAAK+H;;MAGZ,IAAI/H,KAAKgI,IAAIkD,IAAI;QACfA,KAAKlL,KAAKgI;;MAGZ,IAAIhI,KAAK+H,IAAI/H,KAAK0K,QAAQS,IAAI;QAC5BA,KAAKnL,KAAK+H,IAAI/H,KAAK0K;;MAGrB,IAAI1K,KAAKgI,IAAIhI,KAAK2K,SAASS,IAAI;QAC7BA,KAAKpL,KAAKgI,IAAIhI,KAAK2K;;MAGrB,OAAOQ,MAAMF,MAAMG,MAAMF,KAAK,OAAO,IAAIT,UAAUQ,IAAIC,IAAIC,KAAKF,IAAIG,KAAKF;;IAS3EtL,WAAWmL;MACT,OAAOA,KAAKhD,KAAK/H,KAAK+H,IAAI/H,KAAK0K,SAAS1K,KAAK+H,KAAKgD,KAAKhD,IAAIgD,KAAKL,SAASK,KAAK/C,KAAKhI,KAAKgI,IAAIhI,KAAK2K,UAAU3K,KAAKgI,KAAK+C,KAAK/C,IAAI+C,KAAKJ;;IAQrI/K;MACE,OAAOI,KAAK0K,SAAS,KAAK1K,KAAK2K,UAAU;;IAQ3C/K;MACE,OAAO,IAAI6K,UAAUzK,KAAK+H,GAAG/H,KAAKgI,GAAGhI,KAAK0K,OAAO1K,KAAK2K;;IAQxD/K;MACE,WAAWI,KAAKc,YAAYC,WAAWf,KAAK+H,OAAO/H,KAAKgI,WAAWhI,KAAK0K,gBAAgB1K,KAAK2K;;;QA4D3FU;IACJzL;MAMEI,KAAKsL,cAAc;MAQnBtL,KAAKuL,aAAa;MASlBvL,KAAKwL,kBAAkB;MASvBxL,KAAKyL,mBAAmB;;IAU1B7L,UAAUmL;IAUVnL,iBAAiB8L,IAAIC,OAAOC;IAe5BhM,YAAYiM,KAAK9D,GAAGC,GAAG0C,OAAOC,QAAQmB,WAAWC,SAASC;MAExDF,YAAYA,aAAaD;MAEzB,IAAIE,WAAW,MAAM;QACnBA,UAAUhE;;MAGZ,IAAIiE,WAAW,MAAM;QACnBA,UAAUhE;;MAGZ;QACE,IAAIiE,YAAYJ,IAAIK,aAAanE,GAAGC,GAAG0C,OAAOC;QAE9C,IAAI3K,KAAKmM,aAAaF,YAAY;UAChCH,UAAUM,aAAaH,WAAWF,SAASC;UAC3C,OAAO;;QAET,OAAOhJ;MAET,OAAO;;IAQTpD;MACE,WAAWI,KAAKc,YAAYC;;IAQ9BnB;MACE,OAAO,IAAIyL;;IASbzL,aAAaqM;;QAwDTI,oBAAoBhB;IACxBzL;MACE+D;MAQA3D,KAAK0K,QAAQ4B;MAQbtM,KAAK2K,SAAS2B;MAQdtM,KAAK+H,IAAIuE;MAQTtM,KAAKgI,IAAIsE;MAUTtM,KAAKuM,QAAQ;MASbvM,KAAKwM,OAAO;MASZxM,KAAKyM,OAAO;MAQZzM,KAAK0M,UAAU;MAUf1M,KAAK2M,cAAc;MAUnB3M,KAAK4M,cAAc;MAQnB5M,KAAK6M,kBAAkB;MAQvB7M,KAAK8M,gBAAgB;MAQrB9M,KAAK+M,aAAa;MAQlB/M,KAAKgN,cAAc;MAQnBhN,KAAKiN,aAAa,IAAIxC;;IAWxB7K,uBAAuBK,QAAQiN,SAAS,IAAIzC;MAC1C,IAAI0C,UAAUlN,OAAOkN;MACrB,IAAIC,cAAcD,WAAWA,QAAQxK;MAErC,MAAMyK,eAAe,GAAG;QACtB,OAAOF;;MAGT,KAAK,IAAItK,IAAI,GAAGA,IAAIwK,aAAaxK,KAAK;QACpC,IAAIkC,IAAIqI,QAAQvK;QAEhB,KAAKkC,MAAMA,EAAEuI,WAAW;UACtB;;QAGF,IAAIC,OAAOxI,EAAEuI;QAEb,KAAKC,MAAM;UACT;;QAGF,IAAI1K,KAAK,GAAG;UACVsK,OAAOjF,UAAUqF,KAAKvF,GAAGuF,KAAKtF,GAAGsF,KAAK5C,OAAO4C,KAAK3C;eAC7C;UACLuC,OAAOlC,OAAOsC,KAAKvF,GAAGuF,KAAKtF,GAAGsF,KAAK5C,OAAO4C,KAAK3C;;;MAInD,OAAOuC;;IAkBTtN,OAAOK,QAAQ8H,IAAI,GAAGC,IAAI,GAAG0C,QAAQ,GAAGC,SAAS,GAAG4B,QAAQ,GAAGgB;MAC7D,KAAKtN,QAAQ;QACX,MAAM;;MAGRD,KAAKwN,WAAWD;MAChBvN,KAAKyN,YAAYF,YAAYjB;MAC7BtM,KAAKC,SAASA;MACdD,KAAK0K,QAAQA,SAAS,IAAIA,QAAQ;MAClC1K,KAAK2K,SAASA,UAAU,IAAIA,SAAS;MACrC3K,KAAK+H,IAAIA;MACT/H,KAAKgI,IAAIA;MACThI,KAAKuM,QAAQA;MACbvM,KAAK0N;;IAWP9N,OAAO0K;MACL,KAAKtK,KAAKC,QAAQ;QAChB,MAAM;;MAGR,IAAI0N,eAAetB,YAAYuB,gBAAgB5N,KAAKC;MACpD,IAAI4N,UAAU7N,KAAKC,OAAO6N;MAC1B9N,KAAK+M,aAAatH,KAAKsI,KAAK/N,KAAK0K,QAAQ1K,KAAKuM,SAASoB,aAAajD;MACpE1K,KAAKgN,cAAcvH,KAAKsI,KAAK/N,KAAK2K,SAAS3K,KAAKuM,SAASoB,aAAahD;MAEtE,KAAKkD,WAAW7N,KAAK+M,cAAcc,QAAQnD,SAAS1K,KAAKgN,eAAea,QAAQlD,QAAQ;QACtF3K,KAAKgO;;MAGPhO,KAAK2M,cAAcgB,aAAa5F;MAChC/H,KAAK4M,cAAce,aAAa3F;MAChChI,KAAKwM,OAAOxM,KAAK+H,IAAI/H,KAAKuM,QAAQvM,KAAK2M;MACvC3M,KAAKyM,OAAOzM,KAAKgI,IAAIhI,KAAKuM,QAAQvM,KAAK4M;MAEvC5M,KAAKiO,aAAa3D;MAElBtK,KAAK0M,UAAU1M,KAAK0M,UAAU1M,KAAK0M,UAAU,IAAI;;IAOnD9M;MACE,IAAI+L,QAAQ3L,KAAKC,OAAO0L;MAExB,IAAI3L,KAAKyN,aAAazN,KAAKkO,aAAa;QAEtC,KAAKlO,KAAKkO,YAAYC,mBAAmB;UACvC,IAAInO,KAAKoO,UAAU;YACjBpO,KAAKoO,WAAW9B;;UAGlB,IAAItM,KAAKqO,OAAO;YACdrO,KAAKkO,YAAYI,mBAAmBtO,KAAKqO;;UAG3C,IAAIrO,KAAKuO,OAAO;YACdvO,KAAKkO,YAAYI,mBAAmBtO,KAAKuO;;UAG3C,IAAIvO,KAAKC,UAAUD,KAAKC,OAAO6N,aAAa;YAC1C9N,KAAKkO,YAAYI,mBAAmBtO,KAAKC,OAAO6N;;;QAKpD9N,KAAKkO,cAAc;aACd,IAAIvC,iBAAiBjE,SAAS;QACnCiE,MAAM6C,eAAexO,KAAKC,OAAO6N;;MAGnC9N,KAAKC,SAASD,KAAKC,OAAO6N,cAAc;MACxC9N,KAAK0M,UAAU1M,KAAK6M,kBAAkB7M,KAAK8M,gBAAgBR;MAC3DtM,KAAK0K,QAAQ1K,KAAK2K,SAAS3K,KAAK+H,IAAI/H,KAAKgI,IAAIhI,KAAKwM,OAAOxM,KAAKyM,OAAO;MACrEzM,KAAKuM,QAAQ;;IAUf3M;MACE,IAAIkO,cAAc9N,KAAKC,UAAUD,KAAKC,OAAO6N;MAE7C,KAAKA,aAAa;QAChB,OAAO;;MAGT,IAAI9N,KAAK0M,WAAW1M,KAAK6M,iBAAiB;QACxC7M,KAAK6M,kBAAkB7M,KAAK0M;QAC5B1M,KAAK8M,gBAAgBgB,YAAYW,YAAYX,YAAYW,cAAc;;MAGzE,OAAOzO,KAAK8M;;IASdlN,KAAKiM;MACH,KAAK7L,KAAKC,QAAQ;QAChB,OAAO;;MAGT4L,IAAI6C,UAAU1O,KAAKC,OAAO6N,aAAa9N,KAAK+H,IAAI/H,KAAK2M,cAAc3M,KAAKuM,OAAOvM,KAAKgI,IAAIhI,KAAK4M,cAAc5M,KAAKuM,OAAOvM,KAAK+M,aAAa/M,KAAKuM,OAAOvM,KAAKgN,cAAchN,KAAKuM;MAC7K,OAAO;;IAQT3M;MACE,MAAM2M,QAAQvM,KAAKuM;MACnB,OAAOvM,KAAKiN,WAAW0B,SAAS3O,KAAK2M,cAAcJ,OAAOvM,KAAK4M,cAAcL,OAAOvM,KAAK0K,QAAQ6B,OAAOvM,KAAK2K,SAAS4B;;IASxH3M;MACE,IAAIiO;MAEJ,KAAK7N,KAAKyN,WAAW;QACnBI,UAAU7N,KAAKC,OAAO6N;QAEtB,KAAKD,SAAS;UACZA,UAAU7N,KAAKC,OAAO6N,cAAc/I,OAAO6J,YAAYA,SAASC,eAAeD,SAASC,iBAAiBC,SAASC,cAAc;;QAIlIlB,QAAQnD,QAAQ1K,KAAK+M;QACrBc,QAAQlD,SAAS3K,KAAKgN;QAEtB;;MAIF,KAAKhN,KAAKkO,aAAa;QACrB,IAAIlO,KAAKwN,SAASwB,UAAU,SAAS;UACnC,MAAMhP,KAAKC,OAAO0L,SAAS,QAAQ3L,KAAKC,OAAO0L,MAAMsD,UAAU;YAC7D,2EAA2EjP,KAAKC,OAAO0L,SAAS,OAAO,eAAe;;UAGxH3L,KAAKC,OAAO6N,cAAc;UAE1B9N,KAAKkO,cAAclO,KAAKC,OAAO0L;eAC1B,IAAI3L,KAAKwN,SAASwB,UAAU,OAAO;UACxChP,KAAKC,OAAO6N,cAAcgB,SAASC,cAAc;UAEjD/O,KAAKkO,cAAc,IAAIxG,QAAQ1H,KAAKC,OAAO6N;YACzCoB,WAAW;YACXC,aAAa;YACbC,YAAY;;UAEdpP,KAAKkO,YAAYC,oBAAoB;eAChC;UACL,MAAM,0FAA0FnO,KAAKwN,SAASwB;;;MAKlH,IAAIK,UAAUrP,KAAKkO;MACnBL,UAAU7N,KAAKC,OAAO6N;MAEtB,IAAIuB,QAAQlB,mBAAmB;QAC7BN,QAAQnD,QAAQ1K,KAAK+M;QACrBc,QAAQlD,SAAS3K,KAAKgN;QACtBqC,QAAQC,eAAetP,KAAK+M,YAAY/M,KAAKgN;;MAG/C,IAAIhN,KAAKC,OAAOkN,SAAS;QAEvBkC,QAAQE,uBAAuBvP,KAAKC,QAAQD,KAAK+M,YAAY/M,KAAKgN;QAClEqC,QAAQE,uBAAuBvP,KAAKC,QAAQD,KAAK+M,YAAY/M,KAAKgN;aAC7D,KAAKqC,QAAQlB,mBAAmB;QAErCkB,QAAQE,uBAAuBvP,KAAKC,QAAQD,KAAK+M,YAAY/M,KAAKgN;;;IAStEpN,aAAa0K;MACX,IAAIrK,SAASD,KAAKC;MAClB,IAAI4N,UAAU5N,OAAO6N;MACrB,IAAI0B,QAAQxP,KAAKkO;MAEjB,KAAKlO,KAAKyN,cAAc+B,OAAO;QAC7B,IAAI3D,MAAMgC,QAAQ4B,WAAW;QAE7B,KAAKnF,oBAAoB;UACvBuB,IAAI6D,UAAU,GAAG,GAAG1P,KAAK+M,aAAa,GAAG/M,KAAKgN,cAAc;;QAG9DnB,IAAI8D;QACJ9D,IAAI+D,2BAA2BtF;QAC/BuB,IAAIgE,aAAa7P,KAAKuM,OAAO,GAAG,GAAGvM,KAAKuM,QAAQvM,KAAK2M,cAAc3M,KAAK4M;QACxEf,IAAIiE,WAAW9P,KAAK+H,IAAI/H,KAAKgI;QAC7B/H,OAAO8P,KAAKlE,KAAK;QACjBA,IAAImE;QAEJ,IAAI/P,OAAOkN,WAAWlN,OAAOkN,QAAQxK,QAAQ;UAC3C3C,KAAKiQ,cAAchQ;;QAGrB4N,QAAQqC,WAAW;QACnB;;MAGFlQ,KAAKkO,YAAYiC,UAAUlQ,QAAQA,OAAOkN,SAASnN;MAGnD6N,UAAU7N,KAAKC,OAAO6N;MACtBD,QAAQnD,QAAQ1K,KAAK+M;MACrBc,QAAQlD,SAAS3K,KAAKgN;MACtBa,QAAQqC,WAAW;;IAQrBtQ;MACE,IAAIiO,UAAU7N,KAAKC,OAAO6N;MAC1B,IAAIX,UAAUnN,KAAKC,OAAOkN;MAC1B,IAAIiD,IAAIpQ,KAAK+M;MACb,IAAIsD,IAAIrQ,KAAKgN;MAEb,IAAI3K,OAAOwL,QAAQ4B,WAAW,MAAMvD,aAAa,GAAG,GAAGkE,GAAGC;MAE1D,IAAI3N,IAAIyK,QAAQxK;MAEhB,KAAK,IAAIC,IAAI,GAAGA,IAAIF,GAAGE,KAAK;QAC1BuK,QAAQvK,GAAGuJ,aAAa9J;;MAI1BwL,QAAQ4B,WAAW,MAAMrD,aAAa/J,MAAM,GAAG;;;QAsF7CiO,sBAAsBtP;IAC1BpB;MACE+D;MAOA3D,KAAKoK,QAAQ;MAUbpK,KAAK8N,cAAc;MASnB9N,KAAKuQ,cAAc;MAMnBvQ,KAAKwQ,KAAK3I;MAaV7H,KAAKyQ,eAAe;MASpBzQ,KAAK0Q,cAAc;MAOnB1Q,KAAKe,OAAO;MASZf,KAAKiD,SAAS;MAQdjD,KAAKqJ,OAAO;MAQZrJ,KAAKsJ,OAAO;MAOZtJ,KAAKkJ,WAAW;MAQhBlJ,KAAKgJ,SAAS;MAQdhJ,KAAKiJ,SAAS;MAOdjJ,KAAKmJ,QAAQ;MAObnJ,KAAKoJ,QAAQ;MAQbpJ,KAAKqK,SAAS;MAQdrK,KAAKmK,UAAU;MAOfnK,KAAK+H,IAAI;MAOT/H,KAAKgI,IAAI;MAQThI,KAAK2Q,kBAAkB;MASvB3Q,KAAKsK,qBAAqB;MAQ1BtK,KAAK4Q,cAAc;MAQnB5Q,KAAKmN,UAAU;MAQfnN,KAAK6Q,OAAO;MAiBZ7Q,KAAK8Q,UAAU;MAUf9Q,KAAK+Q,SAAS;MAMd/Q,KAAKgR,SAAS,IAAI9G;MAMlBlK,KAAKiR,aAAa,IAAIxG;MAOtBzK,KAAKkR,UAAU;MASflR,KAAKmR,oBAAoBb,cAAcc;;IASzCzF;MAEE,IAAItI,IAAIrD;MAER,OAAOqD,EAAEJ,QAAQ;QACfI,IAAIA,EAAEJ;;MAGR,IAAI,oCAAoCqK,KAAKjK,EAAE+D,aAAa;QAC1D,OAAO/D;;MAGT,OAAO;;IAUTkJ,UAAU8E;MACRrR,KAAKgJ,SAAShJ,KAAKiJ,SAASoI;;IAG9B9E;MACE,OAAOvM,KAAKgJ;;IAUdpJ;MACE,UAAUI,KAAKmK,WAAWnK,KAAKoK,QAAQ,KAAKpK,KAAKgJ,UAAU,KAAKhJ,KAAKiJ,UAAU;;IAajFrJ,KAAKiM,KAAKyF,cAAc;MACtB,OAAOtR,KAAKuR,UAAU1F,KAAKyF;;IAc7B1R,UAAUiM,KAAKyF,cAAc;MAC3B,IAAIE,QAAQxR,KAAKuQ;MAEjB,IAAIiB,UAAUF,aAAa;QACzB,OAAOE,MAAMzB,KAAKlE;;MAGpB,OAAO;;IASTjM,cAAciM;MACZ,IAAIxI,IAAIrD,MACJ6Q,OAAOxN,EAAEwN,MACTY,MAAMpO,EAAE2N,OAAOnI;MAEnB,IAAIgI,QAAQA,KAAKa,aAAab,KAAKa,SAASC,WAAW;QACrDd,KAAKe,UAAUH;QACf5F,IAAIgG,UAAUJ,IAAI7L,GAAG6L,IAAI5L,GAAG4L,IAAIrJ,GAAGqJ,IAAIpJ,GAAGoJ,IAAInJ,IAAImJ,IAAIlJ;QACtDsI,KAAKa,SAASI,WAAWjG;QACzBA,IAAIkG;QACJN,IAAIO;QACJnG,IAAIgG,UAAUJ,IAAI7L,GAAG6L,IAAI5L,GAAG4L,IAAIrJ,GAAGqJ,IAAIpJ,GAAGoJ,IAAInJ,IAAImJ,IAAIlJ;;MAGxDvI,KAAK4R,UAAUH;MACf,IAAInJ,KAAKmJ,IAAInJ,IACTC,KAAKkJ,IAAIlJ;MAEb,IAAI+H,cAAc2B,uBAAuB5O,EAAEuN,aAAa;QACtDtI,KAAKA,MAAMA,KAAK,KAAK,KAAM,MAAO;QAClCC,KAAKA,MAAMA,KAAK,KAAK,KAAM,MAAO;;MAGpCsD,IAAIgG,UAAUJ,IAAI7L,GAAG6L,IAAI5L,GAAG4L,IAAIrJ,GAAGqJ,IAAIpJ,GAAGC,IAAIC;MAC9CsD,IAAIqG,eAAe7O,EAAE+G;MAErB,IAAI/G,EAAEiH,oBAAoB;QACxBuB,IAAI+D,2BAA2BvM,EAAEiH;;MAGnC,IAAIjH,EAAEgH,QAAQ;QACZrK,KAAKmS,aAAatG,KAAKxI,EAAEgH;;;IAsC7BzK,MAAMmI,GAAGC,GAAG0C,OAAOC,QAAQ4B,QAAQ,GAAGgB;MACpC,KAAKvN,KAAKuQ,aAAa;QACrBvQ,KAAKuQ,cAAc,IAAIlE;;MAGzBrM,KAAKuQ,YAAY6B,OAAOpS,MAAM+H,GAAGC,GAAG0C,OAAOC,QAAQ4B,OAAOgB;;IAuB5D3N,YAAY0K;MACV,KAAKtK,KAAKuQ,aAAa;QACrB,MAAM;;MAGRvQ,KAAKuQ,YAAY7C,OAAOpD;;IAQ1B1K;MACE,IAAII,KAAKuQ,aAAa;QACpBvQ,KAAKuQ,YAAY8B;QACjBrS,KAAKuQ,cAAcjE;;;IAUvB1M;MACE,OAAOI,KAAKuQ,cAAcvQ,KAAKuQ,YAAY+B,eAAe;;IAuB5D1S,cAAcmI,GAAGC,GAAG4B,KAAK,IAAI9B;MAC3B,OAAO9H,KAAKuS,sBAAsBvS,KAAKgR,OAAOnI,QAAQ2J,eAAezK,GAAGC,GAAG4B;;IAuB7EhK,cAAcmI,GAAGC,GAAG4B,KAAK,IAAI9B;MAC3B,OAAO9H,KAAKuS,sBAAsBvS,KAAKgR,OAAOnI,QAAQmJ,SAASQ,eAAezK,GAAGC,GAAG4B;;IAwBtFhK,aAAamI,GAAGC,GAAG/H,QAAQ2J;MACzBA,KAAK5J,KAAKyS,cAAc1K,GAAGC,GAAG4B;MAC9B,OAAO3J,OAAOyS,cAAc9I,GAAG7B,GAAG6B,GAAG5B,GAAG4B;;IAsB1ChK,aAAamI,IAAI,GAAGC,IAAI,GAAGgB,SAAS,GAAGC,SAAS,GAAGC,WAAW,GAAGC,QAAQ,GAAGC,QAAQ,GAAGC,OAAO,GAAGC,OAAO;MACtGtJ,KAAK+H,IAAIA;MACT/H,KAAKgI,IAAIA;MACThI,KAAKgJ,SAASA;MACdhJ,KAAKiJ,SAASA;MACdjJ,KAAKkJ,WAAWA;MAChBlJ,KAAKmJ,QAAQA;MACbnJ,KAAKoJ,QAAQA;MACbpJ,KAAKqJ,OAAOA;MACZrJ,KAAKsJ,OAAOA;MACZ,OAAOtJ;;IASTJ,UAAUiJ;MACR,IAAIxF,IAAIrD,MACJyR,MAAM5I,UAAUA,OAAOoB,cAAc,IAAI9B;MAC7C,OAAO9E,EAAEsN,kBAAkBc,IAAIkB,KAAKtP,EAAEsN,mBAAmBc,IAAImB,gBAAgBvP,EAAE0E,GAAG1E,EAAE2E,GAAG3E,EAAE2F,QAAQ3F,EAAE4F,QAAQ5F,EAAE6F,UAAU7F,EAAE8F,OAAO9F,EAAE+F,OAAO/F,EAAEgG,MAAMhG,EAAEiG;;IAarJ1J,sBAAsBiJ;MACpB,IAAIxF,IAAIrD,MACJyR,MAAMzR,KAAK4R,UAAU/I;MAEzB,OAAOxF,IAAIA,EAAEJ,QAAQ;QACnBwO,IAAIjH,cAAcnH,EAAEuO,UAAUvO,EAAE2N,OAAOnI;;MAGzC,OAAO4I;;IAUT7R,4BAA4BiB;MAC1BA,QAAQA,QAAQA,MAAMoJ,aAAa,IAAIC;MACvC,IAAI7G,IAAIrD,MACJyR,MAAMpO,EAAEuO,UAAU/Q,MAAMgI;MAE5B,GAAG;QACDhI,MAAMkI,QAAQ1F,EAAE8G,SAAS9G,EAAE+G,OAAO/G,EAAEgH,QAAQhH,EAAEiH;QAG9C,IAAIjH,KAAKrD,MAAM;UACbyR,IAAIjH,cAAcnH,EAAEuO,UAAUvO,EAAE2N,OAAOnI;;eAElCxF,IAAIA,EAAEJ;MAEf,OAAOpC;;IAqBTjB,QAAQmI,GAAGC;MACT,IAAI6D,MAAMyE,cAAcuC;MACxBhH,IAAIgE,aAAa,GAAG,GAAG,GAAG,IAAI9H,IAAIC;MAClChI,KAAK+P,KAAKlE;MAEV,IAAIiH,MAAM9S,KAAK+S,SAASlH;MAExBA,IAAIgE,aAAa,GAAG,GAAG,GAAG,GAAG,GAAG;MAChChE,IAAI6D,UAAU,GAAG,GAAG,GAAG;MACvB,OAAOoD;;IAeTlT,IAAIiB;MACF,KAAK,IAAID,KAAKC,OAAO;QACnBb,KAAKY,KAAKC,MAAMD;;MAGlB,OAAOZ;;IAwDTJ;MACE,IAAII,KAAKkR,SAAS;QAChB,OAAOlR,KAAKiR,WAAW0B,KAAK3S,KAAKkR;;MAGnC,IAAIpD,cAAc9N,KAAK8N;MAEvB,IAAIA,aAAa;QACf,IAAIvB,QAAQvM,KAAKgT;QACjB,OAAOhT,KAAKiR,WAAWhJ,UAAUjI,KAAKiT,eAAejT,KAAKkT,eAAepF,YAAYpD,QAAQ6B,OAAOuB,YAAYnD,SAAS4B;;MAG3H,OAAO;;IAiBT3M;MACE,OAAOI,KAAKmT;;IAiBdvT,UAAUmI,GAAGC,GAAG0C,OAAOC;MACrB,IAAI5C,KAAK,MAAM;QACb/H,KAAKkR,UAAU;;MAGjBlR,KAAKkR,WAAWlR,KAAKkR,WAAW,IAAIzG,aAAaxC,UAAUF,GAAGC,GAAG0C,OAAOC;;IAW1E/K;MACE,OAAOI,KAAKoT,YAAY,IAAI9C;;IAQ9B1Q;MACE,WAAWI,KAAKc,YAAYC,OAAOf,KAAKe,iBAAiBf,KAAKe,UAAU;;IAU1EnB,YAAYyD;MACVA,EAAE+G,QAAQpK,KAAKoK;MACf/G,EAAEoN,eAAezQ,KAAKyQ;MACtBpN,EAAEqN,cAAc1Q,KAAK0Q;MACrBrN,EAAEtC,OAAOf,KAAKe;MACdsC,EAAEgG,OAAOrJ,KAAKqJ;MACdhG,EAAEiG,OAAOtJ,KAAKsJ;MACdjG,EAAE6F,WAAWlJ,KAAKkJ;MAClB7F,EAAE2F,SAAShJ,KAAKgJ;MAChB3F,EAAE4F,SAASjJ,KAAKiJ;MAChB5F,EAAEgH,SAASrK,KAAKqK;MAChBhH,EAAE8F,QAAQnJ,KAAKmJ;MACf9F,EAAE+F,QAAQpJ,KAAKoJ;MACf/F,EAAE8G,UAAUnK,KAAKmK;MACjB9G,EAAE0E,IAAI/H,KAAK+H;MACX1E,EAAE2E,IAAIhI,KAAKgI;MACX3E,EAAEiH,qBAAqBtK,KAAKsK;MAC5BjH,EAAEuN,cAAc5Q,KAAK4Q;MACrBvN,EAAE8J,UAAUnN,KAAKmN,WAAW,OAAO,OAAOnN,KAAKmN,QAAQ7J,MAAM;MAC7DD,EAAEwN,OAAO7Q,KAAK6Q;MACdxN,EAAEyN,UAAU9Q,KAAK8Q;MACjBzN,EAAE0N,SAAS/Q,KAAK+Q;MAChB1N,EAAE6N,UAAUlR,KAAKkR;MACjB,OAAO7N;;IASTzD,aAAaiM,KAAKxB,SAASgJ,OAAOpJ;MAChCI,SAASA;MACTwB,IAAIyH,cAAcjJ,OAAOkJ;MACzB1H,IAAI2H,gBAAgBnJ,OAAOoJ;MAC3B5H,IAAI6H,gBAAgBrJ,OAAOsJ;MAC3B9H,IAAI+H,aAAavJ,OAAOwJ;;IAQ1BjU,MAAMkU;MAEJ,IAAIC,KAAK/T,KAAK4B;MAEd,IAAImS,MAAMA,GAAG,SAAS;QAEpBD,OAAO7T,SAAS;QAChB6T,OAAOtT,qBAAqBsT,OAAOrT,8BAA8B;QACjET,KAAKyB,cAAcqS;;;IAUvBlU,SAASiM;MACP;QACE,OAAOA,IAAIK,aAAa,GAAG,GAAG,GAAG,GAAG7J,KAAK,KAAK;QAC9C,OAAOW;QACP,KAAKsN,cAAc0D,2BAA2B;UAC5C,MAAM;;QAGR,OAAO;;;IAWXpU,WAAWiJ,QAAQoL;MACjB,OAAOjU,KAAKkU,iBAAiBlU,KAAKqN,aAAaxE,QAAQoL;;IAWzDrU,iBAAiBuU,QAAQtL,QAAQoL;MAC/B,KAAKE,QAAQ;QACX,OAAOA;;MAGT,KAAIpM,GACFA,GAACC,GACDA,GAAC0C,OACDA,OAAKC,QACLA,UACEwJ;MACJ,IAAI1C,MAAMzR,KAAKgR,OAAOnI;MACtB4I,MAAMwC,kBAAkBxC,IAAIxH,aAAajK,KAAK4R,UAAUH;MAExD,IAAI1J,KAAKC,GAAG;QACVyJ,IAAImB,gBAAgB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI7K,IAAIC;;MAIhD,IAAIa,QAAQ;QACV4I,IAAIjH,cAAc3B;;MAGpB,IAAIuL,MAAM1J,QAAQ+G,IAAI7L,GAClByO,MAAM3J,QAAQ+G,IAAI5L;MACtB,IAAIyO,MAAM3J,SAAS8G,IAAIrJ,GACnBmM,MAAM5J,SAAS8G,IAAIpJ;MACvB,IAAIC,KAAKmJ,IAAInJ,IACTC,KAAKkJ,IAAIlJ;MACb,IAAIiM,OAAOlM,IACPmM,OAAOnM,IACPoM,OAAOnM,IACPoM,OAAOpM;MAEX,KAAKR,IAAIqM,MAAM9L,MAAMkM,MAAM;QACzBA,OAAOzM;aACF,IAAIA,IAAI0M,MAAM;QACnBA,OAAO1M;;MAGT,KAAKA,IAAIqM,MAAME,MAAMhM,MAAMkM,MAAM;QAC/BA,OAAOzM;aACF,IAAIA,IAAI0M,MAAM;QACnBA,OAAO1M;;MAGT,KAAKA,IAAIuM,MAAMhM,MAAMkM,MAAM;QACzBA,OAAOzM;aACF,IAAIA,IAAI0M,MAAM;QACnBA,OAAO1M;;MAGT,KAAKC,IAAIqM,MAAM9L,MAAMmM,MAAM;QACzBA,OAAO1M;aACF,IAAIA,IAAI2M,MAAM;QACnBA,OAAO3M;;MAGT,KAAKA,IAAIqM,MAAME,MAAMhM,MAAMmM,MAAM;QAC/BA,OAAO1M;aACF,IAAIA,IAAI2M,MAAM;QACnBA,OAAO3M;;MAGT,KAAKA,IAAIuM,MAAMhM,MAAMmM,MAAM;QACzBA,OAAO1M;aACF,IAAIA,IAAI2M,MAAM;QACnBA,OAAO3M;;MAGT,OAAOmM,OAAOlM,UAAUuM,MAAME,MAAMD,OAAOD,MAAMG,OAAOD;;IAS1D9U;MACE,IAAIgV,OAAOtE,cAAcuE;MAEzB,KAAK,IAAIjS,IAAI,GAAGF,IAAIkS,KAAKjS,QAAQC,IAAIF,GAAGE,KAAK;QAC3C,IAAI5C,KAAKwB,iBAAiBoT,KAAKhS,KAAK;UAClC,OAAO;;;MAIX,SAAS5C,KAAK+Q;;;EAIlB;IACE,IAAI+D,SAAS/P,OAAO6J,YAAYA,SAASC,eAAeD,SAASC,iBAAiBC,SAASC,cAAc;IAEzG,IAAI+F,OAAOrF,YAAY;MAKrBa,cAAcyE,iBAAiBD;MAM/BxE,cAAcuC,kBAAkBiC,OAAOrF,WAAW;MAClDqF,OAAOpK,QAAQoK,OAAOnK,SAAS;;;EAUnC2F,cAAcuE,kBAAiB,SAAS,YAAY,aAAa,YAAY,aAAa,aAAa,WAAW,WAAW;EAS7HvE,cAAc0D,4BAA4B;EAO1C1D,cAAc0E,qBAAqB;EAOnC1E,cAAcc,gBAAgB;EAO9Bd,cAAc2E,kBAAkB;EAOhC3E,cAAc4E,kBAAkB;QAsK1BC,kBAAkB7E;IACtB1Q;MACE+D;MASA3D,KAAKoV;MASLpV,KAAKqV,gBAAgB;MASrBrV,KAAKsV,eAAe;;IAStBC;MACE,OAAOvV,KAAKoV,SAASzS;;IAGvB/C;MACE,IAAI4V,aAAaxV,KAAK8N,eAAe9N,KAAKoV,SAASzS;MACnD,UAAU3C,KAAKmK,WAAWnK,KAAKoK,QAAQ,KAAKpK,KAAKgJ,UAAU,KAAKhJ,KAAKiJ,UAAU,KAAKuM;;IAGtF5V,KAAKiM,KAAKyF,cAAc;MACtB,IAAI3N,MAAMoM,KAAKlE,KAAKyF,cAAc;QAChC,OAAO;;MAIT,IAAInO,OAAOnD,KAAKoV,SAAS9R;MAEzB,KAAK,IAAIV,IAAI,GAAGF,IAAIS,KAAKR,QAAQC,IAAIF,GAAGE,KAAK;QAC3C,IAAI6S,QAAQtS,KAAKP;QAEjB,KAAK6S,MAAMC,aAAa;UACtB;;QAIF7J,IAAI8D;QACJ8F,MAAME,cAAc9J;QACpB4J,MAAM1F,KAAKlE;QACXA,IAAImE;;MAGN,OAAO;;IAeTpQ,YAAYwV;MACV,MAAM1S,IAAI0S,SAASzS;MAEnB,IAAID,MAAM,GAAG;QACX,OAAO;;MAGT,IAAI+S,QAAQL,SAAS;MAErB,IAAI1S,IAAI,GAAG;QACT,KAAK,IAAIE,IAAI,GAAGA,IAAIF,GAAGE,KAAK;UAC1B6S,QAAQzV,KAAK4V,SAASR,SAASxS;;QAGjC,OAAO6S;;MAIT,IAAIxS,SAASwS,MAAMxS,QACf4S,SAAS5S,WAAWjD;MACxBiD,UAAUA,OAAO6S,eAAe7S,OAAOmS,SAASW,QAAQN,QAAQI;MAChEJ,MAAMxS,SAASjD;MACfA,KAAKoV,SAASlT,KAAKuT;MAEnB,KAAKI,QAAQ;QACXJ,MAAMhU,cAAc;;MAGtB,OAAOgU;;IAoBT7V,cAAcwV;MACZ,MAAM1S,IAAI0S,SAASzS;MAEnB,IAAID,MAAM,GAAG;QACX,OAAO;;MAGT,IAAIsT,QAAQZ,SAASpO;MAErB,IAAIgP,QAAQ,KAAKA,QAAQhW,KAAKoV,SAASzS,QAAQ;QAC7C,OAAOyS,SAAS1S,IAAI;;MAGtB,IAAIA,IAAI,GAAG;QACT,KAAK,IAAIE,IAAI,GAAGA,IAAIF,IAAI,GAAGE,KAAK;UAC9B5C,KAAKiW,WAAWb,SAASxS,IAAIoT;;QAG/B,OAAOZ,SAAS1S,IAAI;;MAGtB,IAAI+S,QAAQL,SAAS;MACrB,IAAInS,SAASwS,MAAMxS,QACf4S,SAAS5S,WAAWjD;MACxBiD,UAAUA,OAAO6S,eAAe7S,OAAOmS,SAASW,QAAQN,QAAQI;MAChEJ,MAAMxS,SAASjD;MACfA,KAAKoV,SAASvS,OAAOmT,SAAS,GAAGP;MAEjC,KAAKI,QAAQ;QACXJ,MAAMhU,cAAc;;MAGtB,OAAOgU;;IAgBT7V,eAAewV;MACb,MAAM1S,IAAI0S,SAASzS;MAEnB,IAAID,MAAM,GAAG;QACX,OAAO;;MAGT,IAAIA,IAAI,GAAG;QACT,IAAIwT,OAAO;QAEX,KAAK,IAAItT,IAAI,GAAGA,IAAIF,GAAGE,KAAK;UAC1BsT,OAAOA,QAAQlW,KAAKmW,YAAYf,SAASxS;;QAG3C,OAAOsT;;MAGT,OAAOlW,KAAK8V,eAAe9V,KAAKoV,SAASW,QAAQX,SAAS;;IAe5DxV,iBAAiBwW;MACf,MAAM1T,IAAI0T,QAAQzT;MAElB,IAAID,MAAM,GAAG;QACX,OAAO;;MAGT,IAAIA,IAAI,GAAG;QACT0T,QAAQC,KAAK,CAACzQ,GAAGC,MAAMA,IAAID;QAC3B,IAAIsQ,OAAO;QAEX,KAAK,IAAItT,IAAI,GAAGA,IAAIF,GAAGE,KAAK;UAC1BsT,OAAOA,QAAQlW,KAAK8V,eAAeM,QAAQxT;;QAG7C,OAAOsT;;MAGT,OAAOlW,KAAK8V,eAAeM,QAAQ;;IAOrCxW;MACE,IAAI0W,OAAOtW,KAAKoV;MAEhB,OAAOkB,KAAK3T,QAAQ;QAClB3C,KAAK8V,eAAe;;;IAUxBlW,WAAWoW;MACT,OAAOhW,KAAKoV,SAASY;;IASvBpW,eAAemB;MACb,IAAIuV,OAAOtW,KAAKoV;MAChB,MAAM1S,IAAI4T,KAAK3T;MAEf,KAAK,IAAIC,IAAI,GAAGA,IAAIF,GAAGE,KAAK;QAC1B,IAAI0T,KAAK1T,GAAG7B,SAASA,MAAM;UACzB,OAAOuV,KAAK1T;;;MAIhB,OAAO;;IAkBThD,aAAa2W;MACXvW,KAAKoV,SAASiB,KAAKE;;IASrB3W,cAAc6V;MACZ,OAAOzV,KAAKoV,SAASW,QAAQN;;IAS/B7V,eAAe4W,QAAQC;MACrB,IAAIH,OAAOtW,KAAKoV;MAChB,IAAIsB,KAAKJ,KAAKE;MACd,IAAIG,KAAKL,KAAKG;MAEd,KAAKC,OAAOC,IAAI;QACd;;MAGFL,KAAKE,UAAUG;MACfL,KAAKG,UAAUC;;IASjB9W,aAAagX,QAAQC;MACnB,IAAIP,OAAOtW,KAAKoV;MAChB,MAAM1S,IAAI4T,KAAK3T;MACf,IAAI6T,QAAQC;MAEZ,KAAK,IAAI7T,IAAI,GAAGA,IAAIF,GAAGE,KAAK;QAC1B,IAAI0T,KAAK1T,OAAOgU,QAAQ;UACtBJ,SAAS5T;;QAGX,IAAI0T,KAAK1T,OAAOiU,QAAQ;UACtBJ,SAAS7T;;QAGX,IAAI4T,UAAU,QAAQC,UAAU,MAAM;UACpC;;;MAIJ,IAAI7T,MAAMF,GAAG;QACX;;MAIF4T,KAAKE,UAAUK;MACfP,KAAKG,UAAUG;;IASjBhX,cAAc6V,OAAOO;MACnB,IAAIM,OAAOtW,KAAKoV;MAChB,MAAM1S,IAAI4T,KAAK3T;MAEf,IAAI8S,MAAMxS,UAAUjD,QAAQgW,QAAQ,KAAKA,SAAStT,GAAG;QACnD;;MAGF,KAAK,IAAIE,IAAI,GAAGA,IAAIF,GAAGE,KAAK;QAC1B,IAAI0T,KAAK1T,OAAO6S,OAAO;UACrB;;;MAIJ,IAAI7S,MAAMF,KAAKE,MAAMoT,OAAO;QAC1B;;MAGFM,KAAKzT,OAAOD,GAAG;MACf0T,KAAKzT,OAAOmT,OAAO,GAAGP;;IAUxB7V,SAAS6V;MACP,OAAOA,OAAO;QACZ,IAAIA,UAAUzV,MAAM;UAClB,OAAO;;QAGTyV,QAAQA,MAAMxS;;MAGhB,OAAO;;IAaTrD,QAAQmI,GAAGC;MAET,OAAOhI,KAAK8W,oBAAoB/O,GAAGC,MAAM;;IA6B3CpI,qBAAqBmI,GAAGC,GAAG/B,OAAO;MAChC,IAAIhE;MACJ,IAAI2H,KAAK5J,KAAKyS,cAAc1K,GAAGC;MAE/BhI,KAAK+W,sBAAsBnN,GAAG7B,GAAG6B,GAAG5B,GAAG/F,KAAKgE,OAAO,GAAGA,SAAS;MAE/D,OAAOhE;;IAcTrC,oBAAoBmI,GAAGC,GAAG/B,OAAO;MAC/B,IAAI2D,KAAK5J,KAAKyS,cAAc1K,GAAGC;MAC/B,OAAOhI,KAAK+W,sBAAsBnN,GAAG7B,GAAG6B,GAAG5B,GAAG,MAAM/B,OAAO,GAAGA,SAAS;;IAGzErG;MACE,OAAOI,KAAKmT,WAAW,MAAM;;IAG/BvT;MACE,OAAOI,KAAKmT;;IAWdvT,MAAMoX,YAAY;MAChB,IAAI3T,IAAIrD,KAAKoT,YAAY,IAAI+B;MAE7B,IAAI6B,WAAW;QACbhX,KAAKiX,eAAe5T;;MAGtB,OAAOA;;IAGTzD,MAAMkU;MACJ,IAAI9T,KAAKsV,cAAc;QACrB,KAAK,IAAI1S,IAAI5C,KAAKoV,SAASzS,SAAS,GAAGC,KAAK,GAAGA,KAAK;UAClD,IAAI6S,QAAQzV,KAAKoV,SAASxS;UAE1B,IAAI6S,MAAM/E,eAAe+E,MAAMzP,OAAO;YACpCyP,MAAMzP,MAAM8N;;;;MAKlBnQ,MAAMqC,MAAM8N;;IASdlU,eAAeyD;MACb,IAAIA,EAAE+R,SAASzS,QAAQ;QACrBU,EAAE6T;;MAGJ,IAAIjV,MAAMoB,EAAE+R;MACZ,MAAM1S,IAAI1C,KAAKoV,SAASzS;MAExB,KAAK,IAAIC,IAAI,GAAGA,IAAIF,GAAGE,KAAK;QAC1B,IAAIG,QAAQ/C,KAAKoV,SAASxS,GAAGG,MAAM;QACnCA,MAAME,SAASI;QACfpB,IAAIC,KAAKa;;;IAcbnD,eAAeoW,OAAOH,SAAS;MAC7B,IAAIG,QAAQ,KAAKA,QAAQhW,KAAKoV,SAASzS,SAAS,GAAG;QACjD,OAAO;;MAGT,IAAI8S,QAAQzV,KAAKoV,SAASY;MAE1B,IAAIP,OAAO;QACTA,MAAMxS,SAAS;;MAGjBjD,KAAKoV,SAASvS,OAAOmT,OAAO;MAE5B,KAAKH,QAAQ;QACXJ,MAAMhU,cAAc;;MAGtB,OAAO;;IAcT7B,sBAAsBmI,GAAGC,GAAG/F,KAAKkV,OAAOC,gBAAgBC,eAAe;MACrE,KAAKA,iBAAiBrX,KAAKsX,UAAUtX,MAAM+H,GAAGC,IAAI;QAChD,OAAO;;MAGT,IAAIyJ,KACA5F,MAAMyE,cAAcuC;MACxBuE,iBAAiBA,kBAAkBD,SAASnX,KAAKuX;MAEjD,IAAInC,WAAWpV,KAAKoV;MACpB,MAAM1S,IAAI0S,SAASzS;MAEnB,KAAK,IAAIC,IAAIF,IAAI,GAAGE,KAAK,GAAGA,KAAK;QAC/B,IAAI6S,QAAQL,SAASxS;QACrB,IAAIkO,UAAU2E,MAAM3E;QAEpB,KAAK2E,MAAMtL,YAAY2G,YAAY2E,MAAMC,eAAeyB,UAAU1B,MAAMhF,cAAc;UACpF;;QAGF,KAAKK,YAAY9Q,KAAKsX,UAAU7B,OAAO1N,GAAGC,IAAI;UAC5C;;QAIF,KAAK8I,WAAW2E,iBAAiBN,WAAW;UAC1C,IAAIqC,SAAS/B,MAAMsB,sBAAsBhP,GAAGC,GAAG/F,KAAKkV,OAAOC,gBAAgBC,eAAe;UAE1F,KAAKpV,OAAOuV,QAAQ;YAClB,OAAOL,UAAUnX,KAAKqV,gBAAgBrV,OAAOwX;;eAE1C;UACL,IAAIL,UAAUC,mBAAmB3B,MAAM8B,0BAA0B;YAC/D;;UAIF,IAAI1W,QAAQ4U,MAAMgC,4BAA4BhC,MAAMzE;UACpDS,MAAM5Q,MAAMgI;UAEZ,IAAIiI,SAAS;YACXW,IAAIlH,aAAauG,QAAQc,UAAUd,QAAQE,OAAOnI;YAClDhI,MAAMuJ,QAAQ0G,QAAQ1G;;UAGxByB,IAAIqG,cAAcrR,MAAMuJ;UACxByB,IAAIgE,aAAa4B,IAAI7L,GAAG6L,IAAI5L,GAAG4L,IAAIrJ,GAAGqJ,IAAIpJ,GAAGoJ,IAAInJ,KAAKP,GAAG0J,IAAIlJ,KAAKP;WACjE8I,WAAW2E,OAAO1F,KAAKlE;UAExB,KAAK7L,KAAK+S,SAASlH,MAAM;YACvB;;UAGFA,IAAIgE,aAAa,GAAG,GAAG,GAAG,GAAG,GAAG;UAChChE,IAAI6D,UAAU,GAAG,GAAG,GAAG;UAEvB,IAAIzN,KAAK;YACPA,IAAIC,KAAKuT;iBACJ;YACL,OAAO0B,UAAUnX,KAAKqV,gBAAgBrV,OAAOyV;;;;MAKnD,OAAO;;IAWT7V,UAAUK,QAAQ8H,GAAGC;MACnB,IAAI6I,OAAO5Q,OAAO4Q;MAElB,KAAKA,SAASA,KAAKa,YAAYb,KAAKa,SAASC,WAAW;QACtD,OAAO;;MAGT,IAAIF,MAAMzR,KAAKgR,OAAOnI,QAClB5F,SAAShD,OAAOgD;MACpBwO,MAAMxO,SAASA,OAAOsP,sBAAsBd,OAAOA,IAAIxH;MACvDwH,MAAMZ,KAAKe,UAAUf,KAAKG,OAAOnI,QAAQ2B,cAAciH;MACvD,IAAI5F,MAAMyE,cAAcuC;MACxBhH,IAAIgE,aAAa4B,IAAI7L,GAAG6L,IAAI5L,GAAG4L,IAAIrJ,GAAGqJ,IAAIpJ,GAAGoJ,IAAInJ,KAAKP,GAAG0J,IAAIlJ,KAAKP;MAElE6I,KAAKa,SAASI,WAAWjG;MACzBA,IAAI6L,YAAY;MAChB7L,IAAI8L;MAEJ,KAAK3X,KAAK+S,SAASlH,MAAM;QACvB,OAAO;;MAGTA,IAAIgE,aAAa,GAAG,GAAG,GAAG,GAAG,GAAG;MAChChE,IAAI6D,UAAU,GAAG,GAAG,GAAG;MACvB,OAAO;;IAUT9P,WAAWiJ,QAAQoL;MACjB,IAAIE,SAASxQ,MAAM0J;MAEnB,IAAI8G,QAAQ;QACV,OAAOnU,KAAKkU,iBAAiBC,QAAQtL,QAAQoL;;MAG/C,IAAIxC,MAAMzR,KAAKgR,OAAOnI;MACtB4I,MAAMwC,kBAAkBxC,IAAIxH,aAAajK,KAAK4R,UAAUH;MAExD,IAAI5I,QAAQ;QACV4I,IAAIjH,cAAc3B;;MAGpB,MAAMnG,IAAI1C,KAAKoV,SAASzS;MACxB,IAAIoI,OAAO;MAEX,KAAK,IAAInI,IAAI,GAAGA,IAAIF,GAAGE,KAAK;QAC1B,IAAI6S,QAAQzV,KAAKoV,SAASxS;QAE1B,KAAK6S,MAAMtL,aAAagK,SAASsB,MAAMtC,WAAW1B,OAAO;UACvD;;QAGF,IAAI1G,MAAM;UACRA,KAAKC,OAAOmJ,OAAOpM,GAAGoM,OAAOnM,GAAGmM,OAAOzJ,OAAOyJ,OAAOxJ;eAChD;UACLI,OAAOoJ,OAAOpR;;;MAIlB,OAAOgI;;;QAkDL6M,mBAAmBjY;IACvBC,YAAYC,MAAMC,SAASC,YAAY8X,QAAQC,QAAQC,aAAaC,WAAWC,SAASC,MAAMC,MAAMC;MAClGzU,MAAM9D,MAAMC,SAASC;MAOrBC,KAAK6X,SAASA;MAMd7X,KAAK8X,SAASA;MAOd9X,KAAKkY,OAAOA,QAAQ,OAAOL,SAASK;MAOpClY,KAAKmY,OAAOA,QAAQ,OAAOL,SAASK;MAQpCnY,KAAK+X,cAAcA;MAOnB/X,KAAKgY,YAAYA;MAOjBhY,KAAKiY,YAAYA;MAUjBjY,KAAKoY,gBAAgBA;;IASvBC;MACE,OAAOrY,KAAKE,cAAcwS,cAAc1S,KAAKkY,MAAMlY,KAAKmY,MAAMpQ;;IAShEuQ;MACE,OAAOtY,KAAKE,cAAcwS,cAAc1S,KAAKkY,MAAMlY,KAAKmY,MAAMnQ;;IAShEuQ;MACE,OAAOvY,KAAKgY,eAAe;;IAQ7BpY;MACE,OAAO,IAAIgY,WAAW5X,KAAKH,MAAMG,KAAKF,SAASE,KAAKD,YAAYC,KAAK6X,QAAQ7X,KAAK8X,QAAQ9X,KAAK+X,aAAa/X,KAAKgY,WAAWhY,KAAKiY,SAASjY,KAAKkY,MAAMlY,KAAKmY;;IAQ5JvY;MACE,WAAWI,KAAKc,YAAYC,cAAcf,KAAKH,eAAeG,KAAK6X,iBAAiB7X,KAAK8X;;;QAmDvFU,cAAcrD;IAClBvV,YAAYkV;MACVnR;MAcA3D,KAAKyY,YAAY;MAgBjBzY,KAAK8U,gBAAgBA,WAAW,WAAWhG,SAAS4J,eAAe5D,UAAUA;MAS7E9U,KAAK2Y,SAAS;MASd3Y,KAAK4Y,SAAS;MAOd5Y,KAAK6Y,WAAW;MAQhB7Y,KAAKgV,qBAAqB;MAO1BhV,KAAK8Y,gBAAgB;MAOrB9Y,KAAK+Y,eAAe;MAQpB/Y,KAAKgZ,mBAAmB;MAQxBhZ,KAAKiZ,mBAAmB;MAgBxBjZ,KAAKkZ;MAOLlZ,KAAKmZ,gBAAgB;MAOrBnZ,KAAKoZ,oBAAoB;MAMzBpZ,KAAKqZ,uBAAuB;MAM5BrZ,KAAKsZ,aAAa;MAMlBtZ,KAAKuZ,aAAa;MAClBvZ,KAAKwZ,gBAAgB;;IA0BvBC;MACE,OAAOzZ,KAAKsZ;;IAGdG,cAAc9N;MACZ,IAAI3L,KAAKsZ,YAAY;QACnBtZ,KAAKsZ,WAAWC,aAAa;;MAG/B,IAAI5N,OAAO;QACTA,MAAM4N,aAAavZ;;MAGrBA,KAAKsZ,aAAa3N;;IAYpB/L,OAAOiB;MACL,KAAKb,KAAK8U,QAAQ;QAChB;;MAGF,IAAI9U,KAAK+Y,cAAc;QACrB/Y,KAAK0Z,KAAK7Y;;MAGZ,IAAIb,KAAKyB,cAAc,aAAa,OAAO,UAAU,OAAO;QAC1D;;MAGF6O,cAAc2B,sBAAsBjS,KAAKgV;MACzC,IAAIzL,IAAIvJ,KAAK6Y,UACThN,MAAM7L,KAAK8U,OAAOrF,WAAW;MACjC5D,IAAIgE,aAAa,GAAG,GAAG,GAAG,GAAG,GAAG;MAEhC,IAAI7P,KAAKyY,WAAW;QAClB,IAAIlP,GAAG;UACLsC,IAAI6D,UAAUnG,EAAExB,GAAGwB,EAAEvB,GAAGuB,EAAEmB,OAAOnB,EAAEoB;eAC9B;UACLkB,IAAI6D,UAAU,GAAG,GAAG1P,KAAK8U,OAAOpK,QAAQ,GAAG1K,KAAK8U,OAAOnK,SAAS;;;MAIpEkB,IAAI8D;MAEJ,IAAI3P,KAAK6Y,UAAU;QACjBhN,IAAI8N;QACJ9N,IAAId,KAAKxB,EAAExB,GAAGwB,EAAEvB,GAAGuB,EAAEmB,OAAOnB,EAAEoB;QAC9BkB,IAAIkG;;MAGN/R,KAAK2V,cAAc9J;MACnB7L,KAAK+P,KAAKlE,KAAK;MACfA,IAAImE;MACJhQ,KAAKyB,cAAc;;IAgCrB7B,KAAKiB;MACH,KAAKb,KAAK0Q,eAAe1Q,KAAKyB,cAAc,aAAa,OAAO,UAAU,OAAO;QAC/E;;MAGF,IAAIqS,SAAS,IAAInU,MAAM;MAEvB,IAAIkB,OAAO;QACT,KAAK,IAAID,KAAKC,OAAO;UACnB,IAAIA,MAAMnB,eAAekB,IAAI;YAC3BkT,OAAOlT,KAAKC,MAAMD;;;;MAKxBZ,KAAKgG,MAAM8N;MAEX9T,KAAKyB,cAAc;;IAUrB7B,YAAY2C;MACV,IAAIA,IAAI1C,SAAS,QAAQ;QACvBG,KAAK0N,OAAOnL;;;IAQhB3C;MACE,KAAKI,KAAK8U,QAAQ;QAChB;;MAGF,IAAIjJ,MAAM7L,KAAK8U,OAAOrF,WAAW;MACjC5D,IAAIgE,aAAa,GAAG,GAAG,GAAG,GAAG,GAAG;MAChChE,IAAI6D,UAAU,GAAG,GAAG1P,KAAK8U,OAAOpK,QAAQ,GAAG1K,KAAK8U,OAAOnK,SAAS;;IAclE/K,UAAUga,iBAAiBC,WAAW;MACpC,IAAIxX,MACAwJ,MAAM7L,KAAK8U,OAAOrF,WAAW,OAC7BW,IAAIpQ,KAAK8U,OAAOpK,OAChB2F,IAAIrQ,KAAK8U,OAAOnK;MAEpB,IAAIiP,iBAAiB;QACnBvX,OAAOwJ,IAAIK,aAAa,GAAG,GAAGkE,GAAGC;QACjC,IAAI/F,qBAAqBuB,IAAI+D;QAC7B/D,IAAI+D,2BAA2B;QAC/B/D,IAAI6L,YAAYkC;QAChB/N,IAAIiO,SAAS,GAAG,GAAG1J,GAAGC;;MAGxB,IAAI0J,UAAU/Z,KAAK8U,OAAOrG,UAAUoL;MAEpC,IAAID,iBAAiB;QACnB/N,IAAIO,aAAa/J,MAAM,GAAG;QAC1BwJ,IAAI+D,2BAA2BtF;;MAGjC,OAAOyP;;IAmBTna,gBAAgBoa,YAAY;MAC1B,IAAIha,KAAKqZ,sBAAsB;QAC7BY,cAAcja,KAAKqZ;QACnBrZ,KAAKqZ,uBAAuB;QAE5B,IAAIW,cAAc,GAAG;UACnBha,KAAKka,eAAe;;;MAIxB,IAAIF,aAAa,GAAG;QAClB;;MAGFha,KAAKqZ,uBAAuBc,YAAY,MAAMna,KAAKka,kBAAkB,MAAOzU,KAAKC,IAAI,IAAIsU;;IAkB3Fpa,gBAAgBwa,SAAS;MACvB,IAAIrG,KAAK/T,KAAKqa;MAEd,KAAKD,UAAUrG,IAAI;QACjB,KAAK,IAAInT,KAAKmT,IAAI;UAChB,IAAI1Q,IAAI0Q,GAAGnT;UACXyC,EAAEiX,EAAEjZ,oBAAoBT,GAAGyC,EAAEyB,GAAG;;QAGlC9E,KAAKqa,kBAAkB;aAClB,IAAID,WAAWrG,MAAM/T,KAAK8U,QAAQ;QACvC,IAAIwF,IAAIvV,OAAO5D,mBAAmB4D,SAAS+J;QAC3CiF,KAAK/T,KAAKqa;UACRE;YACED,GAAAA;YACAxV,GAAG9B,KAAKhD,KAAKwa,eAAexX;;UAE9ByX;YACEH,GAAAA;YACAxV,GAAG9B,KAAKhD,KAAK0a,iBAAiB1X;;UAEhC2X;YACEL,GAAGta,KAAK8U;YACRhQ,GAAG9B,KAAKhD,KAAK4a,mBAAmB5X;;UAElC6X;YACEP,GAAGta,KAAK8U;YACRhQ,GAAG9B,KAAKhD,KAAK8a,iBAAiB9X;;;QAIlC,KAAK,IAAIpC,KAAKmT,IAAI;UAChB,IAAI1Q,IAAI0Q,GAAGnT;UACXyC,EAAEiX,EAAEnZ,oBAAoBkC,EAAEiX,EAAEnZ,iBAAiBP,GAAGyC,EAAEyB,GAAG;;;;IAW3DlF;MACE,MAAM;;IASRA,gBAAgBoD;MACd,IAAImR;MAEJ;QACEA,SAASnR,EAAE+X;QAEb,OAAOC;QACL7G;UACEjR,KAAKF,EAAEiY;UACPrQ,MAAM5H,EAAEkY;UACRxQ,OAAO1H,EAAEmY;UACTxQ,QAAQ3H,EAAEoY;;;MAId,IAAI5O,QAAQzH,OAAOsW,eAAevM,SAASwM,cAAc,MAAMxM,SAASyM,cAAczM,SAAS0M,KAAKD,cAAc;MAClH,IAAI9O,QAAQ1H,OAAO0W,eAAe3M,SAAS4M,aAAa,MAAM5M,SAAS6M,aAAa7M,SAAS0M,KAAKG,aAAa;MAC/G,IAAIC,SAAS7W,OAAO8W,mBAAmBA,iBAAiB7Y,GAAG,QAAQA,EAAE8Y;MAErE,IAAIC,OAAOC,SAASJ,OAAOK,eAAeD,SAASJ,OAAOM;MAC1D,IAAIC,OAAOH,SAASJ,OAAOQ,cAAcJ,SAASJ,OAAOS;MACzD,IAAIC,OAAON,SAASJ,OAAOW,gBAAgBP,SAASJ,OAAOY;MAC3D,IAAIC,OAAOT,SAASJ,OAAOc,iBAAiBV,SAASJ,OAAOe;MAE5D;QACE/R,MAAMuJ,OAAOvJ,OAAO4B,OAAOuP;QAC3BjR,OAAOqJ,OAAOrJ,QAAQ0B,OAAO8P;QAC7BpZ,KAAKiR,OAAOjR,MAAMuJ,OAAO0P;QACzBtR,QAAQsJ,OAAOtJ,SAAS4B,OAAOgQ;;;IAUnC7c,gBAAgB4Q;MACd,IAAInO,OAAOrC,KAAKkZ,aAAa1I;MAE7B,KAAKnO,MAAM;QACTA,OAAOrC,KAAKkZ,aAAa1I;UACvBzI,GAAG;UACHC,GAAG;;;MAIP,OAAO3F;;IAQTzC,iBAAiBoD,IAAI+B,OAAOpE;MAC1BX,KAAK4c,oBAAoB,GAAG5Z,GAAGA,EAAE6Z,OAAO7Z,EAAE8Z;;IAgB5Cld,mBAAmB4Q,IAAIxN,GAAG6Z,OAAOC,OAAOC;MACtC,IAAI/c,KAAKuZ,cAAcwD,UAAUzQ,WAAW;QAC1C;;MAIF,KAAKtM,KAAK8U,QAAQ;QAChB;;MAGF,IAAI2E,YAAYzZ,KAAKsZ,YACjBjW,IAAIrD,KAAKgd,gBAAgBxM;MAE7B,IAAIyM,WAAW5Z,EAAE4Z;MAEjBjd,KAAKkd,uBAAuB1M,IAAIxN,GAAG6Z,OAAOC;MAE1C,IAAIG,YAAY5Z,EAAE4Z,YAAYjd,KAAKgZ,kBAAkB;QACnD,IAAIxI,QAAQ,KAAKnN,EAAE4Z,cAAcA,UAAU;UACzCjd,KAAKmd,oBAAoBnd,MAAMid,WAAW,eAAe,cAAc,OAAOzM,IAAInN,GAAGL;;QAGvFhD,KAAKmd,oBAAoBnd,MAAM,kBAAkB,OAAOwQ,IAAInN,GAAGL;QAE/DhD,KAAKmd,oBAAoB9Z,EAAEpD,QAAQ,aAAa,MAAMuQ,IAAInN,GAAGL;;MAG/DyW,aAAaA,UAAUmD,mBAAmBpM,IAAIxN,GAAG6Z,OAAOC,OAAO;;IAWjEld,uBAAuB4Q,IAAIxN,GAAG6Z,OAAOC;MACnC,IAAI/R,OAAO/K,KAAKod,gBAAgBpd,KAAK8U;MAErC+H,SAAS9R,KAAKH;MACdkS,SAAS/R,KAAK7H;MACd,IAAIkN,IAAIpQ,KAAK8U,OAAOpK;MACpB,IAAI2F,IAAIrQ,KAAK8U,OAAOnK;MACpBkS,UAAU9R,KAAKD,QAAQC,KAAKH,QAAQwF;MACpC0M,UAAU/R,KAAKF,SAASE,KAAK7H,OAAOmN;MAEpC,IAAIhN,IAAIrD,KAAKgd,gBAAgBxM;MAE7B,IAAInN,EAAE4Z,WAAWJ,SAAS,KAAKC,SAAS,KAAKD,SAASzM,IAAI,KAAK0M,SAASzM,IAAI,GAAG;QAC7EhN,EAAE0E,IAAI8U;QACNxZ,EAAE2E,IAAI8U;aACD,IAAI9c,KAAKgZ,kBAAkB;QAChC3V,EAAE0E,IAAI8U,QAAQ,IAAI,IAAIA,QAAQzM,IAAI,IAAIA,IAAI,IAAIyM;QAC9CxZ,EAAE2E,IAAI8U,QAAQ,IAAI,IAAIA,QAAQzM,IAAI,IAAIA,IAAI,IAAIyM;;MAGhDzZ,EAAEga,YAAYra;MACdK,EAAE6U,OAAO2E;MACTxZ,EAAE8U,OAAO2E;MAET,IAAItM,OAAOxQ,KAAKoZ,qBAAqB5I,QAAQ,GAAG;QAC9CxQ,KAAK2Y,SAAStV,EAAE0E;QAChB/H,KAAK4Y,SAASvV,EAAE2E;QAChBhI,KAAK8Y,gBAAgBzV,EAAE4Z;;;IAS3Brd,eAAeoD;MACbhD,KAAKsd,kBAAkB,GAAGta,GAAG;;IAc/BpD,iBAAiB4Q,IAAIxN,GAAGua,OAAOR;MAC7B,IAAItD,YAAYzZ,KAAKsZ,YACjBjW,IAAIrD,KAAKgd,gBAAgBxM;MAE7B,IAAIxQ,KAAKuZ,cAAcwD,UAAUzQ,WAAW;QAC1C;;MAIF,IAAIrM,SAAS,MACTud,UAAUna,EAAEpD;MAEhB,KAAK8c,UAAUS,WAAW/D,YAAY;QACpCxZ,SAASD,KAAK+W,sBAAsB1T,EAAE0E,GAAG1E,EAAE2E,GAAG,MAAM;;MAGtD,IAAI3E,EAAEoa,MAAM;QACVzd,KAAKmd,oBAAoBnd,MAAM,gBAAgB,OAAOwQ,IAAInN,GAAGL,GAAG/C;QAEhEoD,EAAEoa,OAAO;;MAGX,IAAIxd,WAAWud,SAAS;QACtBxd,KAAKmd,oBAAoBK,SAAS,SAAS,MAAMhN,IAAInN,GAAGL;;MAG1DhD,KAAKmd,oBAAoBK,SAAS,WAAW,MAAMhN,IAAInN,GAAGL;MAE1D,IAAIua,OAAO;QACT,IAAI/M,MAAMxQ,KAAKoZ,mBAAmB;UAChCpZ,KAAKoZ,oBAAoB;;eAGpBpZ,KAAKkZ,aAAa1I;aACpB;QACLnN,EAAEpD,SAAS;;MAGbwZ,aAAaA,UAAU6D,iBAAiB9M,IAAIxN,GAAGua,OAAOR,SAAS9c,UAAUD;;IAQ3EJ,iBAAiBoD;MACfhD,KAAK0d,oBAAoB,GAAG1a,GAAGA,EAAE6Z,OAAO7Z,EAAE8Z;;IAc5Cld,mBAAmB4Q,IAAIxN,GAAG6Z,OAAOC,OAAOC;MACtC,IAAI/c,KAAKiZ,kBAAkB;QACzBjW,EAAE2a;;MAGJ,IAAI3d,KAAKoZ,qBAAqB,QAAQ5I,QAAQ,GAAG;QAC/CxQ,KAAKoZ,oBAAoB5I;;MAI3B,IAAIsM,SAAS,MAAM;QACjB9c,KAAKkd,uBAAuB1M,IAAIxN,GAAG6Z,OAAOC;;MAG5C,IAAI7c,SAAS,MACTwZ,YAAYzZ,KAAKsZ,YACjBjW,IAAIrD,KAAKgd,gBAAgBxM;MAE7B,KAAKuM,OAAO;QACV9c,SAASoD,EAAEpD,SAASD,KAAK+W,sBAAsB1T,EAAE0E,GAAG1E,EAAE2E,GAAG,MAAM;;MAGjE,IAAI3E,EAAE4Z,UAAU;QACdjd,KAAKmd,oBAAoBnd,MAAM,kBAAkB,OAAOwQ,IAAInN,GAAGL,GAAG/C;QAElEoD,EAAEoa,OAAO;;MAGXzd,KAAKmd,oBAAoBld,QAAQ,aAAa,MAAMuQ,IAAInN,GAAGL;MAE3DyW,aAAaA,UAAUiE,mBAAmBlN,IAAIxN,GAAG6Z,OAAOC,OAAOC,SAAS9c,UAAUD;;IAcpFJ,eAAe2d,OAAOR,OAAOa;MAC3B,IAAI5d,KAAKuZ,cAAcwD,UAAUzQ,WAAW;QAC1C;;MAIF,IAAImN,YAAYzZ,KAAKsZ;MAErB,KAAKtZ,KAAKqZ,sBAAsB;QAE9BI,aAAaA,UAAUS,eAAeqD,OAAOR,OAAOa;QACpD;;MAGF,IAAIva,IAAIrD,KAAKgd,iBAAiB;MAG9B,KAAK3Z,MAAMka,SAASvd,KAAK2Y,WAAW3Y,KAAK6d,eAAe7d,KAAK4Y,WAAW5Y,KAAK8d,eAAe9d,KAAK8Y,eAAe;QAC9G;;MAGF,IAAI9V,IAAIK,EAAEga;MACV,IAAIU,gBAAgBH,eAAe5a,KAAKA,EAAE/C,WAAWD,KAAK8U;MAC1D,IAAI7U,SAAS,MACT+d,UAAU,GACVjN,SAAS;MAEb,KAAKgM,UAAUQ,SAASvd,KAAK8Y,iBAAiBiF,gBAAgB;QAC5D9d,SAASD,KAAK+W,sBAAsB/W,KAAK2Y,QAAQ3Y,KAAK4Y,QAAQ,MAAM;QACpE5Y,KAAK6d,cAAc7d,KAAK2Y;QACxB3Y,KAAK8d,cAAc9d,KAAK4Y;;MAG1B,IAAIqF,UAAUje,KAAKke;MACnB,IAAIC,YAAYF,QAAQA,QAAQtb,SAAS;MACzC,IAAIQ,OAAOnD,KAAKke;MAEhB,IAAI5D,IAAIra;MAER,OAAOqa,GAAG;QACRnX,KAAK4D,QAAQuT;QAEb,KAAKvJ,QAAQ;UACXA,SAASuJ,EAAEvJ;;QAGbuJ,IAAIA,EAAErX;;MAGRjD,KAAK8U,OAAOsJ,MAAMrN,SAASA;MAE3B,KAAKgM,SAASa,aAAa;QACzBA,YAAY9I,OAAOsJ,MAAMrN,SAASA;;MAIpC,KAAK,IAAInO,IAAI,GAAGF,IAAIS,KAAKR,QAAQC,IAAIF,GAAGE,KAAK;QAC3C,IAAIO,KAAKP,MAAMqb,QAAQrb,IAAI;UACzB;;QAGFob,SAASpb;;MAGX,IAAIub,aAAale,QAAQ;QACvBD,KAAKmd,oBAAoBgB,WAAW,YAAY,OAAO,GAAG9a,GAAGL,GAAG/C;;MAGlE,KAAK,IAAI2C,IAAIqb,QAAQtb,SAAS,GAAGC,IAAIob,QAAQpb,KAAK;QAChD5C,KAAKmd,oBAAoBc,QAAQrb,IAAI,WAAW,QAAQ,GAAGS,GAAGL,GAAG/C;;MAGnE,KAAK,IAAI2C,IAAIO,KAAKR,SAAS,GAAGC,IAAIob,QAAQpb,KAAK;QAC7C5C,KAAKmd,oBAAoBha,KAAKP,IAAI,YAAY,QAAQ,GAAGS,GAAGL,GAAGmb;;MAGjE,IAAIA,aAAale,QAAQ;QACvBD,KAAKmd,oBAAoBld,QAAQ,aAAa,OAAO,GAAGoD,GAAGL,GAAGmb;;MAGhE1E,aAAaA,UAAUS,eAAeqD,OAAOR,SAAS9c,UAAUD,MAAM4d,eAAeG,iBAAiB/d;;IAUxGJ,mBAAmBoD,GAAG+Z;MACpB,IAAI9c,SAAS,MACTwZ,YAAYzZ,KAAKsZ,YACjBjW,IAAIrD,KAAKgd,iBAAiB;MAE9B,KAAKD,OAAO;QACV9c,SAASD,KAAK+W,sBAAsB1T,EAAE0E,GAAG1E,EAAE2E,GAAG,MAAM;QAEpDhI,KAAKmd,oBAAoBld,QAAQ,YAAY,OAAO,GAAGoD,GAAGL;;MAG5DyW,aAAaA,UAAUmB,mBAAmB5X,GAAG+Z,SAAS9c,UAAUD;;IAclEJ,oBAAoBK,QAAQJ,MAAMC,SAASue,WAAWhb,GAAG0U,aAAaK;MAEpE,KAAKnY,WAAWH,YAAYG,OAAOuB,iBAAiB3B,OAAO;QACzD;;MAUF,IAAI0C,MAAM,IAAIqV,WAAW/X,MAAMC,SAAS,OAAOuD,EAAE0E,GAAG1E,EAAE2E,GAAG+P,aAAasG,WAAWA,cAAcre,KAAKoZ,qBAAqBiF,eAAe,GAAGhb,EAAE6U,MAAM7U,EAAE8U,MAAMC;MAC3JnY,OAAOwB,cAAcc;;;EAyGzB,SAASsM,aAAanE,QAAQ,GAAGC,SAAS;IACxC,IAAIvC;IAEJ,IAAIrD,OAAO6J,aAAatC,aAAavH,OAAO6J,SAASC,iBAAiBvC,WAAW;MAC/ElE,IAAIrD,OAAO6J,SAASC;;IAGtB,IAAIyP,mBAAmB;MACrBlW,IAAI,IAAIkW;;IAGV,IAAIlW,MAAMkE,WAAW;MACnBlE,EAAEsC,QAAQA;MACVtC,EAAEuC,SAASA;MACX,OAAOvC;;IAGT,MAAM;;QA0CFmW;IACJ3e,YAAY4e;MAMVxe,KAAKye,aAAaD,MAAMC;MAMxBze,KAAK0e,SAASF;MAMdxe,KAAK2e,UAAU;MAOf3e,KAAKqE,aAAa;MAElB,IAAIrE,KAAKye,aAAa,GAAG;QACvBD,MAAMrd,iBAAiB,kBAAkBnB,KAAK4e,YAAYpY,KAAKxG;;;IAUnEJ;MACE,IAAII,KAAKye,aAAa,GAAG;QACvB;;MAGF,IAAI3J,SAAS9U,KAAK2e,SACdH,QAAQxe,KAAK0e;MAEjB,KAAK5J,QAAQ;QACXA,SAAS9U,KAAK2e,UAAU9P;QACxBiG,OAAOpK,QAAQ8T,MAAMK;QACrB/J,OAAOnK,SAAS6T,MAAMM;;MAGxB,IAAIN,MAAMC,cAAc,KAAKD,MAAMO,gBAAgB/e,KAAKqE,WAAW;QACjE,MAAMwH,MAAMiJ,OAAOrF,WAAW;QAC9B5D,IAAI6D,UAAU,GAAG,GAAGoF,OAAOpK,OAAOoK,OAAOnK;QACzCkB,IAAI6C,UAAU8P,OAAO,GAAG,GAAG1J,OAAOpK,OAAOoK,OAAOnK;QAChD3K,KAAKqE,YAAYma,MAAMO;;MAGzB,OAAOjK;;IAOTlV;MACEI,KAAKye,aAAa;;;QA6DhBO,eAAe1O;IACnB1Q,YAAYqf;MACVtb;MASA,WAAWsb,eAAe,UAAU;QAClCjf,KAAKkf,QAAQpQ,SAASC,cAAc;QACpC/O,KAAKkf,MAAMC,MAAMF;aACZ;QACLjf,KAAKkf,QAAQD;;MAUfjf,KAAKof,aAAa;MAOlBpf,KAAKmR,oBAAoBb,cAAc4E;;IAGzCtV;MACE,IAAIsf,QAAQlf,KAAKkf;MACjB,IAAI1J,aAAaxV,KAAK8N,eAAeoR,UAAUA,MAAMG,gBAAgBH,MAAMzP,cAAcyP,MAAMT,cAAc;MAC7G,UAAUze,KAAKmK,WAAWnK,KAAKoK,QAAQ,KAAKpK,KAAKgJ,UAAU,KAAKhJ,KAAKiJ,UAAU,KAAKuM;;IAGtF5V,KAAKiM,KAAKyF,cAAc;MACtB,IAAI3N,MAAMoM,KAAKlE,KAAKyF,cAAc;QAChC,OAAO;;MAGT,IAAIgO,MAAMtf,KAAKkf,OACXnU,OAAO/K,KAAKof;MAEhB,IAAIE,eAAef,aAAa;QAC9Be,MAAMA,IAAIC;;MAGZ,IAAID,OAAO,MAAM;QACf,OAAO;;MAGT,IAAIvU,MAAM;QAER,IAAIE,KAAKF,KAAKhD,GACVmD,KAAKH,KAAK/C,GACVmD,KAAKF,KAAKF,KAAKL,OACfU,KAAKF,KAAKH,KAAKJ,QACf5C,IAAI,GACJC,IAAI,GACJoI,IAAIkP,IAAI5U,OACR2F,IAAIiP,IAAI3U;QAEZ,IAAIM,KAAK,GAAG;UACVlD,KAAKkD;UACLA,KAAK;;QAGP,IAAIE,KAAKiF,GAAG;UACVjF,KAAKiF;;QAGP,IAAIlF,KAAK,GAAG;UACVlD,KAAKkD;UACLA,KAAK;;QAGP,IAAIE,KAAKiF,GAAG;UACVjF,KAAKiF;;QAGPxE,IAAI6C,UAAU4Q,KAAKrU,IAAIC,IAAIC,KAAKF,IAAIG,KAAKF,IAAInD,GAAGC,GAAGmD,KAAKF,IAAIG,KAAKF;aAC5D;QACLW,IAAI6C,UAAU4Q,KAAK,GAAG;;MAGxB,OAAO;;IAmCT1f;MACE,IAAImL,OAAOpH,MAAM0J;MAEjB,IAAItC,MAAM;QACR,OAAOA;;MAGT,IAAImU,QAAQlf,KAAKkf,OACb7b,IAAIrD,KAAKof,cAAcF;MAC3B,IAAI1J,aAAa0J,UAAUA,MAAMG,gBAAgBH,MAAMzP,cAAcyP,MAAMT,cAAc;MACzF,OAAOjJ,aAAaxV,KAAKiR,WAAWhJ,UAAU,GAAG,GAAG5E,EAAEqH,OAAOrH,EAAEsH,UAAU;;IAS3E/K,MAAM4f;MACJ,IAAIF,MAAMtf,KAAKkf;MAEf,IAAII,OAAO,QAAQE,QAAQ,MAAM;QAC/BF,MAAMA,IAAIG;;MAGZ,IAAIC,MAAM,IAAIV,OAAOM;MAErB,IAAItf,KAAKof,YAAY;QACnBM,IAAIN,aAAapf,KAAKof,WAAWrc;;MAGnC/C,KAAKoT,YAAYsM;MAEjB,OAAOA;;;QAqDLC,eAAerP;IACnB1Q,YAAYggB,aAAaC;MACvBlc;MASA3D,KAAK8f,eAAe;MAOpB9f,KAAK+f,mBAAmB;MAQxB/f,KAAK8D,SAAS;MAOd9D,KAAK4f,cAAcA;MAUnB5f,KAAKggB,wBAAwB;MAgB7BhgB,KAAK4E,YAAY;MAQjB5E,KAAKigB,aAAa;MAQlBjgB,KAAKkgB,gBAAgB;MAQrBlgB,KAAKmgB,eAAe;MAQpBngB,KAAKmR,oBAAoBb,cAAc2E;MAEvC,IAAI4K,oBAAoB,MAAM;QAC5B7f,KAAKogB,YAAYP;;;IAIrBjgB;MACE,IAAI4V,aAAaxV,KAAK8N,eAAe9N,KAAK4f,YAAYS;MACtD,UAAUrgB,KAAKmK,WAAWnK,KAAKoK,QAAQ,KAAKpK,KAAKgJ,UAAU,KAAKhJ,KAAKiJ,UAAU,KAAKuM;;IAGtF5V,KAAKiM,KAAKyF;MACR,IAAI3N,MAAMoM,KAAKlE,KAAKyF,cAAc;QAChC,OAAO;;MAGTtR,KAAKsgB;MAEL,IAAIjd,IAAIrD,KAAK4f,YAAYW,SAASvgB,KAAKkgB,gBAAgB;MAEvD,KAAK7c,GAAG;QACN,OAAO;;MAGT,IAAI0H,OAAO1H,EAAE0H;MAEb,IAAIA,KAAKL,SAASK,KAAKJ,QAAQ;QAC7BkB,IAAI6C,UAAUrL,EAAE6b,OAAOnU,KAAKhD,GAAGgD,KAAK/C,GAAG+C,KAAKL,OAAOK,KAAKJ,SAAStH,EAAEgG,OAAOhG,EAAEiG,MAAMyB,KAAKL,OAAOK,KAAKJ;;MAGrG,OAAO;;IA4BT/K;MACEI,KAAK8D,SAAS;;IAQhBlE;MACEI,KAAK8D,SAAS;;IAShBlE,YAAYigB;MACV7f,KAAK8D,SAAS;MACd9D,KAAKmgB,eAAe;MAEpBngB,KAAKwgB,MAAMX;;IASbjgB,YAAYigB;MACV7f,KAAK8D,SAAS;MAEd9D,KAAKwgB,MAAMX;;IASbjgB,QAAQgH;MACN,IAAI6Z,MAAMzgB,KAAK4E,aAAa5E,KAAK4f,YAAYhb;MAC7C,IAAI0V,IAAImG,OAAO7Z,QAAQ,OAAOA,QAAQ,MAAO6Z,OAAO;MAEpDzgB,KAAKsgB,gBAAgBhG;;IAYvB1a;MAEE,OAAO+D,MAAM0J,eAAerN,KAAK4f,YAAYc,eAAe1gB,KAAK8f,cAAc9f,KAAKiR;;IAQtFrR;MACE,OAAOI,KAAKoT,YAAY,IAAIuM,OAAO3f,KAAK4f;;IAS1ChgB,YAAYyD;MACVM,MAAMyP,YAAY/P;MAElBA,EAAEyc,eAAe9f,KAAK8f;MACtBzc,EAAE0c,mBAAmB/f,KAAK+f;MAC1B1c,EAAES,SAAS9D,KAAK8D;MAChBT,EAAE2c,wBAAwBhgB,KAAKggB;MAC/B3c,EAAEuB,YAAY5E,KAAK4E;MACnBvB,EAAE4c,aAAajgB,KAAKigB;MACpB5c,EAAE6c,gBAAgBlgB,KAAKkgB;MACvB7c,EAAE8c,eAAengB,KAAKmgB;MACtB,OAAO9c;;IAGTzD,MAAMkU;MACJ,KAAK9T,KAAK8D,QAAQ;QAChB,KAAK9D,KAAKmgB,cAAc;UACtBngB,KAAK2gB,QAAQ7M,UAAUA,OAAOhN;;QAGhC9G,KAAKmgB,eAAe;;MAGtBxc,MAAMqC,MAAM8N;;IASdlU,gBAAgBghB,aAAa;MAC3B,IAAIC,YAAY7gB,KAAKigB;MACrB,IAAInc,SAAS9D,KAAK8D;MAClB,IAAIgd,QAAQ9gB,KAAKkgB;MAEjB,IAAIW,WAAW;QACb,IAAIE,QAAQF,UAAUE,SAAS;QAC/B,IAAIC,YAAYhhB,KAAKggB;QACrB,IAAItd,IAAIme,UAAUI,OAAOte;QAEzB,IAAIqe,YAAYJ,aAAaG,SAASre,GAAG;UACvC,IAAIwe,OAAOL,UAAUK;UAErB,IAAIlhB,KAAKmhB,sBAAsBN,WAAWC,OAAOhd,QAAQod,MAAMxe,IAAI,IAAI;YAErE;iBACK,IAAIwe,MAAM;YAEf,OAAOlhB,KAAKwgB,MAAMU,MAAMN,cAAcle,IAAIse,aAAaD;iBAClD;YAEL/gB,KAAK8D,SAAS;YACdkd,YAAYH,UAAUI,OAAOte,SAAS;;eAEnC;UACLqe,aAAaJ,aAAaG;;QAG5B/gB,KAAKggB,wBAAwBgB;QAC7BhhB,KAAKkgB,gBAAgBW,UAAUI,OAAOD,YAAY;aAC7C;QACLF,QAAQ9gB,KAAKkgB,iBAAiBU;QAC9B,IAAIle,IAAI1C,KAAK4f,YAAYwB;QAEzB,IAAIN,SAASpe,KAAKA,IAAI,GAAG;UACvB,KAAK1C,KAAKmhB,sBAAsBN,WAAWC,OAAOhd,QAAQpB,IAAI,IAAI;YAEhE,KAAK1C,KAAKkgB,iBAAiBxd,MAAMA,GAAG;cAClC,OAAO1C,KAAKsgB;;;;;MAMpBQ,QAAQ9gB,KAAKkgB,gBAAgB;MAE7B,IAAIlgB,KAAK8f,gBAAgBgB,OAAO;QAC9B9gB,KAAK8f,eAAegB;QACpB9gB,KAAKyB,cAAc;;;IAcvB7B,sBAAsBihB,WAAWC,OAAOhd,QAAQod,MAAMG;MACpD,IAAItgB,OAAO8f,YAAYA,UAAU9f,OAAO;MAExC,IAAIf,KAAKwB,iBAAiB,iBAAiB;QACzC,IAAIe,MAAM,IAAI5C,MAAM;QACpB4C,IAAIxB,OAAOA;QACXwB,IAAI2e,OAAOA;QACXlhB,KAAKyB,cAAcc;;MAIrB,IAAI+e,UAAUthB,KAAKigB,cAAcY,aAAa7gB,KAAKkgB,iBAAiBY;MAEpE,KAAKQ,YAAYxd,UAAU9D,KAAK8D,QAAQ;QACtC9D,KAAKggB,wBAAwBqB;QAC7BC,UAAU;;MAGZ,OAAOA;;IAUT1hB,MAAMigB,kBAAkBiB,QAAQ;MAC9B9gB,KAAKggB,wBAAwB;MAE7B,IAAIuB,MAAM1B,mBAAmB;QAC3B,IAAIxd,OAAOrC,KAAK4f,YAAY4B,aAAa3B;QAEzC,IAAIxd,MAAM;UACRrC,KAAKigB,aAAa5d;UAClBrC,KAAK+f,mBAAmBF;UAExB7f,KAAKsgB,gBAAgBQ;;aAElB;QACL9gB,KAAK+f,mBAAmB/f,KAAKigB,aAAa;QAC1CjgB,KAAKkgB,gBAAgBL;QAErB7f,KAAKsgB;;;;QAgELmB,mBAAmBtM;IACvBvV,YAAY8hB,OAAO,IAAI9B,cAAc;MACnCjc;MAOA3D,KAAK0hB,OAAOA;MAoBZ1hB,KAAK4f,cAAcA;MAUnB5f,KAAK2hB,aAAa;MAOlB3hB,KAAK4hB,gBAAgB;MAWrB5hB,KAAK6hB,aAAa;MAMlB7hB,KAAK8hB;QACHJ,MAAM;QACN9B,aAAa;QACb+B,YAAY;QACZC,eAAe;QACfC,YAAY;;MAQd7hB,KAAK+hB,YAAY;MAOjB/hB,KAAKgiB,cAAc;;IAGrBpiB,KAAKiM,KAAKyF;MACR,IAAItR,KAAKuR,UAAU1F,KAAKyF,cAAc;QACpC;;MAGFtR,KAAKiiB;MAELte,MAAMoM,KAAKlE,KAAKyF;;IAGlB1R;MACEI,KAAKkiB;MAEL,OAAOve,MAAM0J;;IAGfzN;MACE,IAAI4V,aAAaxV,KAAK8N,eAAe9N,KAAK4f,eAAe5f,KAAK4f,YAAYS,YAAYrgB,KAAK0hB;MAC3F,UAAU1hB,KAAKmK,WAAWnK,KAAKoK,QAAQ,KAAKpK,KAAKgJ,WAAW,KAAKhJ,KAAKiJ,WAAW,KAAKuM;;IAGxF5V;MACE,OAAOI,KAAKoT,YAAY,IAAIqO,WAAWzhB,KAAK0hB,MAAM1hB,KAAK4f;;IAOzDhgB;IAMAA;IAMAA;IAMAA;IAMAA;IAEAA;MACEI,KAAKkiB;;IASPtiB,YAAYyD;MACVM,MAAMyP,YAAY/P;MAElBA,EAAEse,aAAa3hB,KAAK2hB;MACpBte,EAAEue,gBAAgB5hB,KAAK4hB;MACvBve,EAAEwe,aAAa7hB,KAAK6hB;MACpB,OAAOxe;;IAUTzD,eAAeuiB,WAAWvC;MACxB,IAAIxX,GACA/E,IAAIuc,YAAY4B,aAAaW;MAEjC,KAAK9e,GAAG;QACN8e,cAAc/Z,IAAI+Z,UAAUC,kBAAkBD,cAAc/Z,IAAI+Z,UAAUE,mBAAmBja,IAAI;QAEjG,IAAIA,GAAG;UACL/E,IAAIuc,YAAY4B,aAAapZ;;;MAIjC,OAAO/E,KAAKA,EAAE4d,OAAO;;IAUvBrhB,UAAUuiB,WAAWvC;MACnB,IAAI5J,QAAQhW,KAAKsiB,eAAeH,WAAWvC;MAE3C,OAAO5J,SAAS,OAAOA,QAAQ4J,YAAYW,SAASvK;;IAStDpW,eAAe2iB;MACb,IAAIzB,QAAQ9gB,KAAKwiB,UAAU,KAAKD,OAAOviB,KAAKwiB,UAAU,KAAKD,OAAOviB,KAAKwiB,UAAU,KAAKD,OAAOA,GAAGhC,SAAS;MACzG,OAAOO,QAAQA,MAAM/V,KAAKJ,SAAS;;IASrC/K,eAAe2iB;MACb,IAAIzB,QAAQ9gB,KAAKwiB,UAAU,KAAKD,OAAOviB,KAAKwiB,UAAU,KAAKD,OAAOviB,KAAKwiB,UAAU,KAAKD,OAAOviB,KAAKwiB,UAAU,KAAKD,OAAOA,GAAGhC,SAAS;MACpI,OAAOO,QAAQA,MAAM/V,KAAKL,QAAQ;;IAGpC9K,MAAMkU;MACJ,IAAInI,QAAQ3L,KAAK2L;MACjBA,SAASA,MAAMvK,GAAG,aAAapB,KAAKkiB,aAAaliB,MAAM;MAEvD2D,MAAMqC,MAAM8N;;IAOdlU;MACE,IAAImI,IAAI,GACJC,IAAI,GACJ3E,IAAIrD,KAAK8hB,WACTW,SAAS,OACTC,SAAS1iB,KAAK6hB,YACdc,QAAQ3iB,KAAK2hB,YACbY,KAAKviB,KAAK4f;MACd,IAAIgD,OAAOnB,WAAWoB,aAClBvM,OAAOtW,KAAKoV,UACZ0N,aAAa,GACbC,UAAUzM,KAAK3T,QACfqgB;MAEJ,KAAK,IAAIpiB,KAAKyC,GAAG;QACf,IAAIA,EAAEzC,MAAMZ,KAAKY,IAAI;UACnByC,EAAEzC,KAAKZ,KAAKY;UACZ6hB,SAAS;;;MAIb,KAAKA,QAAQ;QACX;;MAGF,IAAIQ,aAAajjB,KAAKwiB,UAAU,KAAKD;MAErC,KAAKU,aAAaP,QAAQ;QACxBA,SAAS1iB,KAAKkjB,eAAeX;;MAG/B,KAAKI,OAAO;QACVA,QAAQ3iB,KAAKmjB,eAAeZ;;MAG9B,KAAK,IAAI3f,IAAI,GAAGF,IAAI1C,KAAK0hB,KAAK/e,QAAQC,IAAIF,GAAGE,KAAK;QAChD,IAAIuf,YAAYniB,KAAK0hB,KAAK0B,OAAOxgB;QAEjC,IAAIuf,cAAc,QAAQc,UAAU;UAClClb,KAAK2a;UACL;eACK,IAAIP,cAAc,QAAQA,cAAc,MAAM;UACnD,IAAIA,cAAc,QAAQniB,KAAK0hB,KAAK0B,OAAOxgB,IAAI,OAAO,MAAM;YAC1DA;;UAIFmF,IAAI;UACJC,KAAK2a;UACL;;QAGF,IAAI3M,QAAQhW,KAAKsiB,eAAeH,WAAWI;QAE3C,IAAIvM,SAAS,MAAM;UACjB;;QAGF,IAAI8M,aAAaC,SAAS;UACxBC,SAAS1M,KAAKwM;eACT;UACLxM,KAAKpU,KAAK8gB,SAASJ,KAAKjgB,SAASigB,KAAK5b,QAAQ,IAAI2Y;UAClDqD,OAAO/f,SAASjD;UAChB+iB;;QAGFC,OAAOpD,cAAc2C;QACrBS,OAAOK,YAAYrN;QACnBgN,OAAOjb,IAAIA;QACXib,OAAOhb,IAAIA;QACX8a;QACA/a,KAAKib,OAAO3V,YAAY3C,QAAQ1K,KAAK4hB;;MAGvC,OAAOmB,UAAUD,YAAY;QAE3BF,KAAK1gB,KAAK8gB,SAAS1M,KAAKtP;QACxBgc,OAAO/f,SAAS;QAChB8f;;MAGF,IAAIH,KAAKjgB,SAAS8e,WAAW6B,aAAa;QACxCV,KAAKjgB,SAAS8e,WAAW6B;;;;EAc/B7B,WAAW6B,cAAc;EASzB7B,WAAWoB;QAiELU,mBAAmBjT;IACvB1Q,YAAY4jB;MACV7f;MAEA,WAAW6f,gBAAgB,UAAU;QACnCA,cAAc1U,SAAS4J,eAAe8K;;MAGxCxjB,KAAKyQ,eAAe;MACpB,IAAI2N,QAAQoF,YAAYpF;MACxBA,MAAMqF,WAAW;MACjBrF,MAAMsF,kBAAkBtF,MAAMuF,wBAAwBvF,MAAMwF,oBAAoBxF,MAAMyF,qBAAqBzF,MAAM0F,mBAAmB;MAMpI9jB,KAAKwjB,cAAcA;MAOnBxjB,KAAK8hB,YAAY;MAQjB9hB,KAAK+hB,YAAY;MAQjB/hB,KAAKgiB,cAAc;;IAGrBpiB;MACE,OAAOI,KAAKwjB,eAAe;;IAG7B5jB,KAAKiM,KAAKyF;MAGR,OAAO;;IAOT1R;IAMAA;IAMAA;IAMAA;IAMAA;IAMAA;IAMAA;IAOAA;MACE,MAAM;;IAGRA,MAAMkU;MACJ,IAAInI,QAAQ3L,KAAK2L;MAEjB,IAAIA,SAAS,QAAQA,UAAU3L,KAAK+hB,WAAW;QAC7C/hB,KAAKgiB,eAAerW,MAAMrK,IAAI,WAAWtB,KAAKgiB;QAC9ChiB,KAAKgiB,cAAcrW,MAAMvK,GAAG,WAAWpB,KAAK+jB,gBAAgB/jB;QAC5DA,KAAK+hB,YAAYpW;;MAGnBhI,MAAMqC,MAAM8N;;IAQdlU,eAAe2C;MACb,IAAIc,IAAIrD,KAAKwjB;MAEb,KAAKngB,GAAG;QACN;;MAGF,IAAI+a,QAAQ/a,EAAE+a;MACd,IAAIvd,QAAQb,KAAKyX,4BAA4BzX,KAAKgR,SAC9CS,MAAM5Q,MAAMgI;MAChB,IAAImb,aAAanjB,MAAMsJ,UAAU,YAAY;MAE7C,IAAI6Z,cAAc5F,MAAM4F,YAAY;QAClC5F,MAAM4F,aAAaA;;MAGrB,KAAKnjB,MAAMsJ,SAAS;QAClB;;MAGF,IAAI8Z,WAAWjkB,KAAK8hB,WAChBoC,SAASD,YAAYA,SAASpb;MAClC,IAAIjI,IAAI;MAER,KAAKsjB,WAAWA,OAAOC,OAAO1S,MAAM;QAClC,IAAI2S,MAAM,aAAa3S,IAAI7L,IAAIhF,IAAI,KAAKA,IAAI,OAAO6Q,IAAI5L,IAAIjF,IAAI,KAAKA,IAAI,OAAO6Q,IAAIrJ,IAAIxH,IAAI,KAAKA,IAAI,OAAO6Q,IAAIpJ,IAAIzH,IAAI,KAAKA,IAAI,OAAO6Q,IAAInJ,KAAK,KAAM;QACtJ8V,MAAMvM,YAAYuM,MAAMiG,kBAAkBjG,MAAMkG,aAAalG,MAAMmG,cAAcH,MAAM,OAAO3S,IAAIlJ,KAAK,KAAM,KAAK;QAClH6V,MAAMoG,eAAeJ,MAAM,SAAS3S,IAAIlJ,KAAK,KAAM,KAAK;QAExD,KAAK0b,UAAU;UACbA,WAAWjkB,KAAK8hB,YAAY,IAAI5X,aAAa,MAAM;;QAGrD+Z,SAASpb,OAAO8J,KAAKlB;;MAGvB,IAAIwS,SAAS7Z,SAASvJ,MAAMuJ,OAAO;QACjCgU,MAAMqG,UAAU,MAAM5jB,MAAMuJ,QAAQxJ,IAAI,KAAKA;QAC7CqjB,SAAS7Z,QAAQvJ,MAAMuJ;;;;QAwJvBsa;IACJ9kB;MAaEI,KAAK2kB,UAAU;MAOf3kB,KAAK4kB,UAAU;MAMf5kB,KAAK6kB,eAAe;MAMpB7kB,KAAK8kB,kBAAkB;MAMvB9kB,KAAK+kB,cAAc;MAMnB/kB,KAAKglB,iBAAiB;MAMtBhlB,KAAKilB,QAAQ;MAMbjlB,KAAKklB,qBAAqB;MAQ1BllB,KAAKmlB,eAAe;MAMpBnlB,KAAKolB;MAOLplB,KAAKqlB;MAQLrlB,KAAKslB,SAAS;MAQdtlB,KAAKulB,cAAc;MAWnBvlB,KAAKwlB,UAAUxlB,KAAKylB;MAWpBzlB,KAAK6Y,WAAW7Y,KAAK+K;MAErB/K,KAAK0lB,KAAK1lB,KAAK2lB;MACf3lB,KAAK4lB,KAAK5lB,KAAK6lB;MACf7lB,KAAK8lB,KAAK9lB,KAAK+lB;MACf/lB,KAAKgmB,KAAKhmB,KAAKimB;MACfjmB,KAAKkmB,KAAKlmB,KAAKylB;MACfzlB,KAAK4F,IAAI5F,KAAKmmB;MACdnmB,KAAKuJ,IAAIvJ,KAAK+K;MACd/K,KAAKomB,KAAKpmB,KAAKqmB;MACfrmB,KAAKoI,IAAIpI,KAAKud;MACdvd,KAAK8E,IAAI9E,KAAKsmB;MACdtmB,KAAKumB,KAAKvmB,KAAKwmB;MACfxmB,KAAKymB,KAAKzmB,KAAK0mB;MACf1mB,KAAK2mB,KAAK3mB,KAAK4mB;MACf5mB,KAAK6mB,KAAK7mB,KAAK8mB;MACf9mB,KAAKuiB,KAAKviB,KAAK+mB;MACf/mB,KAAKgnB,KAAKhnB,KAAKinB;MACfjnB,KAAKknB,IAAIlnB,KAAKmnB;MACdnnB,KAAK+T,KAAK/T,KAAKonB;MACfpnB,KAAKqnB,KAAKrnB,KAAKsnB;MACftnB,KAAKunB,KAAKvnB,KAAKwnB;MACfxnB,KAAKynB,KAAKznB,KAAK0nB;MACf1nB,KAAK2nB,KAAK3nB,KAAK6Y;MACf7Y,KAAK4nB,KAAK5nB,KAAK6nB;MACf7nB,KAAK8nB,KAAK9nB,KAAK+nB;MACf/nB,KAAKgoB,KAAKhoB,KAAKioB;MACfjoB,KAAKkoB,KAAKloB,KAAKmoB;MACfnoB,KAAKooB,KAAKpoB,KAAKqoB;MACfroB,KAAKiB,IAAIjB,KAAKsoB;MACdtoB,KAAKud;;IAsBP3d,cAAc2J,GAAGgf,GAAG1iB,GAAGuE;MACrB,IAAIb,KAAK,QAAQ1D,KAAK,MAAM;QAC1BuE,QAAQme;QACR1iB,IAAI0D,IAAI;QACRgf,IAAIhf,KAAK,IAAI;QACbA,IAAIA,KAAK,KAAK;;MAGhB,IAAIa,SAAS,MAAM;QACjB,cAAcb,KAAKgf,KAAK1iB;aACnB;QACL,eAAe0D,KAAKgf,KAAK1iB,KAAKuE;;;IAoBlCxK,cAAc4oB,KAAKC,YAAYC,WAAWte;MACxC,IAAIA,SAAS,MAAM;QACjB,cAAcoe,MAAM,OAAOC,eAAeC;aACrC;QACL,cAAcF,MAAM,OAAOC,eAAeC,cAActe;;;IAa5Due;MACE3oB,KAAK4oB;MAEL,OAAO5oB,KAAKolB;;IAQdxlB;MACE,SAASI,KAAKolB,cAAcziB,UAAU3C,KAAKqlB,oBAAoB1iB;;IAajE/C,KAAKiM,KAAKxJ;MACRrC,KAAK4oB;MAEL,IAAIC,QAAQ7oB,KAAKolB;MACjB,MAAM1iB,IAAImmB,MAAMlmB;MAEhB,KAAK,IAAIC,IAAI5C,KAAKulB,aAAa3iB,IAAIF,GAAGE,KAAK;QACzCimB,MAAMjmB,GAAGkmB,KAAKjd,KAAKxJ;;;IAavBzC,WAAWiM;MACT7L,KAAK4oB;MAEL,IAAIC,OACAE,SAAS/oB,KAAKolB;MAClB,MAAM1iB,IAAIqmB,OAAOpmB;MAEjB,KAAK,IAAIC,IAAI5C,KAAKulB,aAAa3iB,IAAIF,GAAGE,KAAK;QAEzC,KAAKimB,QAAQE,OAAOnmB,IAAIomB,SAAS,OAAO;UACtCH,MAAMC,KAAKjd;;;;IAcjBjM,OAAOmI,GAAGC;MACR,OAAOhI,KAAK8I,OAAO,IAAImgB,OAAOlhB,GAAGC,IAAI;;IAcvCpI,OAAOmI,GAAGC;MACR,OAAOhI,KAAK8I,OAAO,IAAIogB,OAAOnhB,GAAGC;;IAgBnCpI,MAAMqL,IAAIC,IAAIC,IAAIC,IAAI+d;MACpB,OAAOnpB,KAAK8I,OAAO,IAAIsgB,MAAMne,IAAIC,IAAIC,IAAIC,IAAI+d;;IAsB/CvpB,IAAImI,GAAGC,GAAGmhB,QAAQE,YAAYC,UAAUC;MACtC,OAAOvpB,KAAK8I,OAAO,IAAI0gB,IAAIzhB,GAAGC,GAAGmhB,QAAQE,YAAYC,UAAUC;;IAejE3pB,iBAAiB6pB,KAAKC,KAAK3hB,GAAGC;MAC5B,OAAOhI,KAAK8I,OAAO,IAAI6gB,iBAAiBF,KAAKC,KAAK3hB,GAAGC;;IAiBvDpI,cAAcgqB,MAAMC,MAAMC,MAAMC,MAAMhiB,GAAGC;MACvC,OAAOhI,KAAK8I,OAAO,IAAIkhB,cAAcJ,MAAMC,MAAMC,MAAMC,MAAMhiB,GAAGC;;IAelEpI,KAAKmI,GAAGC,GAAGoI,GAAGC;MACZ,OAAOrQ,KAAK8I,OAAO,IAAImhB,KAAKliB,GAAGC,GAAGoI,GAAGC;;IAWvCzQ;MACE,OAAOI,KAAKqlB,oBAAoB1iB,SAAS3C,KAAK8I,OAAO,IAAIohB,eAAelqB;;IAW1EJ;MACEI,KAAKolB,cAAcziB,SAAS3C,KAAKqlB,oBAAoB1iB,SAAS3C,KAAKmlB,eAAe;MAClFnlB,KAAK6kB,eAAe7kB,KAAK8kB,kBAAkB9kB,KAAK4kB,UAAU5kB,KAAKilB,QAAQjlB,KAAK+kB,cAAc/kB,KAAKglB,iBAAiB;MAChHhlB,KAAKslB,SAAStlB,KAAKklB,qBAAqB;MACxC,OAAOllB;;IAYTJ,UAAU2T;MACR,OAAOvT,KAAKmqB,SAAS5W,QAAQ,IAAI6W,KAAK7W,SAAS;;IAsBjD3T,wBAAwByqB,QAAQC,QAAQC,IAAIC,IAAIvf,IAAIC;MAClD,OAAOlL,KAAKmqB,SAAS,IAAIC,OAAOK,eAAeJ,QAAQC,QAAQC,IAAIC,IAAIvf,IAAIC;;IAwB7EtL,wBAAwByqB,QAAQC,QAAQC,IAAIC,IAAIE,IAAIzf,IAAIC,IAAIyf;MAC1D,OAAO3qB,KAAKmqB,SAAS,IAAIC,OAAOQ,eAAeP,QAAQC,QAAQC,IAAIC,IAAIE,IAAIzf,IAAIC,IAAIyf;;IAiBrF/qB,gBAAgBsf,OAAO2L,YAAYhiB;MACjC,OAAO7I,KAAKmqB,SAAS,IAAIC,KAAK,MAAMvhB,QAAQiiB,OAAO5L,OAAO2L;;IAU5DjrB;MACE,OAAOI,KAAKsmB;;IAyBd1mB,eAAemrB,WAAWC,OAAO,GAAGC,SAAS,GAAGC,aAAa,IAAIC,cAAc;MAC7EnrB,KAAK4oB,oBAAoB;MAEzB5oB,KAAK6kB,eAAe7kB,KAAK2kB,UAAU,IAAIyG,YAAYL,WAAWC,MAAMC,QAAQC,YAAYC;MAExF,IAAInrB,KAAK4kB,SAAS;QAChB5kB,KAAK4kB,QAAQuG,cAAcA;;MAG7BnrB,KAAKklB,qBAAqBiG;MAC1B,OAAOnrB;;IAkBTJ,cAAcyrB,UAAUC,SAAS;MAC/BtrB,KAAK4oB,oBAAoB;MAEzB5oB,KAAK+kB,cAAc/kB,KAAK2kB,UAAU,IAAI4G,WAAWF,UAAUC;MAC3D,OAAOtrB;;IAaTJ,YAAY2T;MACV,OAAOvT,KAAKwrB,WAAWjY,QAAQ,IAAIkY,OAAOlY,SAAS;;IAwBrD3T,0BAA0ByqB,QAAQC,QAAQC,IAAIC,IAAIvf,IAAIC;MACpD,OAAOlL,KAAKwrB,WAAW,IAAIC,SAAShB,eAAeJ,QAAQC,QAAQC,IAAIC,IAAIvf,IAAIC;;IA2BjFtL,0BAA0ByqB,QAAQC,QAAQC,IAAIC,IAAIE,IAAIzf,IAAIC,IAAIyf;MAC5D,OAAO3qB,KAAKwrB,WAAW,IAAIC,SAASb,eAAeP,QAAQC,QAAQC,IAAIC,IAAIE,IAAIzf,IAAIC,IAAIyf;;IAgBzF/qB,kBAAkBsf,OAAO2L,aAAa;MAEpC,OAAO7qB,KAAKwrB,WAAW,IAAIC,SAASX,OAAO5L,OAAO2L;;IAUpDjrB;MACE,OAAOI,KAAKmnB;;IAcdvnB,cAAcmI,GAAGC,GAAGoI,GAAGC,GAAG8Y;MACxB,OAAOnpB,KAAK+nB,qBAAqBhgB,GAAGC,GAAGoI,GAAGC,GAAG8Y,QAAQA,QAAQA,QAAQA;;IAkBvEvpB,qBAAqBmI,GAAGC,GAAGoI,GAAGC,GAAGqb,UAAUC,UAAUC,UAAUC;MAC7D,OAAO7rB,KAAK8I,OAAO,IAAIgjB,UAAU/jB,GAAGC,GAAGoI,GAAGC,GAAGqb,UAAUC,UAAUC,UAAUC;;IA0B7EjsB,WAAWmI,GAAGC,GAAGmhB;MACf,OAAOnpB,KAAK8I,OAAO,IAAIijB,OAAOhkB,GAAGC,GAAGmhB;;IAkBtCvpB,YAAYmI,GAAGC,GAAGoI,GAAGC;MACnB,OAAOrQ,KAAK8I,OAAO,IAAIkjB,QAAQjkB,GAAGC,GAAGoI,GAAGC;;IAuB1CzQ,aAAamI,GAAGC,GAAGmhB,QAAQ8C,OAAOC,WAAWviB;MAC3C,OAAO3J,KAAK8I,OAAO,IAAIqjB,SAASpkB,GAAGC,GAAGmhB,QAAQ8C,OAAOC,WAAWviB;;IAiClE/J,OAAO+kB,SAASyH;MACdpsB,KAAKqlB,oBAAoBnjB,KAAKyiB;MAE9B3kB,KAAK2kB,UAAUA;MAEf,KAAKyH,OAAO;QACVpsB,KAAKslB,SAAS;;MAGhB,OAAOtlB;;IAwCTJ,WAAWwkB;MACT,IAAIuE,iBAAgB3oB,KAAK2lB,QAAQ3lB,KAAK6lB,QAAQ7lB,KAAKylB,kBAAkBzlB,KAAKimB,eAAejmB,KAAKqmB;MAC9F,IAAIgG,eAAc,GAAG,GAAG,GAAG,GAAG;MAC9B,IAAIzpB,IAAI;MACR,MAAMF,IAAI0hB,IAAIzhB;MACd,IAAI2pB;MACJ,IAAIvkB,IAAI,GACJC,IAAI;MACR,IAAIukB,SAAS7H,SAAS8H;MAEtB,OAAO5pB,IAAIF,GAAG;QACZ,IAAI0F,IAAIgc,IAAIhB,OAAOxgB;QACnB,IAAIhC,IAAI2rB,OAAOnkB;QACf,IAAIqkB,KAAK7rB,KAAK;QAEd,IAAIkE,IAAI6jB,aAAa8D;QAErB,KAAK3nB,KAAKlE,IAAI,GAAG;UACf,yBAAyBgC;;QAG3B,MAAM8pB,KAAKL,WAAWI;QAEtB,KAAKA,IAAI;UACP1kB,IAAIC,IAAI;;QAIVskB,OAAO3pB,SAAS;QAChBC;QACA,IAAI+pB,aAAa/rB,KAAK,IAAI,KAAK;QAE/B,KAAK,IAAIK,IAAI,GAAGA,IAAIyrB,IAAIzrB,KAAK;UAC3B,IAAI2rB,MAAML,OAAOnI,IAAIhB,OAAOxgB;UAC5B,IAAIiqB,OAAOD,OAAO,KAAK,IAAI;UAC3BA,OAAOA,MAAM,OAAO,IAAIL,OAAOnI,IAAIhB,OAAOxgB,IAAI;UAE9C,IAAI+pB,cAAc,GAAG;YACnBC,MAAMA,OAAO,IAAIL,OAAOnI,IAAIhB,OAAOxgB,IAAI;;UAGzCgqB,MAAMC,OAAOD,MAAM;UAEnB,IAAI3rB,IAAI,GAAG;YACT8G,IAAI6kB,OAAO7kB;iBACN;YACLC,IAAI4kB,OAAO5kB;;UAGbskB,OAAOrrB,KAAK2rB;UACZhqB,KAAK+pB;;QAGP7nB,EAAEgoB,MAAM9sB,MAAMssB;;MAGhB,OAAOtsB;;IAyCTJ;MACEI,KAAK4oB,oBAAoB;MAEzB5oB,KAAKulB,cAAcvlB,KAAKolB,cAAcziB;MACtC,OAAO3C;;IAWTJ;MACEI,KAAKulB,cAAc;MACnB,OAAOvlB;;IAQTJ;MACE,IAAIyD,IAAI,IAAIqhB;MACZrhB,EAAEshB,UAAU3kB,KAAK2kB;MACjBthB,EAAEuhB,UAAU5kB,KAAK4kB;MACjBvhB,EAAEwhB,eAAe7kB,KAAK6kB;MACtBxhB,EAAE0hB,cAAc/kB,KAAK+kB;MACrB1hB,EAAE6hB,qBAAqBllB,KAAKklB;MAC5B7hB,EAAE4hB,QAAQjlB,KAAKilB;MACf5hB,EAAE+hB,gBAAgBplB,KAAKolB,cAAc9hB;MACrCD,EAAE8hB,eAAenlB,KAAKmlB;MACtB9hB,EAAEgiB,sBAAsBrlB,KAAKqlB,oBAAoB/hB;MACjDD,EAAEiiB,SAAStlB,KAAKslB;MAChBjiB,EAAEkiB,cAAcvlB,KAAKulB;MACrB,OAAOliB;;IAQTzD;MACE,WAAWI,KAAKc,YAAYC;;IAQ9BnB,oBAAoBmtB;MAClB,IAAIlE,QAAQ7oB,KAAKolB,eACb4H,SAAShtB,KAAKqlB,qBACd4H,cAAcjtB,KAAKmlB;MAEvB,IAAInlB,KAAKslB,UAAU0H,OAAOrqB,QAAQ;QAChCkmB,MAAMlmB,SAASsqB;QAEfpE,MAAM3mB,KAAKwiB,SAASwI;QACpB,MAAMxqB,IAAIsqB,OAAOrqB,QACXwqB,KAAKtE,MAAMlmB;QACjBkmB,MAAMlmB,SAASwqB,KAAKzqB;QAEpB,KAAK,IAAIE,IAAI,GAAGA,IAAIF,GAAGE,KAAK;UAC1BimB,MAAMjmB,IAAIuqB,MAAMH,OAAOpqB;;QAGzB,IAAI5C,KAAKilB,OAAO;UACd4D,MAAM3mB,KAAKlC,KAAKilB;;QAGlB,IAAIjlB,KAAK4kB,SAAS;UAEhB,IAAI5kB,KAAK+kB,gBAAgB/kB,KAAKglB,gBAAgB;YAC5C6D,MAAM3mB,KAAKlC,KAAK+kB;;UAGlB,IAAI/kB,KAAK6kB,iBAAiB7kB,KAAK8kB,iBAAiB;YAC9C+D,MAAM3mB,KAAKlC,KAAK6kB;;UAGlB,IAAIkI,QAAQ;YACV/sB,KAAKglB,iBAAiBhlB,KAAK+kB;YAC3B/kB,KAAK8kB,kBAAkB9kB,KAAK6kB;;UAG9BgE,MAAM3mB,KAAKlC,KAAK4kB;;QAGlB5kB,KAAKslB,SAAS;;MAGhB,IAAIyH,QAAQ;QACVC,OAAOrqB,SAAS;QAChB3C,KAAKmlB,eAAe0D,MAAMlmB;;;IAQ9B/C,SAAS+X;MACP3X,KAAK4oB,oBAAoB;MAEzB5oB,KAAK2kB,UAAU3kB,KAAKilB,QAAQtN;MAC5B,OAAO3X;;IAQTJ,WAAWwtB;MACTptB,KAAK4oB,oBAAoB;MAEzB,IAAI5oB,KAAK2kB,UAAU3kB,KAAK4kB,UAAUwI,QAAQ;QACxCA,OAAOjC,cAAcnrB,KAAKklB;;MAG5B,OAAOllB;;IAGTkpB;MACE,OAAOA;;IAGTD;MACE,OAAOA;;IAGTG;MACE,OAAOA;;IAGTI;MACE,OAAOA;;IAGTG;MACE,OAAOA;;IAGTK;MACE,OAAOA;;IAGTC;MACE,OAAOA;;IAGTC;MACE,OAAOA;;IAGTmD;MACE,OAAOA;;IAGTjD;MACE,OAAOA;;IAGTqB;MACE,OAAOA;;IAGTL;MACE,OAAOA;;IAGTG;MACE,OAAOA;;IAGTO;MACE,OAAOA;;IAGTC;MACE,OAAOA;;IAGTC;MACE,OAAOA;;IAGTG;MACE,OAAOA;;;QAWLjD;IACJtpB,YAAYmI,GAAGC;MAIbhI,KAAK+H,IAAIA;MAKT/H,KAAKgI,IAAIA;;IAQXpI,KAAKiM;MACHA,IAAIga,OAAO7lB,KAAK+H,GAAG/H,KAAKgI;;;QAYtBihB;IACJrpB,YAAYmI,GAAGC;MAIbhI,KAAK+H,IAAIA;MAKT/H,KAAKgI,IAAIA;;IAOXpI,KAAKiM;MACHA,IAAI8Z,OAAO3lB,KAAK+H,GAAG/H,KAAKgI;;;QAetBohB;IACJxpB,YAAYqL,IAAIC,IAAIC,IAAIC,IAAI+d;MAI1BnpB,KAAKiL,KAAKA;MAKVjL,KAAKkL,KAAKA;MAKVlL,KAAKmL,KAAKA;MAKVnL,KAAKoL,KAAKA;MAKVpL,KAAKmpB,SAASA;;IAQhBvpB,KAAKiM;MACHA,IAAIka,MAAM/lB,KAAKiL,IAAIjL,KAAKkL,IAAIlL,KAAKmL,IAAInL,KAAKoL,IAAIpL,KAAKmpB;;;QAgBjDK;IACJ5pB,YAAYmI,GAAGC,GAAGmhB,QAAQE,YAAYC,UAAUC,gBAAgB;MAI9DvpB,KAAK+H,IAAIA;MAKT/H,KAAKgI,IAAIA;MAKThI,KAAKmpB,SAASA;MAKdnpB,KAAKqpB,aAAaA;MAKlBrpB,KAAKspB,WAAWA;MAKhBtpB,KAAKupB,gBAAgBA;;IAQvB3pB,KAAKiM;MACHA,IAAIsa,IAAInmB,KAAK+H,GAAG/H,KAAKgI,GAAGhI,KAAKmpB,QAAQnpB,KAAKqpB,YAAYrpB,KAAKspB,UAAUtpB,KAAKupB;;;QAcxEI;IACJ/pB,YAAY6pB,KAAKC,KAAK3hB,GAAGC;MAKvBhI,KAAKypB,MAAMA;MAMXzpB,KAAK0pB,MAAMA;MAMX1pB,KAAK+H,IAAIA;MAMT/H,KAAKgI,IAAIA;;IAQXpI,KAAKiM;MACHA,IAAI4Z,iBAAiBzlB,KAAKypB,KAAKzpB,KAAK0pB,KAAK1pB,KAAK+H,GAAG/H,KAAKgI;;;QAgBpDgiB;IACJpqB,YAAYgqB,MAAMC,MAAMC,MAAMC,MAAMhiB,GAAGC;MAIrChI,KAAK4pB,OAAOA;MAKZ5pB,KAAK6pB,OAAOA;MAKZ7pB,KAAK8pB,OAAOA;MAKZ9pB,KAAK+pB,OAAOA;MAKZ/pB,KAAK+H,IAAIA;MAKT/H,KAAKgI,IAAIA;;IAQXpI,KAAKiM;MACHA,IAAIoa,cAAcjmB,KAAK4pB,MAAM5pB,KAAK6pB,MAAM7pB,KAAK8pB,MAAM9pB,KAAK+pB,MAAM/pB,KAAK+H,GAAG/H,KAAKgI;;;QAczEiiB;IACJrqB,YAAYmI,GAAGC,GAAGoI,GAAGC;MAInBrQ,KAAK+H,IAAIA;MAKT/H,KAAKgI,IAAIA;MAKThI,KAAKoQ,IAAIA;MAKTpQ,KAAKqQ,IAAIA;;IAQXzQ,KAAKiM;MACHA,IAAId,KAAK/K,KAAK+H,GAAG/H,KAAKgI,GAAGhI,KAAKoQ,GAAGpQ,KAAKqQ;;;QAUpC6Z;IACJtqB;IAOAA,KAAKiM;MACHA,IAAIwa;;;QAUFgH;IACJztB;IAOAA,KAAKiM;MACHA,IAAI8N;;;QAYFyQ;IACJxqB,YAAYwe,OAAOvV;MAKjB7I,KAAKoe,QAAQA;MAKbpe,KAAK6I,SAASA;MAKd7I,KAAKgpB,OAAO;;IAQdppB,KAAKiM;MACH,KAAK7L,KAAKoe,OAAO;QACf;;MAGFvS,IAAI6L,YAAY1X,KAAKoe;MACrB,IAAI3M,MAAMzR,KAAK6I;MAEf,IAAI4I,KAAK;QACP5F,IAAI8D;QACJ9D,IAAIgG,UAAUJ,IAAI7L,GAAG6L,IAAI5L,GAAG4L,IAAIrJ,GAAGqJ,IAAIpJ,GAAGoJ,IAAInJ,IAAImJ,IAAIlJ;;MAGxDsD,IAAI8L;MAEJ,IAAIlG,KAAK;QACP5F,IAAImE;;;IAgBRpQ,eAAeyqB,QAAQC,QAAQC,IAAIC,IAAIvf,IAAIC;MACzC,IAAI7H,IAAIrD,KAAKoe,QAAQsG,SAAS4I,KAAKC,qBAAqBhD,IAAIC,IAAIvf,IAAIC;MAEpE,MAAMxI,IAAI2nB,OAAO1nB;MAEjB,KAAK,IAAIC,IAAI,GAAGA,IAAIF,GAAGE,KAAK;QAC1BS,EAAEmqB,aAAalD,OAAO1nB,IAAIynB,OAAOznB;;MAGnCS,EAAExC;QACAwpB,QAAAA;QACAC,QAAAA;QACAC,IAAAA;QACAC,IAAAA;QACAvf,IAAAA;QACAC,IAAAA;QACArL,MAAM;;MAER,OAAOG;;IAiBTJ,eAAeyqB,QAAQC,QAAQC,IAAIC,IAAIE,IAAIzf,IAAIC,IAAIyf;MACjD,IAAItnB,IAAIrD,KAAKoe,QAAQsG,SAAS4I,KAAKG,qBAAqBlD,IAAIC,IAAIE,IAAIzf,IAAIC,IAAIyf;MAE5E,MAAMjoB,IAAI2nB,OAAO1nB;MAEjB,KAAK,IAAIC,IAAI,GAAGA,IAAIF,GAAGE,KAAK;QAC1BS,EAAEmqB,aAAalD,OAAO1nB,IAAIynB,OAAOznB;;MAGnCS,EAAExC;QACAwpB,QAAAA;QACAC,QAAAA;QACAC,IAAAA;QACAC,IAAAA;QACAE,IAAAA;QACAzf,IAAAA;QACAC,IAAAA;QACAyf,IAAAA;QACA9qB,MAAM;;MAER,OAAOG;;IAWTJ,OAAOsf,OAAO2L,aAAa;MACzB,IAAI3L,MAAMG,gBAAgBH,MAAMzP,cAAcyP,MAAMT,cAAc,GAAG;QACnE,IAAIpb,IAAIrD,KAAKoe,QAAQsG,SAAS4I,KAAKI,cAAcxO,OAAO2L;QAExDxnB,EAAExC;UACAqe,OAAAA;UACA2L,YAAAA;UACAhrB,MAAM;;;MAIV,OAAOG;;;QAaLyrB,eAAerB;IACnBxqB,YAAYwe,OAAO+M;MACjBxnB;MAMA3D,KAAKoe,QAAQA;MAKbpe,KAAKmrB,cAAcA;MAKnBnrB,KAAKgpB,OAAO;;IASdppB,KAAKiM;MACH,KAAK7L,KAAKoe,OAAO;QACf;;MAGFvS,IAAI8hB,cAAc3tB,KAAKoe;MAEvB,IAAIpe,KAAKmrB,aAAa;QACpBtf,IAAI8D;QACJ9D,IAAIgE,aAAa,GAAG,GAAG,GAAG,GAAG,GAAG;;MAGlChE,IAAIuhB;MAEJ,IAAIptB,KAAKmrB,aAAa;QACpBtf,IAAImE;;;;QAgBJob;IACJxrB,YAAY8K,QAAQ,GAAGsgB,OAAO,QAAQC,SAAS,SAASC,aAAa,IAAIC,cAAc;MAIrFnrB,KAAK0K,QAAQA;MAMb1K,KAAKgrB,OAAOA;MAMZhrB,KAAKirB,SAASA;MAKdjrB,KAAKkrB,aAAaA;MAKlBlrB,KAAKmrB,cAAcA;MAKnBnrB,KAAKgpB,OAAO;;IAQdppB,KAAKiM;MACHA,IAAI+hB,YAAY5tB,KAAK0K;MACrBmB,IAAIgiB,UAAUtM,MAAMvhB,KAAKgrB,QAAQhrB,KAAKgrB,OAAOtG,SAASoJ,iBAAiB9tB,KAAKgrB;MAC5Enf,IAAIkiB,WAAWxM,MAAMvhB,KAAKirB,UAAUjrB,KAAKirB,SAASvG,SAASsJ,mBAAmBhuB,KAAKirB;MACnFpf,IAAIqf,aAAalrB,KAAKkrB;MACtBrf,IAAIsf,cAAcnrB,KAAKmrB;;;QAYrBI;IACJ3rB,YAAYyrB,eAAeC,SAAS;MAIlCtrB,KAAKqrB,WAAWA;MAKhBrrB,KAAKsrB,SAASA;;IAQhB1rB,KAAKiM;MACH,IAAIA,IAAIoiB,aAAa;QAEnBpiB,IAAIoiB,YAAYjuB,KAAKqrB;QACrBxf,IAAIqiB,iBAAiBluB,KAAKsrB;;;;QAmB1BQ;IACJlsB,YAAYmI,GAAGC,GAAGoI,GAAGC,GAAGqb,UAAUC,UAAUC,UAAUC;MAIpD7rB,KAAK+H,IAAIA;MAKT/H,KAAKgI,IAAIA;MAKThI,KAAKoQ,IAAIA;MAKTpQ,KAAKqQ,IAAIA;MAKTrQ,KAAK0rB,WAAWA;MAKhB1rB,KAAK2rB,WAAWA;MAKhB3rB,KAAK4rB,WAAWA;MAKhB5rB,KAAK6rB,WAAWA;;IAQlBjsB,KAAKiM;MACH,IAAIsiB,OAAOnuB,KAAKoQ,IAAIpQ,KAAKqQ,IAAIrQ,KAAKoQ,IAAIpQ,KAAKqQ,KAAK;MAChD,IAAI+d,MAAM,GACNC,MAAM,GACNC,MAAM,GACNC,MAAM;MACV,IAAIxmB,IAAI/H,KAAK+H,GACTC,IAAIhI,KAAKgI,GACToI,IAAIpQ,KAAKoQ,GACTC,IAAIrQ,KAAKqQ;MACb,IAAIme,MAAMxuB,KAAK0rB,UACX+C,MAAMzuB,KAAK2rB,UACX+C,MAAM1uB,KAAK4rB,UACX+C,MAAM3uB,KAAK6rB;MAEf,IAAI2C,MAAM,GAAG;QACXA,OAAOJ,OAAO;;MAGhB,IAAII,MAAML,KAAK;QACbK,MAAML;;MAGR,IAAIM,MAAM,GAAG;QACXA,OAAOJ,OAAO;;MAGhB,IAAII,MAAMN,KAAK;QACbM,MAAMN;;MAGR,IAAIO,MAAM,GAAG;QACXA,OAAOJ,OAAO;;MAGhB,IAAII,MAAMP,KAAK;QACbO,MAAMP;;MAGR,IAAIQ,MAAM,GAAG;QACXA,OAAOJ,OAAO;;MAGhB,IAAII,MAAMR,KAAK;QACbQ,MAAMR;;MAGRtiB,IAAI8Z,OAAO5d,IAAIqI,IAAIqe,KAAKzmB;MACxB6D,IAAIka,MAAMhe,IAAIqI,IAAIqe,MAAMJ,KAAKrmB,IAAIymB,MAAMJ,KAAKtmB,IAAIqI,GAAGpI,IAAIymB,KAAKA;MAC5D5iB,IAAIga,OAAO9d,IAAIqI,GAAGpI,IAAIqI,IAAIqe;MAC1B7iB,IAAIka,MAAMhe,IAAIqI,IAAIse,MAAMJ,KAAKtmB,IAAIqI,IAAIqe,MAAMJ,KAAKvmB,IAAIqI,IAAIse,KAAK1mB,IAAIqI,GAAGqe;MACpE7iB,IAAIga,OAAO9d,IAAI4mB,KAAK3mB,IAAIqI;MACxBxE,IAAIka,MAAMhe,IAAI4mB,MAAMJ,KAAKvmB,IAAIqI,IAAIse,MAAMJ,KAAKxmB,GAAGC,IAAIqI,IAAIse,KAAKA;MAC5D9iB,IAAIga,OAAO9d,GAAGC,IAAIwmB;MAClB3iB,IAAIka,MAAMhe,IAAIymB,MAAMJ,KAAKpmB,IAAIwmB,MAAMJ,KAAKrmB,IAAIymB,KAAKxmB,GAAGwmB;MACpD3iB,IAAIwa;;;QAaF0F;IACJnsB,YAAYmI,GAAGC,GAAGmhB;MAIhBnpB,KAAK+H,IAAIA;MAKT/H,KAAKgI,IAAIA;MAKThI,KAAKmpB,SAASA;;IAQhBvpB,KAAKiM;MACHA,IAAIsa,IAAInmB,KAAK+H,GAAG/H,KAAKgI,GAAGhI,KAAKmpB,QAAQ,GAAG1jB,KAAKuE,KAAK;;;QAchDgiB;IACJpsB,YAAYmI,GAAGC,GAAGoI,GAAGC;MAInBrQ,KAAK+H,IAAIA;MAKT/H,KAAKgI,IAAIA;MAKThI,KAAKoQ,IAAIA;MAKTpQ,KAAKqQ,IAAIA;;IAQXzQ,KAAKiM;MACH,IAAI9D,IAAI/H,KAAK+H,GACTC,IAAIhI,KAAKgI;MACb,IAAIoI,IAAIpQ,KAAKoQ,GACTC,IAAIrQ,KAAKqQ;MACb,IAAIue,IAAI;MACR,IAAIC,KAAKze,IAAI,IAAIwe;MACjB,IAAIE,KAAKze,IAAI,IAAIue;MACjB,IAAIG,KAAKhnB,IAAIqI;MACb,IAAI4e,KAAKhnB,IAAIqI;MACb,IAAI4e,KAAKlnB,IAAIqI,IAAI;MACjB,IAAI8e,KAAKlnB,IAAIqI,IAAI;MACjBxE,IAAI8Z,OAAO5d,GAAGmnB;MACdrjB,IAAIoa,cAAcle,GAAGmnB,KAAKJ,IAAIG,KAAKJ,IAAI7mB,GAAGinB,IAAIjnB;MAC9C6D,IAAIoa,cAAcgJ,KAAKJ,IAAI7mB,GAAG+mB,IAAIG,KAAKJ,IAAIC,IAAIG;MAC/CrjB,IAAIoa,cAAc8I,IAAIG,KAAKJ,IAAIG,KAAKJ,IAAIG,IAAIC,IAAID;MAChDnjB,IAAIoa,cAAcgJ,KAAKJ,IAAIG,IAAIjnB,GAAGmnB,KAAKJ,IAAI/mB,GAAGmnB;;;QAgB5C/C;IACJvsB,YAAYmI,GAAGC,GAAGmhB,QAAQ8C,OAAOC,YAAY,GAAGviB,QAAQ;MAItD3J,KAAK+H,IAAIA;MAKT/H,KAAKgI,IAAIA;MAKThI,KAAKmpB,SAASA;MAKdnpB,KAAKisB,QAAQA;MAKbjsB,KAAKksB,YAAYA;MAKjBlsB,KAAK2J,QAAQA;;IAQf/J,KAAKiM;MACH,IAAI9D,IAAI/H,KAAK+H,GACTC,IAAIhI,KAAKgI;MACb,IAAImhB,SAASnpB,KAAKmpB;MAClB,IAAIxf,QAAQ3J,KAAK2J,QAAQ,MAAMlE,KAAKuE;MACpC,IAAIiiB,QAAQjsB,KAAKisB;MACjB,IAAIkD,KAAK,IAAInvB,KAAKksB;MAClB,IAAItmB,IAAIH,KAAKuE,KAAKiiB;MAClBpgB,IAAI8Z,OAAO5d,IAAItC,KAAK+D,IAAIG,SAASwf,QAAQnhB,IAAIvC,KAAKgE,IAAIE,SAASwf;MAE/D,KAAK,IAAIvmB,IAAI,GAAGA,IAAIqpB,OAAOrpB,KAAK;QAC9B+G,SAAS/D;QAET,IAAIupB,MAAM,GAAG;UACXtjB,IAAIga,OAAO9d,IAAItC,KAAK+D,IAAIG,SAASwf,SAASgG,IAAInnB,IAAIvC,KAAKgE,IAAIE,SAASwf,SAASgG;;QAG/ExlB,SAAS/D;QACTiG,IAAIga,OAAO9d,IAAItC,KAAK+D,IAAIG,SAASwf,QAAQnhB,IAAIvC,KAAKgE,IAAIE,SAASwf;;MAGjEtd,IAAIwa;;;EAYR3B,SAASwI,WAAW,IAAIG;EASxB3I,SAAS8H;IACP4C,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLjrB,GAAK;IACLC,GAAK;IACLuC,GAAK;IACLC,GAAK;IACLrF,GAAK;IACL8B,GAAK;IACLyjB,GAAK;IACLlY,GAAK;IACLzN,GAAK;IACLkuB,GAAK;IACLlC,GAAK;IACLlsB,GAAK;IACLquB,GAAK;IACLnwB,GAAK;IACLyC,GAAK;IACLpC,GAAK;IACL+vB,GAAK;IACLznB,GAAK;IACL2d,GAAK;IACL5M,GAAK;IACL2W,GAAK;IACLC,GAAK;IACL9gB,GAAK;IACLrI,GAAK;IACLC,GAAK;IACLmpB,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,GAAK;IACLC,KAAK;IACLC,KAAK;;EAqBPrN,SAASoJ,qBAAoB,QAAQ,SAAS;EAoB9CpJ,SAASsJ,uBAAsB,SAAS,SAAS;EAQjDtJ,SAAS4I,OAAOze,eAAeY,WAAW;QAwEpCuiB,kBAAkB7c;IACtBvV,YAAYiB;MACV8C;OACCquB,UAAUC,UAAUD,UAAU1sB;MAQ/BtF,KAAKiG,OAAOpF,MAAMoF,QAAQ,OAAOpF,MAAMoF,OAAO+rB,UAAUE;MAOxDlyB,KAAKmyB,gBAAgBtxB,MAAMsxB,iBAAiB,OAAOtxB,MAAMsxB,gBAAgB;MASzE,WAAWtxB,MAAMuxB,SAAS,UAAU;QAClCpyB,KAAKoyB,OAAOvxB,MAAMuxB;aACb,IAAIvxB,MAAMuxB,SAAS,OAAO;QAC/BpyB,KAAKoyB,OAAO;aACP;QACLpyB,KAAKoyB,QAAQ;;MAUfpyB,KAAK8f,eAAe;MAwBpB9f,KAAKqyB,WAAW,IAAI5yB,SAAS6yB,OAAOC;QAClCC,UAAU;QACV1uB,QAAQ;SACPjD;MAOHb,KAAK8D,SAASjD,MAAMiD,UAAU,OAAOjD,MAAMiD,SAAS;MAOpD9D,KAAKyyB,iBAAiB;MAatBzyB,KAAK0yB,YAAY;MAMjB1yB,KAAK2yB,cAAc3yB,KAAK2yB,eAAe9xB,MAAM8xB;MAiB7C3yB,KAAK4E,YAAY;MAOjB5E,KAAK4yB,eAAe;MAOpB5yB,KAAK6yB,gBAAgB;MAQrB7yB,KAAK8yB,KAAK;MAOV9yB,KAAK+yB;MAML/yB,KAAKgzB,sBAAsBhzB,KAAKizB,cAAczsB,KAAKxG;;IAGrDJ;MACE,IAAIoyB,UAAUC,QAAQ;QACpB;;MAIFiB,gBAAgBC;MAChBnB,UAAUC,SAAS;;IAYrBmB;MACE,OAAOpzB,KAAKqyB,SAASe;;IAWvBC;MACE,OAAOrzB,KAAKqyB,SAASgB;;IAUvBC;MACE,OAAOtzB,KAAKqyB,SAASiB;;IAWvBC;MACE,OAAOvzB,KAAKszB;;IAGd1zB;MAEE,UAAUI,KAAKmK,WAAWnK,KAAKoK,QAAQ,KAAKpK,KAAKgJ,UAAU,KAAKhJ,KAAKiJ,UAAU;;IAGjFrJ,KAAKiM,KAAKyF;MAER,IAAItR,KAAKuR,UAAU1F,KAAKyF,cAAc;QACpC,OAAO;;MAGTtR,KAAKiiB;MAELte,MAAMoM,KAAKlE,KAAKyF;MAChB,OAAO;;IAOT1R;MACEI,KAAK8D,SAAS;;IAOhBlE;MACEI,KAAK8D,SAAS;;IAQhBlE,YAAY4zB;MACVxzB,KAAKyzB;MAELzzB,KAAKwgB,MAAMgT;;IAQb5zB,YAAY4zB;MACVxzB,KAAK0zB;MAEL1zB,KAAKwgB,MAAMgT;;IAQb5zB,QAAQgH;MACN,IAAI5G,KAAKiG,SAAS+rB,UAAUE,aAAa;QACvC;;MAKF,IAAI7uB,IAAIrD,MACJygB,MAAMpd,EAAEuB;MAEZ,QAAQvB,IAAIA,EAAEJ,WAAWwd,QAAQ,MAAM;QACrC,IAAIpd,EAAE4C,SAAS+rB,UAAUE,aAAa;UACpCzR,MAAMpd,EAAEswB;;;MAIZ3zB,KAAK2zB,aAAalT;MAElB,IAAIzgB,KAAK8D,QAAQ;QACf;;MAIF,IAAIwW,IAAImG,QAAQ,QAAQA,SAAS,KAAK7Z,SAAS,OAAOA,QAAQ,MAAO6Z,OAAOzgB,KAAK8yB,KAAK;MACtF,IAAI7R,SAAS3G,IAAI;MACjBta,KAAK8yB,KAAKxY,IAAI2G;MAEd,OAAOA,UAAU;QACfjhB,KAAK4zB,gBAAgB5zB,KAAK6yB,eAAe,GAAG;;;IAShDjzB;MAEE,MAAM;;IAGRA;MACE,IAAII,KAAK6yB,kBAAkB,KAAK7yB,KAAKiG,SAAS+rB,UAAUE,aAAa;QACnElyB,KAAK4zB,iBAAiB;;;IAI1Bh0B,MAAMkU;MACJ9T,KAAK2gB,QAAQ7M,UAAUA,OAAOhN;MAE9BnD,MAAMqC,MAAM8N;;IAQdlU,MAAM4zB;MACJ,IAAIK,MAAM7zB,KAAKqyB,SAASyB,QAAQN;MAEhC,IAAIK,OAAO,MAAM;QACf;;MAGF7zB,KAAK8yB,KAAK;MAEV9yB,KAAK4zB,gBAAgBC,KAAK;;IAO5Bj0B;MACEI,KAAK6yB,gBAAgB;MACrB7yB,KAAK8yB,KAAK9yB,KAAK8f,eAAe;MAC9B9f,KAAK8D,SAAS;;IAShBlE,gBAAgBm0B,aAAaC;MAC3B,IAAIC,SAASj0B,KAAKiG,SAAS+rB,UAAUE,aACjCgC,KAAKl0B,KAAKqyB;MAEd,IAAI4B,QAAQ;QACVF,cAAc/zB,KAAKmyB,iBAAiBnyB,KAAKiG,SAAS+rB,UAAUmC,eAAe,IAAIn0B,KAAK4yB;;MAGtF,IAAImB,cAAc,GAAG;QACnBA,cAAc;;MAGhB,IAAI/zB,KAAK6yB,iBAAiBkB,gBAAgBE,QAAQ;QAChD;;MAGFj0B,KAAK6yB,eAAekB;MAEpBG,GAAG9B,OAAOpyB,KAAKoyB;MAEf8B,GAAGE,YAAYL,aAAaE,WAAWj0B,KAAKyyB,gBAAgBuB,MAAMh0B,KAAKgzB;;IAUzEpzB;MACE,MAAMs0B,KAAKl0B,KAAKqyB,UACVwB,MAAMK,GAAGH;MACfG,GAAGE,YAAY,GAAG,MAAM,MAAMp0B,KAAKgzB;MACnCkB,GAAGH,cAAcF;;IAQnBj0B;MACE,IAAIs0B,KAAKl0B,KAAKqyB;MACdryB,KAAK8f,eAAeoU,GAAGzQ;MAEvB,KAAK,IAAI7iB,KAAKZ,KAAK+yB,UAAU;QAC3B/yB,KAAK+yB,SAASnyB,KAAK;;MAGrB,IAAIyzB,SAASH,GAAGG;MAEhB,KAAK,IAAIC,SAASD,QAAQ;QACxB,IAAIp0B,SAASq0B,MAAMr0B;QAEnB,IAAIA,WAAWD,QAAQs0B,MAAMC,SAAS;UACpC;;QAIF,IAAIjJ,SAASgJ,MAAME;QAEnB,IAAIv0B,kBAAkBqQ,eAAe;UAEnCtQ,KAAKy0B,iBAAiBx0B,QAAQqrB;eACzB;UAELtrB,KAAK00B,UAAUz0B,OAAO00B,OAAOrJ;;;MAIjC,IAAIhV,OAAOtW,KAAKoV;MAEhB,KAAK,IAAIxS,IAAI0T,KAAK3T,SAAS,GAAGC,KAAK,GAAGA,KAAK;QACzC,IAAI4N,KAAK8F,KAAK1T,GAAG4N;QAEjB,IAAIxQ,KAAK+yB,SAASviB,QAAQ,GAAG;UAC3BxQ,KAAK40B,cAAchyB;iBACZ5C,KAAK+yB,SAASviB;;;;IAW3B5Q,UAAU+0B,OAAOrJ;MACf,KAAKqJ,OAAO;QACV;;MAGF,KAAK,IAAI/xB,IAAI+xB,MAAMhyB,SAAS,GAAGC,KAAK,GAAGA,KAAK;QAC1C,IAAIS,IAAIsxB,MAAM/xB;QACd,IAAI3C,SAASoD,EAAEiX;QACf,IAAIzZ,QAAQwC,EAAEpC;QAEd,KAAK,IAAIL,KAAKC,OAAO;UACnBZ,OAAOW,KAAKC,MAAMD;;QAGpBZ,KAAKy0B,iBAAiBx0B,QAAQqrB;;;IAWlC1rB,iBAAiB6V,OAAO6V;MACtB,IAAI7V,MAAMof,MAAM;QACd;;MAGF70B,KAAKiW,WAAWR,OAAO;MAEvB,IAAIA,iBAAiBuc,WAAW;QAC9Bvc,MAAMmd,eAAetH;QAGrB,IAAI7V,MAAMxP,SAAS+rB,UAAUE,eAAezc,MAAMid,cAAc1yB,KAAK+yB,SAAStd,MAAMjF,KAAK;UACvFiF,MAAMqf;;;MAIV90B,KAAK+yB,SAAStd,MAAMjF,MAAM;;IAU5B5Q,WAAWiJ,QAAQoL;MACjB,IAAIE,SAASnU,KAAKqN;MAElB,KAAK8G,UAAUnU,KAAK2yB,aAAa;QAC/Bxe,SAASnU,KAAKiR,WAAW0B,KAAK3S,KAAK2yB,YAAY3yB,KAAK8f;;MAGtD,IAAI3L,QAAQ;QACV,OAAOnU,KAAKkU,iBAAiBC,QAAQtL,QAAQoL;;MAG/C,OAAOtQ,MAAMwP,WAAWtK,QAAQoL;;;EAapC+d,UAAUE,cAAc;EASxBF,UAAUmC,eAAe;EAUzBnC,UAAU+C,UAAU;EASpB/C,UAAUC,SAAS;QAQbiB;IACJtzB;MACE,MAAM;;IAORA;MACEJ,MAAMw1B,cAAc9B;;IAUtBtzB,YAAY00B,OAAOW,MAAM5jB;MACvB,OAAOA;;IAeTzR,aAAa00B,OAAOW,MAAM5jB,OAAO6jB,aAAaC,WAAWC,OAAOC,MAAMhU;MACpE,MAAMiT,MAAMr0B,kBAAkB+xB,YAAY;QACxC,OAAO3gB;;MAGT,OAAO+jB,UAAU,IAAID,UAAUF,QAAQC,YAAYD;;;EAYvD/B,gBAAgBoC,WAAW;QA2CrBC;IACJ31B,YAAY2T,QAAQ,SAASE,UAAU,GAAGE,UAAU,GAAGE,OAAO;MAM5D7T,KAAKuT,QAAQA;MAObvT,KAAKyT,UAAUA;MAOfzT,KAAK2T,UAAUA;MAOf3T,KAAK6T,OAAOA;;IAQdjU;MACE,WAAWI,KAAKc,YAAYC;;IAQ9BnB;MACE,OAAO,IAAI21B,SAASv1B,KAAKuT,OAAOvT,KAAKyT,SAASzT,KAAK2T,SAAS3T,KAAK6T;;;EAWrE0hB,SAAStrB,WAAW,IAAIsrB,SAAS;QAiD3BC,cAAcllB;IAClB1Q,YAAY8R,WAAW,IAAIgT;MACzB/gB;MAMA3D,KAAK0R,WAAWA;;IAGlB9R;MACE,IAAI4V,aAAaxV,KAAK8N,eAAe9N,KAAK0R,aAAa1R,KAAK0R,SAASC;MACrE,UAAU3R,KAAKmK,WAAWnK,KAAKoK,QAAQ,KAAKpK,KAAKgJ,UAAU,KAAKhJ,KAAKiJ,UAAU,KAAKuM;;IAGtF5V,KAAKiM,KAAKyF,cAAc;MACtB,IAAI3N,MAAMoM,KAAKlE,KAAKyF,cAAc;QAChC,OAAO;;MAGTtR,KAAK0R,SAAS3B,KAAKlE,KAAK7L;MACxB,OAAO;;IAWTJ,MAAMoX,YAAY;MAChB,IAAIuR,IAAIvR,aAAahX,KAAK0R,WAAW1R,KAAK0R,SAAS3O,UAAU/C,KAAK0R;MAClE,OAAO1R,KAAKoT,YAAY,IAAIoiB,MAAMjN;;;QAyMhCkN,oBAAoBz0B;IACxBpB,YAAYyC;MACVsB;MAOA3D,KAAKqgB,WAAW;MAOhBrgB,KAAK4E,YAAY;MAMjB5E,KAAK01B,cAAc;MAMnB11B,KAAK21B,UAAU;MAMf31B,KAAK41B,UAAU;MAMf51B,KAAK61B,QAAQ;MAMb71B,KAAK81B,aAAa;MAOlB91B,KAAK+1B,eAAe;MAMpB/1B,KAAKg2B,cAAc;MAMnBh2B,KAAKi2B,aAAa;MAMlBj2B,KAAKk2B,QAAQ;MAMbl2B,KAAKm2B,QAAQ;MAMbn2B,KAAKo2B,WAAW;MAMhBp2B,KAAKq2B,UAAU;MAEfr2B,KAAKs2B,WAAWj0B;;IASlBk0B;MACE,OAAOv2B,KAAK01B,YAAYpyB;;IAW1B1D,aAAaihB;MACX,IAAIA,aAAa,MAAM;QACrB,OAAO7gB,KAAK21B,UAAU31B,KAAK21B,QAAQhzB,SAAS3C,KAAKi2B,cAAc;aAC1D;QACL,IAAI5zB,OAAOrC,KAAK61B,MAAMhV;QAEtB,IAAIxe,QAAQ,MAAM;UAChB,OAAO;eACF;UACL,OAAOA,KAAK4e,OAAOte;;;;IAiBzB/C,aAAamB;MACX,OAAOf,KAAK61B,MAAM90B;;IAcpBnB,SAAS42B;MACP,IAAI1V;MAEJ,IAAI9gB,KAAK21B,YAAY7U,QAAQ9gB,KAAK21B,QAAQa,cAAc;QACtD,OAAO1V;;MAGT,OAAO;;IAYTlhB,eAAe42B,YAAYC,YAAY,IAAIhsB;MACzC,IAAIqW,QAAQ9gB,KAAKugB,SAASiW;MAC1B,OAAO1V,QAAQ2V,UAAUxuB,WAAW6Y,MAAMzX,OAAOyX,MAAMxX,MAAMwX,MAAM/V,KAAKL,OAAOoW,MAAM/V,KAAKJ,UAAU;;IAQtG/K;MACE,WAAWI,KAAKc,YAAYC;;IAS9BnB;MACE,MAAM;;IAQRA,WAAWyC;MACT,IAAIA,QAAQ,MAAM;QAChB;;MAGFrC,KAAK4E,YAAYvC,KAAKuC,aAAa;MAEnC,IAAIvC,KAAKq0B,QAAQ;QACf,KAAK,IAAIpX,OAAOjd,KAAKq0B,QAAQ;UAC3B,IAAI9wB,IAAI5F,KAAK41B;UACb,IAAIzW;UAEJ,WAAWG,QAAQ,UAAU;YAC3BH,MAAMG;YACNA,MAAMxQ,SAASC,cAAc;YAC7BuQ,IAAIH,MAAMA;;UAGZvZ,EAAE1D,KAAKod;UAEP,KAAKA,IAAI7P,eAAe6P,IAAID,cAAc;YACxCrf,KAAK81B;YACL91B,KAAKqgB,WAAW;YAEhBf,IAAIqX,SAAS,OAAM32B,KAAK42B,iBAAiBzX;YAEzCG,IAAIuX,UAAU,OAAM72B,KAAK82B,kBAAkB3X;;;;MAMjD,IAAI9c,KAAK4e,UAAU,MAAM;QACvB,IAAI8V,MAAMC,QAAQ30B,KAAK4e,SAAS;UAC9BjhB,KAAK21B;UAEL,KAAK,IAAI1zB,OAAOI,KAAK4e,QAAQ;YAC3BjhB,KAAK21B,QAAQzzB;cACXgd,OAAOlf,KAAK41B,QAAQ3zB,IAAI,KAAKA,IAAI,KAAK;cACtC8I,MAAM,IAAIN,UAAUxI,IAAI,IAAIA,IAAI,IAAIA,IAAI,IAAIA,IAAI;cAChDoH,MAAMpH,IAAI,MAAM;cAChBqH,MAAMrH,IAAI,MAAM;;;eAGf;UACL,IAAIoB,IAAIhB,KAAK4e;UACbjhB,KAAKg2B,cAAc3yB,EAAEqH;UACrB1K,KAAK+1B,eAAe1yB,EAAEsH;UACtB3K,KAAKk2B,QAAQ7yB,EAAEgG,QAAQ;UACvBrJ,KAAKm2B,QAAQ9yB,EAAEiG,QAAQ;UACvBtJ,KAAKo2B,WAAW/yB,EAAE4zB,WAAW;UAC7Bj3B,KAAKq2B,UAAUhzB,EAAE6zB,UAAU;UAC3Bl3B,KAAKi2B,aAAa5yB,EAAE8zB;UAEpB,IAAIn3B,KAAK81B,eAAe,GAAG;YACzB91B,KAAKo3B;;;;MAMXp3B,KAAK01B;MAEL,IAAIrzB,KAAKk0B,cAAc,MAAM;QAC3Bv2B,KAAK61B;QACL,IAAIxyB,IAAIhB,KAAKk0B;QAEb,KAAK,IAAIx1B,QAAQsC,GAAG;UAClB,IAAIg0B;YACFt2B,MAAAA;;UAEF,IAAIu2B,MAAMj0B,EAAEtC;UACZ,IAAI6E;UAEJ,WAAW0xB,QAAQ,UAAU;YAE3B1xB,IAAIyxB,KAAKpW,WAAUqW;iBACd,IAAIP,MAAMC,QAAQM,MAAM;YAE7B,IAAIA,IAAI30B,WAAW,GAAG;cACpB00B,KAAKpW,WAAUqW,IAAI;mBACd;cACLD,KAAKtW,QAAQuW,IAAI;cACjBD,KAAKnW,OAAOoW,IAAI;cAChB1xB,IAAIyxB,KAAKpW;cAET,KAAK,IAAIre,IAAI00B,IAAI,IAAI10B,KAAK00B,IAAI,IAAI10B,KAAK;gBACrCgD,EAAE1D,KAAKU;;;iBAGN;YAELy0B,KAAKtW,QAAQuW,IAAIvW;YACjBsW,KAAKnW,OAAOoW,IAAIpW;YAChB,IAAID,SAASqW,IAAIrW;YACjBrb,IAAIyxB,KAAKpW,gBAAgBA,WAAW,aAAYA,WAAUA,OAAO3d,MAAM;;UAGzE,IAAI+zB,KAAKnW,SAAS,QAAQmW,KAAKnW,SAAS5U,WAAW;YACjD+qB,KAAKnW,OAAOngB;;UAId,IAAIs2B,KAAKnW,SAAS,SAAStb,EAAEjD,SAAS,KAAK00B,KAAKnW,SAASngB,MAAM;YAC7Ds2B,KAAKnW,OAAO;;UAId,KAAKmW,KAAKtW,OAAO;YACfsW,KAAKtW,QAAQ;;UAGf/gB,KAAK01B,YAAYxzB,KAAKnB;UAEtBf,KAAK61B,MAAM90B,QAAQs2B;;;;IAWzBz3B,iBAAiBuf;MACf,MAAMnf,KAAK81B,eAAe,GAAG;QAC3B91B,KAAKo3B;QAELp3B,KAAKqgB,WAAW;QAChBrgB,KAAKyB,cAAc;;;IAWvB7B,kBAAkBuf;MAChB,IAAIoY,aAAa,IAAI53B,MAAM;MAC3B43B,WAAWpY,MAAMA;MACjBnf,KAAKyB,cAAc81B;MAEnB,MAAMv3B,KAAK81B,eAAe,GAAG;QAC3B91B,KAAKyB,cAAc;;;IAQvB7B;MACE,IAAII,KAAK21B,WAAW31B,KAAKg2B,gBAAgB,GAAG;QAC1C;;MAGFh2B,KAAK21B;MACL,IAAI6B,YAAYx3B,KAAKi2B,cAAc;MAEnC,IAAIwB,aAAa,GACbC,aAAa13B,KAAKg2B,aAClB2B,cAAc33B,KAAK+1B;MACvB,IAAIkB,UAAUj3B,KAAKo2B,UACfc,SAASl3B,KAAKq2B;MAElBuB,SAAS,KAAK,IAAIh1B,IAAI,GAAGi1B,OAAO73B,KAAK41B,SAASlzB,IAAIm1B,KAAKl1B,QAAQC,IAAIF,GAAGE,KAAK;QACzE,IAAI0c,MAAMuY,KAAKj1B,IACXk1B,OAAOxY,IAAI5U,SAAS4U,IAAID,cACxB0Y,OAAOzY,IAAI3U,UAAU2U,IAAI0Y;QAC7B,IAAIhwB,IAAIkvB;QAER,OAAOlvB,KAAK+vB,OAAOb,SAASS,aAAa;UACvC,IAAI5vB,IAAImvB;UAER,OAAOnvB,KAAK+vB,OAAOZ,SAASQ,YAAY;YACtC,IAAID,cAAcD,WAAW;cAC3B,MAAMI;;YAGRH;YAEAz3B,KAAK21B,QAAQzzB;cACXgd,OAAOI;cACPvU,MAAM,IAAIN,UAAU1C,GAAGC,GAAG0vB,YAAYC;cACtCtuB,MAAMrJ,KAAKk2B;cACX5sB,MAAMtJ,KAAKm2B;;YAGbpuB,KAAK2vB,aAAaT;;UAGpBjvB,KAAK2vB,cAAcV;;;MAIvBj3B,KAAKi2B,aAAawB;;;QA8FhBQ,aAAa3nB;IACjB1Q,YAAY8hB,MAAMwW,MAAM3kB;MACtB5P;MAMA3D,KAAK0hB,OAAOA;MAMZ1hB,KAAKk4B,OAAOA;MAOZl4B,KAAKuT,QAAQA;MAQbvT,KAAKm4B,YAAY;MAQjBn4B,KAAKo4B,eAAe;MAQpBp4B,KAAKq4B,WAAW;MAMhBr4B,KAAKs4B,UAAU;MAQft4B,KAAK2hB,aAAa;MAOlB3hB,KAAK4tB,YAAY;;IAGnBhuB;MACE,IAAI4V,aAAaxV,KAAK8N,eAAe9N,KAAK0hB,QAAQ,QAAQ1hB,KAAK0hB,SAAS;MACxE,UAAU1hB,KAAKmK,WAAWnK,KAAKoK,QAAQ,KAAKpK,KAAKgJ,UAAU,KAAKhJ,KAAKiJ,UAAU,KAAKuM;;IAGtF5V,KAAKiM,KAAKyF;MACR,IAAI3N,MAAMoM,KAAKlE,KAAKyF,cAAc;QAChC,OAAO;;MAGT,IAAIinB,MAAMv4B,KAAKuT,SAAS;MAExB,IAAIvT,KAAKs4B,SAAS;QAChBzsB,IAAI8hB,cAAc4K;QAClB1sB,IAAI+hB,YAAY5tB,KAAKs4B,UAAU;aAC1B;QACLzsB,IAAI6L,YAAY6gB;;MAGlBv4B,KAAKw4B,UAAUx4B,KAAKy4B,aAAa5sB;MAEjC,OAAO;;IAQTjM;MACE,OAAOI,KAAK04B,kBAAkB14B,KAAK0hB;;IAUrC9hB;MACE,OAAOI,KAAK04B,kBAAkB,OAAO;;IAUvC94B;MACE,OAAOI,KAAKw4B,UAAU,UAAU7tB;;IAGlC/K;MACE,IAAImL,OAAOpH,MAAM0J;MAEjB,IAAItC,MAAM;QACR,OAAOA;;MAGT,IAAI/K,KAAK0hB,QAAQ,QAAQ1hB,KAAK0hB,SAAS,IAAI;QACzC,OAAO;;MAGT,IAAIre,IAAIrD,KAAKw4B,UAAU;MAEvB,IAAIpoB,IAAIpQ,KAAKq4B,YAAYr4B,KAAKq4B,WAAWh1B,EAAEqH,QAAQ1K,KAAKq4B,WAAWh1B,EAAEqH;MACrE,IAAI3C,IAAIqI,IAAI6nB,KAAKU,UAAU34B,KAAKm4B,aAAa;MAC7C,IAAIxW,aAAa3hB,KAAK2hB,cAAc3hB,KAAK44B;MACzC,IAAI5wB,IAAI2Z,aAAasW,KAAKY,UAAU74B,KAAKo4B,gBAAgB;MACzD,OAAOp4B,KAAKiR,WAAWhJ,UAAUF,GAAGC,GAAGoI,GAAG/M,EAAEsH;;IAW9C/K;MACE,IAAIyD;QACFy1B;;MAEFz1B,EAAEse,aAAa3hB,KAAK2hB,cAAc3hB,KAAK44B;MACvCv1B,EAAE01B,UAAU11B,EAAEse,aAAasW,KAAKY,UAAU74B,KAAKo4B,gBAAgB;MAC/D,OAAOp4B,KAAKw4B,UAAU,MAAMn1B,GAAGA,EAAEy1B;;IAQnCl5B;MACE,OAAOI,KAAKoT,YAAY,IAAI6kB,KAAKj4B,KAAK0hB,MAAM1hB,KAAKk4B,MAAMl4B,KAAKuT;;IAS9D3T;MACE,WAAWI,KAAKc,YAAYC,cAAcf,KAAK0hB,KAAK/e,SAAS,QAAQ3C,KAAK0hB,KAAKsX,OAAO,GAAG,WAAWh5B,KAAK0hB;;IAS3G9hB,YAAYyD;MACVM,MAAMyP,YAAY/P;MAElBA,EAAE80B,YAAYn4B,KAAKm4B;MACnB90B,EAAE+0B,eAAep4B,KAAKo4B;MACtB/0B,EAAEg1B,WAAWr4B,KAAKq4B;MAClBh1B,EAAEi1B,UAAUt4B,KAAKs4B;MACjBj1B,EAAEse,aAAa3hB,KAAK2hB;MACpBte,EAAEuqB,YAAY5tB,KAAK4tB;MACnB,OAAOvqB;;IASTzD,aAAaiM;MACXA,IAAIqsB,OAAOl4B,KAAKk4B,QAAQ;MACxBrsB,IAAIssB,YAAYn4B,KAAKm4B,aAAa;MAClCtsB,IAAIusB,eAAep4B,KAAKo4B,gBAAgB;MACxCvsB,IAAIkiB,WAAW;MACfliB,IAAIqf,aAAa;MACjB,OAAOrf;;IAYTjM,UAAUiM,KAAKxI,GAAGy1B;MAChB,MAAMG,UAAUptB;MAEhB,KAAKotB,OAAO;QACVptB,MAAMosB,KAAK3K;QACXzhB,IAAI8D;QAEJ3P,KAAKy4B,aAAa5sB;;MAGpB,IAAI8V,aAAa3hB,KAAK2hB,cAAc3hB,KAAK44B;MACzC,IAAIM,OAAO,GACP/B,QAAQ;MACZ,IAAIgC,YAAYC,OAAOp5B,KAAK0hB,MAAM2X,MAAM;MAExC,KAAK,IAAIjV,OAAO+U,WAAW;QACzB,IAAI/oB,IAAI;QAER,IAAIpQ,KAAK4tB,aAAa,SAASxd,IAAIvE,IAAIytB,YAAYlV,KAAK1Z,SAAS1K,KAAK4tB,WAAW;UAE/E,IAAI2L,QAAQnV,IAAIiV,MAAM;UACtBjV,MAAMmV,MAAM;UACZnpB,IAAIvE,IAAIytB,YAAYlV,KAAK1Z;UACzB,MAAMhI,IAAI62B,MAAM52B;UAEhB,KAAK,IAAIC,IAAI,GAAGA,IAAIF,GAAGE,KAAK,GAAG;YAE7B,IAAI42B,QAAQ3tB,IAAIytB,YAAYC,MAAM32B,KAAK22B,MAAM32B,IAAI,IAAI8H;YAErD,IAAI0F,IAAIopB,QAAQx5B,KAAK4tB,WAAW;cAC9B,IAAIqL,OAAO;gBACTj5B,KAAKy5B,cAAc5tB,KAAKuY,KAAK+S,QAAQxV;;cAGvC,IAAImX,OAAO;gBACTA,MAAM52B,KAAKkiB;;cAGb,IAAIhU,IAAI8oB,MAAM;gBACZA,OAAO9oB;;cAGTgU,MAAMmV,MAAM32B,IAAI;cAChBwN,IAAIvE,IAAIytB,YAAYlV,KAAK1Z;cACzBysB;mBACK;cACL/S,OAAOmV,MAAM32B,KAAK22B,MAAM32B,IAAI;cAC5BwN,KAAKopB;;;;QAKX,IAAIP,OAAO;UACTj5B,KAAKy5B,cAAc5tB,KAAKuY,KAAK+S,QAAQxV;;QAGvC,IAAImX,OAAO;UACTA,MAAM52B,KAAKkiB;;QAGb,IAAI/gB,KAAK+M,KAAK,MAAM;UAClBA,IAAIvE,IAAIytB,YAAYlV,KAAK1Z;;QAG3B,IAAI0F,IAAI8oB,MAAM;UACZA,OAAO9oB;;QAGT+mB;;MAGF,IAAI9zB,GAAG;QACLA,EAAEqH,QAAQwuB;QACV71B,EAAEsH,SAASwsB,QAAQxV;;MAGrB,KAAKsX,OAAO;QACVptB,IAAImE;;MAGN,OAAO3M;;IAUTzD,cAAciM,KAAK6V,MAAM1Z;MAEvB,IAAIhI,KAAKs4B,SAAS;QAChBzsB,IAAI6tB,WAAWhY,MAAM,GAAG1Z,GAAGhI,KAAKq4B,YAAY;aACvC;QACLxsB,IAAI8tB,SAASjY,MAAM,GAAG1Z,GAAGhI,KAAKq4B,YAAY;;;IAS9Cz4B,kBAAkB8hB;MAChB,IAAI7V,MAAMosB,KAAK3K;MACfzhB,IAAI8D;MAEJ,IAAIS,IAAIpQ,KAAKy4B,aAAa5sB,KAAKytB,YAAY5X,MAAMhX;MAEjDmB,IAAImE;MACJ,OAAOI;;;EAWX6nB,KAAKU;IACHiB,OAAO;IACPhvB,MAAM;IACNivB,SAAS;IACTxY,MAAM;IACNvW,QAAQ;;EASVmtB,KAAKY;IACH31B,KAAK;IACL42B,UAAU;IACVC,SAAS;IACTC,aAAa;IACbC,cAAc;IACdpvB,SAAS;;EASXotB,KAAK3K,OAAOze,eAAeY,WAAW;QAkDhCyqB,uBAAuB7uB;IAC3BzL,YAAYu6B;MACVx2B;MAOA3D,KAAKm6B,WAAWA;MAOhBn6B,KAAKo6B,YAAY;MAOjBp6B,KAAKq6B,WAAW;MAOhBr6B,KAAKs6B,cAAc;MACnBt6B,KAAKyL;;IAqBP7L,iBAAiB8L,IAAIC,OAAOC;MAC1B,KAAK5L,KAAKs6B,aAAa;QACrBt6B,KAAKs6B,cAAc5uB,GAAG6uB;;MAGxB7uB,GAAG8uB,cAAc9uB,GAAG+uB;MACpB/uB,GAAGgvB,YAAYhvB,GAAGivB,YAAY36B,KAAKs6B;MACnC3uB,MAAMivB,iBAAiBlvB;MACvBA,GAAGmvB,WAAWnvB,GAAGivB,YAAY,GAAGjvB,GAAGovB,MAAMpvB,GAAGovB,MAAMpvB,GAAGqvB,eAAe/6B,KAAKm6B;MACzEzuB,GAAGsvB,UAAUtvB,GAAGuvB,mBAAmBrvB,eAAe,kBAAkB;;IAOtEhM;MACE,IAAIyD,IAAI,IAAI62B,eAAel6B,KAAKm6B;MAChC92B,EAAE+2B,YAAYp6B,KAAKo6B;MACnB/2B,EAAEg3B,WAAWr6B,KAAKq6B;MAClB,OAAOh3B;;IAGTzD,aAAaqM;MACX,KAAKjM,KAAKm6B,UAAU;QAClB,OAAO;;MAGT,KAAKn6B,KAAKk7B,iBAAiB;QACzB,OAAO;;MAIT,IAAI74B,OAAO4J,UAAU5J;MACrB,IAAI84B,MAAMn7B,KAAKq6B;MACf,MAAM33B,IAAIL,KAAKM;MAEf,KAAK,IAAIC,IAAI,GAAGA,IAAIF,GAAGE,KAAK,GAAG;QAC7BP,KAAKO,IAAI,KAAKu4B,IAAIv4B,MAAM;;MAG1B,OAAO;;IAOThD;MACE,KAAKI,KAAKm6B,UAAU;QAClB,OAAO;;MAGT,IAAIn6B,KAAKm6B,aAAan6B,KAAKo6B,aAAap6B,KAAKq6B,UAAU;QACrD,OAAO;;MAGTr6B,KAAKq6B,WAAW;MAChB,IAAIc,MAAMn7B,KAAKo6B,YAAYp6B,KAAKm6B;MAChC,IAAIrlB,SAASqmB;MACb,IAAItvB;MAEJ,IAAIsvB,eAAe7c,mBAAmB;QACpCzS,MAAMiJ,OAAOrF,WAAW;aACnB;QACLqF,SAAS/P,OAAO6J,YAAYA,SAASC,eAAeD,SAASC,iBAAiBC,SAASC,cAAc;QACrG+F,OAAOpK,QAAQywB,IAAIzwB;QACnBoK,OAAOnK,SAASwwB,IAAIxwB;QACpBkB,MAAMiJ,OAAOrF,WAAW;QACxB5D,IAAI6C,UAAUysB,KAAK,GAAG;;MAGxB;QACEn7B,KAAKq6B,WAAWxuB,IAAIK,aAAa,GAAG,GAAGivB,IAAIzwB,OAAOywB,IAAIxwB,QAAQtI;QAC9D,OAAO;QACP,OAAOW;QAEP,OAAO;;;;QAuDPo4B,wBAAwB/vB;IAC5BzL,YAAYiR;MACVlN;MAMA3D,KAAK6Q,OAAOA;MACZ7Q,KAAKsL,cAAc;MACnBtL,KAAKyL;;IA2BP7L,YAAYiM,KAAK9D,GAAGC,GAAG0C,OAAOC,QAAQmB,WAAWC,SAASC;MACxD,KAAKhM,KAAK6Q,MAAM;QACd,OAAO;;MAGT/E,YAAYA,aAAaD;MAEzB,IAAIE,WAAW,MAAM;QACnBA,UAAUhE;;MAGZ,IAAIiE,WAAW,MAAM;QACnBA,UAAUhE;;MAGZ8D,UAAU6D;MAEV,IAAI9D,OAAOC,WAAW;QAGpB,OAAO;;MAGTA,UAAU8D,2BAA2B;MACrC9D,UAAU4C,UAAU1O,KAAK6Q,MAAM9E,SAASC;MACxCF,UAAUkE;MACV,OAAO;;IAOTpQ;MACE,OAAO,IAAIw7B,gBAAgBp7B,KAAK6Q;;IAUlCjR,iBAAiB8L,IAAIC,OAAOC;MAC1B,KAAK5L,KAAKs6B,aAAa;QACrBt6B,KAAKs6B,cAAc5uB,GAAG6uB;;MAGxB7uB,GAAG8uB,cAAc9uB,GAAG+uB;MACpB/uB,GAAGgvB,YAAYhvB,GAAGivB,YAAY36B,KAAKs6B;MACnC3uB,MAAMivB,iBAAiBlvB;MACvBA,GAAGmvB,WAAWnvB,GAAGivB,YAAY,GAAGjvB,GAAGovB,MAAMpvB,GAAGovB,MAAMpvB,GAAGqvB,eAAe/6B,KAAK6Q;MACzEnF,GAAGsvB,UAAUtvB,GAAGuvB,mBAAmBrvB,eAAe,kBAAkB;;;QAqDlEyvB,mBAAmBhwB;IACvBzL,YAAY07B,QAAQ,GAAGC,QAAQ,GAAGC,UAAU;MAC1C73B;MAOA3D,KAAKy7B,SAASH;MAMdt7B,KAAK07B;MAOL17B,KAAK27B,aAAa;MAMlB37B,KAAK47B,SAASL;MAMdv7B,KAAK67B;MAOL77B,KAAK87B,aAAa;MAQlB97B,KAAK+7B,WAAWxa,MAAMia,YAAYA,UAAU,IAAI,IAAIA;MAOpDx7B,KAAKg8B,eAAe;MACpBh8B,KAAKi8B;;IA4BPX;MACE,OAAOt7B,KAAKy7B;;IAGdH,UAAUA;MACR,IAAI/Z,MAAM+Z,UAAUA,QAAQ,GAAG;QAC7BA,QAAQ;;MAGVt7B,KAAKy7B,SAASH;;IAQhBC;MACE,OAAOv7B,KAAK47B;;IAGdL,UAAUA;MACR,IAAIha,MAAMga,UAAUA,QAAQ,GAAG;QAC7BA,QAAQ;;MAGVv7B,KAAK47B,SAASL;;IAShBC;MACE,OAAOx7B,KAAK+7B,WAAW;;IAGzBP,YAAYA;MACV,IAAIja,MAAMia,YAAYA,UAAU,GAAG;QACjCA,UAAU;;MAGZx7B,KAAK+7B,WAAWP;;IAQlBU;MACE,MAAMC,UAAUn8B,KAAK27B,eAAe37B,KAAKy7B;MACzC,MAAMW,UAAUp8B,KAAK87B,eAAe97B,KAAK47B;MACzC,MAAMS,UAAUr8B,KAAKg8B,iBAAiBh8B,KAAK+7B;MAE3C,IAAII,WAAWC,WAAWC,SAAS;QACjC,IAAIF,WAAWE,SAAS;UACtBr8B,KAAK07B,cAAc17B,KAAKs8B,UAAUt8B,KAAKy7B,SAASz7B,KAAK+7B;;QAGvD,IAAIK,WAAWC,SAAS;UACtBr8B,KAAK67B,cAAc77B,KAAKs8B,UAAUt8B,KAAK47B,SAAS57B,KAAK+7B;;QAGvD/7B,KAAKu8B;QAELv8B,KAAK27B,aAAa37B,KAAKy7B;QACvBz7B,KAAK87B,aAAa97B,KAAK47B;QACvB57B,KAAKg8B,eAAeh8B,KAAK+7B;QACzB,OAAOzvB;;MAGT,OAAOtM,KAAKw8B;;IAGdC,iBAAiBprB;MACfrR,KAAKw8B,kBAAkBnrB;;IAGzBzR,iBAAiB8L,IAAIC,OAAOC;MAE1BF,GAAGgxB,WAAWhxB,GAAGuvB,mBAAmBrvB,eAAe,YAAY5L,KAAK07B;MACpEhwB,GAAGgxB,WAAWhxB,GAAGuvB,mBAAmBrvB,eAAe,YAAY5L,KAAK67B;MAEpEnwB,GAAGixB,UAAUjxB,GAAGuvB,mBAAmBrvB,eAAe,kBAAkB,KAAKD,MAAMixB,iBAAiB58B,KAAK+7B,WAAW,KAAKpwB,MAAMkxB,kBAAkB78B,KAAK+7B;;IAGpJn8B,UAAUmL;MACR,IAAIhD,IAAI/H,KAAKs7B,QAAQ,GACjBtzB,IAAIhI,KAAKu7B,QAAQ;MAErB,IAAIxzB,KAAK,KAAKC,KAAK,GAAG;QACpB,OAAO+C;;MAGT,IAAIimB,IAAIvrB,KAAKq3B,IAAI98B,KAAKw7B,SAAS;MAC/B,QAAQzwB,QAAQ,IAAIN,aAAasyB,IAAI/0B,IAAIgpB,IAAI,GAAGjpB,IAAIipB,IAAI,GAAGhpB,IAAIgpB,IAAI,GAAGjpB,IAAIipB,IAAI;;IAOhFpxB;MACE,OAAO,IAAIy7B,WAAWr7B,KAAKs7B,OAAOt7B,KAAKu7B,OAAOv7B,KAAKw7B;;IAGrD57B;MACE,IAAI4X,SAASxX,KAAKi8B;MAClBzkB,SAASA,OAAOwlB,QAAQ,cAAch9B,KAAK07B,YAAY/4B,OAAOs6B,QAAQ;MACtEzlB,SAASA,OAAOwlB,QAAQ,cAAch9B,KAAK67B,YAAYl5B,OAAOs6B,QAAQ;MACtEj9B,KAAKyL,mBAAmB+L;;IAG1B5X,UAAUs9B;MACR,MAAMC,OAAO;MAEb,IAAID,UAAU,GAAG;QACf,SAAQ;;MAGV,IAAI1lB;MACJ,IAAI2f,QAAQ1xB,KAAKsI,KAAKmvB,SAAS;MAC/B/F,SAASA,QAAQ,IAAI,IAAI;MACzB,IAAIiG,SAASjG,QAAQ,IAAI;MAEzB,KAAK,IAAIv0B,KAAKw6B,QAAQx6B,KAAKw6B,QAAQx6B,KAAK;QACtC,IAAImF,IAAInF,IAAIw6B,SAASD;QACrB3lB,OAAOtV,KAAK,IAAIuD,KAAKoE,KAAK,IAAIpE,KAAKuE,MAAMvE,KAAKq3B,IAAIr3B,KAAK+pB,KAAK/pB,KAAKq3B,IAAI/0B,GAAG,KAAK;;MAG/E,IAAIs1B,SAAS7lB,OAAO7R,OAAO,CAACC,GAAGC,MAAMD,IAAIC,GAAG;MAC5C,OAAO2R,OAAO2jB,IAAImC,gBAAgBA,eAAeD;;IAGnDz9B,aAAaqM;MACX,IAAIsxB,UAAUv9B,KAAKy7B,UAAU;MAC7B,IAAIla,MAAMgc,YAAYA,UAAU,GAAG,OAAO;MAC1C,IAAIC,UAAUx9B,KAAK47B,UAAU;MAC7B,IAAIra,MAAMic,YAAYA,UAAU,GAAG,OAAO;MAC1C,IAAID,YAAY,KAAKC,YAAY,GAAG,OAAO;MAC3C,IAAIC,aAAaz9B,KAAKw7B;MACtB,IAAIja,MAAMkc,eAAeA,aAAa,GAAGA,aAAa;MACtDA,cAAc;MACd,IAAIA,aAAa,GAAGA,aAAa;MACjC,IAAIA,aAAa,GAAGA,aAAa;MACjC,IAAIC,KAAKzxB,UAAU5J;MACnB,IAAI0F,IAAI,GACJC,IAAI,GACJpF,IAAI,GACJ3B,IAAI,GACJ08B,KAAK,GACLC,KAAK,GACLC,KAAK,GACLt0B,IAAI,GACJgf,IAAI,GACJ1iB,IAAI,GACJD,IAAI,GACJk4B,KAAK,GACLC,KAAK,GACLC,KAAK,GACLC,KAAK;MACT,IAAIC,OAAOX,UAAUA,UAAU,IAAI;MACnC,IAAIY,OAAOX,UAAUA,UAAU,IAAI;MACnC,IAAIptB,IAAInE,UAAUvB,QAAQ;MAC1B,IAAI2F,IAAIpE,UAAUtB,SAAS;MAC3B,IAAIyzB,KAAKhuB,IAAI,IAAI;MACjB,IAAIiuB,KAAKhuB,IAAI,IAAI;MACjB,IAAIiuB,OAAOf,UAAU,IAAI;MACzB,IAAIgB,OAAOf,UAAU,IAAI;MACzB,IAAIgB;QACFj1B,GAAG;QACH1D,GAAG;QACH0iB,GAAG;QACH3iB,GAAG;;MAEL,IAAI64B,KAAKD;MAET,KAAK57B,IAAI,GAAGA,IAAIs7B,MAAMt7B,KAAK;QACzB67B,KAAKA,GAAG79B;UACN2I,GAAG;UACH1D,GAAG;UACH0iB,GAAG;UACH3iB,GAAG;;;MAIP64B,GAAG79B,IAAI49B;MACP,IAAIE;QACFn1B,GAAG;QACH1D,GAAG;QACH0iB,GAAG;QACH3iB,GAAG;;MAEL,IAAI+4B,KAAKD;MAET,KAAK97B,IAAI,GAAGA,IAAIu7B,MAAMv7B,KAAK;QACzB+7B,KAAKA,GAAG/9B;UACN2I,GAAG;UACH1D,GAAG;UACH0iB,GAAG;UACH3iB,GAAG;;;MAIP+4B,GAAG/9B,IAAI89B;MACP,IAAIE,KAAK;MACT,IAAIntB,MAAM4pB,WAAWwD,UAAUtB,WAAW;MAC1C,IAAIuB,MAAMzD,WAAW0D,UAAUxB,WAAW;MAC1C,IAAIyB,MAAM3D,WAAWwD,UAAUrB,WAAW;MAC1C,IAAIyB,MAAM5D,WAAW0D,UAAUvB,WAAW;MAE1C,OAAOC,eAAe,GAAG;QACvBI,KAAKD,KAAK;QACV,IAAIsB,KAAKztB;QACT,IAAI8Q,KAAKuc;QAET,KAAK92B,IAAIqI,KAAKrI,KAAK,KAAI;UACrBuB,IAAI+0B,QAAQR,KAAKJ,GAAGE,KAAK;UACzBrV,IAAI+V,QAAQP,KAAKL,GAAGE,KAAK,IAAI;UAC7B/3B,IAAIy4B,QAAQN,KAAKN,GAAGE,KAAK,IAAI;UAC7Bh4B,IAAI04B,QAAQL,KAAKP,GAAGE,KAAK,IAAI;UAC7Ba,KAAKD;UAEL,KAAK57B,IAAI07B,QAAQ17B,KAAK,KAAI;YACxB67B,GAAGl1B,IAAIu0B;YACPW,GAAGlW,IAAIwV;YACPU,GAAG54B,IAAIm4B;YACPS,GAAG74B,IAAIq4B;YACPQ,KAAKA,GAAG79B;;UAGV,KAAKgC,IAAI,GAAGA,IAAI07B,MAAM17B,KAAK;YACzB3B,IAAI28B,OAAOQ,KAAKx7B,IAAIw7B,KAAKx7B,MAAM,KAAK;YACpC2G,KAAKk1B,GAAGl1B,IAAIm0B,GAAGz8B;YACfsnB,KAAKkW,GAAGlW,IAAImV,GAAGz8B,IAAI;YACnB4E,KAAK44B,GAAG54B,IAAI63B,GAAGz8B,IAAI;YACnB2E,KAAK64B,GAAG74B,IAAI83B,GAAGz8B,IAAI;YACnBw9B,KAAKA,GAAG79B;;UAGVg+B,KAAKJ;UAEL,KAAKz2B,IAAI,GAAGA,IAAIqI,GAAGrI,KAAK;YACtB21B,GAAGE,QAAQr0B,IAAI21B,OAAO3c;YACtBmb,GAAGE,QAAQrV,IAAI2W,OAAO3c;YACtBmb,GAAGE,QAAQ/3B,IAAIq5B,OAAO3c;YACtBmb,GAAGE,QAAQh4B,IAAIs5B,OAAO3c;YACtBthB,IAAI48B,OAAO58B,IAAI8G,IAAIw1B,UAAU,KAAKa,KAAKn9B,IAAIm9B,OAAO;YAClD70B,KAAKq1B,GAAGr1B,KAAKq1B,GAAGr1B,IAAIm0B,GAAGz8B;YACvBsnB,KAAKqW,GAAGrW,KAAKqW,GAAGrW,IAAImV,GAAGz8B,IAAI;YAC3B4E,KAAK+4B,GAAG/4B,KAAK+4B,GAAG/4B,IAAI63B,GAAGz8B,IAAI;YAC3B2E,KAAKg5B,GAAGh5B,KAAKg5B,GAAGh5B,IAAI83B,GAAGz8B,IAAI;YAC3B29B,KAAKA,GAAGh+B;;UAGVi9B,MAAMztB;;QAGR8uB,KAAKF;QACLzc,KAAK0c;QAEL,KAAKl3B,IAAI,GAAGA,IAAIqI,GAAGrI,KAAK;UACtB61B,KAAK71B,KAAK,IAAI;UACdwB,IAAIg1B,QAAQT,KAAKJ,GAAGE,OAAO;UAC3BrV,IAAIgW,QAAQR,KAAKL,GAAGE,KAAK,IAAI,MAAM;UACnC/3B,IAAI04B,QAAQP,KAAKN,GAAGE,KAAK,IAAI,MAAM;UACnCh4B,IAAI24B,QAAQN,KAAKP,GAAGE,KAAK,IAAI,MAAM;UACnCe,KAAKD;UAEL,KAAK97B,IAAI,GAAGA,IAAI27B,MAAM37B,KAAK;YACzB+7B,GAAGp1B,IAAIu0B;YACPa,GAAGpW,IAAIwV;YACPY,GAAG94B,IAAIm4B;YACPW,GAAG/4B,IAAIq4B;YACPU,KAAKA,GAAG/9B;;UAGV+8B,KAAKvtB;UAEL,KAAKxN,IAAI,GAAGA,KAAK46B,SAAS56B,KAAK;YAC7Bg7B,KAAKD,KAAK51B,KAAK;YACfwB,KAAKo1B,GAAGp1B,IAAIm0B,GAAGE;YACfrV,KAAKoW,GAAGpW,IAAImV,GAAGE,KAAK;YACpB/3B,KAAK84B,GAAG94B,IAAI63B,GAAGE,KAAK;YACpBh4B,KAAK+4B,GAAG/4B,IAAI83B,GAAGE,KAAK;YACpBe,KAAKA,GAAG/9B;YAER,IAAIgC,IAAIy7B,IAAI;cACVV,MAAMvtB;;;UAIVwtB,KAAK71B;UACL62B,KAAKF;UAEL,IAAIjB,aAAa,GAAG;YAClB,KAAKz1B,IAAI,GAAGA,IAAIqI,GAAGrI,KAAK;cACtB/G,IAAI28B,MAAM;cACVF,GAAGz8B,IAAI,KAAKg9B,KAAKr4B,IAAIs5B,OAAO3c;cAE5B,IAAI0b,KAAK,GAAG;gBACVP,GAAGz8B,KAAKsI,IAAI21B,OAAO3c;gBACnBmb,GAAGz8B,IAAI,KAAKsnB,IAAI2W,OAAO3c;gBACvBmb,GAAGz8B,IAAI,KAAK4E,IAAIq5B,OAAO3c;qBAClB;gBACLmb,GAAGz8B,KAAKy8B,GAAGz8B,IAAI,KAAKy8B,GAAGz8B,IAAI,KAAK;;cAGlCA,IAAI8G,MAAM9G,IAAI+G,IAAIu2B,QAAQF,KAAKp9B,IAAIo9B,MAAMjuB,KAAK;cAC9C7G,KAAKq1B,GAAGr1B,KAAKq1B,GAAGr1B,IAAIm0B,GAAGz8B;cACvBsnB,KAAKqW,GAAGrW,KAAKqW,GAAGrW,IAAImV,GAAGz8B,IAAI;cAC3B4E,KAAK+4B,GAAG/4B,KAAK+4B,GAAG/4B,IAAI63B,GAAGz8B,IAAI;cAC3B2E,KAAKg5B,GAAGh5B,KAAKg5B,GAAGh5B,IAAI83B,GAAGz8B,IAAI;cAC3B29B,KAAKA,GAAGh+B;cACRg9B,MAAMxtB;;iBAEH;YACL,KAAKpI,IAAI,GAAGA,IAAIqI,GAAGrI,KAAK;cACtB/G,IAAI28B,MAAM;cACVF,GAAGz8B,IAAI,KAAKg9B,KAAKr4B,IAAIs5B,OAAO3c;cAE5B,IAAI0b,KAAK,GAAG;gBACVA,KAAK,MAAMA;gBACXP,GAAGz8B,MAAMsI,IAAI21B,OAAO3c,MAAM0b;gBAC1BP,GAAGz8B,IAAI,MAAMsnB,IAAI2W,OAAO3c,MAAM0b;gBAC9BP,GAAGz8B,IAAI,MAAM4E,IAAIq5B,OAAO3c,MAAM0b;qBACzB;gBACLP,GAAGz8B,KAAKy8B,GAAGz8B,IAAI,KAAKy8B,GAAGz8B,IAAI,KAAK;;cAGlCA,IAAI8G,MAAM9G,IAAI+G,IAAIu2B,QAAQF,KAAKp9B,IAAIo9B,MAAMjuB,KAAK;cAC9C7G,KAAKq1B,GAAGr1B,KAAKq1B,GAAGr1B,IAAIm0B,GAAGz8B;cACvBsnB,KAAKqW,GAAGrW,KAAKqW,GAAGrW,IAAImV,GAAGz8B,IAAI;cAC3B4E,KAAK+4B,GAAG/4B,KAAK+4B,GAAG/4B,IAAI63B,GAAGz8B,IAAI;cAC3B2E,KAAKg5B,GAAGh5B,KAAKg5B,GAAGh5B,IAAI83B,GAAGz8B,IAAI;cAC3B29B,KAAKA,GAAGh+B;cACRg9B,MAAMxtB;;;;;MAMd,OAAO;;;EAYXirB,WAAWwD,cAAaluCxD,WAAW0D,cAAasD3gCI,oBAAoB9zB;IACxBzL,YAAYw/B,gBAAgB,GAAGC,kBAAkB,GAAGC,iBAAiB,GAAGC,kBAAkB,GAAGC,YAAY,GAAGC,cAAc,GAAGC,aAAa,GAAGC,cAAc;MACzJh8B;MAMA3D,KAAKo/B,gBAAgBA;MAMrBp/B,KAAKq/B,kBAAkBA;MAMvBr/B,KAAKs/B,iBAAiBA;MAMtBt/B,KAAKu/B,kBAAkBA;MAMvBv/B,KAAKw/B,YAAYA;MAMjBx/B,KAAKy/B,cAAcA;MAMnBz/B,KAAK0/B,aAAaA;MAMlB1/B,KAAK2/B,cAAcA;MACnB3/B,KAAKyL;;IAYP7L,iBAAiB8L,IAAIC,OAAOC;MAC1BF,GAAGk0B,UAAUl0B,GAAGuvB,mBAAmBrvB,eAAe,qBAAqB5L,KAAKo/B,eAAep/B,KAAKq/B,iBAAiBr/B,KAAKs/B,gBAAgBt/B,KAAKu/B;MAC3I7zB,GAAGk0B,UAAUl0B,GAAGuvB,mBAAmBrvB,eAAe,iBAAiB5L,KAAKw/B,YAAY,KAAKx/B,KAAKy/B,cAAc,KAAKz/B,KAAK0/B,aAAa,KAAK1/B,KAAK2/B,cAAc;;IAO7J//B;MACE,OAAO,IAAIu/B,YAAYn/B,KAAKo/B,eAAep/B,KAAKq/B,iBAAiBr/B,KAAKs/B,gBAAgBt/B,KAAKu/B,iBAAiBv/B,KAAKw/B,WAAWx/B,KAAKy/B,aAAaz/B,KAAK0/B,YAAY1/B,KAAK2/B;;IAGtK//B,aAAaqM;MACX,IAAI5J,OAAO4J,UAAU5J;MACrB,MAAMK,IAAIL,KAAKM;MAEf,KAAK,IAAIC,IAAI,GAAGA,IAAIF,GAAGE,KAAK,GAAG;QAC7BP,KAAKO,KAAKP,KAAKO,KAAK5C,KAAKo/B,gBAAgBp/B,KAAKw/B;QAC9Cn9B,KAAKO,IAAI,KAAKP,KAAKO,IAAI,KAAK5C,KAAKq/B,kBAAkBr/B,KAAKy/B;QACxDp9B,KAAKO,IAAI,KAAKP,KAAKO,IAAI,KAAK5C,KAAKs/B,iBAAiBt/B,KAAK0/B;QACvDr9B,KAAKO,IAAI,KAAKP,KAAKO,IAAI,KAAK5C,KAAKu/B,kBAAkBv/B,KAAK2/B;;MAG1D,OAAO;;;QA8CLE;IACJjgC,YAAYkgC,YAAYC,UAAUtX,YAAYD;MAC5CxoB,KAAKggC,SAASF,YAAYC,UAAUtX,YAAYD;;IAalD5oB,SAASkgC,YAAYC,UAAUtX,YAAYD;MACzC,OAAOxoB,KAAKqH,QAAQ44B,YAAYH,YAAYC,UAAUtX,YAAYD;;IASpE5oB;MACE,OAAOI,KAAK2S,KAAKktB,YAAYK;;IAc/BtgC,YAAYkgC,YAAYC,UAAUtX,YAAYD;MAC5C,OAAOxoB,KAAKmgC,iBAAiBL,YAAYM,eAAeL,UAAUM,iBAAiB5X,YAAY6X,UAAU9X;;IAW3G5oB,iBAAiByR;MACf,IAAIA,UAAU,KAAKkQ,MAAMlQ,QAAQ;QAC/B,OAAOrR;;MAGTqR,QAAQrR,KAAKugC,YAAYlvB,OAAO;MAEhCrR,KAAKwgC,kBAAiB,GAAG,GAAG,GAAG,GAAGnvB,OAAO,GAAG,GAAG,GAAG,GAAGA,OAAO,GAAG,GAAG,GAAG,GAAGA,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;MAE1G,OAAOrR;;IAWTJ,eAAeyR;MACb,IAAIA,UAAU,KAAKkQ,MAAMlQ,QAAQ;QAC/B,OAAOrR;;MAGTqR,QAAQrR,KAAKugC,YAAYlvB,OAAO;MAChC,IAAItJ;MAEJ,IAAIsJ,QAAQ,GAAG;QACbtJ,IAAI,MAAMsJ,QAAQ,MAAM;aACnB;QACLtJ,IAAIsJ,QAAQ;QAEZ,IAAItJ,MAAM,GAAG;UACXA,IAAI83B,YAAYY,YAAYpvB;eACvB;UACLtJ,IAAI83B,YAAYY,YAAYpvB,SAAS,MAAM,IAAItJ,KAAK83B,YAAYY,aAAapvB,SAAS,KAAK,KAAKtJ;;QAGlGA,IAAIA,IAAI,MAAM;;MAGhB/H,KAAKwgC,kBAAiBz4B,IAAI,KAAK,GAAG,GAAG,GAAG,MAAO,MAAMA,IAAI,GAAGA,IAAI,KAAK,GAAG,GAAG,MAAO,MAAMA,IAAI,GAAG,GAAGA,IAAI,KAAK,GAAG,MAAO,MAAMA,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;MAE1J,OAAO/H;;IAWTJ,iBAAiByR;MACf,IAAIA,UAAU,KAAKkQ,MAAMlQ,QAAQ;QAC/B,OAAOrR;;MAGTqR,QAAQrR,KAAKugC,YAAYlvB,OAAO;MAChC,IAAItJ,IAAI,KAAKsJ,QAAQ,IAAI,IAAIA,QAAQ,MAAMA,QAAQ;MACnD,IAAIqvB,OAAO;MACX,IAAIC,OAAO;MACX,IAAIC,OAAO;MAEX5gC,KAAKwgC,kBAAiBE,QAAQ,IAAI34B,KAAKA,GAAG44B,QAAQ,IAAI54B,IAAI64B,QAAQ,IAAI74B,IAAI,GAAG,GAAG24B,QAAQ,IAAI34B,IAAI44B,QAAQ,IAAI54B,KAAKA,GAAG64B,QAAQ,IAAI74B,IAAI,GAAG,GAAG24B,QAAQ,IAAI34B,IAAI44B,QAAQ,IAAI54B,IAAI64B,QAAQ,IAAI74B,KAAKA,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;MAE/N,OAAO/H;;IAUTJ,UAAUyR;MACR,IAAIA,UAAU,KAAKkQ,MAAMlQ,QAAQ;QAC/B,OAAOrR;;MAGTqR,QAAQrR,KAAKugC,YAAYlvB,OAAO,OAAO,MAAM5L,KAAKuE;MAClD,IAAI62B,SAASp7B,KAAK+D,IAAI6H;MACtB,IAAIyvB,SAASr7B,KAAKgE,IAAI4H;MACtB,IAAIqvB,OAAO;MACX,IAAIC,OAAO;MACX,IAAIC,OAAO;MAEX5gC,KAAKwgC,kBAAiBE,OAAOG,UAAU,IAAIH,QAAQI,UAAUJ,MAAMC,OAAOE,UAAUF,OAAOG,UAAUH,MAAMC,OAAOC,UAAUD,OAAOE,UAAU,IAAIF,OAAO,GAAG,GAAGF,OAAOG,UAAUH,OAAOI,SAAS,MAAOH,OAAOE,UAAU,IAAIF,QAAQG,SAAS,KAAOF,OAAOC,UAAUD,OAAOE,UAAU,MAAO,GAAG,GAAGJ,OAAOG,UAAUH,OAAOI,WAAW,IAAIJ,OAAOC,OAAOE,UAAUF,OAAOG,SAASH,MAAMC,OAAOC,UAAU,IAAID,QAAQE,SAASF,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;MAEpc,OAAO5gC;;IAUTJ,OAAOiJ;MACLA,SAAS7I,KAAK+gC,WAAWl4B;MAEzB,IAAIA,OAAOlG,UAAUk9B,YAAYmB,QAAQ;QACvC,OAAOhhC;;MAGTA,KAAKwgC,gBAAgB33B;MAErB,OAAO7I;;IAOTJ;MACE,OAAO,IAAIigC,cAAcltB,KAAK3S;;IAQhCJ;MACE,MAAMqC;MACN,MAAMS,IAAIm9B,YAAYmB;MAEtB,KAAK,IAAIp+B,IAAI,GAAGA,IAAIF,GAAGE,KAAK;QAC1BX,IAAIW,KAAK5C,KAAK4C;;MAGhB,OAAOX;;IAUTrC,KAAKiJ;MACH,MAAMnG,IAAIm9B,YAAYmB;MAEtB,KAAK,IAAIp+B,IAAI,GAAGA,IAAIF,GAAGE,KAAK;QAC1B5C,KAAK4C,KAAKiG,OAAOjG;;MAGnB,OAAO5C;;IAQTJ;MACE,WAAWI,KAAKc,YAAYC;;IAQ9BnB,gBAAgBiJ;MACd,IAAI0vB;MAEJ,KAAK,IAAI31B,IAAI,GAAGA,IAAI,GAAGA,KAAK;QAC1B,KAAK,IAAIkuB,IAAI,GAAGA,IAAI,GAAGA,KAAK;UAC1ByH,IAAIzH,KAAK9wB,KAAK8wB,IAAIluB,IAAI;;QAGxB,KAAK,IAAIkuB,IAAI,GAAGA,IAAI,GAAGA,KAAK;UAC1B,IAAImQ,MAAM;UAEV,KAAK,IAAIrS,IAAI,GAAGA,IAAI,GAAGA,KAAK;YAC1BqS,OAAOp4B,OAAOioB,IAAIlC,IAAI,KAAK2J,IAAI3J;;UAGjC5uB,KAAK8wB,IAAIluB,IAAI,KAAKq+B;;;;IAYxBrhC,YAAYyR,OAAO6vB;MACjB,OAAOz7B,KAAKC,IAAIw7B,OAAOz7B,KAAK0oB,KAAK+S,OAAO7vB;;IAS1CzR,WAAWiJ;MACT,IAAIA,kBAAkBg3B,aAAa;QACjCh3B,SAASA,OAAOs4B;;MAGlB,IAAIt4B,OAAOlG,SAASk9B,YAAYmB,QAAQ;QACtCn4B,SAASA,OAAOvF,MAAM,GAAGuF,OAAOlG,QAAQy+B,OAAOvB,YAAYK,gBAAgB58B,MAAMuF,OAAOlG,QAAQk9B,YAAYmB;aACvG,IAAIn4B,OAAOlG,SAASk9B,YAAYmB,QAAQ;QAC7Cn4B,SAASA,OAAOvF,MAAM,GAAGu8B,YAAYmB;;MAGvC,OAAOn4B;;;EAYXg3B,YAAYY,cAAcnO,OAAO+O,SAAQ,GAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAK,MAAM,MAAM,MAAM,MAAM,KAAM,MAAM,MAAM,MAAM,MAAM,KAAM,MAAM,MAAM,MAAM,MAAM,KAAM,MAAM,GAAK,MAAM,MAAM,MAAM,KAAM,MAAM,MAAM,MAAM,GAAK,KAAK,KAAK,KAAK,KAAK,GAAK,KAAK,KAAK,KAAK,GAAK,KAAK,GAAK,KAAK,KAAK,GAAK,KAAK,KAAK,KAAK,GAAK,KAAK,KAAK,GAAK,KAAK,KAAK,KAAK;EASjmBxB,YAAYK,kBAAkB5N,OAAO+O,SAAQ,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;EASrHxB,YAAYmB,SAAS;QA+CfM,0BAA0Bj2B;IAC9BzL,YAAYiJ;MACVlF;MAMA3D,KAAK6I,SAASA;MACd7I,KAAKyL;;IAmBP7L,iBAAiB8L,IAAIC,OAAOC;MAC1B,IAAI21B,MAAMvhC,KAAK6I;MACf,IAAI24B,cAAc,IAAIC,eAAcF,IAAI,IAAIA,IAAI,IAAIA,IAAI,IAAIA,IAAI,IAAIA,IAAI,IAAIA,IAAI,IAAIA,IAAI,IAAIA,IAAI,IAAIA,IAAI,KAAKA,IAAI,KAAKA,IAAI,KAAKA,IAAI,KAAKA,IAAI,KAAKA,IAAI,KAAKA,IAAI,KAAKA,IAAI;MACvK71B,GAAGg2B,iBAAiBh2B,GAAGuvB,mBAAmBrvB,eAAe,iBAAiB,OAAO41B;MACjF91B,GAAGk0B,UAAUl0B,GAAGuvB,mBAAmBrvB,eAAe,uBAAuB21B,IAAI,KAAK,KAAKA,IAAI,KAAK,KAAKA,IAAI,MAAM,KAAKA,IAAI,MAAM;;IAOhI3hC;MACE,OAAO,IAAI0hC,kBAAkBthC,KAAK6I;;IAGpCjJ,aAAaqM;MACX,IAAI5J,OAAO4J,UAAU5J;MACrB,MAAMK,IAAIL,KAAKM;MACf,IAAI4G,GAAGgf,GAAG1iB,GAAGD;MACb,IAAI6L,MAAMzR,KAAK6I;MACf,IAAI84B,KAAKlwB,IAAI,IACTmwB,KAAKnwB,IAAI,IACTowB,KAAKpwB,IAAI,IACTqwB,KAAKrwB,IAAI,IACTswB,KAAKtwB,IAAI;MACb,IAAIuwB,KAAKvwB,IAAI,IACTwwB,KAAKxwB,IAAI,IACTywB,KAAKzwB,IAAI,IACT0wB,KAAK1wB,IAAI,IACT2wB,KAAK3wB,IAAI;MACb,IAAI4wB,MAAM5wB,IAAI,KACV6wB,MAAM7wB,IAAI,KACV8wB,MAAM9wB,IAAI,KACV+wB,MAAM/wB,IAAI,KACVgxB,MAAMhxB,IAAI;MACd,IAAIixB,MAAMjxB,IAAI,KACVkxB,MAAMlxB,IAAI,KACVmxB,MAAMnxB,IAAI,KACVoxB,MAAMpxB,IAAI,KACVqxB,MAAMrxB,IAAI;MAEd,KAAK,IAAI7O,IAAI,GAAGA,IAAIF,GAAGE,KAAK,GAAG;QAC7B2G,IAAIlH,KAAKO;QACT2lB,IAAIlmB,KAAKO,IAAI;QACbiD,IAAIxD,KAAKO,IAAI;QACbgD,IAAIvD,KAAKO,IAAI;QACbP,KAAKO,KAAK2G,IAAIo4B,KAAKpZ,IAAIqZ,KAAK/7B,IAAIg8B,KAAKj8B,IAAIk8B,KAAKC;QAE9C1/B,KAAKO,IAAI,KAAK2G,IAAIy4B,KAAKzZ,IAAI0Z,KAAKp8B,IAAIq8B,KAAKt8B,IAAIu8B,KAAKC;QAElD//B,KAAKO,IAAI,KAAK2G,IAAI84B,MAAM9Z,IAAI+Z,MAAMz8B,IAAI08B,MAAM38B,IAAI48B,MAAMC;QAEtDpgC,KAAKO,IAAI,KAAK2G,IAAIm5B,MAAMna,IAAIoa,MAAM98B,IAAI+8B,MAAMh9B,IAAIi9B,MAAMC;;MAGxD,OAAO;;;QA+DLC;IACJnjC,YAAYK,QAAQ+iC,WAAW,OAAOC,YAAY,QAAQC,YAAY,QAAQzP,OAAO,OAAO3iB,SAASqyB;MACnG,KAAKljC,OAAOkB,kBAAkB;QAC5B;;MASFnB,KAAKC,SAASA;MAOdD,KAAKijC,YAAYA;MAOjBjjC,KAAKgjC,WAAWA;MAOhBhjC,KAAKkjC,YAAYA,aAAa;MAO9BljC,KAAKyzB,OAAOA;MAMZzzB,KAAKojC,aAAa;MAMlBpjC,KAAKqjC,UAAU;MAMfrjC,KAAKsjC,WAAW;MAChBrjC,OAAOoV,gBAAgB;MAEvBrV,KAAKujC,UAAU;MACfvjC,KAAKsC;MAEL,IAAIwO,SAAS;QACX,IAAIqyB,UAAU;UACZryB,QAAQ2hB,iBAAiB;UACzB3hB,QAAQuS,eAAevS,QAAQuS,YAAY8f;;QAG7CljC,OAAO6Q,UAAUA;;;IASrByyB;MACE,OAAOvjC,KAAKsjC;;IAGdC,YAAYA;MACV,IAAIA,YAAYvjC,KAAKsjC,UAAU;QAC7B;;MAGF,IAAIjgC,IAAIrD,KAAKC;MACbD,KAAKsjC,WAAWC;MAEhB,IAAIA,SAAS;QACXlgC,EAAE0N,SAAS;QACX1N,EAAElC,iBAAiB,YAAYnB;QAC/BqD,EAAElC,iBAAiB,WAAWnB;QAC9BqD,EAAElC,iBAAiB,aAAanB;QAChCqD,EAAElC,iBAAiB,WAAWnB;QAE9B,IAAIqD,EAAEyxB,QAAQ;UACZzxB,EAAEmgC,UAAUngC,EAAEyxB;UACdzxB,EAAEyxB,SAAS90B,KAAK80B;;aAEb;QACLzxB,EAAE0N,SAAS;QACX1N,EAAEhC,oBAAoB,YAAYrB;QAClCqD,EAAEhC,oBAAoB,WAAWrB;QACjCqD,EAAEhC,oBAAoB,aAAarB;QACnCqD,EAAEhC,oBAAoB,WAAWrB;QAEjC,IAAIqD,EAAEmgC,SAAS;UACbngC,EAAEyxB,SAASzxB,EAAEmgC;iBACNngC,EAAEmgC;;;;IAUf5jC;MACE,WAAWI,KAAKc,YAAYC;;IAQ9BnB,YAAY2C;MACV,IAAIkhC,OACAnpB,IAAIta,KAAKC,QACTJ,OAAO0C,IAAI1C;MAEf,IAAIA,SAAS,aAAa;QACxBG,KAAKojC,aAAa;QAClBK,QAAQzjC,KAAKkjC;aACR,IAAIrjC,SAAS,WAAW;QAC7BG,KAAKojC,aAAa;QAClBK,QAAQzjC,KAAKqjC,UAAUrjC,KAAKijC,YAAYjjC,KAAKgjC;aACxC,IAAInjC,SAAS,YAAY;QAC9BG,KAAKqjC,UAAU;QACfI,QAAQzjC,KAAKojC,aAAapjC,KAAKkjC,YAAYljC,KAAKijC;aAC3C;QAELjjC,KAAKqjC,UAAU;QACfI,QAAQzjC,KAAKojC,aAAapjC,KAAKijC,YAAYjjC,KAAKgjC;;MAGlD,IAAIhjC,KAAKyzB,MAAM;QACbnZ,EAAE8F,eAAe9F,EAAE8F,YAAYqjB;aAC1B;QACLnpB,EAAE+I,eAAe/I,EAAE+I,YAAYogB;;;IASnC7jC;MAEE,IAAIqB,IAAIjB,KAAK8D;MAEb9D,KAAKwjC;MAELxjC,KAAK8D,SAAS7C;;;EAgDlB,IAAIyiC,UAAUC;IAKZ/jC;MACE,UAAU,kBAAkBmF,UAC5BA,OAAO6+B,kBAAkB7+B,OAAO8+B,UAAUC,mBAAmB,KAC1D/+B,OAAOg/B,gBAAgBh/B,OAAO8+B,UAAUG,iBAAiB;;IAc9DpkC,OAAO+L,OAAOs4B,cAAc,OAAOC,eAAe;MAChD,KAAKv4B,UAAUA,MAAMmJ,WAAW9U,KAAKmkC,eAAe;QAClD,OAAO;;MAGT,IAAIx4B,MAAMy4B,SAAS;QACjB,OAAO;;MAITz4B,MAAMy4B;QACJC;QACAC,aAAaL;QACbtmB,iBAAiBumB;QACjB/M,OAAO;;MAIT,IAAI,kBAAkBpyB,QAAQ;QAC5B/E,KAAKukC,YAAY54B;aACZ,IAAI5G,OAAOg/B,gBAAgBh/B,OAAO6+B,gBAAgB;QACvD5jC,KAAKwkC,WAAW74B;;MAGlB,OAAO;;IAOT/L,QAAQ+L;MACN,KAAKA,OAAO;QACV;;MAGF,IAAI,kBAAkB5G,QAAQ;QAC5B/E,KAAKykC,aAAa94B;aACb,IAAI5G,OAAOg/B,gBAAgBh/B,OAAO6+B,gBAAgB;QACvD5jC,KAAK0kC,YAAY/4B;;aAGZA,MAAMy4B;;IAOfxkC,YAAY+L;MACV,IAAImJ,SAASnJ,MAAMmJ;MAEnB,IAAIhQ,IAAI6G,MAAMy4B,QAAQt/B,IAAI9B,CAAAA,KAAKhD,KAAK2kC,iBAAiBh5B,OAAO3I;MAE5D8R,OAAO3T,iBAAiB,cAAc2D,GAAG;MACzCgQ,OAAO3T,iBAAiB,aAAa2D,GAAG;MACxCgQ,OAAO3T,iBAAiB,YAAY2D,GAAG;MACvCgQ,OAAO3T,iBAAiB,eAAe2D,GAAG;;IAO5ClF,aAAa+L;MACX,IAAImJ,SAASnJ,MAAMmJ;MAEnB,KAAKA,QAAQ;QACX;;MAGF,IAAIhQ,IAAI6G,MAAMy4B,QAAQt/B;MACtBgQ,OAAOzT,oBAAoB,cAAcyD,GAAG;MAC5CgQ,OAAOzT,oBAAoB,aAAayD,GAAG;MAC3CgQ,OAAOzT,oBAAoB,YAAYyD,GAAG;MAC1CgQ,OAAOzT,oBAAoB,eAAeyD,GAAG;;IAQ/ClF,iBAAiB+L,OAAO3I;MACtB,KAAK2I,OAAO;QACV;;MAGF,IAAIA,MAAMy4B,QAAQzmB,gBAAgB;QAChC3a,EAAE2a,kBAAkB3a,EAAE2a;;MAGxB,IAAIinB,UAAU5hC,EAAE6hC;MAChB,IAAIhlC,OAAOmD,EAAEnD;MACb,MAAM6C,IAAIkiC,QAAQjiC;MAElB,KAAK,IAAImiC,SAASF,SAAS;QACzB,IAAIp0B,KAAKs0B,MAAMC;QAEf,IAAID,MAAM7kC,UAAU0L,MAAMmJ,QAAQ;UAChC;;QAGF,IAAIjV,SAAS,cAAc;UACzBG,KAAKglC,aAAar5B,OAAO6E,IAAIxN,GAAG8hC,MAAMjoB,OAAOioB,MAAMhoB;eAC9C,IAAIjd,SAAS,aAAa;UAC/BG,KAAKilC,YAAYt5B,OAAO6E,IAAIxN,GAAG8hC,MAAMjoB,OAAOioB,MAAMhoB;eAC7C,IAAIjd,SAAS,cAAcA,SAAS,eAAe;UACxDG,KAAKklC,WAAWv5B,OAAO6E,IAAIxN;;;;IASjCpD,WAAW+L;MACT,IAAImJ,SAASnJ,MAAMmJ;MAEnB,IAAIhQ,IAAI6G,MAAMy4B,QAAQt/B,IAAI9B,CAAAA,KAAKhD,KAAKmlC,gBAAgBx5B,OAAO3I;MAE3D,IAAI+B,OAAOg/B,iBAAiBz3B,WAAW;QACrCwI,OAAO3T,iBAAiB,iBAAiB2D,GAAG;QAC5CC,OAAO5D,iBAAiB,iBAAiB2D,GAAG;QAC5CC,OAAO5D,iBAAiB,eAAe2D,GAAG;QAC1CC,OAAO5D,iBAAiB,mBAAmB2D,GAAG;QAE9C,IAAI6G,MAAMy4B,QAAQzmB,gBAAgB;UAChC7I,OAAOsJ,MAAMgnB,gBAAgB;;aAE1B;QACLtwB,OAAO3T,iBAAiB,eAAe2D,GAAG;QAC1CC,OAAO5D,iBAAiB,eAAe2D,GAAG;QAC1CC,OAAO5D,iBAAiB,aAAa2D,GAAG;QACxCC,OAAO5D,iBAAiB,iBAAiB2D,GAAG;QAE5C,IAAI6G,MAAMy4B,QAAQzmB,gBAAgB;UAChC7I,OAAOsJ,MAAMinB,cAAc;;;MAI/B15B,MAAMy4B,QAAQkB;;IAOhB1lC,YAAY+L;MACV,IAAI7G,IAAI6G,MAAMy4B,QAAQt/B;MAEtB,IAAIC,OAAOg/B,iBAAiBz3B,WAAW;QACrCvH,OAAO1D,oBAAoB,iBAAiByD,GAAG;QAC/CC,OAAO1D,oBAAoB,eAAeyD,GAAG;QAC7CC,OAAO1D,oBAAoB,mBAAmByD,GAAG;QAEjD,IAAI6G,MAAMmJ,QAAQ;UAChBnJ,MAAMmJ,OAAOzT,oBAAoB,iBAAiByD,GAAG;;aAElD;QACLC,OAAO1D,oBAAoB,eAAeyD,GAAG;QAC7CC,OAAO1D,oBAAoB,aAAayD,GAAG;QAC3CC,OAAO1D,oBAAoB,iBAAiByD,GAAG;QAE/C,IAAI6G,MAAMmJ,QAAQ;UAChBnJ,MAAMmJ,OAAOzT,oBAAoB,eAAeyD,GAAG;;;;IAUzDlF,gBAAgB+L,OAAO3I;MACrB,KAAK2I,OAAO;QACV;;MAGF,IAAIA,MAAMy4B,QAAQzmB,gBAAgB;QAChC3a,EAAE2a,kBAAkB3a,EAAE2a;;MAGxB,IAAI9d,OAAOmD,EAAEnD;MACb,IAAI2Q,KAAKxN,EAAEqb;MACX,IAAIknB,MAAM55B,MAAMy4B,QAAQkB;MAExB,IAAIzlC,SAAS,mBAAmBA,SAAS,eAAe;QACtD,IAAImD,EAAEwiC,cAAc75B,MAAMmJ,QAAQ;UAChC;;QAGFywB,IAAI/0B,MAAM;QAEVxQ,KAAKglC,aAAar5B,OAAO6E,IAAIxN,GAAGA,EAAE6Z,OAAO7Z,EAAE8Z;aACtC,IAAIyoB,IAAI/0B,KAAK;QAElB,IAAI3Q,SAAS,mBAAmBA,SAAS,eAAe;UACtDG,KAAKilC,YAAYt5B,OAAO6E,IAAIxN,GAAGA,EAAE6Z,OAAO7Z,EAAE8Z;eACrC,IAAIjd,SAAS,iBAAiBA,SAAS,qBAAqBA,SAAS,eAAeA,SAAS,iBAAiB;iBAC5G0lC,IAAI/0B;UAEXxQ,KAAKklC,WAAWv5B,OAAO6E,IAAIxN;;;;IAajCpD,aAAa+L,OAAO6E,IAAIxN,GAAG+E,GAAGC;MAC5B,IAAInH,QAAQ8K,MAAMy4B;MAElB,KAAKvjC,MAAMyjC,cAAczjC,MAAMs2B,OAAO;QACpC;;MAGF,IAAIoO,MAAM1kC,MAAMwjC;MAEhB,IAAIkB,IAAI/0B,KAAK;QACX;;MAGF+0B,IAAI/0B,MAAM;MACV3P,MAAMs2B;MAENxrB,MAAM+R,mBAAmBlN,IAAIxN,GAAG+E,GAAGC;;IAWrCpI,YAAY+L,OAAO6E,IAAIxN,GAAG+E,GAAGC;MAC3B,KAAK2D,MAAMy4B,QAAQC,SAAS7zB,KAAK;QAC/B;;MAGF7E,MAAMiR,mBAAmBpM,IAAIxN,GAAG+E,GAAGC;;IASrCpI,WAAW+L,OAAO6E,IAAIxN;MAEpB,IAAInC,QAAQ8K,MAAMy4B;MAClB,IAAImB,MAAM1kC,MAAMwjC;MAEhB,KAAKkB,IAAI/0B,KAAK;QACZ;;MAGF3P,MAAMs2B;MAENxrB,MAAM2R,iBAAiB9M,IAAIxN,GAAG;aAEvBuiC,IAAI/0B;;;QAmDTi1B,2BAA2BzkC;IAC/BpB,YAAYgF,YAAY;MACtBjB;MASA3D,KAAKq4B,WAAW;MAShBr4B,KAAK0lC,YAAY;MAMjB1lC,KAAK4f,cAAc;MASnB5f,KAAKuM,QAAQ;MAObvM,KAAK2lC,UAAU;MAUf3lC,KAAK4lC,YAAY;MASjB5lC,KAAK6lC,YAAY;MAQjB7lC,KAAK4E,YAAYA;MAMjB5E,KAAK21B;MAML31B,KAAK01B;MAML11B,KAAK61B,QAAQ;MAMb71B,KAAK8lC,kBAAkB;MAMvB9lC,KAAK+lC,SAAS;MAMd/lC,KAAKgmC,WAAW;MAMhBhmC,KAAKimC,SAAS;;IAsBhBrmC,SAASsmC,QAAQ9mB,YAAY7S,QAAQ,GAAG45B,eAAeC;MACrD,IAAIpmC,KAAK61B,OAAO;QACd,MAAM4P,mBAAmBY;;MAG3B,IAAIt7B,OAAOqU,cAAc8mB,OAAO/xB,UAAU+xB,OAAOI,iBAAiBJ,OAAO74B,aAAa64B,OAAO74B;MAE7F,KAAKtC,MAAM;QACT,OAAO;;MAGT,OAAO/K,KAAK21B,QAAQzzB;QAClBgkC,QAAAA;QACA9mB,YAAYrU;QACZwB,OAAAA;QACAg6B,OAAOJ;QACP9jC,MAAM+jC;QACNpwB,OAAOhW,KAAK21B,QAAQhzB;QACpBgI,QAAQI,KAAKJ,SAAS4B;WACnB;;IAeP3M,aAAamB,MAAMkgB,QAAQC,MAAMH;MAC/B,IAAI/gB,KAAK61B,OAAO;QACd,MAAM4P,mBAAmBY;;MAG3BrmC,KAAK01B,YAAY30B;QACfkgB,QAAAA;QACAC,MAAAA;QACAH,OAAAA;;;IA2BJnhB,aAAasmC,QAAQ9mB,YAAY7S,QAAQ,GAAG45B,eAAeC,WAAWI;MACpE,IAAIxmC,KAAK61B,OAAO;QACd,MAAM4P,mBAAmBY;;MAG3B,IAAII,QAAQP,OAAOvT;MACnB,IAAI5nB,OAAOqU,cAAc8mB,OAAO/xB,UAAU+xB,OAAOI,iBAAiBJ,OAAO74B,aAAa64B,OAAO74B;MAE7F,KAAKtC,SAAS07B,OAAO;QACnB;;MAGF,IAAIC,iBAAiB1mC,KAAK21B,QAAQhzB;MAClC,MAAM2wB,WAAW4S,OAAO7T,SAASiB;MAEjC,KAAK,IAAI1wB,IAAI,GAAGA,IAAI0wB,UAAU1wB,KAAK;QACjC,IAAI2G,IAAIk9B,SAASA,MAAM7jC,KAAK6jC,MAAM7jC,KAAKmI;QACvC/K,KAAK2mC,SAAST,QAAQ38B,GAAGgD,OAAOvM,KAAK4mC;UACnChkC,GAAAA;UACAkC,GAAGqhC;UACH99B,GAAG+9B;;;MAIP,MAAMhT,SAAS8S,OAAO7T,SAASwU;MAC/B,IAAIC;MAEJ,KAAK,IAAIlmC,KAAKwyB,QAAQ;QACpB0T,KAAK5kC;UACH8T,OAAOod,OAAOxyB;UACd6iC,OAAO7iC;;;MAIX,IAAIkmC,KAAKnkC,QAAQ;QACfmkC,KAAKzwB,KAAK,CAACzQ,GAAGC,MAAMD,EAAEoQ,QAAQnQ,EAAEmQ;QAEhC,KAAK,IAAIpT,IAAI,GAAGF,IAAIokC,KAAKnkC,QAAQC,IAAIF,GAAGE,KAAK;UAC3C,IAAI6gC,QAAQqD,KAAKlkC,GAAG6gC;UACpB,IAAI7J,QAAQ8M,iBAAiBI,KAAKlkC,GAAGoT;UACrC,IAAIqL,MAAMqlB,kBAAkB9jC,MAAMF,IAAI,IAAI4wB,WAAWwT,KAAKlkC,IAAI,GAAGoT;UACjE,IAAIiL;UAEJ,KAAK,IAAIre,IAAIg3B,OAAOh3B,IAAIye,KAAKze,KAAK;YAChCqe,OAAO/e,KAAKU;;UAGd,IAAI4jC,eAAe;YACjB/C,QAAQ+C,cAAc/C,OAAOyC,QAAQtM,OAAOvY;YAE5C,KAAKoiB,OAAO;cACV;;;UAIJzjC,KAAK+mC,aAAatD,OAAOxiB,QAAQ;;;;IAWvCrhB;MACE,IAAII,KAAK61B,OAAO;QACd,MAAM4P,mBAAmBY;;MAG3BrmC,KAAKgnC;MAEL,OAAOhnC,KAAKinC,aAAa;MAEzBjnC,KAAKknC;MAEL,OAAOlnC,KAAK4f;;IAUdhgB,WAAWgmC;MACT,IAAI5lC,KAAK61B,OAAO;QACd,MAAM4P,mBAAmBY;;MAG3BrmC,KAAK4lC,YAAYA;MAEjB5lC,KAAKgnC;MAELhnC,KAAKgmC,WAAWt/B,WAAW,MAAM1G,KAAKmnC,QAAQ,KAAK1hC,KAAK0oB,IAAI,KAAM1oB,KAAKC,IAAI,KAAM1F,KAAK4lC,aAAa,OAAQ;;IAO7GhmC;MACEyF,aAAarF,KAAKgmC;MAClBhmC,KAAK61B,QAAQ;;IASfj2B;MACE,WAAWI,KAAKc,YAAYC;;IAO9BnB;MACE,IAAIm9B,MAAM/8B,KAAK2lC,WAAW;MAC1B3lC,KAAK6lC,WAAW;MAChB7lC,KAAK4f,cAAc;MACnB5f,KAAK+lC,SAAS;MACd/lC,KAAKimC,SAASjmC,KAAKuM;MACnB,IAAI66B;MACJpnC,KAAK61B;QACHa;QACAzV,QAAQmmB;QACRxiC,WAAW5E,KAAK4E;QAChB2xB,YAAYv2B,KAAK01B;;MAInB,IAAIzU,SAASjhB,KAAK21B,QAAQryB;MAE1B2d,OAAO5K,KAAK,CAACzQ,GAAGC,MAAMD,EAAE+E,UAAU9E,EAAE8E,UAAU,IAAI;MAElD,IAAIsW,OAAOA,OAAOte,SAAS,GAAGgI,SAASoyB,MAAM,IAAI/8B,KAAK0lC,WAAW;QAC/D,MAAMD,mBAAmB4B;;MAG3B,IAAIr/B,IAAI,GACJD,IAAI;MACR,IAAIuX,MAAM;MAEV,OAAO2B,OAAOte,QAAQ;QACpB,IAAIU,IAAIrD,KAAKsnC,SAASrmB,QAAQjZ,GAAGsX,KAAK8nB,YAAYrK;QAElD,IAAI15B,EAAE+M,IAAIrI,GAAG;UACXA,IAAI1E,EAAE+M;;QAGRpI,KAAK3E,EAAEgN;QAEP,KAAKhN,EAAEgN,MAAM4Q,OAAOte,QAAQ;UAC1B,IAAImS,SAAS/P,OAAO6J,YAAYA,SAASC,eAAeD,SAASC,iBAAiBC,SAASC,cAAc;UACzG+F,OAAOpK,QAAQ1K,KAAKunC,SAASx/B,GAAG/H,KAAKq4B;UACrCvjB,OAAOnK,SAAS3K,KAAKunC,SAASv/B,GAAGhI,KAAK0lC;UACtC1lC,KAAK61B,MAAMa,OAAOpX,OAAOxK;UAEzB,KAAKzR,EAAEgN,GAAG;YACRtI,IAAIC,IAAI;YACRsX;;;;;IAUR1f,qBAAqBsmC,QAAQ7jC;MAC3B,IAAImlC,KAAKtB,OAAOzT;MAChByT,OAAOzT,iBAAiB;MACxByT,OAAO7iB,YAAYhhB,KAAKO;MACxBsjC,OAAOzT,iBAAiB+U;MACxBnlC,KAAKyC,KAAKzC,KAAKyC,EAAEohC,QAAQ7jC,KAAKgG,GAAGhG,KAAKO;;IAQxChD,SAAS6nC,MAAMtZ;MACb,IAAI2O,MAAM;MAEV,OAAOr3B,KAAKq3B,IAAI,KAAKA,OAAO2K,MAAM;MAElC,OAAOhiC,KAAKC,IAAIyoB,KAAK1oB,KAAKq3B,IAAI,GAAGA;;IAYnCl9B,SAASqhB,QAAQjZ,GAAGsX,KAAK8nB,YAAYrK;MACnC,IAAI3sB,IAAIpQ,KAAKq4B;MACb,IAAIqP,OAAO1nC,KAAK0lC;MAChB19B,KAAK+0B;MACL,IAAI1sB,IAAIq3B,OAAO1/B;MACf,IAAID,IAAIg1B;MACR,IAAIpyB,SAAS;MAEb,KAAK,IAAI/H,IAAIqe,OAAOte,SAAS,GAAGC,KAAK,GAAGA,KAAK;QAC3C,IAAIke,QAAQG,OAAOre;QACnB,IAAI+kC,KAAK3nC,KAAKimC,SAASnlB,MAAMvU;QAC7B,IAAIxB,OAAO+V,MAAM1B;QACjB,IAAI8mB,SAASplB,MAAMolB;QACnB,IAAI0B,KAAKniC,KAAKoiC,MAAMF,KAAK58B,KAAKhD,IAAIg1B;QAClC,IAAI+K,KAAKriC,KAAKoiC,MAAMF,KAAK58B,KAAK/C,IAAI+0B;QAClC,IAAIgL,KAAKtiC,KAAKsI,KAAK45B,KAAK58B,KAAKJ,SAASoyB,MAAM;QAC5C,IAAIiL,KAAKviC,KAAKsI,KAAK45B,KAAK58B,KAAKL,QAAQqyB,MAAM;QAE3C,IAAIiL,KAAK53B,GAAG;UACV,MAAMq1B,mBAAmB4B;;QAG3B,IAAIU,KAAK13B,KAAKtI,IAAIigC,KAAK53B,GAAG;UACxB;;QAGF0Q,MAAMxB,MAAMA;QACZwB,MAAM/V,OAAO,IAAIN,UAAU1C,GAAGC,GAAGggC,IAAID;QACrCp9B,SAASA,UAAUo9B;QACnB9mB,OAAOpe,OAAOD,GAAG;QACjBwkC,WAAWtmB,MAAM9K,WAAUjO,GAAGC,GAAGggC,IAAID,IAAIzoB,KAAK7Z,KAAKwiC,OAAOL,KAAKD,KAAKzB,OAAO78B,OAAO0zB,MAAMt3B,KAAKwiC,OAAOH,KAAKH,KAAKzB,OAAO58B,OAAOyzB;QAC5Hh1B,KAAKigC;;MAGP;QACE53B,GAAGrI;QACHsI,GAAG1F;;;IAQP/K;MACEI,KAAK4f,cAAc,IAAI6V,YAAYz1B,KAAK61B;MACxC71B,KAAK61B,QAAQ;MACb71B,KAAK6lC,WAAW;MAChB7lC,KAAKyB,cAAc;;IAOrB7B;MACE,IAAIsoC,KAAKziC,KAAK0oB,IAAI,KAAM1oB,KAAKC,IAAI,KAAM1F,KAAK4lC,aAAa,OAAQ;MACjE,IAAItrB,IAAI,IAAIja,OAAOC,YAAY4nC;MAC/B,IAAI7nB,WAAW;MAEf,OAAO/F,IAAI,IAAIja,OAAOC,WAAW;QAC/B,KAAKN,KAAKinC,aAAa;UACrB5mB,WAAW;UACX;;;MAIJ,IAAIA,UAAU;QACZrgB,KAAKknC;aACA;QACLlnC,KAAKgmC,WAAWt/B,WAAW,MAAM1G,KAAKmnC,QAAQ,KAAKe;;MAGrD,IAAIjnC,IAAIjB,KAAK6lC,WAAW7lC,KAAK+lC,SAAS/lC,KAAK21B,QAAQhzB;MAEnD,IAAI3C,KAAKwB,iBAAiB,aAAa;QACrC,IAAIe,MAAM,IAAI5C,MAAM;QACpB4C,IAAIsjC,WAAW5kC;QACfjB,KAAKyB,cAAcc;;;IASvB3C;MACE,IAAIkhB,QAAQ9gB,KAAK21B,QAAQ31B,KAAK+lC;MAC9B,IAAI4B,KAAK7mB,MAAMvU,QAAQvM,KAAKimC;MAC5B,IAAIl7B,OAAO+V,MAAM/V;MACjB,IAAIqU,aAAa0B,MAAM1B;MACvB,IAAItK,SAAS9U,KAAK61B,MAAMa,OAAO5V,MAAMxB;MACrC,IAAIzT,MAAMiJ,OAAOrF,WAAW;MAC5BqR,MAAMylB,SAASzlB,MAAMylB,MAAMzlB,MAAMolB,QAAQplB,MAAMze;MAC/CwJ,IAAI8D;MACJ9D,IAAI8N;MACJ9N,IAAId,KAAKA,KAAKhD,GAAGgD,KAAK/C,GAAG+C,KAAKL,OAAOK,KAAKJ;MAC1CkB,IAAIkG;MACJlG,IAAIiE,UAAUrK,KAAKsI,KAAKhD,KAAKhD,IAAIqX,WAAWrX,IAAI4/B,KAAKliC,KAAKsI,KAAKhD,KAAK/C,IAAIoX,WAAWpX,IAAI2/B;MACvF97B,IAAIU,MAAMo7B,IAAIA;MACd7mB,MAAMolB,OAAOn2B,KAAKlE;MAElBA,IAAImE;MACJ,SAAShQ,KAAK+lC,SAAS/lC,KAAK21B,QAAQhzB;;;EAWxC8iC,mBAAmB4B,iBAAiB;EAQpC5B,mBAAmBY,cAAc;EAuDjC,IAAI8B,qBAAqBC;IAKvBC,gBAAgBx5B;IAMhBy5B;MACE,OAAOtoC,KAAKqoC,eAAe54B,WAAW;;IAmBxC7P,aAAaggB,aAAaC;MACxB,IAAI0B,MAAM1B,mBAAmB;QAC3BA,mBAAmBD,YAAY4B,aAAa3B,kBAAkBoB,OAAO;;MAGvE,IAAI5e,OAAOud,YAAYW,SAASV;MAEhC,KAAKxd,MAAM;QACT,OAAO;;MAGT,IAAIkH,IAAIlH,KAAK0I;MACb,IAAI+J,SAAS9U,KAAKqoC;MAClBvzB,OAAOpK,QAAQnB,EAAEmB;MACjBoK,OAAOnK,SAASpB,EAAEoB;MAElB3K,KAAKsoC,gBAAgB55B,UAAUrM,KAAK6c,OAAO3V,EAAExB,GAAGwB,EAAEvB,GAAGuB,EAAEmB,OAAOnB,EAAEoB,QAAQ,GAAG,GAAGpB,EAAEmB,OAAOnB,EAAEoB;MAEzF,IAAI2U,MAAMxQ,SAASC,cAAc;MACjCuQ,IAAIH,MAAMrK,OAAOrG,UAAU;MAC3B,OAAO6Q;;IAUT1f,MAAMggB,aAAauX,OAAO9mB,GAAG6gB;MAC3B,IAAI2G,OAAOjY,YAAYgW;MACvB,IAAI9gB,SAAS9U,KAAKqoC;MAClB,IAAIx8B,MAAM7L,KAAKsoC;MACf,MAAMC,KAAK1Q,KAAKl1B,SAASw0B;MAEzB,KAAK,IAAIv0B,IAAI,GAAGA,IAAI2lC,IAAI3lC,KAAK;QAC3B,IAAIuc,MAAM0Y,KAAKj1B;QACfuc,IAAIqpB,QAAQ5lC;QAEZiJ,IAAIgE,aAAa,GAAG,GAAG,GAAG,GAAG,GAAG;QAChChE,IAAI6D,UAAU,GAAG,GAAGoF,OAAOpK,QAAQ,GAAGoK,OAAOnK,SAAS;QACtDmK,OAAOpK,QAAQyU,IAAIzU;QACnBoK,OAAOnK,SAASwU,IAAIxU;QACpBkB,IAAIgE,aAAaQ,KAAK,IAAI,GAAG,GAAG,GAAG6gB,KAAK,IAAI,GAAG7gB,IAAI8O,IAAIzU,QAAQ,GAAGwmB,IAAI/R,IAAIxU,SAAS;QACnFkB,IAAI6C,UAAUyQ,KAAK,GAAG;QACtB,IAAIG,MAAMxQ,SAASC,cAAc;QACjCuQ,IAAIH,MAAMrK,OAAOrG,UAAU;QAE3B6Q,IAAI5U,QAAQyU,IAAIzU,SAASyU,IAAIE;QAC7BC,IAAI3U,SAASwU,IAAIxU,UAAUwU,IAAI6Y;QAC/BH,KAAK31B,KAAKod;;MAGZ,IAAI2B,SAASrB,YAAY+V;MACzB,MAAM8S,KAAKxnB,OAAOte,SAASw0B;MAE3B,KAAK,IAAIv0B,IAAI,GAAGA,IAAI6lC,IAAI7lC,KAAK;QAC3B,IAAIuc,MAAM8B,OAAOre;QACjB,IAAImI,OAAOoU,IAAIpU,KAAKhI;QACpB,IAAIuc,MAAMuY,KAAK1Y,IAAID,MAAMspB,QAAQD,KAAKpR;QACtC,IAAIrW;UACF5B,OAAOI;UACPvU,MAAAA;UACA1B,MAAM8V,IAAI9V;UACVC,MAAM6V,IAAI7V;;QAGZ,IAAI+G,GAAG;UACLtF,KAAKhD,KAAKuX,IAAI5U,SAAS4U,IAAID,gBAAgBtU,KAAKhD,IAAIgD,KAAKL;UAEzDoW,MAAMzX,OAAO0B,KAAKL,QAAQyU,IAAI9V;;QAGhC,IAAI6nB,GAAG;UACLnmB,KAAK/C,KAAKsX,IAAI3U,UAAU2U,IAAI0Y,iBAAiBjtB,KAAK/C,IAAI+C,KAAKJ;UAE3DmW,MAAMxX,OAAOyB,KAAKJ,SAASwU,IAAI7V;;QAGjC2X,OAAO/e,KAAK4e;;MAGd,IAAI4nB,UAAUr4B,IAAI,MAAM,KAAK6gB,IAAI,MAAM;MACvC,IAAIyX,QAAQ/oB,YAAY8V;MACxB,IAAIrzB,OAAOud,YAAYiW;MACvB,MAAM+S,KAAKD,MAAMhmC,SAASw0B;MAE1B,KAAK,IAAIv0B,IAAI,GAAGA,IAAIgmC,IAAIhmC,KAAK;QAC3B,IAAI7B,OAAO4nC,MAAM/lC;QACjB,IAAIuc,MAAM9c,KAAKtB;QACf,IAAIs2B;UACFt2B,MAAMA,OAAO2nC;UACb3nB,OAAO5B,IAAI4B;UACXG,MAAM/B,IAAI+B;UACVD;;QAGF,IAAI9B,IAAI+B,MAAM;UACZmW,KAAKnW,QAAQwnB;;QAGf,IAAIznB,SAAS9B,IAAI8B;QAEjB,KAAK,IAAIre,IAAI,GAAGF,IAAIue,OAAOte,QAAQC,IAAIF,GAAGE,KAAK;UAC7Cy0B,KAAKpW,OAAO/e,KAAK+e,OAAOre,KAAK6lC,KAAKtR;;QAGpC90B,KAAKg1B,KAAKt2B,QAAQs2B;QAClBsR,MAAMzmC,KAAKm1B,KAAKt2B;;;;QA4ChB8nC,uBAAuB7nC;IAC3BpB,YAAY+L;MACVhI;MAOA3D,KAAK8oC,SAASn9B;;IAWhB/L,iBAAiBmpC,MAAMhgC,UAAU;MAC/B,IAAI9H,YAAY8nC,KAAKhhC,EAAEk1B,QAAQ,MAAM8L,KAAK/gC,EAAEi1B,QAAQ;MACpD,IAAI1zB,YAAYw/B,KAAK1/B,KAAK4zB,QAAQ,MAAM8L,KAAKz/B,KAAK2zB,QAAQ;MAE1D4L,eAAeG,KAAKjgC,YAAYggC,KAAK3hC,gBAAgBnG,GAAGsI;;IAS1D3J,eAAeqpC;MACb,IAAIJ,eAAeK,iBAAiB;QAClCL,eAAeK,gBAAgBC,OAAOF;aACjC;QACLG,QAAQD,OAAOF;;;IASnBrpC,IAAI+L;MACF,KAAKA,OAAO;QACVA,QAAQ3L,KAAK8oC;;MAGfD,eAAeG,2BAA2Br9B,MAAM09B,WAAW19B,MAAM29B,SAASrM,QAAQ;MAElFj9B,KAAKupC,eAAe59B,MAAM69B;MAC1BxpC,KAAKypC,SAAS99B,MAAMyJ,UAAU;MAC9BpV,KAAK0pC,eAAe/9B;;IAStB/L,cAAc+L,OAAO43B;MACnB,KAAK53B,OAAO;QACVA,QAAQ3L,KAAK8oC;;MAGf,IAAIvF,YAAYj3B,WAAW;QACzBi3B,YAAY53B,MAAMg+B;;MAGpB,IAAIpG,WAAW53B,MAAMg+B,eAAe;QAClCh+B,MAAMi+B,eAAej+B,MAAMg+B;QAC3Bh+B,MAAMg+B,gBAAgBr9B;aACjB;QACLX,MAAMg+B,gBAAgBh+B,MAAMi+B;QAE5Bj+B,MAAMi+B,eAAe,SAASC,sBAAsBn+B;UAClD,IAAI1L,KAAK8pC,YAAY;YACnBjB,eAAeG,kBAAkBhpC,KAAKspC,WAAWtpC,KAAKqpC,eAAerpC,KAAK+pC;;;;;IAalFnqC,SAASwV,UAAUrM,UAAU,IAAIihC,UAAUnB,eAAeG;MACxD,KAAK5zB,UAAU;QACbA,WAAWpV,KAAK8oC,OAAO1zB;;MAGzB,MAAM1S,IAAI0S,SAASzS;MAEnB,KAAK,IAAIC,IAAI,GAAGA,IAAIF,GAAGE,KAAK;QAC1B,IAAI6S,QAAQL,SAASxS;QACrBonC,WAAWjhC,YAAY0M;QAEvB,IAAIA,MAAML,YAAYK,MAAML,SAASzS,QAAQ;UAC3C3C,KAAKypC,SAASh0B,MAAML,cAAcrM,WAAWihC;;;;IAUnDpqC,eAAe8L;MACb,KAAKA,IAAI;QACPA,KAAK1L,KAAK8oC,OAAOU;;MAGnB,IAAInnC,0DAEmBqJ,GAAGu+B,aAAav+B,GAAGw+B,0DACrBx+B,GAAGu+B,aAAav+B,GAAGy+B,0EAEtBz+B,GAAGu+B,aAAav+B,GAAG0+B,oBAAoB,8BACzC1+B,GAAGu+B,aAAav+B,GAAG2+B,yBAAyB,mDAEjC3+B,GAAGu+B,aAAav+B,GAAG4+B,sDACxB5+B,GAAGu+B,aAAav+B,GAAG6+B;MAIzC1B,eAAeG,KAAK3mC;;IAUtBzC,eAAe+L;MACb,KAAKA,OAAO;QACVA,QAAQ3L,KAAK8oC;;MAGf,IAAI0B,OAAO7+B,MAAM8+B;MACjB,IAAItT,QAAQxrB,MAAM++B;MAElB7B,eAAeG,QAAQ2B,eAAexT;MAEtC,IAAIjqB;MAEJ,KAAK,IAAItM,KAAK4pC,MAAM;QAClB,IAAIpmB,MAAMxjB,EAAEo8B,QAAQj4B,OAAO6lC,SAASC,QAAQ;QAC5C,IAAIC,MAAMN,KAAK5pC;QACf,IAAImqC,UAAUD,IAAIE,mBAAmBF,IAAIE,qBAAqBF,IAAIG,eAAe;QACjF/9B,OAAOhL;UACLid,KAAAA;UACA+rB,SAASJ;UACTC,SAAAA;;QAEFD,IAAIE,mBAAmBF,IAAIG;;MAG7B/9B,OAAOmJ,KAAK,CAACzQ,GAAGC;QACd,IAAID,EAAEslC,QAAQ5B,YAAY39B,MAAM29B,SAAS;UACvC,OAAO;;QAGT,IAAI1jC,EAAEslC,QAAQ5B,UAAUzjC,EAAEqlC,QAAQ5B,SAAS;UACzC,QAAQ;;QAGV,OAAO;;MAET,MAAM5mC,IAAIwK,OAAOvK;MAEjB,KAAK,IAAIC,IAAI,GAAGA,IAAIF,GAAGE,KAAK;QAC1B,IAAIuoC,MAAMj+B,OAAOtK;QACjB,IAAIoqB,SAASme,IAAID,QAAQ5B,YAAY39B,MAAM29B;QAE3CT,eAAeG,SAASmC,IAAIhsB,QAAQ6N,SAAS,WAAW,WAAWme,IAAIJ,UAAU,WAAW,WAAWI,IAAID;;;;EAcjHrC,eAAeK,kBAAkB;EAejC3pC,QAAQmI,UAAUA;EAClBnI,QAAQiZ,QAAQA;EAChBjZ,QAAQ4V,YAAYA;EACpB5V,QAAQ+Q,gBAAgBA;EACxB/Q,QAAQyf,SAASA;EACjBzf,QAAQkiB,aAAaA;EACrBliB,QAAQgkB,aAAaA;EACrBhkB,QAAQmlB,WAAWA;EACnBnlB,QAAQyyB,YAAYA;EACpBzyB,QAAQ8T,SAASkiB;EACjBh2B,QAAQi2B,QAAQA;EAChBj2B,QAAQogB,SAASA;EACjBpgB,QAAQk2B,cAAcA;EACtBl2B,QAAQ04B,OAAOA;EACf14B,QAAQqY,aAAaA;EACrBrY,QAAQ26B,iBAAiBA;EACzB36B,QAAQ67B,kBAAkBA;EAC1B77B,QAAQ8M,cAAcA;EACtB9M,QAAQ87B,aAAaA;EACrB97B,QAAQ4/B,cAAcA;EACtB5/B,QAAQsgC,cAAcA;EACtBtgC,QAAQ+hC,oBAAoBA;EAC5B/hC,QAAQ8L,SAASA;EACjB9L,QAAQ2K,eAAeA;EACvB3K,QAAQ4I,WAAWA;EACnB5I,QAAQuI,QAAQA;EAChBvI,QAAQkL,YAAYA;EACpBlL,QAAQwjC,eAAeA;EACvBxjC,QAAQokC,QAAQD;EAChBnkC,QAAQkmC,qBAAqBA;EAC7BlmC,QAAQ6oC,mBAAmBD;EAC3B5oC,QAAQsI,MAAMA;EACdtI,QAAQsP,eAAeA;EACvBtP,QAAQspC,iBAAiBA;EAEzBtpC,QAAQI,QAAQA;EAChBJ,QAAQyB,kBAAkBA;EAC1BzB,QAAQgE,SAASA;EACjB,IAAI2tB,IAAI3xB,QAAQ6rC,WAAW7rC,QAAQ6rC;EACnCla,EAAEma,UAAU;EA/vdb,CAiwdGrrC,KAAK4O,WAAW5O,KAAK4O,gBAAgB5O,KAAK4O,YAAY5O,KAAK4O,SAASpP,OAAMQ,KAAK4O,YAAY5O,KAAK4O,SAASnP","file":"../easeljs-NEXT.js","sourcesContent":["/**\n * @license\n * EaselJS\n * Visit https://createjs.com for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n(function (exports,Tween,Timeline) {\n\t'use strict';\n\n\tTween = Tween && Tween.hasOwnProperty('default') ? Tween['default'] : Tween;\n\tTimeline = Timeline && Timeline.hasOwnProperty('default') ? Timeline['default'] : Timeline;\n\n\t/**\n\t * @license Event\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\n\t/**\n\t * Contains properties and methods shared by all events for use with {@link core.EventDispatcher}.\n\t * Note that Event objects are often reused, so you should never\n\t * rely on an event object's state outside of the call stack it was received in.\n\t *\n\t * @memberof core\n\t * @example\n\t * const evt = new Event(\"myEvent\");\n\t * const dispatcher = new EventDispatcher();\n\t * dispatcher.on(\"myEvent\", event => console.log(event.type));\n\t * dispatcher.dispatchEvent(evt); // logs \"myEvent\"\n\t *\n\t * @param {string} type The event type.\n\t * @param {boolean} [bubbles=false] Indicates whether the event will bubble through the display list.\n\t * @param {boolean} [cancelable=false] Indicates whether the default behaviour of this event can be cancelled.\n\t */\n\tclass Event {\n\t  constructor(type, bubbles = false, cancelable = false) {\n\t    /**\n\t     * The type of event.\n\t     * @type string\n\t     */\n\t    this.type = type;\n\t    /**\n\t     * The object that generated an event.\n\t     *\n\t     * @type Object\n\t     * @default null\n\t     * @readonly\n\t     */\n\n\t    this.target = null;\n\t    /**\n\t     * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n\t     * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n\t     * is generated from childObj, then a listener on parentObj would receive the event with\n\t     * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n\t     *\n\t     * @type Object\n\t     * @default null\n\t     * @readonly\n\t     */\n\n\t    this.currentTarget = null;\n\t    /**\n\t     * For bubbling events, this indicates the current event phase:\n\t     * <OL>\n\t     * \t<LI> capture phase: starting from the top parent to the target</LI>\n\t     * \t<LI> at target phase: currently being dispatched from the target</LI>\n\t     * \t<LI> bubbling phase: from the target to the top parent</LI>\n\t     * </OL>\n\t     *\n\t     * @type number\n\t     * @default 0\n\t     * @readonly\n\t     */\n\n\t    this.eventPhase = 0;\n\t    /**\n\t     * Indicates whether the event will bubble through the display list.\n\t     *\n\t     * @type boolean\n\t     * @readonly\n\t     */\n\n\t    this.bubbles = bubbles;\n\t    /**\n\t     * Indicates whether the default behaviour of this event can be cancelled via {@link core.Event#preventDefault}.\n\t     *\n\t     * @type boolean\n\t     * @readonly\n\t     */\n\n\t    this.cancelable = cancelable;\n\t    /**\n\t     * The epoch time at which this event was created.\n\t     *\n\t     * @type number\n\t     * @readonly\n\t     */\n\n\t    this.timeStamp = new Date().getTime();\n\t    /**\n\t     * Indicates if {@link core.Event#preventDefault} has been called on this event.\n\t     *\n\t     * @type boolean\n\t     * @default false\n\t     * @readonly\n\t     */\n\n\t    this.defaultPrevented = false;\n\t    /**\n\t     * Indicates if {@link core.Event#stopPropagation} or {@link core.Event#stopImmediatePropagation} has been called on this event.\n\t     *\n\t     * @type boolean\n\t     * @default false\n\t     * @readonly\n\t     */\n\n\t    this.propagationStopped = false;\n\t    /**\n\t     * Indicates if {@link core.Event#stopImmediatePropagation} has been called on this event.\n\t     *\n\t     * @type boolean\n\t     * @default false\n\t     * @readonly\n\t     */\n\n\t    this.immediatePropagationStopped = false;\n\t    /**\n\t     * Indicates if {@link core.Event#remove} has been called on this event.\n\t     *\n\t     * @type boolean\n\t     * @default false\n\t     * @readonly\n\t     */\n\n\t    this.removed = false;\n\t  }\n\t  /**\n\t   * Sets {@link core.Event#defaultPrevented} to true if the event is cancelable.\n\t   * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n\t   * cancel the default behaviour associated with the event.\n\t   * @return {core.Event} this, chainable\n\t   */\n\n\n\t  preventDefault() {\n\t    this.defaultPrevented = this.cancelable;\n\t    return this;\n\t  }\n\t  /**\n\t   * Sets {@link core.Event#propagationStopped} to true.\n\t   * Mirrors the DOM event standard.\n\t   * @return {core.Event} this, chainable\n\t   */\n\n\n\t  stopPropagation() {\n\t    this.propagationStopped = true;\n\t    return this;\n\t  }\n\t  /**\n\t   * Sets {@link core.Event#propagationStopped} and {@link core.Event#immediatePropagationStopped} to true.\n\t   * Mirrors the DOM event standard.\n\t   * @return {core.Event} this, chainable\n\t   */\n\n\n\t  stopImmediatePropagation() {\n\t    this.immediatePropagationStopped = this.propagationStopped = true;\n\t    return this;\n\t  }\n\t  /**\n\t   * Causes the active listener to be removed via removeEventListener();\n\t   *\n\t   * @example\n\t   * myBtn.addEventListener(\"click\", event => {\n\t   *   event.remove(); // removes this listener.\n\t   * });\n\t   *\n\t   * @return {core.Event} this, chainable\n\t   */\n\n\n\t  remove() {\n\t    this.removed = true;\n\t    return this;\n\t  }\n\t  /**\n\t   * Returns a clone of the Event instance.\n\t   *\n\t   * @return {core.Event} a clone of the Event instance.\n\t   */\n\n\n\t  clone() {\n\t    const event = new Event(this.type, this.bubbles, this.cancelable);\n\n\t    for (let n in this) {\n\t      if (this.hasOwnProperty(n)) {\n\t        event[n] = this[n];\n\t      }\n\t    }\n\n\t    return event;\n\t  }\n\t  /**\n\t   * Provides a return {core.Event} this, chainable shortcut method for setting a number of properties on the instance.\n\t   *\n\t   * @param {Object} props A generic object containing properties to copy to the instance.\n\t   * @return {core.Event} this, chainable\n\t   */\n\n\n\t  set(props) {\n\t    for (let n in props) {\n\t      this[n] = props[n];\n\t    }\n\n\t    return this;\n\t  }\n\t  /**\n\t   * Returns a string representation of this object.\n\t   *\n\t   * @return {string} A string representation of the instance.\n\t   */\n\n\n\t  toString() {\n\t    return `[${this.constructor.name} (type=${this.type})]`;\n\t  }\n\n\t}\n\n\t/**\n\t * @license EventDispatcher\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\n\t *\n\t * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\n\t * EventDispatcher {@link core.EventDispatcher.initialize} method.\n\t *\n\t * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\n\t * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\n\t * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\n\t *\n\t * EventDispatcher also exposes a {@link core.EventDispatcher#on} method, which makes it easier\n\t * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The\n\t * {@link core.EventDispatcher#off} method is merely an alias to {@link core.EventDispatcher#removeEventListener}.\n\t *\n\t * Another addition to the DOM Level 2 model is the {@link core.EventDispatcher#removeAllEventListeners}\n\t * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also\n\t * includes a {@link core.Event#remove} method which removes the active listener.\n\t *\n\t * @memberof core\n\t * @example\n\t * // add EventDispatcher capabilities to the \"MyClass\" class.\n\t * EventDispatcher.initialize(MyClass.prototype);\n\t *\n\t * // Add an event.\n\t * instance.addEventListener(\"eventName\", event => console.log(event.target + \" was clicked.\"));\n\t *\n\t * // scope (\"this\") can be be a challenge with events.\n\t * // using the {@link core.EventDispatcher#on} method to subscribe to events simplifies this.\n\t * instance.addEventListener(\"click\", event => console.log(instance === this)); // false, scope is ambiguous.\n\t * instance.on(\"click\", event => console.log(instance === this)); // true, `on` uses dispatcher scope by default.\n\t */\n\n\tclass EventDispatcher {\n\t  /**\n\t   * Static initializer to mix EventDispatcher methods into a target object or prototype.\n\t   *\n\t   * @static\n\t   * @example\n\t   * EventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t   * EventDispatcher.initialize(myInstance); // add to a specific instance\n\t   *\n\t   * @param {Object} target The target object to inject EventDispatcher methods into.\n\t   */\n\t  static initialize(target) {\n\t    const p = EventDispatcher.prototype;\n\t    target.addEventListener = p.addEventListener;\n\t    target.on = p.on;\n\t    target.removeEventListener = target.off = p.removeEventListener;\n\t    target.removeAllEventListeners = p.removeAllEventListeners;\n\t    target.hasEventListener = p.hasEventListener;\n\t    target.dispatchEvent = p.dispatchEvent;\n\t    target._dispatchEvent = p._dispatchEvent;\n\t    target.willTrigger = p.willTrigger;\n\t  }\n\n\t  constructor() {\n\t    /**\n\t     * @private\n\t     * @default null\n\t     * @type Object\n\t     */\n\t    this._listeners = null;\n\t    /**\n\t     * @private\n\t     * @default null\n\t     * @type Object\n\t     */\n\n\t    this._captureListeners = null;\n\t  }\n\t  /**\n\t   * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\n\t   * multiple callbacks getting fired.\n\t   *\n\t   * @example\n\t   * displayObject.addEventListener(\"click\", event => console.log('clicked', event));\n\t   *\n\t   * @param {string} type The string type of the event.\n\t   * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n\t   * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t   * @return {Function|Object} Returns the listener for chaining or assignment.\n\t   */\n\n\n\t  addEventListener(type, listener, useCapture = false) {\n\t    let listeners;\n\n\t    if (useCapture) {\n\t      listeners = this._captureListeners = this._captureListeners || {};\n\t    } else {\n\t      listeners = this._listeners = this._listeners || {};\n\t    }\n\n\t    let arr = listeners[type];\n\n\t    if (arr) {\n\t      this.removeEventListener(type, listener, useCapture);\n\t      arr = listeners[type]; // remove may have deleted the array\n\t    }\n\n\t    if (arr) {\n\t      arr.push(listener);\n\t    } else {\n\t      listeners[type] = [listener];\n\t    }\n\n\t    return listener;\n\t  }\n\t  /**\n\t   * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\n\t   * only run once, associate arbitrary data with the listener, and remove the listener.\n\t   *\n\t   * This method works by creating an anonymous wrapper function and subscribing it with `addEventListener`.\n\t   * The wrapper function is returned for use with `removeEventListener` (or `off`).\n\t   *\n\t   * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n\t   * {@link core.Event#remove}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\n\t   * to `on` with the same params will create multiple listeners.\n\t   *\n\t   * @example\n\t   * const listener = myBtn.on(\"click\", handleClick, null, false, { count: 3 });\n\t   * function handleClick (evt, data) {\n\t   *   data.count -= 1;\n\t   *   console.log(this == myBtn); // true - scope defaults to the dispatcher\n\t   *   if (data.count == 0) {\n\t   *     alert(\"clicked 3 times!\");\n\t   *     myBtn.off(\"click\", listener);\n\t   *     // alternately: evt.remove();\n\t   *   }\n\t   * }\n\t   *\n\t   * @param {string} type The string type of the event.\n\t   * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n\t   * @param {Object} [scope=null] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\n\t   * @param {boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\n\t   * @param {*} [data={}] Arbitrary data that will be included as the second parameter when the listener is called.\n\t   * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t   * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\n\t   */\n\n\n\t  on(type, listener, scope = null, once = false, data = {}, useCapture = false) {\n\t    if (listener.handleEvent) {\n\t      scope = scope || listener;\n\t      listener = listener.handleEvent;\n\t    }\n\n\t    scope = scope || this;\n\t    return this.addEventListener(type, evt => {\n\t      listener.call(scope, evt, data);\n\t      once && evt.remove();\n\t    }, useCapture);\n\t  }\n\t  /**\n\t   * Removes the specified event listener.\n\t   *\n\t   * You must pass the exact function reference used when the event was added. If a proxy\n\t   * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\n\t   * closure will not work.\n\t   *\n\t   * @example\n\t   * displayObject.removeEventListener(\"click\", handleClick);\n\t   *\n\t   * @param {string} type The string type of the event.\n\t   * @param {Function|Object} listener The listener function or object.\n\t   * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t   */\n\n\n\t  removeEventListener(type, listener, useCapture = false) {\n\t    const listeners = useCapture ? this._captureListeners : this._listeners;\n\n\t    if (!listeners) {\n\t      return;\n\t    }\n\n\t    const arr = listeners[type];\n\n\t    if (!arr) {\n\t      return;\n\t    }\n\n\t    const l = arr.length;\n\n\t    for (let i = 0; i < l; i++) {\n\t      if (arr[i] === listener) {\n\t        if (l === 1) {\n\t          delete listeners[type];\n\t        } // allows for faster checks.\n\t        else {\n\t            arr.splice(i, 1);\n\t          }\n\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n\t   * `on` method.\n\t   *\n\t   * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See\n\t   * {@link core.EventDispatcher#on} for an example.\n\t   *\n\t   * @param {string} type The string type of the event.\n\t   * @param {Function|Object} listener The listener function or object.\n\t   * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t   */\n\n\n\t  off(type, listener, useCapture = false) {\n\t    this.removeEventListener(type, listener, useCapture);\n\t  }\n\t  /**\n\t   * Removes all listeners for the specified type, or all listeners of all types.\n\t   *\n\t   * @example\n\t   * // remove all listeners\n\t   * displayObject.removeAllEventListeners();\n\t   *\n\t   * // remove all click listeners\n\t   * displayObject.removeAllEventListeners(\"click\");\n\t   *\n\t   * @param {string} [type=null] The string type of the event. If omitted, all listeners for all types will be removed.\n\t   */\n\n\n\t  removeAllEventListeners(type = null) {\n\t    if (type) {\n\t      if (this._listeners) {\n\t        delete this._listeners[type];\n\t      }\n\n\t      if (this._captureListeners) {\n\t        delete this._captureListeners[type];\n\t      }\n\t    } else {\n\t      this._listeners = this._captureListeners = null;\n\t    }\n\t  }\n\t  /**\n\t   * Dispatches the specified event to all listeners.\n\t   *\n\t   * @example\n\t   * // use a string event\n\t   * this.dispatchEvent(\"complete\")\n\t   *\n\t   * // use an Event instance\n\t   * const event = new createjs.Event(\"progress\");\n\t   * this.dispatchEvent(event);\n\t   *\n\t   * @param {Object|Event|string} eventObj An object with a \"type\" property, or a string type.\n\t   * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\n\t   * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\n\t   * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\n\t   * @param {boolean} [bubbles=false] Specifies the `bubbles` value when a string was passed to eventObj.\n\t   * @param {boolean} [cancelable=false] Specifies the `cancelable` value when a string was passed to eventObj.\n\t   * @return {boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\n\t   */\n\n\n\t  dispatchEvent(eventObj, bubbles = false, cancelable = false) {\n\t    if (typeof eventObj === \"string\") {\n\t      // skip everything if there's no listeners and it doesn't bubble:\n\t      const listeners = this._listeners;\n\n\t      if (!bubbles && (!listeners || !listeners[eventObj])) {\n\t        return true;\n\t      }\n\n\t      eventObj = new Event(eventObj, bubbles, cancelable);\n\t    } else if (eventObj.target && eventObj.clone) {\n\t      // redispatching an active event object, so clone it:\n\t      eventObj = eventObj.clone();\n\t    } // TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\n\n\n\t    try {\n\t      eventObj.target = this;\n\t    } catch (e) {} // try/catch allows redispatching of native events\n\n\n\t    if (!eventObj.bubbles || !this.parent) {\n\t      this._dispatchEvent(eventObj, 2);\n\t    } else {\n\t      let top = this;\n\t      const list = [top];\n\n\t      while (top.parent) {\n\t        list.push(top = top.parent);\n\t      }\n\n\t      const l = list.length;\n\t      let i; // capture & atTarget\n\n\t      for (i = l - 1; i >= 0 && !eventObj.propagationStopped; i--) {\n\t        list[i]._dispatchEvent(eventObj, 1 + (i == 0));\n\t      } // bubbling\n\n\n\t      for (i = 1; i < l && !eventObj.propagationStopped; i++) {\n\t        list[i]._dispatchEvent(eventObj, 3);\n\t      }\n\t    }\n\n\t    return !eventObj.defaultPrevented;\n\t  }\n\t  /**\n\t   * Indicates whether there is at least one listener for the specified event type.\n\t   *\n\t   * @param {string} type The string type of the event.\n\t   * @return {boolean} Returns true if there is at least one listener for the specified event.\n\t   */\n\n\n\t  hasEventListener(type) {\n\t    const listeners = this._listeners,\n\t          captureListeners = this._captureListeners;\n\t    return !!(listeners && listeners[type] || captureListeners && captureListeners[type]);\n\t  }\n\t  /**\n\t   * Indicates whether there is at least one listener for the specified event type on this object or any of its\n\t   * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\n\t   * specified type is dispatched from this object, it will trigger at least one listener.\n\t   *\n\t   * This is similar to {@link core.EventDispatcher#hasEventListener}, but it searches the entire\n\t   * event flow for a listener, not just this object.\n\t   *\n\t   * @param {string} type The string type of the event.\n\t   * @return {boolean} Returns `true` if there is at least one listener for the specified event.\n\t   */\n\n\n\t  willTrigger(type) {\n\t    let o = this;\n\n\t    while (o) {\n\t      if (o.hasEventListener(type)) {\n\t        return true;\n\t      }\n\n\t      o = o.parent;\n\t    }\n\n\t    return false;\n\t  }\n\t  /**\n\t   * @return {String} a string representation of the instance.\n\t   */\n\n\n\t  toString() {\n\t    return `[${this.constructor.name + this.name ? ` ${this.name}` : \"\"}]`;\n\t  }\n\t  /**\n\t   * @private\n\t   * @param {Object|Event|string} eventObj\n\t   * @param {Object} eventPhase\n\t   */\n\n\n\t  _dispatchEvent(eventObj, eventPhase) {\n\t    const listeners = eventPhase === 1 ? this._captureListeners : this._listeners;\n\n\t    if (eventObj && listeners) {\n\t      let arr = listeners[eventObj.type];\n\t      let l;\n\n\t      if (!arr || (l = arr.length) === 0) {\n\t        return;\n\t      }\n\n\t      try {\n\t        eventObj.currentTarget = this;\n\t      } catch (e) {}\n\n\t      try {\n\t        eventObj.eventPhase = eventPhase;\n\t      } catch (e) {}\n\n\t      eventObj.removed = false;\n\t      arr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\n\n\t      for (let i = 0; i < l && !eventObj.immediatePropagationStopped; i++) {\n\t        let o = arr[i];\n\n\t        if (o.handleEvent) {\n\t          o.handleEvent(eventObj);\n\t        } else {\n\t          o(eventObj);\n\t        }\n\n\t        if (eventObj.removed) {\n\t          this.off(eventObj.type, o, eventPhase === 1);\n\t          eventObj.removed = false;\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t}\n\n\t/**\n\t * @license Ticker\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * The Ticker provides a centralized tick or heartbeat broadcast at a set interval. Listeners can subscribe to the tick\n\t * event to be notified when a set time interval has elapsed.\n\t *\n\t * Note that the interval that the tick event is called is a target interval, and may be broadcast at a slower interval\n\t * when under high CPU load. The Ticker class uses a static interface (ex. `Ticker.framerate = 30;`) and\n\t * can not be instantiated.\n\t *\n\t * @todo Pass timingMode, maxDelta, paused values as instantiation arguments?\n\t *\n\t * @memberof core\n\t * @example\n\t * Ticker.addEventListener(\"tick\", event => {\n\t *   // Actions carried out each tick (aka frame)\n\t *   if (!event.paused) {\n\t *     // Actions carried out when the Ticker is not paused.\n\t *   }\n\t * });\n\t * @example\n\t * // Ticker export explanation\n\t * import Ticker, { Ticker as TickerClass, getTicker } from \"@createjs/core\";\n\t * Ticker.name, Ticker.RAF // -> createjs.global, undefined\n\t * TickerClass.RAF // -> raf\n\t * Ticker === getTicker(\"createjs.global\") // -> true\n\t *\n\t * @extends core.EventDispatcher\n\t * @param {string} name The name assigned to this instance.\n\t */\n\n\tclass Ticker extends EventDispatcher {\n\t  /**\n\t   * In this mode, Ticker uses the requestAnimationFrame API, but attempts to synch the ticks to target framerate. It\n\t   * uses a simple heuristic that compares the time of the RAF return to the target time for the current frame and\n\t   * dispatches the tick when the time is within a certain threshold.\n\t   *\n\t   * This mode has a higher variance for time between frames than {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}},\n\t   * but does not require that content be time based as with {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}} while\n\t   * gaining the benefits of that API (screen synch, background throttling).\n\t   *\n\t   * Variance is usually lowest for framerates that are a divisor of the RAF frequency. This is usually 60, so\n\t   * framerates of 10, 12, 15, 20, and 30 work well.\n\t   *\n\t   * Falls back to {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n\t   * supported.\n\t   *\n\t   * @static\n\t   * @type {string}\n\t   * @default \"synched\"\n\t   * @readonly\n\t   */\n\t  static get RAF_SYNCHED() {\n\t    return \"synched\";\n\t  }\n\t  /**\n\t   * In this mode, Ticker passes through the requestAnimationFrame heartbeat, ignoring the target framerate completely.\n\t   * Because requestAnimationFrame frequency is not deterministic, any content using this mode should be time based.\n\t   * You can leverage {@link core.Ticker#getTime} and the {@link core.Ticker#event:tick}\n\t   * event object's \"delta\" properties to make this easier.\n\t   *\n\t   * Falls back on {@link core.Ticker.TIMEOUT} if the requestAnimationFrame API is not supported.\n\t   *\n\t   * @static\n\t   * @type {string}\n\t   * @default \"raf\"\n\t   * @readonly\n\t   */\n\n\n\t  static get RAF() {\n\t    return \"raf\";\n\t  }\n\t  /**\n\t   * In this mode, Ticker uses the setTimeout API. This provides predictable, adaptive frame timing, but does not\n\t   * provide the benefits of requestAnimationFrame (screen synch, background throttling).\n\t   *\n\t   * @static\n\t   * @type {string}\n\t   * @default \"timeout\"\n\t   * @readonly\n\t   */\n\n\n\t  static get TIMEOUT() {\n\t    return \"timeout\";\n\t  }\n\n\t  constructor(name) {\n\t    super();\n\t    /**\n\t     * The name of this instance.\n\t     * @type {string}\n\t     */\n\n\t    this.name = name;\n\t    /**\n\t     * Specifies the timing api (setTimeout or requestAnimationFrame) and mode to use.\n\t     *\n\t     * @see {@link core.Ticker.TIMEOUT}\n\t     * @see {@link core.Ticker.RAF}\n\t     * @see {@link core.Ticker.RAF_SYNCHED}\n\t     *\n\t     * @type {string}\n\t     * @default Ticker.TIMEOUT\n\t     */\n\n\t    this.timingMode = Ticker.TIMEOUT;\n\t    /**\n\t     * Specifies a maximum value for the delta property in the tick event object. This is useful when building time\n\t     * based animations and systems to prevent issues caused by large time gaps caused by background tabs, system sleep,\n\t     * alert dialogs, or other blocking routines. Double the expected frame duration is often an effective value\n\t     * (ex. maxDelta=50 when running at 40fps).\n\t     *\n\t     * This does not impact any other values (ex. time, runTime, etc), so you may experience issues if you enable maxDelta\n\t     * when using both delta and other values.\n\t     *\n\t     * If 0, there is no maximum.\n\t     *\n\t     * @type {number}\n\t     * @default 0\n\t     */\n\n\t    this.maxDelta = 0;\n\t    /**\n\t     * When the ticker is paused, all listeners will still receive a tick event, but the `paused` property\n\t     * of the event will be `true`. Also, while paused the `runTime` will not increase.\n\t     *\n\t     * @example\n\t     * Ticker.addEventListener(\"tick\", event => console.log(event.paused, Ticker.getTime(false), Ticker.getTime(true)));\n\t     * Ticker.paused = true;\n\t     *\n\t     * @see {@link core.Ticker#event:tick}\n\t     * @see {@link core.Ticker#getTime}\n\t     * @see {@link core.Ticker#getEventTime}\n\t     *\n\t     * @type {boolean}\n\t     * @default false\n\t     */\n\n\t    this.paused = false;\n\t    /**\n\t     * @private\n\t     * @type {boolean}\n\t     * @default false\n\t     */\n\n\t    this._inited = false;\n\t    /**\n\t     * @private\n\t     * @type {number}\n\t     * @default 0\n\t     */\n\n\t    this._startTime = 0;\n\t    /**\n\t     * @private\n\t     * @type {number}\n\t     * @default 0\n\t     */\n\n\t    this._pausedTime = 0;\n\t    /**\n\t     * The number of ticks that have passed.\n\t     *\n\t     * @private\n\t     * @type {number}\n\t     * @default 0\n\t     */\n\n\t    this._ticks = 0;\n\t    /**\n\t     * The number of ticks that have passed while Ticker has been paused.\n\t     *\n\t     * @private\n\t     * @type {number}\n\t     * @default\n\t     */\n\n\t    this._pausedTicks = 0;\n\t    /**\n\t     * @private\n\t     * @type {number}\n\t     * @default\n\t     */\n\n\t    this._interval = 50;\n\t    /**\n\t     * @private\n\t     * @type {number}\n\t     * @default\n\t     */\n\n\t    this._lastTime = 0;\n\t    /**\n\t     * @private\n\t     * @type {Array}\n\t     * @default null\n\t     */\n\n\t    this._times = null;\n\t    /**\n\t     * @private\n\t     * @type {Array}\n\t     * @default null\n\t     */\n\n\t    this._tickTimes = null;\n\t    /**\n\t     * Stores the timeout or requestAnimationFrame id.\n\t     *\n\t     * @private\n\t     * @type {number}\n\t     * @default null\n\t     */\n\n\t    this._timerId = null;\n\t    /**\n\t     * True if currently using requestAnimationFrame, false if using setTimeout. This may be different than timingMode\n\t     * if that property changed and a tick hasn't fired.\n\t     *\n\t     * @private\n\t     * @type {boolean}\n\t     * @default true\n\t     */\n\n\t    this._raf = true;\n\t  }\n\t  /**\n\t   * Indicates the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\n\t   * Note that actual time between ticks may be more than specified depending on CPU load.\n\t   * This property is ignored if the ticker is using the `RAF` timing mode.\n\t   *\n\t   * @type {number}\n\t   */\n\n\n\t  get interval() {\n\t    return this._interval;\n\t  }\n\n\t  set interval(interval) {\n\t    this._interval = interval;\n\n\t    if (!this._inited) {\n\t      return;\n\t    }\n\n\t    this._setupTick();\n\t  }\n\t  /**\n\t   * Indicates the target frame rate in frames per second (FPS). Effectively just a shortcut to `interval`, where\n\t   * `framerate == 1000/interval`.\n\t   *\n\t   * @type {number}\n\t   */\n\n\n\t  get framerate() {\n\t    return 1000 / this._interval;\n\t  }\n\n\t  set framerate(framerate) {\n\t    this.interval = 1000 / framerate;\n\t  }\n\t  /**\n\t   * Starts the tick. This is called automatically when the first listener is added.\n\t   */\n\n\n\t  init() {\n\t    if (this._inited) {\n\t      return;\n\t    }\n\n\t    this._inited = true;\n\t    this._times = [];\n\t    this._tickTimes = [];\n\t    this._startTime = this._getTime();\n\n\t    this._times.push(this._lastTime = 0);\n\n\t    this._setupTick();\n\t  }\n\t  /**\n\t   * Stops the Ticker and removes all listeners. Use init() to restart the Ticker.\n\t   */\n\n\n\t  reset() {\n\t    if (this._raf) {\n\t      let f = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame;\n\t      f && f(this._timerId);\n\t    } else {\n\t      clearTimeout(this._timerId);\n\t    }\n\n\t    this.removeAllEventListeners(\"tick\");\n\t    this._timerId = this._times = this._tickTimes = null;\n\t    this._startTime = this._lastTime = this._ticks = 0;\n\t    this._inited = false;\n\t  }\n\t  /**\n\t   * Init the Ticker instance if it hasn't been already.\n\t   */\n\n\n\t  addEventListener(type, listener, useCapture) {\n\t    !this._inited && this.init();\n\t    return super.addEventListener(type, listener, useCapture);\n\t  }\n\t  /**\n\t   * Returns the average time spent within a tick. This can vary significantly from the value provided by getMeasuredFPS\n\t   * because it only measures the time spent within the tick execution stack.\n\t   *\n\t   * Example 1: With a target FPS of 20, getMeasuredFPS() returns 20fps, which indicates an average of 50ms between\n\t   * the end of one tick and the end of the next. However, getMeasuredTickTime() returns 15ms. This indicates that\n\t   * there may be up to 35ms of \"idle\" time between the end of one tick and the start of the next.\n\t   *\n\t   * Example 2: With a target FPS of 30, getFPS() returns 10fps, which indicates an average of 100ms between the end of\n\t   * one tick and the end of the next. However, getMeasuredTickTime() returns 20ms. This would indicate that something\n\t   * other than the tick is using ~80ms (another script, DOM rendering, etc).\n\t   *\n\t   * @param {number} [ticks=null] The number of previous ticks over which to measure the average time spent in a tick.\n\t   * Defaults to the number of ticks per second. To get only the last tick's time, pass in 1.\n\t   * @return {number} The average time spent in a tick in milliseconds.\n\t   */\n\n\n\t  getMeasuredTickTime(ticks = null) {\n\t    const times = this._tickTimes;\n\n\t    if (!times || times.length < 1) {\n\t      return -1;\n\t    } // by default, calculate average for the past ~1 second:\n\n\n\t    ticks = Math.min(times.length, ticks || this.framerate | 0);\n\t    return times.reduce((a, b) => a + b, 0) / ticks;\n\t  }\n\t  /**\n\t   * Returns the actual frames / ticks per second.\n\t   *\n\t   * @param {number} [ticks=null] The number of previous ticks over which to measure the actual frames / ticks per second.\n\t   * Defaults to the number of ticks per second.\n\t   * @return {number} The actual frames / ticks per second. Depending on performance, this may differ\n\t   * from the target frames per second.\n\t   */\n\n\n\t  getMeasuredFPS(ticks = null) {\n\t    const times = this._times;\n\n\t    if (!times || times.length < 2) {\n\t      return -1;\n\t    } // by default, calculate fps for the past ~1 second:\n\n\n\t    ticks = Math.min(times.length - 1, ticks || this.framerate | 0);\n\t    return 1000 / ((times[0] - times[ticks]) / ticks);\n\t  }\n\t  /**\n\t   * Returns the number of milliseconds that have elapsed since Ticker was initialized via {@link core.Ticker#init}.\n\t   * Returns -1 if Ticker has not been initialized. For example, you could use\n\t   * this in a time synchronized animation to determine the exact amount of time that has elapsed.\n\t   *\n\t   * @param {boolean} [runTime=false] If true only time elapsed while Ticker was not paused will be returned.\n\t   * If false, the value returned will be total time elapsed since the first tick event listener was added.\n\t   * @return {number} Number of milliseconds that have elapsed since Ticker was initialized or -1.\n\t   */\n\n\n\t  getTime(runTime = false) {\n\t    return this._startTime ? this._getTime() - (runTime ? this._pausedTime : 0) : -1;\n\t  }\n\t  /**\n\t   * Similar to {@link core.Ticker#getTime}, but returns the time on the most recent {@link core.Ticker#event:tick}\n\t   * event object.\n\t   *\n\t   * @param {boolean} [runTime=false] If true, the runTime property will be returned instead of time.\n\t   * @returns {number} The time or runTime property from the most recent tick event or -1.\n\t   */\n\n\n\t  getEventTime(runTime = false) {\n\t    return this._startTime ? (this._lastTime || this._startTime) - (runTime ? this._pausedTime : 0) : -1;\n\t  }\n\t  /**\n\t   * Returns the number of ticks that have been broadcast by Ticker.\n\t   *\n\t   * @param {boolean} [pauseable=false] Indicates whether to include ticks that would have been broadcast\n\t   * while Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\n\t   * If false, tick events that would have been broadcast while Ticker was paused will be included in the return\n\t   * value.\n\t   * @return {number} of ticks that have been broadcast.\n\t   */\n\n\n\t  getTicks(pauseable = false) {\n\t    return this._ticks - (pauseable ? this._pausedTicks : 0);\n\t  }\n\t  /**\n\t   * @private\n\t   */\n\n\n\t  _handleSynch() {\n\t    this._timerId = null;\n\n\t    this._setupTick(); // run if enough time has elapsed, with a little bit of flexibility to be early:\n\n\n\t    if (this._getTime() - this._lastTime >= (this._interval - 1) * 0.97) {\n\t      this._tick();\n\t    }\n\t  }\n\t  /**\n\t   * @private\n\t   */\n\n\n\t  _handleRAF() {\n\t    this._timerId = null;\n\n\t    this._setupTick();\n\n\t    this._tick();\n\t  }\n\t  /**\n\t   * @private\n\t   */\n\n\n\t  _handleTimeout() {\n\t    this._timerId = null;\n\n\t    this._setupTick();\n\n\t    this._tick();\n\t  }\n\t  /**\n\t   * @private\n\t   */\n\n\n\t  _setupTick() {\n\t    if (this._timerId != null) {\n\t      return;\n\t    } // avoid duplicates\n\n\n\t    const mode = this.timingMode || this._raf && Ticker.RAF;\n\n\t    if (mode === Ticker.RAF_SYNCHED || mode === Ticker.RAF) {\n\t      const f = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;\n\n\t      if (f) {\n\t        this._timerId = f(mode === Ticker.RAF ? this._handleRAF.bind(this) : this._handleSynch.bind(this));\n\t        this._raf = true;\n\t        return;\n\t      }\n\t    }\n\n\t    this._raf = false;\n\t    this._timerId = setTimeout(this._handleTimeout.bind(this), this._interval);\n\t  }\n\t  /**\n\t   * @private\n\t   * @emits core.Ticker#event:tick\n\t   */\n\n\n\t  _tick() {\n\t    const paused = this.paused,\n\t          time = this._getTime(),\n\t          elapsedTime = time - this._lastTime;\n\n\t    this._lastTime = time;\n\t    this._ticks++;\n\n\t    if (paused) {\n\t      this._pausedTicks++;\n\t      this._pausedTime += elapsedTime;\n\t    }\n\n\t    if (this.hasEventListener(\"tick\")) {\n\t      const event = new Event(\"tick\");\n\t      const maxDelta = this.maxDelta;\n\t      event.delta = maxDelta && elapsedTime > maxDelta ? maxDelta : elapsedTime;\n\t      event.paused = paused;\n\t      event.time = time;\n\t      event.runTime = time - this._pausedTime;\n\t      this.dispatchEvent(event);\n\t    }\n\n\t    this._tickTimes.unshift(this._getTime() - time);\n\n\t    while (this._tickTimes.length > 100) {\n\t      this._tickTimes.pop();\n\t    }\n\n\t    this._times.unshift(time);\n\n\t    while (this._times.length > 100) {\n\t      this._times.pop();\n\t    }\n\t  }\n\t  /**\n\t   * @private\n\t   */\n\n\n\t  _getTime() {\n\t    const now = window.performance && window.performance.now;\n\t    return (now && now.call(performance) || new Date().getTime()) - this._startTime;\n\t  }\n\n\t  static on(type, listener, scope, once, data, useCapture) {\n\t    return _instance.on(type, listener, scope, once, data, useCapture);\n\t  }\n\n\t  static removeEventListener(type, listener, useCapture) {\n\t    _instance.removeEventListener(type, listener, useCapture);\n\t  }\n\n\t  static off(type, listener, useCapture) {\n\t    _instance.off(type, listener, useCapture);\n\t  }\n\n\t  static removeAllEventListeners(type) {\n\t    _instance.removeAllEventListeners(type);\n\t  }\n\n\t  static dispatchEvent(eventObj, bubbles, cancelable) {\n\t    return _instance.dispatchEvent(eventObj, bubbles, cancelable);\n\t  }\n\n\t  static hasEventListener(type) {\n\t    return _instance.hasEventListener(type);\n\t  }\n\n\t  static willTrigger(type) {\n\t    return _instance.willTrigger(type);\n\t  }\n\n\t  static toString() {\n\t    return _instance.toString();\n\t  }\n\n\t  static init() {\n\t    _instance.init();\n\t  }\n\n\t  static reset() {\n\t    _instance.reset();\n\t  }\n\n\t  static addEventListener(type, listener, useCapture) {\n\t    _instance.addEventListener(type, listener, useCapture);\n\t  }\n\n\t  static getMeasuredTickTime(ticks) {\n\t    return _instance.getMeasuredTickTime(ticks);\n\t  }\n\n\t  static getMeasuredFPS(ticks) {\n\t    return _instance.getMeasuredFPS(ticks);\n\t  }\n\n\t  static getTime(runTime) {\n\t    return _instance.getTime(runTime);\n\t  }\n\n\t  static getEventTime(runTime) {\n\t    return _instance.getEventTime(runTime);\n\t  }\n\n\t  static getTicks(pauseable) {\n\t    return _instance.getTicks(pauseable);\n\t  }\n\n\t  static get interval() {\n\t    return _instance.interval;\n\t  }\n\n\t  static set interval(interval) {\n\t    _instance.interval = interval;\n\t  }\n\n\t  static get framerate() {\n\t    return _instance.framerate;\n\t  }\n\n\t  static set framerate(framerate) {\n\t    _instance.framerate = framerate;\n\t  }\n\n\t  static get name() {\n\t    return _instance.name;\n\t  }\n\n\t  static set name(name) {\n\t    _instance.name = name;\n\t  }\n\n\t  static get timingMode() {\n\t    return _instance.timingMode;\n\t  }\n\n\t  static set timingMode(timingMode) {\n\t    _instance.timingMode = timingMode;\n\t  }\n\n\t  static get maxDelta() {\n\t    return _instance.maxDelta;\n\t  }\n\n\t  static set maxDelta(maxDelta) {\n\t    _instance.maxDelta = maxDelta;\n\t  }\n\n\t  static get paused() {\n\t    return _instance.paused;\n\t  }\n\n\t  static set paused(paused) {\n\t    _instance.paused = paused;\n\t  }\n\n\t}\n\n\tconst _instance = new Ticker(\"createjs.global\");\n\n\t/**\n\t * @license\n\t *\n\t * StageGL\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\tclass StageGL {\n\t  constructor() {\n\t    throw new Error(`\n\t\t\tStageGL is not currently supported on the EaselJS 2.0 branch.\n\t\t\tEnd of Q1 2018 is targetted for StageGL support.\n\t\t\tFollow @CreateJS on Twitter for updates.\n\t\t`);\n\t  }\n\n\t}\n\n\t/**\n\t * @license uid\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\n\t/** @ignore */\n\tlet _nextId = 0;\n\t/**\n\t * Global utility for generating sequential unique ID numbers.\n\t *\n\t * @memberof easeljs\n\t * @name easeljs.uid\n\t * @example\n\t * import { uid } from \"@createjs/easeljs\";\n\t * var ids = [];\n\t * while (ids.length <= 3) {\n\t *   ids.push(uid());\n\t * }\n\t * // ids == [0, 1, 2, 3]\n\t */\n\n\tfunction uid() {\n\t  return _nextId++;\n\t}\n\n\t/**\n\t * @license Point\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\n\t/**\n\t * Represents a point on a 2 dimensional x / y coordinate system.\n\t *\n\t * @memberof easeljs\n\t * @example\n\t * let point = new Point(0, 100);\n\t *\n\t * @param {Number} [x] X position.\n\t * @param {Number} [y] Y position.\n\t */\n\tclass Point {\n\t  constructor(x, y) {\n\t    this.setValues(x, y); // assigned in the setValues method.\n\n\t    /**\n\t     * X position.\n\t     * @property x\n\t     * @type {Number}\n\t     */\n\n\t    /**\n\t     * Y position.\n\t     * @property y\n\t     * @type {Number}\n\t     */\n\t  }\n\t  /**\n\t   * Sets the specified values on this instance.\n\t   * @param {Number} [x=0] X position.\n\t   * @param {Number} [y=0] Y position.\n\t   * @return {easeljs.Point} This instance. Useful for chaining method calls.\n\t   * @chainable\n\t  */\n\n\n\t  setValues(x = 0, y = 0) {\n\t    this.x = x;\n\t    this.y = y;\n\t    return this;\n\t  }\n\t  /**\n\t   * Copies all properties from the specified point to this point.\n\t   * @param {easeljs.Point} point The point to copy properties from.\n\t   * @return {easeljs.Point} This point. Useful for chaining method calls.\n\t   * @chainable\n\t  */\n\n\n\t  copy(point) {\n\t    this.x = point.x;\n\t    this.y = point.y;\n\t    return this;\n\t  }\n\t  /**\n\t   * Returns a clone of the Point instance.\n\t   * @return {easeljs.Point} a clone of the Point instance.\n\t   */\n\n\n\t  clone() {\n\t    return new Point(this.x, this.y);\n\t  }\n\t  /**\n\t   * Returns a string representation of this object.\n\t   * @return {String} a string representation of the instance.\n\t   */\n\n\n\t  toString() {\n\t    return `[${this.constructor.name} (x=${this.x} y=${this.y})]`;\n\t  }\n\n\t}\n\n\t/**\n\t * @license Matrix2D\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * Represents an affine transformation matrix, and provides tools for constructing and concatenating matrices.\n\t *\n\t * <pre>\n\t * This matrix can be visualized as:\n\t *\n\t * \t[ a  c  tx\n\t * \t  b  d  ty\n\t * \t  0  0  1  ]\n\t *\n\t * Note the locations of b and c.\n\t * </pre>\n\t *\n\t * @param {Number} [a] Specifies the a property for the new matrix.\n\t * @param {Number} [b] Specifies the b property for the new matrix.\n\t * @param {Number} [c] Specifies the c property for the new matrix.\n\t * @param {Number} [d] Specifies the d property for the new matrix.\n\t * @param {Number} [tx] Specifies the tx property for the new matrix.\n\t * @param {Number} [ty] Specifies the ty property for the new matrix.\n\t */\n\n\tclass Matrix2D {\n\t  constructor(a, b, c, d, tx, ty) {\n\t    this.setValues(a, b, c, d, tx, ty); // assigned in the setValues method.\n\n\t    /**\n\t     * Position (0, 0) in a 3x3 affine transformation matrix.\n\t     * @property a\n\t     * @type {Number}\n\t     */\n\n\t    /**\n\t     * Position (0, 1) in a 3x3 affine transformation matrix.\n\t     * @property b\n\t     * @type {Number}\n\t     */\n\n\t    /**\n\t     * Position (1, 0) in a 3x3 affine transformation matrix.\n\t     * @property c\n\t     * @type {Number}\n\t     */\n\n\t    /**\n\t     * Position (1, 1) in a 3x3 affine transformation matrix.\n\t     * @property d\n\t     * @type {Number}\n\t     */\n\n\t    /**\n\t     * Position (2, 0) in a 3x3 affine transformation matrix.\n\t     * @property tx\n\t     * @type {Number}\n\t     */\n\n\t    /**\n\t     * Position (2, 1) in a 3x3 affine transformation matrix.\n\t     * @property ty\n\t     * @type {Number}\n\t     */\n\t  }\n\t  /**\n\t   * Sets the specified values on this instance.\n\t   * @param {Number} [a=1] Specifies the a property for the new matrix.\n\t   * @param {Number} [b=0] Specifies the b property for the new matrix.\n\t   * @param {Number} [c=0] Specifies the c property for the new matrix.\n\t   * @param {Number} [d=1] Specifies the d property for the new matrix.\n\t   * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n\t   * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n\t   * @return {Matrix2D} This instance. Useful for chaining method calls.\n\t   * @chainable\n\t  */\n\n\n\t  setValues(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n\t    // don't forget to update docs in the constructor if these change:\n\t    this.a = a;\n\t    this.b = b;\n\t    this.c = c;\n\t    this.d = d;\n\t    this.tx = tx;\n\t    this.ty = ty;\n\t    return this;\n\t  }\n\t  /**\n\t   * Appends the specified matrix properties to this matrix. All parameters are required.\n\t   * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t   * @param {Number} a\n\t   * @param {Number} b\n\t   * @param {Number} c\n\t   * @param {Number} d\n\t   * @param {Number} tx\n\t   * @param {Number} ty\n\t   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t   * @chainable\n\t   */\n\n\n\t  append(a, b, c, d, tx, ty) {\n\t    let a1 = this.a;\n\t    let b1 = this.b;\n\t    let c1 = this.c;\n\t    let d1 = this.d;\n\n\t    if (a != 1 || b != 0 || c != 0 || d != 1) {\n\t      this.a = a1 * a + c1 * b;\n\t      this.b = b1 * a + d1 * b;\n\t      this.c = a1 * c + c1 * d;\n\t      this.d = b1 * c + d1 * d;\n\t    }\n\n\t    this.tx = a1 * tx + c1 * ty + this.tx;\n\t    this.ty = b1 * tx + d1 * ty + this.ty;\n\t    return this;\n\t  }\n\n\t  /**\n\t   * Prepends the specified matrix properties to this matrix.\n\t   * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t   * @param {Number} a\n\t   * @param {Number} b\n\t   * @param {Number} c\n\t   * @param {Number} d\n\t   * @param {Number} tx\n\t   * @param {Number} ty\n\t   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t   * @chainable\n\t   */\n\t  prepend(a, b, c, d, tx, ty) {\n\t    let a1 = this.a;\n\t    let c1 = this.c;\n\t    let tx1 = this.tx;\n\t    this.a = a * a1 + c * this.b;\n\t    this.b = b * a1 + d * this.b;\n\t    this.c = a * c1 + c * this.d;\n\t    this.d = b * c1 + d * this.d;\n\t    this.tx = a * tx1 + c * this.ty + tx;\n\t    this.ty = b * tx1 + d * this.ty + ty;\n\t    return this;\n\t  }\n\t  /**\n\t   * Appends the specified matrix to this matrix.\n\t   * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t   * @param {easeljs.Matrix2D} matrix\n\t   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t   * @chainable\n\t   */\n\n\n\t  appendMatrix(matrix) {\n\t    return this.append(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t  }\n\t  /**\n\t   * Prepends the specified matrix to this matrix.\n\t   * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t   *\n\t   * @example <caption>Calculate the combined transformation for a child object</caption>\n\t   * let o = displayObject;\n\t   * let mtx = o.getMatrix();\n\t   * while (o = o.parent) {\n\t   * \t // prepend each parent's transformation in turn:\n\t   * \t o.prependMatrix(o.getMatrix());\n\t   * }\n\t   *\n\t   * @param {easeljs.Matrix2D} matrix\n\t   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t   * @chainable\n\t   */\n\n\n\t  prependMatrix(matrix) {\n\t    return this.prepend(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t  }\n\t  /**\n\t   * Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\n\t   *\n\t   * @example <caption>Generate a matrix representing the transformations of a display object</caption>\n\t   * let mtx = new Matrix2D();\n\t   * mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);\n\t   *\n\t   * @param {Number} x\n\t   * @param {Number} y\n\t   * @param {Number} scaleX\n\t   * @param {Number} scaleY\n\t   * @param {Number} rotation\n\t   * @param {Number} skewX\n\t   * @param {Number} skewY\n\t   * @param {Number} [regX]\n\t   * @param {Number} [regY]\n\t   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t   * @chainable\n\t   */\n\n\n\t  appendTransform(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t    let r, cos, sin;\n\n\t    if (rotation % 360) {\n\t      r = rotation * Matrix2D.DEG_TO_RAD;\n\t      cos = Math.cos(r);\n\t      sin = Math.sin(r);\n\t    } else {\n\t      cos = 1;\n\t      sin = 0;\n\t    }\n\n\t    if (skewX || skewY) {\n\t      // TODO: can this be combined into a single append operation?\n\t      skewX *= Matrix2D.DEG_TO_RAD;\n\t      skewY *= Matrix2D.DEG_TO_RAD;\n\t      this.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t      this.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, 0, 0);\n\t    } else {\n\t      this.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n\t    }\n\n\t    if (regX || regY) {\n\t      // append the registration offset:\n\t      this.tx -= regX * this.a + regY * this.c;\n\t      this.ty -= regX * this.b + regY * this.d;\n\t    }\n\n\t    return this;\n\t  }\n\t  /**\n\t   * Generates matrix properties from the specified display object transform properties, and prepends them to this matrix.\n\t   *\n\t   * Note that the above example would not account for {@link easeljs.DisplayObject#transformMatrix} values.\n\t   * See {@link easeljs.Matrix2D#prependMatrix} for an example that does.\n\t   *\n\t   * @example <caption>Calculate the combined transformation for a child object</caption>\n\t   * let o = displayObject;\n\t   * let mtx = new Matrix2D();\n\t   * do  {\n\t   * \t // prepend each parent's transformation in turn:\n\t   * \t mtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t   * } while (o = o.parent);\n\t   *\n\t   * @param {Number} x\n\t   * @param {Number} y\n\t   * @param {Number} scaleX\n\t   * @param {Number} scaleY\n\t   * @param {Number} rotation\n\t   * @param {Number} skewX\n\t   * @param {Number} skewY\n\t   * @param {Number} [regX]\n\t   * @param {Number} [regY]\n\t   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t   */\n\n\n\t  prependTransform(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t    let r, cos, sin;\n\n\t    if (rotation % 360) {\n\t      r = rotation * Matrix2D.DEG_TO_RAD;\n\t      cos = Math.cos(r);\n\t      sin = Math.sin(r);\n\t    } else {\n\t      cos = 1;\n\t      sin = 0;\n\t    }\n\n\t    if (regX || regY) {\n\t      // prepend the registration offset:\n\t      this.tx -= regX;\n\t      this.ty -= regY;\n\t    }\n\n\t    if (skewX || skewY) {\n\t      // TODO: can this be combined into a single prepend operation?\n\t      skewX *= Matrix2D.DEG_TO_RAD;\n\t      skewY *= Matrix2D.DEG_TO_RAD;\n\t      this.prepend(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, 0, 0);\n\t      this.prepend(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t    } else {\n\t      this.prepend(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n\t    }\n\n\t    return this;\n\t  }\n\t  /**\n\t   * Applies a clockwise rotation transformation to the matrix.\n\t   * @param {Number} angle The angle to rotate by, in degrees. To use a value in radians, multiply it by `Math.PI/180`.\n\t   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t   * @chainable\n\t   */\n\n\n\t  rotate(angle) {\n\t    angle *= Matrix2D.DEG_TO_RAD;\n\t    let cos = Math.cos(angle);\n\t    let sin = Math.sin(angle);\n\t    let a1 = this.a;\n\t    let b1 = this.b;\n\t    this.a = a1 * cos + this.c * sin;\n\t    this.b = b1 * cos + this.d * sin;\n\t    this.c = -a1 * sin + this.c * cos;\n\t    this.d = -b1 * sin + this.d * cos;\n\t    return this;\n\t  }\n\t  /**\n\t   * Applies a skew transformation to the matrix.\n\t   * @param {Number} skewX The amount to skew horizontally in degrees. To use a value in radians, multiply it by `Math.PI/180`.\n\t   * @param {Number} skewY The amount to skew vertically in degrees.\n\t   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t   * @chainable\n\t  */\n\n\n\t  skew(skewX, skewY) {\n\t    skewX *= Matrix2D.DEG_TO_RAD;\n\t    skewY *= Matrix2D.DEG_TO_RAD;\n\t    this.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), 0, 0);\n\t    return this;\n\t  }\n\t  /**\n\t   * Applies a scale transformation to the matrix.\n\t   * @param {Number} x The amount to scale horizontally. E.G. a value of 2 will double the size in the X direction, and 0.5 will halve it.\n\t   * @param {Number} y The amount to scale vertically.\n\t   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t   * @chainable\n\t   */\n\n\n\t  scale(x, y) {\n\t    this.a *= x;\n\t    this.b *= x;\n\t    this.c *= y;\n\t    this.d *= y; //this.tx *= x;\n\t    //this.ty *= y;\n\n\t    return this;\n\t  }\n\t  /**\n\t   * Translates the matrix on the x and y axes.\n\t   * @param {Number} x\n\t   * @param {Number} y\n\t   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t   * @chainable\n\t   */\n\n\n\t  translate(x, y) {\n\t    this.tx += this.a * x + this.c * y;\n\t    this.ty += this.b * x + this.d * y;\n\t    return this;\n\t  }\n\t  /**\n\t   * Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation).\n\t   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t   * @chainable\n\t   */\n\n\n\t  identity() {\n\t    this.a = this.d = 1;\n\t    this.b = this.c = this.tx = this.ty = 0;\n\t    return this;\n\t  }\n\t  /**\n\t   * Inverts the matrix, causing it to perform the opposite transformation.\n\t   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t   * @chainable\n\t   */\n\n\n\t  invert() {\n\t    let a1 = this.a;\n\t    let b1 = this.b;\n\t    let c1 = this.c;\n\t    let d1 = this.d;\n\t    let tx1 = this.tx;\n\t    let n = a1 * d1 - b1 * c1;\n\t    this.a = d1 / n;\n\t    this.b = -b1 / n;\n\t    this.c = -c1 / n;\n\t    this.d = a1 / n;\n\t    this.tx = (c1 * this.ty - d1 * tx1) / n;\n\t    this.ty = -(a1 * this.ty - b1 * tx1) / n;\n\t    return this;\n\t  }\n\t  /**\n\t   * Returns true if the matrix is an identity matrix.\n\t   * @return {Boolean}\n\t   */\n\n\n\t  isIdentity() {\n\t    return this.tx === 0 && this.ty === 0 && this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1;\n\t  }\n\t  /**\n\t   * Returns true if this matrix is equal to the specified matrix (all property values are equal).\n\t   * @param {easeljs.Matrix2D} matrix The matrix to compare.\n\t   * @return {Boolean}\n\t   */\n\n\n\t  equals(matrix) {\n\t    return this.tx === matrix.tx && this.ty === matrix.ty && this.a === matrix.a && this.b === matrix.b && this.c === matrix.c && this.d === matrix.d;\n\t  }\n\t  /**\n\t   * Transforms a point according to this matrix.\n\t   * @param {Number} x The x component of the point to transform.\n\t   * @param {Number} y The y component of the point to transform.\n\t   * @param {easeljs.Point | Object} [pt] An object to copy the result into. If omitted a generic object with x/y properties will be returned.\n\t   * @return {easeljs.Point} This matrix. Useful for chaining method calls.\n\t   */\n\n\n\t  transformPoint(x, y, pt = new Point()) {\n\t    pt.x = x * this.a + y * this.c + this.tx;\n\t    pt.y = x * this.b + y * this.d + this.ty;\n\t    return pt;\n\t  }\n\t  /**\n\t   * Decomposes the matrix into transform properties (x, y, scaleX, scaleY, and rotation). Note that these values\n\t   * may not match the transform properties you used to generate the matrix, though they will produce the same visual\n\t   * results.\n\t   * @param {Object} [target] The object to apply the transform properties to. If null, then a new object will be returned.\n\t   * @return {Object} The target, or a new generic object with the transform properties applied.\n\t  */\n\n\n\t  decompose(target = {}) {\n\t    // TODO: it would be nice to be able to solve for whether the matrix can be decomposed into only scale/rotation even when scale is negative\n\t    target.x = this.tx;\n\t    target.y = this.ty;\n\t    target.scaleX = Math.sqrt(this.a * this.a + this.b * this.b);\n\t    target.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);\n\t    let skewX = Math.atan2(-this.c, this.d);\n\t    let skewY = Math.atan2(this.b, this.a);\n\t    let delta = Math.abs(1 - skewX / skewY);\n\n\t    if (delta < 0.00001) {\n\t      // effectively identical, can use rotation:\n\t      target.rotation = skewY / Matrix2D.DEG_TO_RAD;\n\n\t      if (this.a < 0 && this.d >= 0) {\n\t        target.rotation += target.rotation <= 0 ? 180 : -180;\n\t      }\n\n\t      target.skewX = target.skewY = 0;\n\t    } else {\n\t      target.skewX = skewX / Matrix2D.DEG_TO_RAD;\n\t      target.skewY = skewY / Matrix2D.DEG_TO_RAD;\n\t    }\n\n\t    return target;\n\t  }\n\t  /**\n\t   * Copies all properties from the specified matrix to this matrix.\n\t   * @param {easeljs.Matrix2D} matrix The matrix to copy properties from.\n\t   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n\t   * @chainable\n\t  */\n\n\n\t  copy(matrix) {\n\t    return this.setValues(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t  }\n\t  /**\n\t   * Returns a clone of the Matrix2D instance.\n\t   * @return {easeljs.Matrix2D} a clone of the Matrix2D instance.\n\t   */\n\n\n\t  clone() {\n\t    return new Matrix2D(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t  }\n\t  /**\n\t   * Returns a string representation of this object.\n\t   * @return {String} a string representation of the instance.\n\t   */\n\n\n\t  toString() {\n\t    return `[${this.constructor.name} (a=${this.a} b=${this.b} c=${this.c} d=${this.d} tx=${this.tx} ty=${this.ty})]`;\n\t  }\n\n\t}\n\t/**\n\t * Multiplier for converting degrees to radians. Used internally by Matrix2D.\n\t * @static\n\t * @type {Number}\n\t * @readonly\n\t */\n\n\tMatrix2D.DEG_TO_RAD = Math.PI / 180;\n\t/**\n\t * An identity matrix, representing a null transformation.\n\t * @static\n\t * @type {easeljs.Matrix2D}\n\t * @readonly\n\t */\n\n\tMatrix2D.identity = new Matrix2D();\n\n\t/**\n\t * @license DisplayProps\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * Used for calculating and encapsulating display related properties.\n\t * @memberof easeljs\n\t * @param {Number} [visible] Visible value.\n\t * @param {Number} [alpha] Alpha value.\n\t * @param {Number} [shadow] A Shadow instance or null.\n\t * @param {Number} [compositeOperation] A compositeOperation value or null.\n\t * @param {Number} [matrix] A transformation matrix. Defaults to a new identity matrix.\n\t */\n\n\tclass DisplayProps {\n\t  constructor(visible, alpha, shadow, compositeOperation, matrix) {\n\t    this.setValues(visible, alpha, shadow, compositeOperation, matrix); // assigned in the setValues method.\n\n\t    /**\n\t     * Property representing the alpha that will be applied to a display object.\n\t     * @property alpha\n\t     * @type {Number}\n\t     */\n\n\t    /**\n\t     * Property representing the shadow that will be applied to a display object.\n\t     * @property shadow\n\t     * @type {easeljs.Shadow}\n\t     */\n\n\t    /**\n\t     * Property representing the compositeOperation that will be applied to a display object.\n\t     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing}\n\t     * @property compositeOperation\n\t     * @type {String}\n\t     */\n\n\t    /**\n\t     * Property representing the value for visible that will be applied to a display object.\n\t     * @property visible\n\t     * @type {Boolean}\n\t     */\n\n\t    /**\n\t     * The transformation matrix that will be applied to a display object.\n\t     * @property matrix\n\t     * @type {easeljs.Matrix2D}\n\t     */\n\t  }\n\t  /**\n\t   * Reinitializes the instance with the specified values.\n\t   * @param {Number} [visible=true] Visible value.\n\t   * @param {Number} [alpha=1] Alpha value.\n\t   * @param {Number} [shadow] A Shadow instance or null.\n\t   * @param {Number} [compositeOperation] A compositeOperation value or null.\n\t   * @param {Number} [matrix] A transformation matrix. Defaults to an identity matrix.\n\t   * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n\t   * @chainable\n\t  */\n\n\n\t  setValues(visible = true, alpha = 1, shadow, compositeOperation, matrix) {\n\t    this.visible = visible;\n\t    this.alpha = alpha;\n\t    this.shadow = shadow;\n\t    this.compositeOperation = compositeOperation;\n\t    this.matrix = matrix || this.matrix && this.matrix.identity() || new Matrix2D();\n\t    return this;\n\t  }\n\t  /**\n\t   * Appends the specified display properties. This is generally used to apply a child's properties its parent's.\n\t   * @param {Boolean} visible desired visible value\n\t   * @param {Number} alpha desired alpha value\n\t   * @param {easeljs.Shadow} shadow desired shadow value\n\t   * @param {String} compositeOperation desired composite operation value\n\t   * @param {easeljs.Matrix2D} [matrix] a Matrix2D instance\n\t   * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n\t   * @chainable\n\t  */\n\n\n\t  append(visible, alpha, shadow, compositeOperation, matrix) {\n\t    this.alpha *= alpha;\n\t    this.shadow = shadow || this.shadow;\n\t    this.compositeOperation = compositeOperation || this.compositeOperation;\n\t    this.visible = this.visible && visible;\n\t    matrix && this.matrix.appendMatrix(matrix);\n\t    return this;\n\t  }\n\t  /**\n\t   * Prepends the specified display properties. This is generally used to apply a parent's properties to a child's.\n\t   * For example, to get the combined display properties that would be applied to a child, you could use:\n\t   *\n\t   * @example\n\t   * let o = displayObject;\n\t   * let props = new DisplayProps();\n\t   * do {\n\t   * \t // prepend each parent's props in turn:\n\t   * \t props.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation, o.getMatrix());\n\t   * } while (o = o.parent);\n\t   *\n\t   * @param {Boolean} visible desired visible value\n\t   * @param {Number} alpha desired alpha value\n\t   * @param {easeljs.Shadow} shadow desired shadow value\n\t   * @param {String} compositeOperation desired composite operation value\n\t   * @param {easeljs.Matrix2D} [matrix] a Matrix2D instance\n\t   * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n\t   * @chainable\n\t  */\n\n\n\t  prepend(visible, alpha, shadow, compositeOperation, matrix) {\n\t    this.alpha *= alpha;\n\t    this.shadow = this.shadow || shadow;\n\t    this.compositeOperation = this.compositeOperation || compositeOperation;\n\t    this.visible = this.visible && visible;\n\t    matrix && this.matrix.prependMatrix(matrix);\n\t    return this;\n\t  }\n\t  /**\n\t   * Resets this instance and its matrix to default values.\n\t   * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n\t   * @chainable\n\t  */\n\n\n\t  identity() {\n\t    this.visible = true;\n\t    this.alpha = 1;\n\t    this.shadow = this.compositeOperation = null;\n\t    this.matrix.identity();\n\t    return this;\n\t  }\n\t  /**\n\t   * Returns a clone of the DisplayProps instance. Clones the associated matrix.\n\t   * @return {easeljs.DisplayProps} a clone of the DisplayProps instance.\n\t   */\n\n\n\t  clone() {\n\t    return new DisplayProps(this.alpha, this.shadow, this.compositeOperation, this.visible, this.matrix.clone());\n\t  }\n\n\t}\n\n\t/**\n\t * @license Rectangle\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\n\t/**\n\t * Represents a rectangle as defined by the points (x, y) and (x+width, y+height).\n\t * Used by {@link easeljs.DisplayObjects#getBounds}.\n\t *\n\t * @memberof easeljs\n\t * @example\n\t * let rect = new Rectangle(0, 0, 100, 100);\n\t *\n\t * @param {Number} [x] X position.\n\t * @param {Number} [y] Y position.\n\t * @param {Number} [width] The width of the Rectangle.\n\t * @param {Number} [height] The height of the Rectangle.\n\t */\n\tclass Rectangle {\n\t  constructor(x, y, width, height) {\n\t    this.setValues(x, y, width, height); // assigned in the setValues method.\n\n\t    /**\n\t     * X position.\n\t     * @property x\n\t     * @type {Number}\n\t     */\n\n\t    /**\n\t     * Y position.\n\t     * @property y\n\t     * @type {Number}\n\t     */\n\n\t    /**\n\t     * Width.\n\t     * @property width\n\t     * @type {Number}\n\t     */\n\n\t    /**\n\t     * Height.\n\t     * @property height\n\t     * @type {Number}\n\t     */\n\t  }\n\t  /**\n\t   * Sets the specified values on this instance.\n\t   * @param {Number} [x=0] X position.\n\t   * @param {Number} [y=0] Y position.\n\t   * @param {Number} [width=0] The width of the Rectangle.\n\t   * @param {Number} [height=0] The height of the Rectangle.\n\t   * @return {easeljs.Rectangle} This instance. Useful for chaining method calls.\n\t   * @chainable\n\t  */\n\n\n\t  setValues(x = 0, y = 0, width = 0, height = 0) {\n\t    // don't forget to update docs in the constructor if these change:\n\t    this.x = x;\n\t    this.y = y;\n\t    this.width = width;\n\t    this.height = height;\n\t    return this;\n\t  }\n\t  /**\n\t   * Extends the rectangle's bounds to include the described point or rectangle.\n\t   * @param {Number} x X position of the point or rectangle.\n\t   * @param {Number} y Y position of the point or rectangle.\n\t   * @param {Number} [width=0] The width of the rectangle.\n\t   * @param {Number} [height=0] The height of the rectangle.\n\t   * @return {easeljs.Rectangle} This instance. Useful for chaining method calls.\n\t   * @chainable\n\t  */\n\n\n\t  extend(x, y, width = 0, height = 0) {\n\t    if (x + width > this.x + this.width) {\n\t      this.width = x + width - this.x;\n\t    }\n\n\t    if (y + height > this.y + this.height) {\n\t      this.height = y + height - this.y;\n\t    }\n\n\t    if (x < this.x) {\n\t      this.width += this.x - x;\n\t      this.x = x;\n\t    }\n\n\t    if (y < this.y) {\n\t      this.height += this.y - y;\n\t      this.y = y;\n\t    }\n\n\t    return this;\n\t  }\n\t  /**\n\t   * Adds the specified padding to the rectangle's bounds.\n\t   * @param {Number} top\n\t   * @param {Number} left\n\t   * @param {Number} bottom\n\t   * @param {Number} right\n\t   * @return {easeljs.Rectangle} This instance. Useful for chaining method calls.\n\t   * @chainable\n\t  */\n\n\n\t  pad(top, left, bottom, right) {\n\t    this.x -= left;\n\t    this.y -= top;\n\t    this.width += left + right;\n\t    this.height += top + bottom;\n\t    return this;\n\t  }\n\t  /**\n\t   * Copies all properties from the specified rectangle to this rectangle.\n\t   * @param {easeljs.Rectangle} rectangle The rectangle to copy properties from.\n\t   * @return {easeljs.Rectangle} This rectangle. Useful for chaining method calls.\n\t   * @chainable\n\t  */\n\n\n\t  copy(rect) {\n\t    return this.setValues(rect.x, rect.y, rect.width, rect.height);\n\t  }\n\t  /**\n\t   * Returns true if this rectangle fully encloses the described point or rectangle.\n\t   * @param {Number} x X position of the point or rectangle.\n\t   * @param {Number} y Y position of the point or rectangle.\n\t   * @param {Number} [width=0] The width of the rectangle.\n\t   * @param {Number} [height=0] The height of the rectangle.\n\t   * @return {Boolean} True if the described point or rectangle is contained within this rectangle.\n\t  */\n\n\n\t  contains(x, y, width = 0, height = 0) {\n\t    return x >= this.x && x + width <= this.x + this.width && y >= this.y && y + height <= this.y + this.height;\n\t  }\n\t  /**\n\t   * Returns a new rectangle which contains this rectangle and the specified rectangle.\n\t   * @param {easeljs.Rectangle} rect The rectangle to calculate a union with.\n\t   * @return {easeljs.Rectangle} A new rectangle describing the union.\n\t  */\n\n\n\t  union(rect) {\n\t    return this.clone().extend(rect.x, rect.y, rect.width, rect.height);\n\t  }\n\t  /**\n\t   * Returns a new rectangle which describes the intersection (overlap) of this rectangle and the specified rectangle,\n\t   * or null if they do not intersect.\n\t   * @param {easeljs.Rectangle} rect The rectangle to calculate an intersection with.\n\t   * @return {easeljs.Rectangle} A new rectangle describing the intersection or null.\n\t  */\n\n\n\t  intersection(rect) {\n\t    let x1 = rect.x,\n\t        y1 = rect.y,\n\t        x2 = x1 + rect.width,\n\t        y2 = y1 + rect.height;\n\n\t    if (this.x > x1) {\n\t      x1 = this.x;\n\t    }\n\n\t    if (this.y > y1) {\n\t      y1 = this.y;\n\t    }\n\n\t    if (this.x + this.width < x2) {\n\t      x2 = this.x + this.width;\n\t    }\n\n\t    if (this.y + this.height < y2) {\n\t      y2 = this.y + this.height;\n\t    }\n\n\t    return x2 <= x1 || y2 <= y1 ? null : new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t  }\n\t  /**\n\t   * Returns true if the specified rectangle intersects (has any overlap) with this rectangle.\n\t   * @param {easeljs.Rectangle} rect The rectangle to compare.\n\t   * @return {Boolean} True if the rectangles intersect.\n\t  */\n\n\n\t  intersects(rect) {\n\t    return rect.x <= this.x + this.width && this.x <= rect.x + rect.width && rect.y <= this.y + this.height && this.y <= rect.y + rect.height;\n\t  }\n\t  /**\n\t   * Returns true if the width or height are equal or less than 0.\n\t   * @return {Boolean} True if the rectangle is empty.\n\t  */\n\n\n\t  isEmpty() {\n\t    return this.width <= 0 || this.height <= 0;\n\t  }\n\t  /**\n\t   * Returns a clone of the Rectangle instance.\n\t   * @return {easeljs.Rectangle} a clone of the Rectangle instance.\n\t   */\n\n\n\t  clone() {\n\t    return new Rectangle(this.x, this.y, this.width, this.height);\n\t  }\n\t  /**\n\t   * Returns a string representation of this object.\n\t   * @return {String} a string representation of the instance.\n\t   */\n\n\n\t  toString() {\n\t    return `[${this.constructor.name} (x=${this.x} y=${this.y} width=${this.width} height=${this.height})]`;\n\t  }\n\n\t}\n\n\t/**\n\t * @license Filter\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\n\t/**\n\t * Base class that all filters should inherit from. Filters need to be applied to objects that have been cached using\n\t * the {@link easeljs.DisplayObject#cache} method. If an object changes, please cache it again, or use\n\t * {@link easeljs.DisplayObject#updateCache}. Note that the filters must be applied before caching.\n\t *\n\t * Note that each filter can implement a {@link easeljs.Filter#getBounds} method, which returns the\n\t * margins that need to be applied in order to fully display the filter. For example, the {@link easeljs.BlurFilter}\n\t * will cause an object to feather outwards, resulting in a margin around the shape.\n\t *\n\t * <h4>EaselJS Filters</h4>\n\t * EaselJS comes with a number of pre-built filters:\n\t * <ul>\n\t *   <li>{@link easeljs.AlphaMapFilter}: Map a greyscale image to the alpha channel of a display object</li>\n\t *   <li>{@link easeljs.AlphaMaskFilter}: Map an image's alpha channel to the alpha channel of a display object</li>\n\t *   <li>{@link easeljs.BlurFilter}: Apply vertical and horizontal blur to a display object</li>\n\t *   <li>{@link easeljs.ColorFilter}: Color transform a display object</li>\n\t *   <li>{@link easeljs.ColorMatrixFilter}: Transform an image using a {{#crossLink \"ColorMatrix\"}}{{/crossLink}}</li>\n\t * </ul>\n\t *\n\t * @memberof easeljs\n\t * @example\n\t * shape.filters = [\n\t *   new createjs.ColorFilter(0, 0, 0, 1, 255, 0, 0),\n\t *   new createjs.BlurFilter(5, 5, 10)\n\t * ];\n\t * shape.cache(0, 0, 100, 100);\n\t */\n\tclass Filter {\n\t  constructor() {\n\t    /**\n\t     * A flag stating that this filter uses a context draw mode and cannot be batched into imageData processing.\n\t     * @type {Boolean}\n\t     * @default false\n\t     */\n\t    this.usesContext = false;\n\t    /**\n\t     * Another filter that is required to act as part of this filter and created and managed under the hood.\n\t     * @private\n\t     * @type {easeljs.Filter}\n\t     * @default null\n\t     */\n\n\t    this._multiPass = null;\n\t    /**\n\t     * Pre-processing shader code, will be parsed before being fed in.\n\t     * This should be based upon StageGL.SHADER_VERTEX_BODY_REGULAR\n\t     * @virtual\n\t     * @type {String}\n\t     * @readonly\n\t     */\n\n\t    this.VTX_SHADER_BODY = null;\n\t    /**\n\t     * Pre-processing shader code, will be parsed before being fed in.\n\t     * This should be based upon StageGL.SHADER_FRAGMENT_BODY_REGULAR\n\t     * @virtual\n\t     * @type {String}\n\t     * @readonly\n\t     */\n\n\t    this.FRAG_SHADER_BODY = null;\n\t  }\n\t  /**\n\t   * Provides padding values for this filter. That is, how much the filter will extend the visual bounds of an object it is applied to.\n\t   * @abstract\n\t   * @param {easeljs.Rectangle} [rect] If specified, the provided Rectangle instance will be expanded by the padding amounts and returned.\n\t   * @return {easeljs.Rectangle} If a `rect` param was provided, it is returned. If not, either a new rectangle with the padding values, or null if no padding is required for this filter.\n\t   */\n\n\n\t  getBounds(rect) {}\n\t  /**\n\t   * @virtual\n\t   * @abstract\n\t   * @param {WebGLContext} gl The context associated with the stage performing the render.\n\t   * @param {easeljs.StageGL} stage The stage instance that will be rendering.\n\t   * @param {ShaderProgram} shaderProgram The compiled shader that is going to be sued to perform the render.\n\t   */\n\n\n\t  shaderParamSetup(gl, stage, shaderProgram) {}\n\t  /**\n\t   * Applies the filter to the specified context.\n\t   * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t   * @param {Number} x The x position to use for the source rect.\n\t   * @param {Number} y The y position to use for the source rect.\n\t   * @param {Number} width The width to use for the source rect.\n\t   * @param {Number} height The height to use for the source rect.\n\t   * @param {CanvasRenderingContext2D} [targetCtx] The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t   * @param {Number} [targetX] The x position to draw the result to. Defaults to the value passed to x.\n\t   * @param {Number} [targetY] The y position to draw the result to. Defaults to the value passed to y.\n\t   * @return {Boolean} If the filter was applied successfully.\n\t   */\n\n\n\t  applyFilter(ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t    // this is the default behaviour because most filters access pixel data. It is overridden when not needed.\n\t    targetCtx = targetCtx || ctx;\n\n\t    if (targetX == null) {\n\t      targetX = x;\n\t    }\n\n\t    if (targetY == null) {\n\t      targetY = y;\n\t    }\n\n\t    try {\n\t      let imageData = ctx.getImageData(x, y, width, height);\n\n\t      if (this._applyFilter(imageData)) {\n\t        targetCtx.putImageData(imageData, targetX, targetY);\n\t        return true;\n\t      }\n\t    } catch (e) {}\n\n\t    return false;\n\t  }\n\t  /**\n\t   * Returns a string representation of this object.\n\t   * @return {String} a string representation of the instance.\n\t   */\n\n\n\t  toString() {\n\t    return `[${this.constructor.name}]`;\n\t  }\n\t  /**\n\t   * Returns a clone of this Filter instance.\n\t   * @return {easeljs.Filter} A clone of the current Filter instance.\n\t   */\n\n\n\t  clone() {\n\t    return new Filter();\n\t  }\n\t  /**\n\t   * @abstract\n\t   * @param {ImageData} imageData Target ImageData instance.\n\t   * @return {Boolean}\n\t   */\n\n\n\t  _applyFilter(imageData) {}\n\n\t}\n\n\t/**\n\t * @license BitmapCache\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * The BitmapCache is an internal representation of all the cache properties and logic required in order to \"cache\"\n\t * an object. This information and functionality used to be located on a {@link easeljs.DisplayObject#cache}\n\t * method in {@link easeljs.DisplayObject}, but was moved to its own class.\n\t *\n\t * Caching in this context is purely visual, and will render the DisplayObject out into an image to be used instead\n\t * of the object. The actual cache itself is still stored on the target with the {@link easeljs.DisplayObject#cacheCanvas}.\n\t *\n\t * Working with a singular image like a {@link easeljs.Bitmap}, there is little benefit to performing\n\t * a cache operation, as it is already a single image. Caching is best done on containers that have multiple complex\n\t * parts that do not change often, so that rendering the image will improve overall rendering speed. A cached object\n\t * will not visually update until explicitly told to do so with a call to {@link easeljs.Stage#update},\n\t * much like a Stage. If a cache is being updated every frame, it is likely not improving rendering performance.\n\t * Caches are best used when updates will be sparse.\n\t *\n\t * Caching is also a co-requisite for applying filters to prevent expensive filters running constantly without need.\n\t * The BitmapCache is also responsible for applying filters to objects, and reads each {@link easeljs.Filter}.\n\t * Real-time Filters are not recommended when dealing with a Context2D canvas if performance is a concern. For best\n\t * performance and to still allow for some visual effects, use a {{#crossLink \"DisplayObject/compositeOperation:property\"}}{{/crossLink}}\n\t * when possible.\n\t *\n\t * @memberof easeljs\n\t * @extends easeljs.Filter\n\t */\n\n\tclass BitmapCache extends Filter {\n\t  constructor() {\n\t    super();\n\t    /**\n\t     * Width of the cache relative to the target object.\n\t     * @protected\n\t     * @type {Number}\n\t     * @default undefined\n\t     */\n\n\t    this.width = undefined;\n\t    /**\n\t     * Height of the cache relative to the target object.\n\t     * @protected\n\t     * @type {Number}\n\t     * @default undefined\n\t     */\n\n\t    this.height = undefined;\n\t    /**\n\t     * Horizontal position of the cache relative to the target's origin.\n\t     * @protected\n\t     * @type {Number}\n\t     * @default undefined\n\t     */\n\n\t    this.x = undefined;\n\t    /**\n\t     * Vertical position of the cache relative to target's origin.\n\t     * @protected\n\t     * @type {Number}\n\t     * @default undefined\n\t     */\n\n\t    this.y = undefined;\n\t    /**\n\t     * The internal scale of the cache image, does not affects display size. This is useful to both increase and\n\t     * decrease render quality. Objects with increased scales are more likely to look good when scaled up. Objects\n\t     * with decreased scales can save on rendering performance.\n\t     * @protected\n\t     * @type {Number}\n\t     * @default 1\n\t     */\n\n\t    this.scale = 1;\n\t    /**\n\t     * The relative offset of the {@link easeljs.BitmapCache#x} position, used for drawing\n\t     * into the cache with the correct offsets. Re-calculated every update call before drawing.\n\t     * @protected\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.offX = 0;\n\t    /**\n\t     * The relative offset of the {@link easeljs.BitmapCache#y} position, used for drawing\n\t     * into the cache with the correct offsets. Re-calculated every update call before drawing.\n\t     * @protected\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.offY = 0;\n\t    /**\n\t     * Track how many times the cache has been updated, mostly used for preventing duplicate cacheURLs. This can be\n\t     * useful to see if a cache has been updated.\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.cacheID = 0;\n\t    /**\n\t     * Relative offset of the x position, used for drawing the cache into other scenes.\n\t     * Re-calculated every update call before drawing.\n\t     * @protected\n\t     * @type {Number}\n\t     * @default 0\n\t     * @todo Is this description right? Its the same as offX.\n\t     */\n\n\t    this._filterOffX = 0;\n\t    /**\n\t     * Relative offset of the y position, used for drawing into the cache into other scenes.\n\t     * Re-calculated every update call before drawing.\n\t     * @protected\n\t     * @type {Number}\n\t     * @default 0\n\t     * @todo Is this description right? Its the same as offY.\n\t     */\n\n\t    this._filterOffY = 0;\n\t    /**\n\t     * The cacheID when a DataURL was requested.\n\t     * @protected\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this._cacheDataURLID = 0;\n\t    /**\n\t     * The cache's DataURL, generated on-demand using the getter.\n\t     * @protected\n\t     * @type {String}\n\t     * @default null\n\t     */\n\n\t    this._cacheDataURL = null;\n\t    /**\n\t     * Internal tracking of final bounding width, approximately `width*scale;` however, filters can complicate the actual value.\n\t     * @protected\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this._drawWidth = 0;\n\t    /**\n\t     * Internal tracking of final bounding height, approximately `height*scale;` however, filters can complicate the actual value.\n\t     * @protected\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this._drawHeight = 0;\n\t    /**\n\t     * Internal tracking of the last requested bounds, may happen repeadtedly so stored to avoid object creation.\n\t     * @protected\n\t     * @type {easeljs.Rectangle}\n\t     * @default easeljs.Rectangle\n\t     */\n\n\t    this._boundRect = new Rectangle();\n\t  }\n\t  /**\n\t   * Returns the bounds that surround all applied filters. This relies on each filter to describe how it changes bounds.\n\t   * @param {easeljs.DisplayObject} target The object to check the filter bounds for.\n\t   * @param {easeljs.Rectangle} [output] Calculated bounds will be applied to this rect.\n\t   * @return {easeljs.Rectangle}\n\t   * @static\n\t   */\n\n\n\t  static getFilterBounds(target, output = new Rectangle()) {\n\t    let filters = target.filters;\n\t    let filterCount = filters && filters.length;\n\n\t    if (!!filterCount <= 0) {\n\t      return output;\n\t    }\n\n\t    for (let i = 0; i < filterCount; i++) {\n\t      let f = filters[i];\n\n\t      if (!f || !f.getBounds) {\n\t        continue;\n\t      }\n\n\t      let test = f.getBounds();\n\n\t      if (!test) {\n\t        continue;\n\t      }\n\n\t      if (i == 0) {\n\t        output.setValues(test.x, test.y, test.width, test.height);\n\t      } else {\n\t        output.extend(test.x, test.y, test.width, test.height);\n\t      }\n\t    }\n\n\t    return output;\n\t  }\n\t  /**\n\t   * Directly called via {@link easeljs.DisplayObject#cache}. Creates and sets properties needed\n\t   * for a cache to function, and performs the initial update.\n\t   * @param {easeljs.DisplayObject} target The DisplayObject this cache is linked to.\n\t   * @param {Number} [x=0] The x coordinate origin for the cache region.\n\t   * @param {Number} [y=0] The y coordinate origin for the cache region.\n\t   * @param {Number} [width=1] The width of the cache region.\n\t   * @param {Number} [height=1] The height of the cache region.\n\t   * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape\n\t   * using `myShape.cache(0,0,100,100,2)`, then the resulting cacheCanvas will be 200x200 pixels. This lets you scale\n\t   * and rotate cached elements with greater fidelity.\n\t   * @param {Object} [options] When using things like {@link easeljs.StageGL} there may be\n\t   * extra caching opportunities or requirements.\n\t   */\n\n\n\t  define(target, x = 0, y = 0, width = 1, height = 1, scale = 1, options) {\n\t    if (!target) {\n\t      throw \"No symbol to cache\";\n\t    }\n\n\t    this._options = options;\n\t    this._useWebGL = options !== undefined;\n\t    this.target = target;\n\t    this.width = width >= 1 ? width : 1;\n\t    this.height = height >= 1 ? height : 1;\n\t    this.x = x;\n\t    this.y = y;\n\t    this.scale = scale;\n\t    this.update();\n\t  }\n\t  /**\n\t   * Directly called via {@link easeljs.DisplayObject#updateCache}, but also internally. This\n\t   * has the dual responsibility of making sure the surface is ready to be drawn to, and performing the draw. For\n\t   * full details of each behaviour, check the protected functions {@link easeljs.BitmapCache#_updateSurface}\n\t   * and {@link easeljs.BitmapCache#_drawToCache} respectively.\n\t   * @param {String} [compositeOperation] The DisplayObject this cache is linked to.\n\t   */\n\n\n\t  update(compositeOperation) {\n\t    if (!this.target) {\n\t      throw \"define() must be called before update()\";\n\t    }\n\n\t    let filterBounds = BitmapCache.getFilterBounds(this.target);\n\t    let surface = this.target.cacheCanvas;\n\t    this._drawWidth = Math.ceil(this.width * this.scale) + filterBounds.width;\n\t    this._drawHeight = Math.ceil(this.height * this.scale) + filterBounds.height;\n\n\t    if (!surface || this._drawWidth != surface.width || this._drawHeight != surface.height) {\n\t      this._updateSurface();\n\t    }\n\n\t    this._filterOffX = filterBounds.x;\n\t    this._filterOffY = filterBounds.y;\n\t    this.offX = this.x * this.scale + this._filterOffX;\n\t    this.offY = this.y * this.scale + this._filterOffY;\n\n\t    this._drawToCache(compositeOperation);\n\n\t    this.cacheID = this.cacheID ? this.cacheID + 1 : 1;\n\t  }\n\t  /**\n\t   * Reset and release all the properties and memory associated with this cache.\n\t   */\n\n\n\t  release() {\n\t    let stage = this.target.stage;\n\n\t    if (this._useWebGL && this._webGLCache) {\n\t      // if it isn't cache controlled clean up after yourself\n\t      if (!this._webGLCache.isCacheControlled) {\n\t        if (this.__lastRT) {\n\t          this.__lastRT = undefined;\n\t        }\n\n\t        if (this.__rtA) {\n\t          this._webGLCache._killTextureObject(this.__rtA);\n\t        }\n\n\t        if (this.__rtB) {\n\t          this._webGLCache._killTextureObject(this.__rtB);\n\t        }\n\n\t        if (this.target && this.target.cacheCanvas) {\n\t          this._webGLCache._killTextureObject(this.target.cacheCanvas);\n\t        }\n\t      } // set the context to none and let the garbage collector get the rest when the canvas itself gets removed\n\n\n\t      this._webGLCache = false;\n\t    } else if (stage instanceof StageGL) {\n\t      stage.releaseTexture(this.target.cacheCanvas);\n\t    }\n\n\t    this.target = this.target.cacheCanvas = null;\n\t    this.cacheID = this._cacheDataURLID = this._cacheDataURL = undefined;\n\t    this.width = this.height = this.x = this.y = this.offX = this.offY = 0;\n\t    this.scale = 1;\n\t  }\n\t  /**\n\t   * Returns a data URL for the cache, or `null` if this display object is not cached.\n\t   * Uses {@link easeljs.BitmapCache#cacheID} to ensure a new data URL is not generated if the\n\t   * cache has not changed.\n\t   * @return {String} The image data url for the cache.\n\t   */\n\n\n\t  getCacheDataURL() {\n\t    let cacheCanvas = this.target && this.target.cacheCanvas;\n\n\t    if (!cacheCanvas) {\n\t      return null;\n\t    }\n\n\t    if (this.cacheID != this._cacheDataURLID) {\n\t      this._cacheDataURLID = this.cacheID;\n\t      this._cacheDataURL = cacheCanvas.toDataURL ? cacheCanvas.toDataURL() : null; // incase function is\n\t    }\n\n\t    return this._cacheDataURL;\n\t  }\n\t  /**\n\t   * Use context2D drawing commands to display the cache canvas being used.\n\t   * @param {CanvasRenderingContext2D} ctx The context to draw into.\n\t   * @return {Boolean} Whether the draw was handled successfully.\n\t   */\n\n\n\t  draw(ctx) {\n\t    if (!this.target) {\n\t      return false;\n\t    }\n\n\t    ctx.drawImage(this.target.cacheCanvas, this.x + this._filterOffX / this.scale, this.y + this._filterOffY / this.scale, this._drawWidth / this.scale, this._drawHeight / this.scale);\n\t    return true;\n\t  }\n\t  /**\n\t   * Determine the bounds of the shape in local space.\n\t   * @returns {easeljs.Rectangle}\n\t   */\n\n\n\t  getBounds() {\n\t    const scale = this.scale;\n\t    return this._boundRect.setValue(this._filterOffX / scale, this._filterOffY / scale, this.width / scale, this.height / scale);\n\t  }\n\t  /**\n\t   * Basic context2D caching works by creating a new canvas element and setting its physical size. This function will\n\t   * create and or size the canvas as needed.\n\t   * @protected\n\t   */\n\n\n\t  _updateSurface() {\n\t    let surface;\n\n\t    if (!this._useWebGL) {\n\t      surface = this.target.cacheCanvas; // create it if it's missing\n\n\t      if (!surface) {\n\t        surface = this.target.cacheCanvas = window.createjs && createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n\t      } // now size it\n\n\n\t      surface.width = this._drawWidth;\n\t      surface.height = this._drawHeight; // skip the webgl-only updates\n\n\t      return;\n\t    } // create it if it's missing\n\n\n\t    if (!this._webGLCache) {\n\t      if (this._options.useGL === \"stage\") {\n\t        if (!(this.target.stage != null && this.target.stage.isWebGL)) {\n\t          throw `Cannot use 'stage' for cache because the object's parent stage is ${this.target.stage != null ? \"non WebGL.\" : \"not set, please addChild to the correct stage.\"}`;\n\t        }\n\n\t        this.target.cacheCanvas = true; // will be replaced with RenderTexture, temporary positive value for old \"isCached\" checks\n\n\t        this._webGLCache = this.target.stage;\n\t      } else if (this._options.useGL === \"new\") {\n\t        this.target.cacheCanvas = document.createElement(\"canvas\"); // we can turn off autopurge because we wont be making textures here\n\n\t        this._webGLCache = new StageGL(this.target.cacheCanvas, {\n\t          antialias: true,\n\t          transparent: true,\n\t          autoPurge: -1\n\t        });\n\t        this._webGLCache.isCacheControlled = true; // use this flag to control stage sizing and final output\n\t      } else {\n\t        throw \"Invalid option provided to useGL, expected ['stage', 'new', StageGL, undefined], got \" + this._options.useGL;\n\t      }\n\t    } // now size render surfaces\n\n\n\t    let stageGL = this._webGLCache;\n\t    surface = this.target.cacheCanvas; // if we have a dedicated stage we've gotta size it\n\n\t    if (stageGL.isCacheControlled) {\n\t      surface.width = this._drawWidth;\n\t      surface.height = this._drawHeight;\n\t      stageGL.updateViewport(this._drawWidth, this._drawHeight);\n\t    }\n\n\t    if (this.target.filters) {\n\t      // with filters we can't tell how many we'll need but the most we'll ever need is two, so make them now\n\t      stageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);\n\t      stageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);\n\t    } else if (!stageGL.isCacheControlled) {\n\t      // without filters then we only need one RenderTexture, and that's only if its not a dedicated stage\n\t      stageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);\n\t    }\n\t  }\n\t  /**\n\t   * Perform the cache draw out for context 2D now that the setup properties have been performed.\n\t   * @protected\n\t   */\n\n\n\t  _drawToCache(compositeOperation) {\n\t    let target = this.target;\n\t    let surface = target.cacheCanvas;\n\t    let webGL = this._webGLCache;\n\n\t    if (!this._useWebGL || !webGL) {\n\t      let ctx = surface.getContext(\"2d\");\n\n\t      if (!compositeOperation) {\n\t        ctx.clearRect(0, 0, this._drawWidth + 1, this._drawHeight + 1);\n\t      }\n\n\t      ctx.save();\n\t      ctx.globalCompositeOperation = compositeOperation;\n\t      ctx.setTransform(this.scale, 0, 0, this.scale, -this._filterOffX, -this._filterOffY);\n\t      ctx.translate(-this.x, -this.y);\n\t      target.draw(ctx, true);\n\t      ctx.restore();\n\n\t      if (target.filters && target.filters.length) {\n\t        this._applyFilters(target);\n\t      }\n\n\t      surface._invalid = true;\n\t      return;\n\t    }\n\n\t    this._webGLCache.cacheDraw(target, target.filters, this); // NOTE: we may of swapped around which element the surface is, so we re-fetch it\n\n\n\t    surface = this.target.cacheCanvas;\n\t    surface.width = this._drawWidth;\n\t    surface.height = this._drawHeight;\n\t    surface._invalid = true;\n\t  }\n\t  /**\n\t   * Work through every filter and apply its individual transformation to it.\n\t   * @protected\n\t   */\n\n\n\t  _applyFilters() {\n\t    let surface = this.target.cacheCanvas;\n\t    let filters = this.target.filters;\n\t    let w = this._drawWidth;\n\t    let h = this._drawHeight; // setup\n\n\t    let data = surface.getContext(\"2d\").getImageData(0, 0, w, h); // apply\n\n\t    let l = filters.length;\n\n\t    for (let i = 0; i < l; i++) {\n\t      filters[i]._applyFilter(data);\n\t    } //done\n\n\n\t    surface.getContext(\"2d\").putImageData(data, 0, 0);\n\t  }\n\n\t}\n\t/**\n\t * Functionality injected to {@link easeljs.BitmapCache}. Ensure StageGL is loaded after all other\n\t * standard EaselJS classes are loaded but before making any DisplayObject instances for injection to take full effect.\n\t * Replaces the context2D cache draw with the option for WebGL or context2D drawing.\n\t * If options is set to \"true\" a StageGL is created and contained on the object for use when rendering a cache.\n\t * If options is a StageGL instance it will not create an instance but use the one provided.\n\t * If possible it is best to provide the StageGL instance that is a parent to this DisplayObject for performance reasons.\n\t * A StageGL cache does not infer the ability to draw objects a StageGL cannot currently draw,\n\t * i.e. do not use a WebGL context cache when caching a Shape, Text, etc.\n\t *\n\t * You can make your own StageGL and have it render to a canvas if you set \".isCacheControlled\" to true on your stage.\n\t * You may wish to create your own StageGL instance to control factors like background color/transparency, AA, and etc.\n\t * You must set \"options\" to its own stage if you wish to use the fast Render Textures available only to StageGLs.\n\t * If you use WebGL cache on a container with Shapes you will have to cache each shape individually before the container,\n\t * otherwise the WebGL cache will not render the shapes.\n\t *\n\t * @name easeljs.BitmapCache#cache\n\t *\n\t * @example <caption>WebGL cache with 2d context</caption>\n\t * let stage = new Stage();\n\t * let bmp = new Bitmap(src);\n\t * bmp.cache(0, 0, bmp.width, bmp.height, 1, true); // no StageGL to use, so make one\n\t * let shape = new Shape();\n\t * shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n\t * shape.cache(0, 0, 20, 20, 1); // cannot use WebGL cache\n\t *\n\t * @example <caption>WebGL cache with WebGL context</caption>\n\t * let stageGL = new StageGL();\n\t * let bmp = new Bitmap(src);\n\t * bmp.cache(0, 0, bmp.width, bmp.height, 1, stageGL); // use our StageGL to cache\n\t * let shape = new Shape();\n\t * shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n\t * shape.cache(0, 0, 20, 20, 1); // cannot use WebGL cache\n\t *\n\t * @param {Number} x The x coordinate origin for the cache region.\n\t * @param {Number} y The y coordinate origin for the cache region.\n\t * @param {Number} width The width of the cache region.\n\t * @param {Number} height The height of the cache region.\n\t * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\n\t * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n\t * \tcached elements with greater fidelity.\n\t * @param {Boolean | easeljs.StageGL} [options] Select whether to use context 2D, or WebGL rendering, and whether to make a new stage instance or use an existing one.\n\t */\n\n\t/**\n\t * @license DisplayObject\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * DisplayObject is an abstract class that should not be constructed directly. Instead construct subclasses such as\n\t * {@link easeljs.Container}, {@link easeljs.Bitmap}, and {@link easeljs.Shape}.\n\t * DisplayObject is the base class for all display classes in the EaselJS library. It defines the core properties and\n\t * methods that are shared between all display objects, such as transformation properties (x, y, scaleX, scaleY, etc),\n\t * caching, and mouse handlers.\n\t *\n\t * @memberof easeljs\n\t * @extends EventDispatcher\n\t */\n\n\tclass DisplayObject extends EventDispatcher {\n\t  constructor() {\n\t    super();\n\t    /**\n\t     * The alpha (transparency) for this display object. 0 is fully transparent, 1 is fully opaque.\n\t     * @type {Number}\n\t     * @default 1\n\t     */\n\n\t    this.alpha = 1;\n\t    /**\n\t     * If a cache is active, this returns the canvas that holds the image of this display object.\n\t     * Use this to display the result of a cache. This will be a HTMLCanvasElement unless special cache rules have been deliberately enabled for this cache.\n\t     * @see {@link easeljs.DisplayObject#cache}\n\t     * @type {HTMLCanvasElement | Object}\n\t     * @default null\n\t     * @readonly\n\t     */\n\n\t    this.cacheCanvas = null;\n\t    /**\n\t     * If a cache has been made, this returns the class that is managing the cacheCanvas and its properties.\n\t     * @see {@link easeljs.BitmapCache}\n\t     * @type {easeljs.BitmapCache}\n\t     * @default null\n\t     * @readonly\n\t     */\n\n\t    this.bitmapCache = null;\n\t    /**\n\t     * Unique ID for this display object. Makes display objects easier for some uses.\n\t     * @type {Number}\n\t     */\n\n\t    this.id = uid();\n\t    /**\n\t     * Indicates whether to include this object when running mouse interactions. Setting this to `false` for children\n\t     * of a {@link easeljs.Container} will cause events on the Container to not fire when that child is\n\t     * clicked. Setting this property to `false` does not prevent the {@link easeljs.Container#getObjectsUnderPoint}\n\t     * method from returning the child.\n\t     *\n\t     * <strong>Note:</strong> In EaselJS 0.7.0, the `mouseEnabled` property will not work properly with nested Containers.\n\t     *\n\t     * @type {Boolean}\n\t     * @default true\n\t     */\n\n\t    this.mouseEnabled = true;\n\t    /**\n\t     * If false, the tick will not run on this display object (or its children). This can provide some performance benefits.\n\t     * In addition to preventing the {@link core.Ticker#event:tick} event from being dispatched, it will also prevent tick related updates\n\t     * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\n\t     * @type Boolean\n\t     * @default true\n\t     */\n\n\t    this.tickEnabled = true;\n\t    /**\n\t     * An optional name for this display object. Included in {@link easeljs.DisplayObject#toString}. Useful for debugging.\n\t     * @type {String}\n\t     * @default null\n\t     */\n\n\t    this.name = null;\n\t    /**\n\t     * A reference to the {@link easeljs.Container} or {@link easeljs.Stage} object that\n\t     * contains this display object, or null if it has not been added to one.\n\t     * @type {easeljs.Container}\n\t     * @default null\n\t     * @readonly\n\t     */\n\n\t    this.parent = null;\n\t    /**\n\t     * The left offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate\n\t     * around its center, you would set regX and {@link easeljs.DisplayObject#regY} to 50.\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.regX = 0;\n\t    /**\n\t     * The y offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate around\n\t     * its center, you would set {@link easeljs.DisplayObject#regX} and regY to 50.\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.regY = 0;\n\t    /**\n\t     * The rotation in degrees for this display object.\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.rotation = 0;\n\t    /**\n\t     * The factor to stretch this display object horizontally. For example, setting scaleX to 2 will stretch the display\n\t     * object to twice its nominal width. To horizontally flip an object, set the scale to a negative number.\n\t     * @type {Number}\n\t     * @default 1\n\t     */\n\n\t    this.scaleX = 1;\n\t    /**\n\t     * The factor to stretch this display object vertically. For example, setting scaleY to 0.5 will stretch the display\n\t     * object to half its nominal height. To vertically flip an object, set the scale to a negative number.\n\t     * @type {Number}\n\t     * @default 1\n\t     */\n\n\t    this.scaleY = 1;\n\t    /**\n\t     * The factor to skew this display object horizontally.\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.skewX = 0;\n\t    /**\n\t     * The factor to skew this display object vertically.\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.skewY = 0;\n\t    /**\n\t     * A shadow object that defines the shadow to render on this display object. Set to `null` to remove a shadow. If\n\t     * null, this property is inherited from the parent container.\n\t     * @type {easeljs.Shadow}\n\t     * @default null\n\t     */\n\n\t    this.shadow = null;\n\t    /**\n\t     * Indicates whether this display object should be rendered to the canvas and included when running the Stage\n\t     * {@link easeljs.Stage#getObjectsUnderPoint} method.\n\t     * @type {Boolean}\n\t     * @default true\n\t     */\n\n\t    this.visible = true;\n\t    /**\n\t     * The x (horizontal) position of the display object, relative to its parent.\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.x = 0;\n\t    /**\n\t     * The y (vertical) position of the display object, relative to its parent.\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.y = 0;\n\t    /**\n\t     * If set, defines the transformation for this display object, overriding all other transformation properties\n\t     * (x, y, rotation, scale, skew).\n\t     * @type {easeljs.Matrix2D}\n\t     * @default null\n\t     */\n\n\t    this.transformMatrix = null;\n\t    /**\n\t     * The composite operation indicates how the pixels of this display object will be composited with the elements\n\t     * behind it. If `null`, this property is inherited from the parent container.\n\t     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing \"WHATWG spec on compositing\"}\n\t     * @type {String}\n\t     * @default null\n\t     */\n\n\t    this.compositeOperation = null;\n\t    /**\n\t     * Indicates whether the display object should be drawn to a whole pixel when {@link easeljs.Stage#snapToPixelEnabled} is true.\n\t     * To enable/disable snapping on whole categories of display objects, set this value on the prototype (Ex. Text.prototype.snapToPixel = true).\n\t     * @type {Boolean}\n\t     * @default true\n\t     */\n\n\t    this.snapToPixel = true;\n\t    /**\n\t     * An array of Filter objects to apply to this display object. Filters are only applied / updated when {@link easeljs.DisplayObject#cache}\n\t     * or {@link easeljs.DisplayObject#updateCache} is called on the display object, and only apply to the area that is cached.\n\t     * @type {Array<easeljs.Filter>}\n\t     * @default null\n\t     */\n\n\t    this.filters = null;\n\t    /**\n\t     * A Shape instance that defines a vector mask (clipping path) for this display object.  The shape's transformation\n\t     * will be applied relative to the display object's parent coordinates (as if it were a child of the parent).\n\t     * @type {easeljs.Shape}\n\t     * @default null\n\t     */\n\n\t    this.mask = null;\n\t    /**\n\t     * A display object that will be tested when checking mouse interactions or testing {@link easeljs.Container#getObjectsUnderPoint}.\n\t     * The hit area will have its transformation applied relative to this display object's coordinate space (as though\n\t     * the hit test object were a child of this display object and relative to its regX/Y). The hitArea will be tested\n\t     * using only its own `alpha` value regardless of the alpha value on the target display object, or the target's\n\t     * ancestors (parents).\n\t     *\n\t     * If set on a {@link easeljs.Container}, children of the Container will not receive mouse events.\n\t     * This is similar to setting {@link easeljs.DisplayObject#mouseChildren} to false.\n\t     *\n\t     * Note that hitArea is NOT currently used by the `hitTest()` method, nor is it supported for {@link easeljs.Stage}.\n\t     *\n\t     * @type {easeljs.DisplayObject}\n\t     * @default null\n\t     */\n\n\t    this.hitArea = null;\n\t    /**\n\t     * A CSS cursor (ex. \"pointer\", \"help\", \"text\", etc) that will be displayed when the user hovers over this display\n\t     * object. You must enable mouseover events using the {@link easeljs.Stage#enableMouseOver} method to\n\t     * use this property. Setting a non-null cursor on a Container will override the cursor set on its descendants.\n\t     *\n\t     * @type {String}\n\t     * @default null\n\t     */\n\n\t    this.cursor = null;\n\t    /**\n\t     * @protected\n\t     * @type {easeljs.DisplayProps}\n\t     */\n\n\t    this._props = new DisplayProps();\n\t    /**\n\t     * @protected\n\t     * @type {easeljs.Rectangle}\n\t     */\n\n\t    this._rectangle = new Rectangle();\n\t    /**\n\t     * @protected\n\t     * @type {easeljs.Rectangle}\n\t     * @default null\n\t     */\n\n\t    this._bounds = null;\n\t    /**\n\t     * Where StageGL should look for required display properties, matters only for leaf display objects. Containers\n\t     * or cached objects won't use this property, it's for native display of terminal elements.\n\t     * @protected\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this._webGLRenderStyle = DisplayObject._StageGL_NONE;\n\t  }\n\t  /**\n\t   * Returns the {@link easeljs.Stage} instance that this display object will be rendered on, or null if it has not been added to one.\n\t   * @type {Stage}\n\t   * @readonly\n\t   */\n\n\n\t  get stage() {\n\t    // uses dynamic access to avoid circular dependencies;\n\t    let o = this;\n\n\t    while (o.parent) {\n\t      o = o.parent;\n\t    }\n\n\t    if (/^\\[Stage(GL)?(\\s\\(name=\\w+\\))?\\]$/.test(o.toString())) {\n\t      return o;\n\t    }\n\n\t    return null;\n\t  }\n\t  /**\n\t   * Set both the {@link easeljs.DisplayObject#scaleX} and the {@link easeljs.DisplayObject#scaleY} property to the same value.\n\t   * Note that when you get the value, if the `scaleX` and `scaleY` are different values, it will return only the `scaleX`.\n\t   * @type {Number}\n\t   * @default 1\n\t   */\n\n\n\t  set scale(value) {\n\t    this.scaleX = this.scaleY = value;\n\t  }\n\n\t  get scale() {\n\t    return this.scaleX;\n\t  }\n\t  /**\n\t   * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t   * This does not account for whether it would be visible within the boundaries of the stage.\n\t   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t   * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t   */\n\n\n\t  isVisible() {\n\t    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n\t  }\n\t  /**\n\t   * Alias for drawCache(). Used by grandchildren (or deeper) in their draw method to directly\n\t   * call {@link easeljs.DisplayObject#drawCache}, bypassing their parent(s).\n\t   *\n\t   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t   * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t   * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t   * @return {Boolean}\n\t   */\n\n\n\t  draw(ctx, ignoreCache = false) {\n\t    return this.drawCache(ctx, ignoreCache);\n\t  }\n\t  /**\n\t   * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t   * Returns `true` if the draw was handled (useful for overriding functionality).\n\t   *\n\t   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t   * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t   * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t   * @return {Boolean}\n\t   */\n\n\n\t  drawCache(ctx, ignoreCache = false) {\n\t    let cache = this.bitmapCache;\n\n\t    if (cache && !ignoreCache) {\n\t      return cache.draw(ctx);\n\t    }\n\n\t    return false;\n\t  }\n\t  /**\n\t   * Applies this display object's transformation, alpha, globalCompositeOperation, clipping path (mask), and shadow\n\t   * to the specified context. This is typically called prior to {@link easeljs.DisplayObject#draw}.\n\t   * @param {CanvasRenderingContext2D} ctx The canvas 2D to update.\n\t   */\n\n\n\t  updateContext(ctx) {\n\t    let o = this,\n\t        mask = o.mask,\n\t        mtx = o._props.matrix;\n\n\t    if (mask && mask.graphics && !mask.graphics.isEmpty()) {\n\t      mask.getMatrix(mtx);\n\t      ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n\t      mask.graphics.drawAsPath(ctx);\n\t      ctx.clip();\n\t      mtx.invert();\n\t      ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n\t    }\n\n\t    this.getMatrix(mtx);\n\t    let tx = mtx.tx,\n\t        ty = mtx.ty;\n\n\t    if (DisplayObject._snapToPixelEnabled && o.snapToPixel) {\n\t      tx = tx + (tx < 0 ? -0.5 : 0.5) | 0;\n\t      ty = ty + (ty < 0 ? -0.5 : 0.5) | 0;\n\t    }\n\n\t    ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, tx, ty);\n\t    ctx.globalAlpha *= o.alpha;\n\n\t    if (o.compositeOperation) {\n\t      ctx.globalCompositeOperation = o.compositeOperation;\n\t    }\n\n\t    if (o.shadow) {\n\t      this._applyShadow(ctx, o.shadow);\n\t    }\n\t  }\n\t  /**\n\t   * Draws the display object into a new element, which is then used for subsequent draws. Intended for complex content\n\t   * that does not change frequently (ex. a Container with many children that do not move, or a complex vector Shape),\n\t   * this can provide for much faster rendering because the content does not need to be re-rendered each tick. The\n\t   * cached display object can be moved, rotated, faded, etc freely, however if its content changes, you must manually\n\t   * update the cache by calling `updateCache()` again. You must specify the cached area via the x, y, w,\n\t   * and h parameters. This defines the rectangle that will be rendered and cached using this display object's coordinates.\n\t   *\n\t   * Note that filters need to be defined <em>before</em> the cache is applied or you will have to call updateCache after\n\t   * application. Check out the {@link easeljs.Filter} class for more information. Some filters\n\t   * (ex. {@link easeljs.BlurFilter}) may not work as expected in conjunction with the scale param.\n\t   *\n\t   * Usually, the resulting cacheCanvas will have the dimensions width*scale by height*scale, however some filters (ex. BlurFilter)\n\t   * will add padding to the canvas dimensions.\n\t   *\n\t   * Actual implementation of the caching mechanism can change with a {@link easeljs.StageGL} and so\n\t   * all caching and filter behaviour has been moved to the {@link easeljs.BitmapCache}\n\t   *\n\t   * @example\n\t   * // If you defined a Shape that drew a circle at 0, 0 with a radius of 25:\n\t   * var shape = new createjs.Shape();\n\t   * shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n\t   * shape.cache(-25, -25, 50, 50);\n\t   *\n\t   * @param {Number} x The x coordinate origin for the cache region.\n\t   * @param {Number} y The y coordinate origin for the cache region.\n\t   * @param {Number} width The width of the cache region.\n\t   * @param {Number} height The height of the cache region.\n\t   * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\n\t   * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n\t   * \tcached elements with greater fidelity. Default is 1.\n\t   * @param {Object} [options] When using alternate displays there may be extra caching opportunities or needs.\n\t   */\n\n\n\t  cache(x, y, width, height, scale = 1, options) {\n\t    if (!this.bitmapCache) {\n\t      this.bitmapCache = new BitmapCache();\n\t    }\n\n\t    this.bitmapCache.define(this, x, y, width, height, scale, options);\n\t  }\n\t  /**\n\t   * Redraws the display object to its cache. Calling updateCache without an active cache will throw an error.\n\t   * If compositeOperation is null the current cache will be cleared prior to drawing. Otherwise the display object\n\t   * will be drawn over the existing cache using the specified compositeOperation.\n\t   *\n\t   * Actual implementation of the caching mechanism can change with a {@link easeljs.StageGL} and so\n\t   * all caching and filter behaviour has been moved to the {@link easeljs.BitmapCache}\n\t   *\n\t   * @example\n\t   * // clear current graphics\n\t   * shapeInstance.clear();\n\t   * // draw new instructions\n\t   * shapeInstance.setStrokeStyle(3).beginStroke(\"#FF0000\").moveTo(100, 100).lineTo(200,200);\n\t   * // update cache, drawing new line on top of old one\n\t   * shapeInstance.updateCache();\n\t   *\n\t   * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing \"WHATWG spec on compositing\"}\n\t   * @param {String} compositeOperation The compositeOperation to use, or null to clear the cache and redraw it.\n\t   */\n\n\n\t  updateCache(compositeOperation) {\n\t    if (!this.bitmapCache) {\n\t      throw \"No cache found. cache() must be called before updateCache()\";\n\t    }\n\n\t    this.bitmapCache.update(compositeOperation);\n\t  }\n\t  /**\n\t   * Clears the current cache.\n\t   * @see {@link easeljs.DisplayObject.#cache}\n\t   */\n\n\n\t  uncache() {\n\t    if (this.bitmapCache) {\n\t      this.bitmapCache.release();\n\t      this.bitmapCache = undefined;\n\t    }\n\t  }\n\t  /**\n\t   * Returns a data URL for the cache, or null if this display object is not cached.\n\t   * Only generated if the cache has changed, otherwise returns last result.\n\t   * @return {String} The image data url for the cache.\n\t   */\n\n\n\t  getCacheDataURL() {\n\t    return this.bitmapCache ? this.bitmapCache.getDataURL() : null;\n\t  }\n\t  /**\n\t   * Transforms the specified x and y position from the coordinate space of the display object\n\t   * to the global (stage) coordinate space. For example, this could be used to position an HTML label\n\t   * over a specific point on a nested display object. Returns a Point instance with x and y properties\n\t   * correlating to the transformed coordinates on the stage.\n\t   *\n\t   * @example\n\t   * displayObject.x = 300;\n\t   * displayObject.y = 200;\n\t   * stage.addChild(displayObject);\n\t   * let point = displayObject.localToGlobal(100, 100);\n\t   * // Results in x=400, y=300\n\t   *\n\t   * @param {Number} x The x position in the source display object to transform.\n\t   * @param {Number} y The y position in the source display object to transform.\n\t   * @param {easeljs.Point | Object} [pt=Point] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n\t   * @return {easeljs.Point} A Point instance with x and y properties correlating to the transformed coordinates\n\t   * on the stage.\n\t   */\n\n\n\t  localToGlobal(x, y, pt = new Point()) {\n\t    return this.getConcatenatedMatrix(this._props.matrix).transformPoint(x, y, pt);\n\t  }\n\t  /**\n\t   * Transforms the specified x and y position from the global (stage) coordinate space to the\n\t   * coordinate space of the display object. For example, this could be used to determine\n\t   * the current mouse position within the display object. Returns a Point instance with x and y properties\n\t   * correlating to the transformed position in the display object's coordinate space.\n\t   *\n\t   * @example\n\t   * displayObject.x = 300;\n\t   * displayObject.y = 200;\n\t   * stage.addChild(displayObject);\n\t   * let point = displayObject.globalToLocal(100, 100);\n\t   * // Results in x=-200, y=-100\n\t   *\n\t   * @param {Number} x The x position on the stage to transform.\n\t   * @param {Number} y The y position on the stage to transform.\n\t   * @param {easeljs.Point | Object} [pt=Point] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n\t   * @return {easeljs.Point} A Point instance with x and y properties correlating to the transformed position in the\n\t   * display object's coordinate space.\n\t   */\n\n\n\t  globalToLocal(x, y, pt = new Point()) {\n\t    return this.getConcatenatedMatrix(this._props.matrix).invert().transformPoint(x, y, pt);\n\t  }\n\t  /**\n\t   * Transforms the specified x and y position from the coordinate space of this display object to the coordinate\n\t   * space of the target display object. Returns a Point instance with x and y properties correlating to the\n\t   * transformed position in the target's coordinate space. Effectively the same as using the following code with\n\t   * {@link easeljs.DisplayObject#localToGlobal} and {@link easeljs.DisplayObject#globalToLocal}.\n\t   *\n\t   * @example\n\t   * // long way\n\t   * let pt = this.localToGlobal(x, y);\n\t   * pt = target.globalToLocal(pt.x, pt.y);\n\t   * // shorthand\n\t   * let pt = this.localToLocal(x, y, target);\n\t   *\n\t   * @param {Number} x The x position in the source display object to transform.\n\t   * @param {Number} y The y position on the source display object to transform.\n\t   * @param {easeljs.DisplayObject} target The target display object to which the coordinates will be transformed.\n\t   * @param {easeljs.Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n\t   * @return {easeljs.Point} Returns a Point instance with x and y properties correlating to the transformed position\n\t   * in the target's coordinate space.\n\t   */\n\n\n\t  localToLocal(x, y, target, pt) {\n\t    pt = this.localToGlobal(x, y, pt);\n\t    return target.globalToLocal(pt.x, pt.y, pt);\n\t  }\n\t  /**\n\t   * Shortcut method to quickly set the transform properties on the display object. All parameters are optional.\n\t   * Omitted parameters will have the default value set.\n\t   *\n\t   * @example\n\t   * displayObject.setTransform(100, 100, 2, 2);\n\t   *\n\t   * @param {Number} [x=0] The horizontal translation (x position) in pixels\n\t   * @param {Number} [y=0] The vertical translation (y position) in pixels\n\t   * @param {Number} [scaleX=1] The horizontal scale, as a percentage of 1\n\t   * @param {Number} [scaleY=1] the vertical scale, as a percentage of 1\n\t   * @param {Number} [rotation=0] The rotation, in degrees\n\t   * @param {Number} [skewX=0] The horizontal skew factor\n\t   * @param {Number} [skewY=0] The vertical skew factor\n\t   * @param {Number} [regX=0] The horizontal registration point in pixels\n\t   * @param {Number} [regY=0] The vertical registration point in pixels\n\t   * @return {easeljs.DisplayObject} Returns this instance. Useful for chaining commands.\n\t  */\n\n\n\t  setTransform(x = 0, y = 0, scaleX = 1, scaleY = 1, rotation = 0, skewX = 0, skewY = 0, regX = 0, regY = 0) {\n\t    this.x = x;\n\t    this.y = y;\n\t    this.scaleX = scaleX;\n\t    this.scaleY = scaleY;\n\t    this.rotation = rotation;\n\t    this.skewX = skewX;\n\t    this.skewY = skewY;\n\t    this.regX = regX;\n\t    this.regY = regY;\n\t    return this;\n\t  }\n\t  /**\n\t   * Returns a matrix based on this object's current transform.\n\t   * @param {easeljs.Matrix2D} [matrix] A Matrix2D object to populate with the calculated values. If null, a new Matrix object is returned.\n\t   * @return {easeljs.Matrix2D} A matrix representing this display object's transform.\n\t   */\n\n\n\t  getMatrix(matrix) {\n\t    let o = this,\n\t        mtx = matrix && matrix.identity() || new Matrix2D();\n\t    return o.transformMatrix ? mtx.copy(o.transformMatrix) : mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t  }\n\t  /**\n\t   * Generates a Matrix2D object representing the combined transform of the display object and all of its\n\t   * parent Containers up to the highest level ancestor (usually the {@link easeljs.Stage}). This can\n\t   * be used to transform positions between coordinate spaces, such as with {@link easeljs.DisplayObject#localToGlobal}\n\t   * and {@link easeljs.DisplayObject#globalToLocal}.\n\t   *\n\t   * @param {easeljs.Matrix2D} [matrix] A Matrix2D object to populate with the calculated values. If null, a new Matrix2D object is returned.\n\t   * @return {easeljs.Matrix2D} The combined matrix.\n\t   */\n\n\n\t  getConcatenatedMatrix(matrix) {\n\t    let o = this,\n\t        mtx = this.getMatrix(matrix);\n\n\t    while (o = o.parent) {\n\t      mtx.prependMatrix(o.getMatrix(o._props.matrix));\n\t    }\n\n\t    return mtx;\n\t  }\n\t  /**\n\t   * Generates a DisplayProps object representing the combined display properties of the  object and all of its\n\t   * parent Containers up to the highest level ancestor (usually the {@link easeljs.Stage}).\n\t   * @param {easeljs.DisplayProps} [props] A DisplayProps object to populate with the calculated values. If null, a new DisplayProps object is returned.\n\t   * @return {easeljs.DisplayProps} The combined display properties.\n\t   */\n\n\n\t  getConcatenatedDisplayProps(props) {\n\t    props = props ? props.identity() : new DisplayProps();\n\t    let o = this,\n\t        mtx = o.getMatrix(props.matrix);\n\n\t    do {\n\t      props.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation); // we do this to avoid problems with the matrix being used for both operations when o._props.matrix is passed in as the props param.\n\t      // this could be simplified (ie. just done as part of the prepend above) if we switched to using a pool.\n\n\t      if (o != this) {\n\t        mtx.prependMatrix(o.getMatrix(o._props.matrix));\n\t      }\n\t    } while (o = o.parent);\n\n\t    return props;\n\t  }\n\t  /**\n\t   * Tests whether the display object intersects the specified point in local coordinates (ie. draws a pixel with alpha > 0 at\n\t   * the specified position). This ignores the alpha, shadow, hitArea, mask, and compositeOperation of the display object.\n\t   *\n\t   * Please note that shape-to-shape collision is not currently supported by EaselJS.\n\t   *\n\t   * @example\n\t   * stage.addEventListener(\"stagemousedown\", event => {\n\t   *   let hit = shape.hitTest(event.stageX, event.stageY);\n\t   *   // hit == true when shape is clicked\n\t   * });\n\t   *\n\t   * @param {Number} x The x position to check in the display object's local coordinates.\n\t   * @param {Number} y The y position to check in the display object's local coordinates.\n\t   * @return {Boolean} A Boolean indicating whether a visible portion of the DisplayObject intersect the specified\n\t   * local Point.\n\t  */\n\n\n\t  hitTest(x, y) {\n\t    let ctx = DisplayObject._hitTestContext;\n\t    ctx.setTransform(1, 0, 0, 1, -x, -y);\n\t    this.draw(ctx);\n\n\t    let hit = this._testHit(ctx);\n\n\t    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\t    ctx.clearRect(0, 0, 2, 2);\n\t    return hit;\n\t  }\n\t  /**\n\t   * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t   *\n\t   * @example\n\t   * let graphics = new Graphics().beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n\t   * let shape = stage.addChild(new Shape()).set({ graphics, x: 100, y: 100, alpha: 0.5 });\n\t   *\n\t   * @param {Object} props A generic object containing properties to copy to the DisplayObject instance.\n\t   * @return {easeljs.DisplayObject} Returns the instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t  */\n\n\n\t  set(props) {\n\t    for (let n in props) {\n\t      this[n] = props[n];\n\t    }\n\n\t    return this;\n\t  }\n\t  /**\n\t   * Returns a rectangle representing this object's bounds in its local coordinate system (ie. with no transformation).\n\t   * Objects that have been cached will return the bounds of the cache.\n\t   *\n\t   * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use\n\t   * {@link easeljs.DisplayObject#setBounds} so that they are included when calculating Container bounds.\n\t   *\n\t   * <table>\n\t   * \t<tr><td><b>All</b></td><td>\n\t   * \t\tAll display objects support setting bounds manually using setBounds(). Likewise, display objects that\n\t   * \t\thave been cached using cache() will return the bounds of their cache. Manual and cache bounds will override\n\t   * \t\tthe automatic calculations listed below.\n\t   * \t</td></tr>\n\t   * \t<tr><td><b>Bitmap</b></td><td>\n\t   * \t\tReturns the width and height of the sourceRect (if specified) or image, extending from (x=0,y=0).\n\t   * \t</td></tr>\n\t   * \t<tr><td><b>Sprite</b></td><td>\n\t   * \t\tReturns the bounds of the current frame. May have non-zero x/y if a frame registration point was specified\n\t   * \t\tin the spritesheet data. See also {@link easeljs.SpriteSheet#getFrameBounds}\n\t   * \t</td></tr>\n\t   * \t<tr><td><b>Container</b></td><td>\n\t   * \t\tReturns the aggregate (combined) bounds of all children that return a non-null value from getBounds().\n\t   * \t</td></tr>\n\t   * \t<tr><td><b>Shape</b></td><td>\n\t   * \t\tDoes not currently support automatic bounds calculations. Use setBounds() to manually define bounds.\n\t   * \t</td></tr>\n\t   * \t<tr><td><b>Text</b></td><td>\n\t   * \t\tReturns approximate bounds. Horizontal values (x/width) are quite accurate, but vertical values (y/height) are\n\t   * \t\tnot, especially when using textBaseline values other than \"top\".\n\t   * \t</td></tr>\n\t   * \t<tr><td><b>BitmapText</b></td><td>\n\t   * \t\tReturns approximate bounds. Values will be more accurate if spritesheet frame registration points are close\n\t   * \t\tto (x=0,y=0).\n\t   * \t</td></tr>\n\t  * </table>\n\t   *\n\t   * @example\n\t   * /* Bounds can be expensive to calculate for some objects (ex. text, or containers with many children), and\n\t   * are recalculated each time you call getBounds(). You can prevent recalculation on static objects by setting the\n\t   * bounds explicitly. *\\/\n\t   * let bounds = obj.getBounds();\n\t   * obj.setBounds(bounds.x, bounds.y, bounds.width, bounds.height);\n\t   * // getBounds will now use the set values, instead of recalculating\n\t   *\n\t   * @example\n\t   * // To reduce memory impact, the returned Rectangle instance may be reused internally\n\t   * let bounds = obj.getBounds().clone();\n\t   * // OR:\n\t   * rect.copy(obj.getBounds());\n\t   *\n\t   * @return {easeljs.Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\n\t   */\n\n\n\t  getBounds() {\n\t    if (this._bounds) {\n\t      return this._rectangle.copy(this._bounds);\n\t    }\n\n\t    let cacheCanvas = this.cacheCanvas;\n\n\t    if (cacheCanvas) {\n\t      let scale = this._cacheScale;\n\t      return this._rectangle.setValues(this._cacheOffsetX, this._cacheOffsetY, cacheCanvas.width / scale, cacheCanvas.height / scale);\n\t    }\n\n\t    return null;\n\t  }\n\t  /**\n\t   * Returns a rectangle representing this object's bounds in its parent's coordinate system (ie. with transformations applied).\n\t   * Objects that have been cached will return the transformed bounds of the cache.\n\t   *\n\t   * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use\n\t   * {@link easeljs.DisplayObject#setBounds} so that they are included when calculating Container bounds.\n\t   *\n\t   * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\n\t   * values if you need to retain it.\n\t   *\n\t   * Container instances calculate aggregate bounds for all children that return bounds via getBounds.\n\t   * @return {easeljs.Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\n\t   */\n\n\n\t  getTransformedBounds() {\n\t    return this._getBounds();\n\t  }\n\t  /**\n\t   * Allows you to manually specify the bounds of an object that either cannot calculate their own bounds (ex. Shape &\n\t   * Text) for future reference, or so the object can be included in Container bounds. Manually set bounds will always\n\t   * override calculated bounds.\n\t   *\n\t   * The bounds should be specified in the object's local (untransformed) coordinates. For example, a Shape instance\n\t   * with a 25px radius circle centered at 0,0 would have bounds of (-25, -25, 50, 50).\n\t   *\n\t   * @param {Number} x The x origin of the bounds. Pass null to remove the manual bounds.\n\t   * @param {Number} y The y origin of the bounds.\n\t   * @param {Number} width The width of the bounds.\n\t   * @param {Number} height The height of the bounds.\n\t   */\n\n\n\t  setBounds(x, y, width, height) {\n\t    if (x == null) {\n\t      this._bounds = null;\n\t    }\n\n\t    this._bounds = (this._bounds || new Rectangle()).setValues(x, y, width, height);\n\t  }\n\t  /**\n\t   * Returns a clone of this DisplayObject. Some properties that are specific to this instance's current context are\n\t   * reverted to their defaults (for example .parent). Caches are not maintained across clones, and some elements\n\t   * are copied by reference (masks, individual filter instances, hit area)\n\t   *\n\t   * @return {easeljs.DisplayObject} A clone of the current DisplayObject instance.\n\t   */\n\n\n\t  clone() {\n\t    return this._cloneProps(new DisplayObject());\n\t  }\n\t  /**\n\t   * Returns a string representation of this object.\n\t   * @return {String} a string representation of the instance.\n\t   */\n\n\n\t  toString() {\n\t    return `[${this.constructor.name}${this.name ? ` (name=${this.name})` : \"\"}]`;\n\t  }\n\t  /**\n\t   * @protected\n\t   * @param {easeljs.DisplayObject} o The DisplayObject instance which will have properties from the current DisplayObject\n\t   * instance copied into.\n\t   * @return {easeljs.DisplayObject} o\n\t   */\n\n\n\t  _cloneProps(o) {\n\t    o.alpha = this.alpha;\n\t    o.mouseEnabled = this.mouseEnabled;\n\t    o.tickEnabled = this.tickEnabled;\n\t    o.name = this.name;\n\t    o.regX = this.regX;\n\t    o.regY = this.regY;\n\t    o.rotation = this.rotation;\n\t    o.scaleX = this.scaleX;\n\t    o.scaleY = this.scaleY;\n\t    o.shadow = this.shadow;\n\t    o.skewX = this.skewX;\n\t    o.skewY = this.skewY;\n\t    o.visible = this.visible;\n\t    o.x = this.x;\n\t    o.y = this.y;\n\t    o.compositeOperation = this.compositeOperation;\n\t    o.snapToPixel = this.snapToPixel;\n\t    o.filters = this.filters == null ? null : this.filters.slice(0);\n\t    o.mask = this.mask;\n\t    o.hitArea = this.hitArea;\n\t    o.cursor = this.cursor;\n\t    o._bounds = this._bounds;\n\t    return o;\n\t  }\n\t  /**\n\t   * @protected\n\t   * @param {CanvasRenderingContext2D} ctx\n\t   * @param {easeljs.Shadow} [shadow=Shadow]\n\t   */\n\n\n\t  _applyShadow(ctx, shadow = Shadow.identity) {\n\t    shadow = shadow;\n\t    ctx.shadowColor = shadow.color;\n\t    ctx.shadowOffsetX = shadow.offsetX;\n\t    ctx.shadowOffsetY = shadow.offsetY;\n\t    ctx.shadowBlur = shadow.blur;\n\t  }\n\t  /**\n\t   * @protected\n\t   * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t   */\n\n\n\t  _tick(evtObj) {\n\t    // because tick can be really performance sensitive, check for listeners before calling dispatchEvent.\n\t    let ls = this._listeners;\n\n\t    if (ls && ls[\"tick\"]) {\n\t      // reset & reuse the event object to avoid construction / GC costs:\n\t      evtObj.target = null;\n\t      evtObj.propagationStopped = evtObj.immediatePropagationStopped = false;\n\t      this.dispatchEvent(evtObj);\n\t    }\n\t  }\n\t  /**\n\t   * @protected\n\t   * @param {CanvasRenderingContext2D} ctx\n\t   * @return {Boolean}\n\t   */\n\n\n\t  _testHit(ctx) {\n\t    try {\n\t      return ctx.getImageData(0, 0, 1, 1).data[3] > 1;\n\t    } catch (e) {\n\t      if (!DisplayObject.suppressCrossDomainErrors) {\n\t        throw \"An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.\";\n\t      }\n\n\t      return false;\n\t    }\n\t  }\n\t  /**\n\t   * @protected\n\t   * @param {easeljs.Matrix2D} matrix\n\t   * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n\t   * @return {easeljs.Rectangle}\n\t   */\n\n\n\t  _getBounds(matrix, ignoreTransform) {\n\t    return this._transformBounds(this.getBounds(), matrix, ignoreTransform);\n\t  }\n\t  /**\n\t   * @protected\n\t   * @param {easeljs.Rectangle} bounds\n\t   * @param {easeljs.Matrix2D} matrix\n\t   * @param {Boolean} ignoreTransform\n\t   * @return {easeljs.Rectangle}\n\t   */\n\n\n\t  _transformBounds(bounds, matrix, ignoreTransform) {\n\t    if (!bounds) {\n\t      return bounds;\n\t    }\n\n\t    let {\n\t      x,\n\t      y,\n\t      width,\n\t      height\n\t    } = bounds;\n\t    let mtx = this._props.matrix;\n\t    mtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\n\t    if (x || y) {\n\t      mtx.appendTransform(0, 0, 1, 1, 0, 0, 0, -x, -y);\n\t    } // TODO: simplify this.\n\n\n\t    if (matrix) {\n\t      mtx.prependMatrix(matrix);\n\t    }\n\n\t    let x_a = width * mtx.a,\n\t        x_b = width * mtx.b;\n\t    let y_c = height * mtx.c,\n\t        y_d = height * mtx.d;\n\t    let tx = mtx.tx,\n\t        ty = mtx.ty;\n\t    let minX = tx,\n\t        maxX = tx,\n\t        minY = ty,\n\t        maxY = ty;\n\n\t    if ((x = x_a + tx) < minX) {\n\t      minX = x;\n\t    } else if (x > maxX) {\n\t      maxX = x;\n\t    }\n\n\t    if ((x = x_a + y_c + tx) < minX) {\n\t      minX = x;\n\t    } else if (x > maxX) {\n\t      maxX = x;\n\t    }\n\n\t    if ((x = y_c + tx) < minX) {\n\t      minX = x;\n\t    } else if (x > maxX) {\n\t      maxX = x;\n\t    }\n\n\t    if ((y = x_b + ty) < minY) {\n\t      minY = y;\n\t    } else if (y > maxY) {\n\t      maxY = y;\n\t    }\n\n\t    if ((y = x_b + y_d + ty) < minY) {\n\t      minY = y;\n\t    } else if (y > maxY) {\n\t      maxY = y;\n\t    }\n\n\t    if ((y = y_d + ty) < minY) {\n\t      minY = y;\n\t    } else if (y > maxY) {\n\t      maxY = y;\n\t    }\n\n\t    return bounds.setValues(minX, minY, maxX - minX, maxY - minY);\n\t  }\n\t  /**\n\t   * Indicates whether the display object has any mouse event listeners or a cursor.\n\t   * @protected\n\t   * @return {Boolean}\n\t   */\n\n\n\t  _hasMouseEventListener() {\n\t    let evts = DisplayObject._MOUSE_EVENTS;\n\n\t    for (let i = 0, l = evts.length; i < l; i++) {\n\t      if (this.hasEventListener(evts[i])) {\n\t        return true;\n\t      }\n\t    }\n\n\t    return !!this.cursor;\n\t  }\n\n\t}\n\t{\n\t  let canvas = window.createjs && createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\"); // prevent errors on load in browsers without canvas.\n\n\t  if (canvas.getContext) {\n\t    /**\n\t     * @type {HTMLCanvasElement | Object}\n\t     * @static\n\t     */\n\t    DisplayObject._hitTestCanvas = canvas;\n\t    /**\n\t     * @type {CanvasRenderingContext2D}\n\t     * @static\n\t     */\n\n\t    DisplayObject._hitTestContext = canvas.getContext(\"2d\");\n\t    canvas.width = canvas.height = 1;\n\t  }\n\t}\n\t/**\n\t * Listing of mouse event names. Used in _hasMouseEventListener.\n\t * @static\n\t * @type {Array<String>}\n\t * @readonly\n\t */\n\n\tDisplayObject._MOUSE_EVENTS = [\"click\", \"dblclick\", \"mousedown\", \"mouseout\", \"mouseover\", \"pressmove\", \"pressup\", \"rollout\", \"rollover\"];\n\t/**\n\t * Suppresses errors generated when using features like hitTest, mouse events, and {{#crossLink \"getObjectsUnderPoint\"}}{{/crossLink}}\n\t * with cross domain content.\n\t * @static\n\t * @type {Boolean}\n\t * @default false\n\t */\n\n\tDisplayObject.suppressCrossDomainErrors = false;\n\t/**\n\t * @static\n\t * @type {Boolean}\n\t * @default false\n\t */\n\n\tDisplayObject.snapToPixelEnabled = false;\n\t/**\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n\t * @static\n\t * @type {Number}\n\t */\n\n\tDisplayObject._StageGL_NONE = 0;\n\t/**\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n\t * @static\n\t * @type {Number}\n\t */\n\n\tDisplayObject._StageGL_SPRITE = 1;\n\t/**\n\t * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n\t * @static\n\t * @type {Number}\n\t */\n\n\tDisplayObject._StageGL_BITMAP = 2;\n\t/**\n\t * Dispatched when the user presses their left mouse button over the display object.\n\t * @see {@link easeljs.MouseEvent}\n\t * @event easeljs.DisplayObject#mousedown\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user presses their left mouse button and then releases it while over the display object.\n\t * @see {@link easeljs.MouseEvent}\n\t * @event easeljs.DisplayObject#click\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user double clicks their left mouse button over this display object.\n\t * @see {@link easeljs.MouseEvent}\n\t * @event easeljs.DisplayObject#dblclick\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user's mouse enters this display object. This event must be enabled using\n\t * {@link easeljs.Stage#enableMouseOver}.\n\t * @see {@link easeljs.DisplayObject#event:rollover}\n\t * @see {@link easeljs.MouseEvent}\n\t * @event easeljs.DisplayObject#mouseover\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user's mouse leaves this display object. This event must be enabled using\n\t * {@link easeljs.Stage#enableMouseOver}.\n\t * @see {@link easeljs.DisplayObject#event:rollout}\n\t * @see {@link easeljs.MouseEvent}\n\t * @event easeljs.DisplayObject#mouseout\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * This event is similar to {@link easeljs.DisplayObject#event:mouseover}, with the following\n\t * differences: it does not bubble, and it considers {@link easeljs.Container} instances as an\n\t * aggregate of their content.\n\t *\n\t * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n\t * shapeA and then directly on to shapeB. With a listener for {@link easeljs.DisplayObject#event:mouseover} on\n\t * myContainer, two events would be received, each targeting a child element:\n\t * <ol>\n\t *   <li>when the mouse enters shapeA (target=shapeA)</li>\n\t *   <li>when the mouse enters shapeB (target=shapeB)</li>\n\t * </ol>\n\t * However, with a listener for \"rollover\" instead, only a single event is received when the mouse first enters\n\t * the aggregate myContainer content (target=myContainer).\n\t *\n\t * This event must be enabled using {@link easeljs.Stage#enableMouseOver}.\n\t * @see {@link easeljs.MouseEvent}\n\t * @event easeljs.DisplayObject#rollover\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * This event is similar to {@link easeljs.DisplayObject#event:mouseout}, with the following\n\t * differences: it does not bubble, and it considers {@link easeljs.Container} instances as an\n\t * aggregate of their content.\n\t *\n\t * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n\t * shapeA, then directly on to shapeB, then off both. With a listener for {@link easeljs.DisplayObject#event:mouseout}\n\t * on myContainer, two events would be received, each targeting a child element:<OL>\n\t * <LI>when the mouse leaves shapeA (target=shapeA)</LI>\n\t * <LI>when the mouse leaves shapeB (target=shapeB)</LI>\n\t * </OL>\n\t * However, with a listener for \"rollout\" instead, only a single event is received when the mouse leaves\n\t * the aggregate myContainer content (target=myContainer).\n\t *\n\t * This event must be enabled using {@link easeljs.Stage#enableMouseOver}.\n\t * @see {@link easeljs.MouseEvent}\n\t * @event easeljs.DisplayObject#rollout\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * After a {@link easeljs.DisplayObject#event:mousedown} occurs on a display object, a pressmove\n\t * event will be generated on that object whenever the mouse moves until the mouse press is released. This can be\n\t * useful for dragging and similar operations.\n\t * @event easeljs.DisplayObject#pressmove\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * After a {@link easeljs.DisplayObject#event:mousedown} occurs on a display object, a pressup event\n\t * will be generated on that object when that mouse press is released. This can be useful for dragging and similar\n\t * operations.\n\t * @event easeljs.DisplayObject#pressup\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * Dispatched when the display object is added to a parent container.\n\t * @event easeljs.DisplayObject#added\n\t */\n\n\t/**\n\t * Dispatched when the display object is removed from its parent container.\n\t * @event easeljs.DisplayObject#removed\n\t */\n\n\t/**\n\t * Dispatched on each display object on a stage whenever the stage updates. This occurs immediately before the\n\t * rendering (draw) pass. When {@link easeljs.Stage#update} is called, first all display objects on\n\t * the stage dispatch the tick event, then all of the display objects are drawn to stage. Children will have their\n\t * tick event dispatched in order of their depth prior to the event being dispatched on their parent.\n\t * @event easeljs.DisplayObject#tick\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {Array} params An array containing any arguments that were passed to the Stage.update() method.\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * @license Container\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * A Container is a nestable display list that allows you to work with compound display elements. For  example you could\n\t * group arm, leg, torso and head {{#crossLink \"Bitmap\"}}{{/crossLink}} instances together into a Person Container, and\n\t * transform them as a group, while still being able to move the individual parts relative to each other. Children of\n\t * containers have their `transform` and `alpha` properties concatenated with their parent\n\t * Container.\n\t *\n\t * For example, a {{#crossLink \"Shape\"}}{{/crossLink}} with x=100 and alpha=0.5, placed in a Container with `x=50`\n\t * and `alpha=0.7` will be rendered to the canvas at `x=150` and `alpha=0.35`.\n\t * Containers have some overhead, so you generally shouldn't create a Container to hold a single child.\n\t *\n\t * @memberof easeljs\n\t * @extends easeljs.DisplayObject\n\t * @example\n\t * import { Container } from \"@createjs/easeljs\";\n\t * const container = new Container();\n\t * container.addChild(bitmapInstance, shapeInstance);\n\t * container.x = 100;\n\t */\n\n\tclass Container extends DisplayObject {\n\t  constructor() {\n\t    super();\n\t    /**\n\t     * The array of children in the display list. You should usually use the child management methods such as\n\t     * {@link easeljs.Container#addChild}, {@link easeljs.Container#removeChild}, {@link easeljs.Container#swapChildren},\n\t     * etc, rather than accessing this directly, but it is included for advanced uses.\n\t     * @type {Array}\n\t     * @default []\n\t     */\n\n\t    this.children = [];\n\t    /**\n\t     * Indicates whether the children of this container are independently enabled for mouse/pointer interaction.\n\t     * If false, the children will be aggregated under the container - for example, a click on a child shape would\n\t     * trigger a click event on the container.\n\t     * @type {Boolean}\n\t     * @default true\n\t     */\n\n\t    this.mouseChildren = true;\n\t    /**\n\t     * If false, the tick will not be propagated to children of this Container. This can provide some performance benefits.\n\t     * In addition to preventing the {@link core.Ticker#event:tick} event from being dispatched, it will also prevent tick related updates\n\t     * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\n\t     * @type {Boolean}\n\t     * @default true\n\t     */\n\n\t    this.tickChildren = true;\n\t  }\n\t  /**\n\t   * Returns the number of children in the container.\n\t   * @type {Number}\n\t   * @readonly\n\t   */\n\n\n\t  get numChildren() {\n\t    return this.children.length;\n\t  }\n\n\t  isVisible() {\n\t    let hasContent = this.cacheCanvas || this.children.length;\n\t    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t  }\n\n\t  draw(ctx, ignoreCache = false) {\n\t    if (super.draw(ctx, ignoreCache)) {\n\t      return true;\n\t    } // this ensures we don't have issues with display list changes that occur during a draw:\n\n\n\t    let list = this.children.slice();\n\n\t    for (let i = 0, l = list.length; i < l; i++) {\n\t      let child = list[i];\n\n\t      if (!child.isVisible()) {\n\t        continue;\n\t      } // draw the child:\n\n\n\t      ctx.save();\n\t      child.updateContext(ctx);\n\t      child.draw(ctx);\n\t      ctx.restore();\n\t    }\n\n\t    return true;\n\t  }\n\t  /**\n\t   * Adds a child to the top of the display list.\n\t   *\n\t   * @example\n\t   * container.addChild(bitmapInstance);\n\t   * // You can also add multiple children at once:\n\t   * container.addChild(bitmapInstance, shapeInstance, textInstance);\n\t   *\n\t   * @param {...easeljs.DisplayObject} children The display object(s) to add.\n\t   * @return {easeljs.DisplayObject} The child that was added, or the last child if multiple children were added.\n\t   */\n\n\n\t  addChild(...children) {\n\t    const l = children.length;\n\n\t    if (l === 0) {\n\t      return null;\n\t    }\n\n\t    let child = children[0];\n\n\t    if (l > 1) {\n\t      for (let i = 0; i < l; i++) {\n\t        child = this.addChild(children[i]);\n\t      }\n\n\t      return child;\n\t    } // Note: a lot of duplication with addChildAt, but push is WAY faster than splice.\n\n\n\t    let parent = child.parent,\n\t        silent = parent === this;\n\t    parent && parent._removeChildAt(parent.children.indexOf(child), silent);\n\t    child.parent = this;\n\t    this.children.push(child);\n\n\t    if (!silent) {\n\t      child.dispatchEvent(\"added\");\n\t    }\n\n\t    return child;\n\t  }\n\t  /**\n\t   * Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\n\t   * setting its parent to this container.\n\t   *\n\t   * @example\n\t   * container.addChildAt(child1, index);\n\t   * // You can also add multiple children, such as:\n\t   * container.addChildAt(child1, child2, ..., index);\n\t   * // The index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list, you could use:\n\t   * container.addChildAt(myShape, container.getChildIndex(otherShape));\n\t   * // This would also bump otherShape's index up by one. Fails silently if the index is out of range.\n\t   *\n\t   * @param {...easeljs.DisplayObject} children The display object(s) to add.\n\t   * @param {Number} index The index to add the child at.\n\t   * @return {easeljs.DisplayObject} Returns the last child that was added, or the last child if multiple children were added.\n\t   */\n\n\n\t  addChildAt(...children) {\n\t    const l = children.length;\n\n\t    if (l === 0) {\n\t      return null;\n\t    }\n\n\t    let index = children.pop();\n\n\t    if (index < 0 || index > this.children.length) {\n\t      return children[l - 2];\n\t    }\n\n\t    if (l > 2) {\n\t      for (let i = 0; i < l - 1; i++) {\n\t        this.addChildAt(children[i], index++);\n\t      }\n\n\t      return children[l - 2];\n\t    }\n\n\t    let child = children[0];\n\t    let parent = child.parent,\n\t        silent = parent === this;\n\t    parent && parent._removeChildAt(parent.children.indexOf(child), silent);\n\t    child.parent = this;\n\t    this.children.splice(index++, 0, child);\n\n\t    if (!silent) {\n\t      child.dispatchEvent(\"added\");\n\t    }\n\n\t    return child;\n\t  }\n\t  /**\n\t   * Removes the specified child from the display list. Note that it is faster to use removeChildAt() if the index is\n\t   * already known.\n\t   *\n\t   * @example\n\t   * container.removeChild(child);\n\t   * // You can also remove multiple children:\n\t   * container.removeChild(child1, child2, ...);\n\t   *\n\t   * @param {...easeljs.DisplayObject} children The display object(s) to remove.\n\t   * @return {Boolean} true if the child (or children) was removed, or false if it was not in the display list.\n\t   */\n\n\n\t  removeChild(...children) {\n\t    const l = children.length;\n\n\t    if (l === 0) {\n\t      return true;\n\t    }\n\n\t    if (l > 1) {\n\t      let good = true;\n\n\t      for (let i = 0; i < l; i++) {\n\t        good = good && this.removeChild(children[i]);\n\t      }\n\n\t      return good;\n\t    }\n\n\t    return this._removeChildAt(this.children.indexOf(children[0]));\n\t  }\n\t  /**\n\t   * Removes the child at the specified index from the display list, and sets its parent to null.\n\t   *\n\t   * @example\n\t   * container.removeChildAt(2);\n\t   * // You can also remove multiple children:\n\t   * container.removeChildAt(2, 7, ...)\n\t   *\n\t   * @param {...Number} indexes The indexes of children to remove.\n\t   * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n\t   */\n\n\n\t  removeChildAt(...indexes) {\n\t    const l = indexes.length;\n\n\t    if (l === 0) {\n\t      return true;\n\t    }\n\n\t    if (l > 1) {\n\t      indexes.sort((a, b) => b - a);\n\t      let good = true;\n\n\t      for (let i = 0; i < l; i++) {\n\t        good = good && this._removeChildAt(indexes[i]);\n\t      }\n\n\t      return good;\n\t    }\n\n\t    return this._removeChildAt(indexes[0]);\n\t  }\n\t  /**\n\t   * Removes all children from the display list.\n\t   */\n\n\n\t  removeAllChildren() {\n\t    let kids = this.children;\n\n\t    while (kids.length) {\n\t      this._removeChildAt(0);\n\t    }\n\t  }\n\t  /**\n\t   * Returns the child at the specified index.\n\t   * @param {Number} index The index of the child to return.\n\t   * @return {easeljs.DisplayObject} The child at the specified index. Returns null if there is no child at the index.\n\t   */\n\n\n\t  getChildAt(index) {\n\t    return this.children[index];\n\t  }\n\t  /**\n\t   * Returns the child with the specified name.\n\t   * @param {String} name The name of the child to return.\n\t   * @return {easeljs.DisplayObject} The child with the specified name.\n\t   */\n\n\n\t  getChildByName(name) {\n\t    let kids = this.children;\n\t    const l = kids.length;\n\n\t    for (let i = 0; i < l; i++) {\n\t      if (kids[i].name === name) {\n\t        return kids[i];\n\t      }\n\t    }\n\n\t    return null;\n\t  }\n\t  /**\n\t   * Performs an array sort operation on the child list.\n\t   *\n\t   * @example\n\t   * // Display children with a higher y in front.\n\t   * container.sortChildren((obj1, obj2, options) => {\n\t   * \t if (obj1.y > obj2.y) { return 1; }\n\t   *   if (obj1.y < obj2.y) { return -1; }\n\t   *   return 0;\n\t   * });\n\t   *\n\t   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort}\n\t   * @param {Function} sortFunction the function to use to sort the child list.\n\t   */\n\n\n\t  sortChildren(sortFunction) {\n\t    this.children.sort(sortFunction);\n\t  }\n\t  /**\n\t   * Returns the index of the specified child in the display list, or -1 if it is not in the display list.\n\t   * @param {easeljs.DisplayObject} child The child to return the index of.\n\t   * @return {Number} The index of the specified child. -1 if the child is not found.\n\t   */\n\n\n\t  getChildIndex(child) {\n\t    return this.children.indexOf(child);\n\t  }\n\t  /**\n\t   * Swaps the children at the specified indexes. Fails silently if either index is out of range.\n\t   * @param {Number} index1\n\t   * @param {Number} index2\n\t   */\n\n\n\t  swapChildrenAt(index1, index2) {\n\t    let kids = this.children;\n\t    let o1 = kids[index1];\n\t    let o2 = kids[index2];\n\n\t    if (!o1 || !o2) {\n\t      return;\n\t    }\n\n\t    kids[index1] = o2;\n\t    kids[index2] = o1;\n\t  }\n\n\t  /**\n\t   * Swaps the specified children's depth in the display list. Fails silently if either child is not a child of this\n\t   * Container.\n\t   * @param {easeljs.DisplayObject} child1\n\t   * @param {easeljs.DisplayObject} child2\n\t   */\n\t  swapChildren(child1, child2) {\n\t    let kids = this.children;\n\t    const l = kids.length;\n\t    let index1, index2;\n\n\t    for (var i = 0; i < l; i++) {\n\t      if (kids[i] === child1) {\n\t        index1 = i;\n\t      }\n\n\t      if (kids[i] === child2) {\n\t        index2 = i;\n\t      }\n\n\t      if (index1 != null && index2 != null) {\n\t        break;\n\t      }\n\t    }\n\n\t    if (i === l) {\n\t      return;\n\t    } // TODO: throw error?\n\n\n\t    kids[index1] = child2;\n\t    kids[index2] = child1;\n\t  }\n\t  /**\n\t   * Changes the depth of the specified child. Fails silently if the child is not a child of this container, or the index is out of range.\n\t   * @param {easeljs.DisplayObject} child\n\t   * @param {Number} index\n\t   */\n\n\n\t  setChildIndex(child, index) {\n\t    let kids = this.children;\n\t    const l = kids.length;\n\n\t    if (child.parent != this || index < 0 || index >= l) {\n\t      return;\n\t    }\n\n\t    for (var i = 0; i < l; i++) {\n\t      if (kids[i] === child) {\n\t        break;\n\t      }\n\t    }\n\n\t    if (i === l || i === index) {\n\t      return;\n\t    }\n\n\t    kids.splice(i, 1);\n\t    kids.splice(index, 0, child);\n\t  }\n\t  /**\n\t   * Returns true if the specified display object either is this container or is a descendent (child, grandchild, etc)\n\t   * of this container.\n\t   * @param {easeljs.DisplayObject} child The DisplayObject to be checked.\n\t   * @return {Boolean} true if the specified display object either is this container or is a descendent.\n\t   */\n\n\n\t  contains(child) {\n\t    while (child) {\n\t      if (child === this) {\n\t        return true;\n\t      }\n\n\t      child = child.parent;\n\t    }\n\n\t    return false;\n\t  }\n\t  /**\n\t   * Tests whether the display object intersects the specified local point (ie. draws a pixel with alpha > 0 at the\n\t   * specified position). This ignores the alpha, shadow and compositeOperation of the display object, and all\n\t   * transform properties including regX/Y.\n\t   * @param {Number} x The x position to check in the display object's local coordinates.\n\t   * @param {Number} y The y position to check in the display object's local coordinates.\n\t   * @return {Boolean} A Boolean indicating whether there is a visible section of a DisplayObject that overlaps the specified\n\t   * coordinates.\n\t   */\n\n\n\t  hitTest(x, y) {\n\t    // TODO: optimize to use the fast cache check where possible.\n\t    return this.getObjectUnderPoint(x, y) != null;\n\t  }\n\t  /**\n\t   * Returns an array of all display objects under the specified coordinates that are in this container's display\n\t   * list. This routine ignores any display objects with {@link easeljs.DisplayObject#mouseEnabled} set to `false`.\n\t   * The array will be sorted in order of visual depth, with the top-most display object at index 0.\n\t   * This uses shape based hit detection, and can be an expensive operation to run, so it is best to use it carefully.\n\t   * For example, if testing for objects under the mouse, test on tick (instead of on {@link easeljs.DisplayObject#event:mousemove}),\n\t   * and only if the mouse's position has changed.\n\t   *\n\t   * <ul>\n\t   *   <li>By default (mode=0) this method evaluates all display objects.</li>\n\t   *   <li>By setting the `mode` parameter to `1`, the {@link easeljs.DisplayObject#mouseEnabled}\n\t   *       and {@link easeljs.DisplayObject#mouseChildren} properties will be respected.</li>\n\t   *   <li>Setting the `mode` to `2` additionally excludes display objects that do not have active mouse event\n\t   *       listeners or a {@link easeljs.DisplayObject#cursor} property. That is, only objects\n\t   *       that would normally intercept mouse interaction will be included. This can significantly improve performance\n\t   *       in some cases by reducing the number of display objects that need to be tested.</li>\n\t   * </ul>\n\t   *\n\t   * This method accounts for both {@link easeljs.DisplayObject#hitArea} and {@link easeljs.DisplayObject#mask}.\n\t   *\n\t   * @param {Number} x The x position in the container to test.\n\t   * @param {Number} y The y position in the container to test.\n\t   * @param {Number} [mode=0] The mode to use to determine which display objects to include. 0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n\t   * @return {Array<easeljs.DisplayObject>} An array of DisplayObjects under the specified coordinates.\n\t   */\n\n\n\t  getObjectsUnderPoint(x, y, mode = 0) {\n\t    let arr = [];\n\t    let pt = this.localToGlobal(x, y);\n\n\t    this._getObjectsUnderPoint(pt.x, pt.y, arr, mode > 0, mode === 1);\n\n\t    return arr;\n\t  }\n\t  /**\n\t   * Similar to {@link easeljs.Container#getObjectsUnderPoint}, but returns only the top-most display\n\t   * object. This runs significantly faster than `getObjectsUnderPoint()`, but is still potentially an expensive\n\t   * operation.\n\t   *\n\t   * @param {Number} x The x position in the container to test.\n\t   * @param {Number} y The y position in the container to test.\n\t   * @param {Number} [mode=0] The mode to use to determine which display objects to include.  0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n\t   * @return {easeljs.DisplayObject} The top-most display object under the specified coordinates.\n\t   */\n\n\n\t  getObjectUnderPoint(x, y, mode = 0) {\n\t    let pt = this.localToGlobal(x, y);\n\t    return this._getObjectsUnderPoint(pt.x, pt.y, null, mode > 0, mode === 1);\n\t  }\n\n\t  getBounds() {\n\t    return this._getBounds(null, true);\n\t  }\n\n\t  getTransformedBounds() {\n\t    return this._getBounds();\n\t  }\n\t  /**\n\t   * Returns a clone of this Container. Some properties that are specific to this instance's current context are\n\t   * reverted to their defaults (for example `.parent`).\n\t   * @param {Boolean} [recursive=false] If true, all of the descendants of this container will be cloned recursively. If false, the\n\t   * properties of the container will be cloned, but the new instance will not have any children.\n\t   * @return {easeljs.Container} A clone of the current Container instance.\n\t   */\n\n\n\t  clone(recursive = false) {\n\t    let o = this._cloneProps(new Container());\n\n\t    if (recursive) {\n\t      this._cloneChildren(o);\n\t    }\n\n\t    return o;\n\t  }\n\n\t  _tick(evtObj) {\n\t    if (this.tickChildren) {\n\t      for (let i = this.children.length - 1; i >= 0; i--) {\n\t        let child = this.children[i];\n\n\t        if (child.tickEnabled && child._tick) {\n\t          child._tick(evtObj);\n\t        }\n\t      }\n\t    }\n\n\t    super._tick(evtObj);\n\t  }\n\t  /**\n\t   * Recursively clones all children of this container, and adds them to the target container.\n\t   * @protected\n\t   * @param {easeljs.Container} o The target container.\n\t   */\n\n\n\t  _cloneChildren(o) {\n\t    if (o.children.length) {\n\t      o.removeAllChildren();\n\t    }\n\n\t    let arr = o.children;\n\t    const l = this.children.length;\n\n\t    for (let i = 0; i < l; i++) {\n\t      let clone = this.children[i].clone(true);\n\t      clone.parent = o;\n\t      arr.push(clone);\n\t    }\n\t  }\n\t  /**\n\t   * Removes the child at the specified index from the display list, and sets its parent to null.\n\t   * Used by `removeChildAt`, `addChild`, and `addChildAt`.\n\t   *\n\t   * @protected\n\t   * @param {Number} index The index of the child to remove.\n\t   * @param {Boolean} [silent=false] Prevents dispatch of `removed` event if true.\n\t   * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n\t   */\n\n\n\t  _removeChildAt(index, silent = false) {\n\t    if (index < 0 || index > this.children.length - 1) {\n\t      return false;\n\t    }\n\n\t    let child = this.children[index];\n\n\t    if (child) {\n\t      child.parent = null;\n\t    }\n\n\t    this.children.splice(index, 1);\n\n\t    if (!silent) {\n\t      child.dispatchEvent(\"removed\");\n\t    }\n\n\t    return true;\n\t  }\n\t  /**\n\t   * @protected\n\t   * @param {Number} x\n\t   * @param {Number} y\n\t   * @param {Array} arr\n\t   * @param {Boolean} mouse If true, it will respect mouse interaction properties like mouseEnabled, mouseChildren, and active listeners.\n\t   * @param {Boolean} activeListener If true, there is an active mouse event listener on a parent object.\n\t   * @param {Number} [currentDepth=0] Indicates the current depth of the search.\n\t   * @return {easeljs.DisplayObject}\n\t   */\n\n\n\t  _getObjectsUnderPoint(x, y, arr, mouse, activeListener, currentDepth = 0) {\n\t    if (!currentDepth && !this._testMask(this, x, y)) {\n\t      return null;\n\t    }\n\n\t    let mtx,\n\t        ctx = DisplayObject._hitTestContext;\n\t    activeListener = activeListener || mouse && this._hasMouseEventListener(); // draw children one at a time, and check if we get a hit:\n\n\t    let children = this.children;\n\t    const l = children.length;\n\n\t    for (let i = l - 1; i >= 0; i--) {\n\t      let child = children[i];\n\t      let hitArea = child.hitArea;\n\n\t      if (!child.visible || !hitArea && !child.isVisible() || mouse && !child.mouseEnabled) {\n\t        continue;\n\t      }\n\n\t      if (!hitArea && !this._testMask(child, x, y)) {\n\t        continue;\n\t      } // if a child container has a hitArea then we only need to check its hitArea, so we can treat it as a normal DO:\n\n\n\t      if (!hitArea && child instanceof Container) {\n\t        let result = child._getObjectsUnderPoint(x, y, arr, mouse, activeListener, currentDepth + 1);\n\n\t        if (!arr && result) {\n\t          return mouse && !this.mouseChildren ? this : result;\n\t        }\n\t      } else {\n\t        if (mouse && !activeListener && !child._hasMouseEventListener()) {\n\t          continue;\n\t        } // TODO: can we pass displayProps forward, to avoid having to calculate this backwards every time? It's kind of a mixed bag. When we're only hunting for DOs with event listeners, it may not make sense.\n\n\n\t        let props = child.getConcatenatedDisplayProps(child._props);\n\t        mtx = props.matrix;\n\n\t        if (hitArea) {\n\t          mtx.appendMatrix(hitArea.getMatrix(hitArea._props.matrix));\n\t          props.alpha = hitArea.alpha;\n\t        }\n\n\t        ctx.globalAlpha = props.alpha;\n\t        ctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx - x, mtx.ty - y);\n\t        (hitArea || child).draw(ctx);\n\n\t        if (!this._testHit(ctx)) {\n\t          continue;\n\t        }\n\n\t        ctx.setTransform(1, 0, 0, 1, 0, 0);\n\t        ctx.clearRect(0, 0, 2, 2);\n\n\t        if (arr) {\n\t          arr.push(child);\n\t        } else {\n\t          return mouse && !this.mouseChildren ? this : child;\n\t        }\n\t      }\n\t    }\n\n\t    return null;\n\t  }\n\t  /**\n\t   * @protected\n\t   * @param {easeljs.DisplayObject} target\n\t   * @param {Number} x\n\t   * @param {Number} y\n\t   * @return {Boolean} Indicates whether the x/y is within the masked region.\n\t   */\n\n\n\t  _testMask(target, x, y) {\n\t    let mask = target.mask;\n\n\t    if (!mask || !mask.graphics || mask.graphics.isEmpty()) {\n\t      return true;\n\t    }\n\n\t    let mtx = this._props.matrix,\n\t        parent = target.parent;\n\t    mtx = parent ? parent.getConcatenatedMatrix(mtx) : mtx.identity();\n\t    mtx = mask.getMatrix(mask._props.matrix).prependMatrix(mtx);\n\t    let ctx = DisplayObject._hitTestContext;\n\t    ctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx - x, mtx.ty - y); // draw the mask as a solid fill:\n\n\t    mask.graphics.drawAsPath(ctx);\n\t    ctx.fillStyle = \"#000\";\n\t    ctx.fill();\n\n\t    if (!this._testHit(ctx)) {\n\t      return false;\n\t    }\n\n\t    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\t    ctx.clearRect(0, 0, 2, 2);\n\t    return true;\n\t  }\n\t  /**\n\t   * @protected\n\t   * @param {easeljs.Matrix2D} matrix\n\t   * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n\t   * @return {easeljs.Rectangle}\n\t   */\n\n\n\t  _getBounds(matrix, ignoreTransform) {\n\t    let bounds = super.getBounds();\n\n\t    if (bounds) {\n\t      return this._transformBounds(bounds, matrix, ignoreTransform);\n\t    }\n\n\t    let mtx = this._props.matrix;\n\t    mtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\n\t    if (matrix) {\n\t      mtx.prependMatrix(matrix);\n\t    }\n\n\t    const l = this.children.length;\n\t    let rect = null;\n\n\t    for (let i = 0; i < l; i++) {\n\t      let child = this.children[i];\n\n\t      if (!child.visible || !(bounds = child._getBounds(mtx))) {\n\t        continue;\n\t      }\n\n\t      if (rect) {\n\t        rect.extend(bounds.x, bounds.y, bounds.width, bounds.height);\n\t      } else {\n\t        rect = bounds.clone();\n\t      }\n\t    }\n\n\t    return rect;\n\t  }\n\n\t}\n\n\t/**\n\t * @license MouseEvent\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * Passed as the parameter to all mouse/pointer/touch related events. For a listing of mouse events and their properties,\n\t * see the {@link easeljs.DisplayObject} and {@link easeljs.Stage} event listings.\n\t * @memberof easeljs\n\t * @extends core.Event\n\t * @param {String} type The event type.\n\t * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n\t * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n\t * @param {Number} stageX The normalized x position relative to the stage.\n\t * @param {Number} stageY The normalized y position relative to the stage.\n\t * @param {easeljs.MouseEvent} nativeEvent The native DOM event related to this mouse event.\n\t * @param {Number} pointerID The unique id for the pointer.\n\t * @param {Boolean} primary Indicates whether this is the primary pointer in a multitouch environment.\n\t * @param {Number} rawX The raw x position relative to the stage.\n\t * @param {Number} rawY The raw y position relative to the stage.\n\t * @param {easeljs.DisplayObject} relatedTarget The secondary target for the event.\n\t */\n\n\tclass MouseEvent extends Event {\n\t  constructor(type, bubbles, cancelable, stageX, stageY, nativeEvent, pointerID, primary, rawX, rawY, relatedTarget) {\n\t    super(type, bubbles, cancelable); // public properties:\n\n\t    /**\n\t     * The normalized x position on the stage. This will always be within the range 0 to stage width.\n\t     * @type {Number}\n\t    */\n\n\t    this.stageX = stageX;\n\t    /**\n\t     * The normalized y position on the stage. This will always be within the range 0 to stage height.\n\t     * @type {Number}\n\t     */\n\n\t    this.stageY = stageY;\n\t    /**\n\t     * The raw x position relative to the stage. Normally this will be the same as the stageX value, unless\n\t     * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t     * @type {Number}\n\t    */\n\n\t    this.rawX = rawX == null ? stageX : rawX;\n\t    /**\n\t     * The raw y position relative to the stage. Normally this will be the same as the stageY value, unless\n\t     * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t     * @type {Number}\n\t    */\n\n\t    this.rawY = rawY == null ? stageY : rawY;\n\t    /**\n\t     * The native MouseEvent generated by the browser. The properties and API for this\n\t     * event may differ between browsers. This property will be null if the\n\t     * EaselJS property was not directly generated from a native MouseEvent.\n\t     * @type {HTMLMouseEvent}\n\t     */\n\n\t    this.nativeEvent = nativeEvent;\n\t    /**\n\t     * The unique id for the pointer (touch point or cursor). This will be either -1 for the mouse, or the system\n\t     * supplied id value.\n\t     * @type {Number}\n\t     */\n\n\t    this.pointerID = pointerID;\n\t    /**\n\t     * Indicates whether this is the primary pointer in a multitouch environment. This will always be true for the mouse.\n\t     * For touch pointers, the first pointer in the current stack will be considered the primary pointer.\n\t     * @type {Boolean}\n\t     */\n\n\t    this.primary = !!primary;\n\t    /**\n\t     * The secondary target for the event, if applicable. This is used for mouseout/rollout\n\t     * events to indicate the object that the mouse entered from, mouseover/rollover for the object the mouse exited,\n\t     * and stagemousedown/stagemouseup events for the object that was the under the cursor, if any.\n\t     *\n\t     * Only valid interaction targets will be returned (ie. objects with mouse listeners or a cursor set).\n\t     * @type {easeljs.DisplayObject}\n\t     */\n\n\t    this.relatedTarget = relatedTarget;\n\t  }\n\t  /**\n\t   * Returns the x position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n\t   * @type {Number}\n\t   * @readonly\n\t   */\n\n\n\t  get localX() {\n\t    return this.currentTarget.globalToLocal(this.rawX, this.rawY).x;\n\t  }\n\t  /**\n\t   * Returns the y position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n\t   * @type {Number}\n\t   * @readonly\n\t   */\n\n\n\t  get localY() {\n\t    return this.currentTarget.globalToLocal(this.rawX, this.rawY).y;\n\t  }\n\t  /**\n\t   * Indicates whether the event was generated by a touch input (versus a mouse input).\n\t   * @type {Boolean}\n\t   * @readonly\n\t   */\n\n\n\t  get isTouch() {\n\t    return this.pointerID !== -1;\n\t  }\n\t  /**\n\t   * Returns a clone of the MouseEvent instance.\n\t   * @return {easeljs.MouseEvent} a clone of the MouseEvent instance.\n\t   */\n\n\n\t  clone() {\n\t    return new MouseEvent(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY);\n\t  }\n\t  /**\n\t   * Returns a string representation of this object.\n\t   * @return {String} a string representation of the instance.\n\t   */\n\n\n\t  toString() {\n\t    return `[${this.constructor.name} (type=${this.type} stageX=${this.stageX} stageY=${this.stageY})]`;\n\t  }\n\n\t}\n\n\t/**\n\t * @license Stage\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * A stage is the root level {@link easeljs.Container} for a display list. Each time its {@link easeljs.Stage#tick}\n\t * method is called, it will render its display list to its target canvas.\n\t *\n\t * @memberof easeljs\n\t * @extends easeljs.Container\n\t * @example\n\t * let stage = new Stage(\"canvasElementId\");\n\t * let image = new Bitmap(\"imagePath.png\");\n\t * stage.addChild(image);\n\t * Ticker.addEventListener(\"tick\", event => {\n\t *   image.x += 10;\n\t * \t stage.update();\n\t * });\n\t *\n\t * @param {HTMLCanvasElement | String | Object} canvas A canvas object that the Stage will render to, or the string id\n\t * of a canvas object in the current document.\n\t */\n\n\tclass Stage extends Container {\n\t  constructor(canvas) {\n\t    super();\n\t    /**\n\t     * Indicates whether the stage should automatically clear the canvas before each render. You can set this to `false`\n\t     * to manually control clearing (for generative art, or when pointing multiple stages at the same canvas for\n\t     * example).\n\t     *\n\t     * @example\n\t     * let stage = new Stage(\"canvasId\");\n\t     * stage.autoClear = false;\n\t     *\n\t     * @type {Boolean}\n\t     * @default true\n\t     */\n\n\t    this.autoClear = true;\n\t    /**\n\t     * The canvas the stage will render to. Multiple stages can share a single canvas, but you must disable autoClear for all but the\n\t     * first stage that will be ticked (or they will clear each other's render).\n\t     *\n\t     * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t     * new canvas or mouse events will not work as expected.\n\t     *\n\t     * @example\n\t     * stage.enableDOMEvents(false);\n\t     * stage.canvas = anotherCanvas;\n\t     * stage.enableDOMEvents(true);\n\t     *\n\t     * @type {HTMLCanvasElement | Object}\n\t     */\n\n\t    this.canvas = typeof canvas === \"string\" ? document.getElementById(canvas) : canvas;\n\t    /**\n\t     * The current mouse X position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t     * position over the canvas, and mouseInBounds will be set to false.\n\t     * @type {Number}\n\t     * @default 0\n\t     * @readonly\n\t     */\n\n\t    this.mouseX = 0;\n\t    /**\n\t     * The current mouse Y position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t     * position over the canvas, and mouseInBounds will be set to false.\n\t     * @type {Number}\n\t     * @default 0\n\t     * @readonly\n\t     */\n\n\t    this.mouseY = 0;\n\t    /**\n\t     * Specifies the area of the stage to affect when calling update. This can be use to selectively\n\t     * re-draw specific regions of the canvas. If null, the whole canvas area is drawn.\n\t     * @type {easeljs.Rectangle}\n\t     */\n\n\t    this.drawRect = null;\n\t    /**\n\t     * Indicates whether display objects should be rendered on whole pixels. You can set the {@link easeljs.DisplayObject.snapToPixelEnabled}\n\t     * property of display objects to false to enable/disable this behaviour on a per instance basis.\n\t     * @type {Boolean}\n\t     * @default false\n\t     */\n\n\t    this.snapToPixelEnabled = false;\n\t    /**\n\t     * Indicates whether the mouse is currently within the bounds of the canvas.\n\t     * @type {Boolean}\n\t     * @default false\n\t     */\n\n\t    this.mouseInBounds = false;\n\t    /**\n\t     * If true, tick callbacks will be called on all display objects on the stage prior to rendering to the canvas.\n\t     * @type {Boolean}\n\t     * @default true\n\t     */\n\n\t    this.tickOnUpdate = true;\n\t    /**\n\t     * If true, mouse move events will continue to be called when the mouse leaves the target canvas.\n\t     * See {@link easeljs.Stage#mouseInBounds}, and {@link easeljs.MouseEvent} x/y/rawX/rawY.\n\t     * @type {Boolean}\n\t     * @default false\n\t     */\n\n\t    this.mouseMoveOutside = false;\n\t    /**\n\t     * Prevents selection of other elements in the html page if the user clicks and drags, or double clicks on the canvas.\n\t     * This works by calling `preventDefault()` on any mousedown events (or touch equivalent) originating on the canvas.\n\t     * @type {Boolean}\n\t     * @default true\n\t     */\n\n\t    this.preventSelection = true;\n\t    /**\n\t     * The hitArea property is not supported for Stage.\n\t     * @property hitArea\n\t     * @override\n\t     * @default null\n\t     * @private\n\t     */\n\n\t    /**\n\t     * Holds objects with data for each active pointer id. Each object has the following properties:\n\t     * x, y, event, target, overTarget, overX, overY, inBounds, posEvtObj (native event that last updated position)\n\t     * @type {Object}\n\t     * @private\n\t     */\n\n\t    this._pointerData = {};\n\t    /**\n\t     * Number of active pointers.\n\t     * @type {Number}\n\t     * @private\n\t     */\n\n\t    this._pointerCount = 0;\n\t    /**\n\t     * The ID of the primary pointer.\n\t     * @type {String}\n\t     * @private\n\t     */\n\n\t    this._primaryPointerID = null;\n\t    /**\n\t     * @protected\n\t     * @type {Number}\n\t     */\n\n\t    this._mouseOverIntervalID = null;\n\t    /**\n\t     * @protected\n\t     * @type {easeljs.Stage}\n\t     */\n\n\t    this._nextStage = null;\n\t    /**\n\t     * @protected\n\t     * @type {easeljs.Stage}\n\t     */\n\n\t    this._prevStage = null;\n\t    this.enableDOMEvents(true);\n\t  }\n\t  /**\n\t   * Specifies a target stage that will have mouse/touch interactions relayed to it after this stage handles them.\n\t   * This can be useful in cases where you have multiple layered canvases and want user interactions\n\t   * events to pass through.\n\t   *\n\t   * MouseOver, MouseOut, RollOver, and RollOut interactions are also passed through using the mouse over settings\n\t   * of the top-most stage, but are only processed if the target stage has mouse over interactions enabled.\n\t   * Considerations when using roll over in relay targets:\n\t   * <ol>\n\t   *   <li> The top-most (first) stage must have mouse over interactions enabled (via enableMouseOver)</li>\n\t   *   <li> All stages that wish to participate in mouse over interaction must enable them via enableMouseOver</li>\n\t   *   <li> All relay targets will share the frequency value of the top-most stage</li>\n\t   * </ol>\n\t   *\n\t   * @example <caption>Relay mouse events from topStage to bottomStage</caption>\n\t   * topStage.nextStage = bottomStage;\n\t   *\n\t   * @example <caption>Disable DOM events</caption>\n\t   * stage.enableDOMEvents(false);\n\t   *\n\t   * @type {easeljs.Stage}\n\t   */\n\n\n\t  get nextStage() {\n\t    return this._nextStage;\n\t  }\n\n\t  set nextStage(stage) {\n\t    if (this._nextStage) {\n\t      this._nextStage._prevStage = null;\n\t    }\n\n\t    if (stage) {\n\t      stage._prevStage = this;\n\t    }\n\n\t    this._nextStage = stage;\n\t  } // public methods:\n\n\t  /**\n\t   * Each time the update method is called, the stage will call {@link easeljs.Stage#tick}\n\t   * unless {@link easeljs.Stage#tickOnupdate} is set to false,\n\t   * and then render the display list to the canvas.\n\t   *\n\t   * @param {Object} [props] Props object to pass to `tick()`. Should usually be a {@link core.Ticker} event object, or similar object with a delta property.\n\t   */\n\n\n\t  update(props) {\n\t    if (!this.canvas) {\n\t      return;\n\t    }\n\n\t    if (this.tickOnUpdate) {\n\t      this.tick(props);\n\t    }\n\n\t    if (this.dispatchEvent(\"drawstart\", false, true) === false) {\n\t      return;\n\t    }\n\n\t    DisplayObject._snapToPixelEnabled = this.snapToPixelEnabled;\n\t    let r = this.drawRect,\n\t        ctx = this.canvas.getContext(\"2d\");\n\t    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n\t    if (this.autoClear) {\n\t      if (r) {\n\t        ctx.clearRect(r.x, r.y, r.width, r.height);\n\t      } else {\n\t        ctx.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1);\n\t      }\n\t    }\n\n\t    ctx.save();\n\n\t    if (this.drawRect) {\n\t      ctx.beginPath();\n\t      ctx.rect(r.x, r.y, r.width, r.height);\n\t      ctx.clip();\n\t    }\n\n\t    this.updateContext(ctx);\n\t    this.draw(ctx, false);\n\t    ctx.restore();\n\t    this.dispatchEvent(\"drawend\");\n\t  }\n\t  /**\n\t   * Propagates a tick event through the display list. This is automatically called by {@link easeljs.Stage#update}\n\t   * unless {@link easeljs.Stage#tickOnUpdate} is set to false.\n\t   *\n\t   * If a props object is passed to `tick()`, then all of its properties will be copied to the event object that is\n\t   * propagated to listeners.\n\t   *\n\t   * Some time-based features in EaselJS (for example {@link easeljs.Sprite#framerate} require that\n\t   * a {@link core.Ticker#event:tick} event object (or equivalent object with a delta property) be\n\t   * passed as the `props` parameter to `tick()`.\n\t   *\n\t   * @example\n\t   * Ticker.on(\"tick\", (evt) => {\n\t   *   // clone the event object from Ticker, and add some custom data to it:\n\t   * \t let data = evt.clone().set({ greeting: \"hello\", name: \"world\" });\n\t   * \t // pass it to stage.update():\n\t   * \t stage.update(data); // subsequently calls tick() with the same param\n\t   * });\n\t   *\n\t   * shape.on(\"tick\", (evt) => {\n\t   *   console.log(evt.delta); // the delta property from the Ticker tick event object\n\t   * \t console.log(evt.greeting, evt.name); // custom data: \"hello world\"\n\t   * });\n\t   *\n\t   * @emits easeljs.Stage#event:tickstart\n\t   * @emits easeljs.Stage#event:tickend\n\t   * @param {Object} [props] An object with properties that should be copied to the event object. Should usually be a Ticker event object, or similar object with a delta property.\n\t   */\n\n\n\t  tick(props) {\n\t    if (!this.tickEnabled || this.dispatchEvent(\"tickstart\", false, true) === false) {\n\t      return;\n\t    }\n\n\t    let evtObj = new Event(\"tick\");\n\n\t    if (props) {\n\t      for (let n in props) {\n\t        if (props.hasOwnProperty(n)) {\n\t          evtObj[n] = props[n];\n\t        }\n\t      }\n\t    }\n\n\t    this._tick(evtObj);\n\n\t    this.dispatchEvent(\"tickend\");\n\t  }\n\t  /**\n\t   * Default event handler that calls the Stage {@link easeljs.Stage#update} method when a {@link easeljs.DisplayObject#event:tick}\n\t   * event is received. This allows you to register a Stage instance as a event listener on {@link core.Ticker} directly.\n\t   * Note that if you subscribe to ticks using this pattern, then the tick event object will be passed through to\n\t   * display object tick handlers, instead of `delta` and `paused` parameters.\n\t   */\n\n\n\t  handleEvent(evt) {\n\t    if (evt.type === \"tick\") {\n\t      this.update(evt);\n\t    }\n\t  }\n\t  /**\n\t   * Clears the target canvas. Useful if {@link easeljs.State#autoClear} is set to `false`.\n\t   */\n\n\n\t  clear() {\n\t    if (!this.canvas) {\n\t      return;\n\t    }\n\n\t    let ctx = this.canvas.getContext(\"2d\");\n\t    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\t    ctx.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1);\n\t  }\n\t  /**\n\t   * Returns a data url that contains a Base64-encoded image of the contents of the stage. The returned data url can\n\t   * be specified as the src value of an image element.\n\t   *\n\t   * @param {String} [backgroundColor] The background color to be used for the generated image. Any valid CSS color\n\t   * value is allowed. The default value is a transparent background.\n\t   * @param {String} [mimeType=\"image/png\"] The MIME type of the image format to be create. If an unknown MIME type\n\t   * is passed in, or if the browser does not support the specified MIME type, the default value will be used.\n\t   * @return {String} a Base64 encoded image.\n\t   */\n\n\n\t  toDataURL(backgroundColor, mimeType = \"image/png\") {\n\t    let data,\n\t        ctx = this.canvas.getContext('2d'),\n\t        w = this.canvas.width,\n\t        h = this.canvas.height;\n\n\t    if (backgroundColor) {\n\t      data = ctx.getImageData(0, 0, w, h);\n\t      var compositeOperation = ctx.globalCompositeOperation;\n\t      ctx.globalCompositeOperation = \"destination-over\";\n\t      ctx.fillStyle = backgroundColor;\n\t      ctx.fillRect(0, 0, w, h);\n\t    }\n\n\t    let dataURL = this.canvas.toDataURL(mimeType);\n\n\t    if (backgroundColor) {\n\t      ctx.putImageData(data, 0, 0);\n\t      ctx.globalCompositeOperation = compositeOperation;\n\t    }\n\n\t    return dataURL;\n\t  }\n\t  /**\n\t   * Enables or disables (by passing a frequency of 0) mouse over {@link easeljs.DisplayObject#event:mouseover}\n\t   * and {@link easeljs.DisplayObject#event:mouseout} and roll over events {@link easeljs.DisplayObject#event:rollover}\n\t   * and {@link easeljs.DisplayObject#event:rollout} for this stage's display list. These events can\n\t   * be expensive to generate, so they are disabled by default. The frequency of the events can be controlled\n\t   * independently of mouse move events via the optional `frequency` parameter.\n\t   *\n\t   * @example\n\t   * const stage = new Stage(\"canvasId\");\n\t   * stage.enableMouseOver(10); // 10 updates per second\n\t   *\n\t   * @param {Number} [frequency=20] Optional param specifying the maximum number of times per second to broadcast\n\t   * mouse over/out events. Set to 0 to disable mouse over events completely. Maximum is 50. A lower frequency is less\n\t   * responsive, but uses less CPU.\n\t   */\n\n\n\t  enableMouseOver(frequency = 20) {\n\t    if (this._mouseOverIntervalID) {\n\t      clearInterval(this._mouseOverIntervalID);\n\t      this._mouseOverIntervalID = null;\n\n\t      if (frequency === 0) {\n\t        this._testMouseOver(true);\n\t      }\n\t    }\n\n\t    if (frequency <= 0) {\n\t      return;\n\t    }\n\n\t    this._mouseOverIntervalID = setInterval(() => this._testMouseOver(), 1000 / Math.min(50, frequency));\n\t  }\n\t  /**\n\t   * Enables or disables the event listeners that stage adds to DOM elements (window, document and canvas). It is good\n\t   * practice to disable events when disposing of a Stage instance, otherwise the stage will continue to receive\n\t   * events from the page.\n\t   * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t   * new canvas or mouse events will not work as expected.\n\t   *\n\t   * @example\n\t   * stage.enableDOMEvents(false);\n\t   * stage.canvas = anotherCanvas;\n\t   * stage.enableDOMEvents(true);\n\t   *\n\t   * @param {Boolean} [enable=true] Indicates whether to enable or disable the events.\n\t   */\n\n\n\t  enableDOMEvents(enable = true) {\n\t    let ls = this._eventListeners;\n\n\t    if (!enable && ls) {\n\t      for (let n in ls) {\n\t        let o = ls[n];\n\t        o.t.removeEventListener(n, o.f, false);\n\t      }\n\n\t      this._eventListeners = null;\n\t    } else if (enable && !ls && this.canvas) {\n\t      let t = window.addEventListener ? window : document;\n\t      ls = this._eventListeners = {\n\t        mouseup: {\n\t          t,\n\t          f: e => this._handleMouseUp(e)\n\t        },\n\t        mousemove: {\n\t          t,\n\t          f: e => this._handleMouseMove(e)\n\t        },\n\t        dblclick: {\n\t          t: this.canvas,\n\t          f: e => this._handleDoubleClick(e)\n\t        },\n\t        mousedown: {\n\t          t: this.canvas,\n\t          f: e => this._handleMouseDown(e)\n\t        }\n\t      };\n\n\t      for (let n in ls) {\n\t        let o = ls[n];\n\t        o.t.addEventListener && o.t.addEventListener(n, o.f, false);\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Stage instances cannot be cloned.\n\t   * @throws Stage cannot be cloned\n\t   * @override\n\t   */\n\n\n\t  clone() {\n\t    throw \"Stage cannot be cloned.\";\n\t  }\n\t  /**\n\t   * @protected\n\t   * @param {HTMLElement} e\n\t   * @returns {Object}\n\t   */\n\n\n\t  _getElementRect(e) {\n\t    let bounds;\n\n\t    try {\n\t      bounds = e.getBoundingClientRect();\n\t    } // this can fail on disconnected DOM elements in IE9\n\t    catch (err) {\n\t      bounds = {\n\t        top: e.offsetTop,\n\t        left: e.offsetLeft,\n\t        width: e.offsetWidth,\n\t        height: e.offsetHeight\n\t      };\n\t    }\n\n\t    let offX = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0);\n\t    let offY = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop || document.body.clientTop || 0);\n\t    let styles = window.getComputedStyle ? getComputedStyle(e, null) : e.currentStyle; // IE <9 compatibility.\n\n\t    let padL = parseInt(styles.paddingLeft) + parseInt(styles.borderLeftWidth);\n\t    let padT = parseInt(styles.paddingTop) + parseInt(styles.borderTopWidth);\n\t    let padR = parseInt(styles.paddingRight) + parseInt(styles.borderRightWidth);\n\t    let padB = parseInt(styles.paddingBottom) + parseInt(styles.borderBottomWidth); // note: in some browsers bounds properties are read only.\n\n\t    return {\n\t      left: bounds.left + offX + padL,\n\t      right: bounds.right + offX - padR,\n\t      top: bounds.top + offY + padT,\n\t      bottom: bounds.bottom + offY - padB\n\t    };\n\t  }\n\t  /**\n\t   * @protected\n\t   * @param {Number} id\n\t   * @returns {Object}\n\t   */\n\n\n\t  _getPointerData(id) {\n\t    let data = this._pointerData[id];\n\n\t    if (!data) {\n\t      data = this._pointerData[id] = {\n\t        x: 0,\n\t        y: 0\n\t      };\n\t    }\n\n\t    return data;\n\t  }\n\t  /**\n\t   * @protected\n\t   * @param {easeljs.MouseEvent} [e=window.event]\n\t   */\n\n\n\t  _handleMouseMove(e = window.event) {\n\t    this._handlePointerMove(-1, e, e.pageX, e.pageY);\n\t  }\n\t  /**\n\t   * @emits {@link easeljs.DisplayObject#event:mouseleave}\n\t   * @emits {@link easeljs.DisplayObject#event:mouseenter}\n\t   * @emits {@link easeljs.DisplayObject#event:pressmove}\n\t   * @emits {@link easeljs.Stage#event:stagemousemove}\n\t   * @protected\n\t   * @param {Number} id\n\t   * @param {easeljs.MouseEvent | Event} e\n\t   * @param {Number} pageX\n\t   * @param {Number} pageY\n\t   * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t   */\n\n\n\t  _handlePointerMove(id, e, pageX, pageY, owner) {\n\t    if (this._prevStage && owner === undefined) {\n\t      return;\n\t    } // redundant listener.\n\n\n\t    if (!this.canvas) {\n\t      return;\n\t    }\n\n\t    let nextStage = this._nextStage,\n\t        o = this._getPointerData(id);\n\n\t    let inBounds = o.inBounds;\n\n\t    this._updatePointerPosition(id, e, pageX, pageY);\n\n\t    if (inBounds || o.inBounds || this.mouseMoveOutside) {\n\t      if (id === -1 && o.inBounds === !inBounds) {\n\t        this._dispatchMouseEvent(this, inBounds ? \"mouseleave\" : \"mouseenter\", false, id, o, e);\n\t      }\n\n\t      this._dispatchMouseEvent(this, \"stagemousemove\", false, id, o, e);\n\n\t      this._dispatchMouseEvent(o.target, \"pressmove\", true, id, o, e);\n\t    }\n\n\t    nextStage && nextStage._handlePointerMove(id, e, pageX, pageY, null);\n\t  }\n\t  /**\n\t   * @protected\n\t   * @param {Number} id\n\t   * @param {easeljs.MouseEvent | Event} e\n\t   * @param {Number} pageX\n\t   * @param {Number} pageY\n\t   */\n\n\n\t  _updatePointerPosition(id, e, pageX, pageY) {\n\t    let rect = this._getElementRect(this.canvas);\n\n\t    pageX -= rect.left;\n\t    pageY -= rect.top;\n\t    let w = this.canvas.width;\n\t    let h = this.canvas.height;\n\t    pageX /= (rect.right - rect.left) / w;\n\t    pageY /= (rect.bottom - rect.top) / h;\n\n\t    let o = this._getPointerData(id);\n\n\t    if (o.inBounds = pageX >= 0 && pageY >= 0 && pageX <= w - 1 && pageY <= h - 1) {\n\t      o.x = pageX;\n\t      o.y = pageY;\n\t    } else if (this.mouseMoveOutside) {\n\t      o.x = pageX < 0 ? 0 : pageX > w - 1 ? w - 1 : pageX;\n\t      o.y = pageY < 0 ? 0 : pageY > h - 1 ? h - 1 : pageY;\n\t    }\n\n\t    o.posEvtObj = e;\n\t    o.rawX = pageX;\n\t    o.rawY = pageY;\n\n\t    if (id === this._primaryPointerID || id === -1) {\n\t      this.mouseX = o.x;\n\t      this.mouseY = o.y;\n\t      this.mouseInBounds = o.inBounds;\n\t    }\n\t  }\n\t  /**\n\t   * @protected\n\t   * @param {easeljs.MouseEvent} e\n\t   */\n\n\n\t  _handleMouseUp(e) {\n\t    this._handlePointerUp(-1, e, false);\n\t  }\n\t  /**\n\t   * @emits {@link easeljs.Stage#event:stagemouseup}\n\t   * @emits {@link easeljs.DisplayObject#event:click}\n\t   * @emits {@link easeljs.DisplayObject#event:pressup}\n\t   * @protected\n\t   * @param {Number} id\n\t   * @param {easeljs.MouseEvent | Event} e\n\t   * @param {Boolean} clear\n\t   * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t   */\n\n\n\t  _handlePointerUp(id, e, clear, owner) {\n\t    let nextStage = this._nextStage,\n\t        o = this._getPointerData(id);\n\n\t    if (this._prevStage && owner === undefined) {\n\t      return;\n\t    } // redundant listener.\n\n\n\t    let target = null,\n\t        oTarget = o.target;\n\n\t    if (!owner && (oTarget || nextStage)) {\n\t      target = this._getObjectsUnderPoint(o.x, o.y, null, true);\n\t    }\n\n\t    if (o.down) {\n\t      this._dispatchMouseEvent(this, \"stagemouseup\", false, id, o, e, target);\n\n\t      o.down = false;\n\t    }\n\n\t    if (target === oTarget) {\n\t      this._dispatchMouseEvent(oTarget, \"click\", true, id, o, e);\n\t    }\n\n\t    this._dispatchMouseEvent(oTarget, \"pressup\", true, id, o, e);\n\n\t    if (clear) {\n\t      if (id == this._primaryPointerID) {\n\t        this._primaryPointerID = null;\n\t      }\n\n\t      delete this._pointerData[id];\n\t    } else {\n\t      o.target = null;\n\t    }\n\n\t    nextStage && nextStage._handlePointerUp(id, e, clear, owner || target && this);\n\t  }\n\t  /**\n\t   * @protected\n\t   * @param {easeljs.MouseEvent} e\n\t   */\n\n\n\t  _handleMouseDown(e) {\n\t    this._handlePointerDown(-1, e, e.pageX, e.pageY);\n\t  }\n\t  /**\n\t   * @emits {@link easeljs.Stage#event:stagemousedown}\n\t   * @emits {@link easeljs.DisplayObject#event:mousedown}\n\t   * @protected\n\t   * @param {Number} id\n\t   * @param {easeljs.MouseEvent | Event} e\n\t   * @param {Number} pageX\n\t   * @param {Number} pageY\n\t   * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t   */\n\n\n\t  _handlePointerDown(id, e, pageX, pageY, owner) {\n\t    if (this.preventSelection) {\n\t      e.preventDefault();\n\t    }\n\n\t    if (this._primaryPointerID == null || id === -1) {\n\t      this._primaryPointerID = id;\n\t    } // mouse always takes over.\n\n\n\t    if (pageY != null) {\n\t      this._updatePointerPosition(id, e, pageX, pageY);\n\t    }\n\n\t    let target = null,\n\t        nextStage = this._nextStage,\n\t        o = this._getPointerData(id);\n\n\t    if (!owner) {\n\t      target = o.target = this._getObjectsUnderPoint(o.x, o.y, null, true);\n\t    }\n\n\t    if (o.inBounds) {\n\t      this._dispatchMouseEvent(this, \"stagemousedown\", false, id, o, e, target);\n\n\t      o.down = true;\n\t    }\n\n\t    this._dispatchMouseEvent(target, \"mousedown\", true, id, o, e);\n\n\t    nextStage && nextStage._handlePointerDown(id, e, pageX, pageY, owner || target && this);\n\t  }\n\t  /**\n\t   * @emits {@link easeljs.DisplayObject#event:mouseout}\n\t   * @emits {@link easeljs.DisplayObject#event:rollout}\n\t   * @emits {@link easeljs.DisplayObject#event:rollover}\n\t   * @emits {@link easeljs.DisplayObject#event:mouseover}\n\t   * @param {Boolean} clear If true, clears the mouseover / rollover (ie. no target)\n\t   * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t   * @param {easeljs.Stage} eventTarget The stage that the cursor is actively over.\n\t   * @protected\n\t   */\n\n\n\t  _testMouseOver(clear, owner, eventTarget) {\n\t    if (this._prevStage && owner === undefined) {\n\t      return;\n\t    } // redundant listener.\n\n\n\t    let nextStage = this._nextStage;\n\n\t    if (!this._mouseOverIntervalID) {\n\t      // not enabled for mouseover, but should still relay the event.\n\t      nextStage && nextStage._testMouseOver(clear, owner, eventTarget);\n\t      return;\n\t    }\n\n\t    let o = this._getPointerData(-1); // only update if the mouse position has changed. This provides a lot of optimization, but has some trade-offs.\n\n\n\t    if (!o || !clear && this.mouseX === this._mouseOverX && this.mouseY === this._mouseOverY && this.mouseInBounds) {\n\t      return;\n\t    }\n\n\t    let e = o.posEvtObj;\n\t    let isEventTarget = eventTarget || e && e.target === this.canvas;\n\t    let target = null,\n\t        common = -1,\n\t        cursor = \"\";\n\n\t    if (!owner && (clear || this.mouseInBounds && isEventTarget)) {\n\t      target = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, true);\n\t      this._mouseOverX = this.mouseX;\n\t      this._mouseOverY = this.mouseY;\n\t    }\n\n\t    let oldList = this._mouseOverTarget || [];\n\t    let oldTarget = oldList[oldList.length - 1];\n\t    let list = this._mouseOverTarget = []; // generate ancestor list and check for cursor:\n\n\t    let t = target;\n\n\t    while (t) {\n\t      list.unshift(t);\n\n\t      if (!cursor) {\n\t        cursor = t.cursor;\n\t      }\n\n\t      t = t.parent;\n\t    }\n\n\t    this.canvas.style.cursor = cursor;\n\n\t    if (!owner && eventTarget) {\n\t      eventTarget.canvas.style.cursor = cursor;\n\t    } // find common ancestor:\n\n\n\t    for (let i = 0, l = list.length; i < l; i++) {\n\t      if (list[i] != oldList[i]) {\n\t        break;\n\t      }\n\n\t      common = i;\n\t    }\n\n\t    if (oldTarget != target) {\n\t      this._dispatchMouseEvent(oldTarget, \"mouseout\", true, -1, o, e, target);\n\t    }\n\n\t    for (let i = oldList.length - 1; i > common; i--) {\n\t      this._dispatchMouseEvent(oldList[i], \"rollout\", false, -1, o, e, target);\n\t    }\n\n\t    for (let i = list.length - 1; i > common; i--) {\n\t      this._dispatchMouseEvent(list[i], \"rollover\", false, -1, o, e, oldTarget);\n\t    }\n\n\t    if (oldTarget != target) {\n\t      this._dispatchMouseEvent(target, \"mouseover\", true, -1, o, e, oldTarget);\n\t    }\n\n\t    nextStage && nextStage._testMouseOver(clear, owner || target && this, eventTarget || isEventTarget && this);\n\t  }\n\t  /**\n\t   * @emits {@link easeljs.DisplayObject#event:dblclick}\n\t   * @protected\n\t   * @param {easeljs.MouseEvent} e\n\t   * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t   */\n\n\n\t  _handleDoubleClick(e, owner) {\n\t    let target = null,\n\t        nextStage = this._nextStage,\n\t        o = this._getPointerData(-1);\n\n\t    if (!owner) {\n\t      target = this._getObjectsUnderPoint(o.x, o.y, null, true);\n\n\t      this._dispatchMouseEvent(target, \"dblclick\", true, -1, o, e);\n\t    }\n\n\t    nextStage && nextStage._handleDoubleClick(e, owner || target && this);\n\t  }\n\t  /**\n\t   * @protected\n\t   * @param {easeljs.DisplayObject} target\n\t   * @param {String} type\n\t   * @param {Boolean} bubbles\n\t   * @param {Number} pointerId\n\t   * @param {Object} o\n\t   * @param {easeljs.MouseEvent} [nativeEvent]\n\t   * @param {easeljs.DisplayObject} [relatedTarget]\n\t   */\n\n\n\t  _dispatchMouseEvent(target, type, bubbles, pointerId, o, nativeEvent, relatedTarget) {\n\t    // TODO: might be worth either reusing MouseEvent instances, or adding a willTrigger method to avoid GC.\n\t    if (!target || !bubbles && !target.hasEventListener(type)) {\n\t      return;\n\t    }\n\t    /*\n\t    // TODO: account for stage transformations?\n\t    this._mtx = this.getConcatenatedMatrix(this._mtx).invert();\n\t    let pt = this._mtx.transformPoint(o.x, o.y);\n\t    let evt = new MouseEvent(type, bubbles, false, pt.x, pt.y, nativeEvent, pointerId, pointerId==this._primaryPointerID || pointerId==-1, o.rawX, o.rawY);\n\t    */\n\n\n\t    let evt = new MouseEvent(type, bubbles, false, o.x, o.y, nativeEvent, pointerId, pointerId === this._primaryPointerID || pointerId === -1, o.rawX, o.rawY, relatedTarget);\n\t    target.dispatchEvent(evt);\n\t  }\n\n\t}\n\t/**\n\t * Dispatched when the user moves the mouse over the canvas.\n\t * @see {@link easeljs.MouseEvent}\n\t * @event easeljs.Stage#stagemousemove\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user presses their left mouse button on the canvas.\n\t * You can use {@link easeljs.Stage#mouseInBounds} to check whether the mouse is currently within the stage bounds.\n\t * @see {@link easeljs.MouseEvent}\n\t * @event easeljs.Stage#stagemousedown\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user the user presses somewhere on the stage, then releases the mouse button anywhere that the page can detect it (this varies slightly between browsers).\n\t * You can use {@link easeljs.Stage#mouseInBounds} to check whether the mouse is currently within the stage bounds.\n\t * @see {@link easeljs.MouseEvent}\n\t * @event easeljs.Stage#stagemouseup\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the mouse moves from within the canvas area (mouseInBounds === true) to outside it (mouseInBounds === false).\n\t * This is currently only dispatched for mouse input (not touch).\n\t * @see {@link easeljs.MouseEvent}\n\t * @event easeljs.Stage#mouseleave\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * Dispatched when the mouse moves into the canvas area (mouseInBounds === false) from outside it (mouseInBounds === true).\n\t * This is currently only dispatched for mouse input (not touch).\n\t * @see {@link easeljs.MouseEvent}\n\t * @event easeljs.Stage#mouseenter\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * Dispatched each update immediately before the tick event is propagated through the display list.\n\t * You can call preventDefault on the event object to cancel propagating the tick event.\n\t * @event easeljs.Stage#tickstart\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * Dispatched each update immediately after the tick event is propagated through the display list. Does not fire if\n\t * tickOnUpdate is false. Precedes the \"drawstart\" event.\n\t * @event easeljs.Stage#tickend\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * Dispatched each update immediately before the canvas is cleared and the display list is drawn to it.\n\t * You can call preventDefault on the event object to cancel the draw.\n\t * @event easeljs.Stage#drawstart\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.\n\t * @event easeljs.Stage#drawend\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * @license Canvas\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\n\t/**\n\t * Global utility for creating canvases.\n\t * @memberof easeljs\n\t * @name easeljs.createCanvas\n\t * @param {Number} [width=1]\n\t * @param {Number} [height=1]\n\t */\n\tfunction createCanvas(width = 1, height = 1) {\n\t  let c;\n\n\t  if (window.createjs !== undefined && window.createjs.createCanvas !== undefined) {\n\t    c = window.createjs.createCanvas();\n\t  }\n\n\t  if (HTMLCanvasElement) {\n\t    c = new HTMLCanvasElement();\n\t  }\n\n\t  if (c !== undefined) {\n\t    c.width = width;\n\t    c.height = height;\n\t    return c;\n\t  }\n\n\t  throw \"Canvas not supported in this environment.\";\n\t}\n\n\t/**\n\t * @license VideoBuffer\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2010 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * When an HTML video seeks, including when looping, there is an indeterminate period before a new frame is available.\n\t * This can result in the video blinking or flashing when it is drawn to a canvas. The VideoBuffer class resolves\n\t * this issue by drawing each frame to an off-screen canvas and preserving the prior frame during a seek.\n\t *\n\t * @example\n\t * let buffer = new VideoBuffer(video);\n\t * let bitmap = new Bitmap(buffer);\n\t *\n\t * @param {HTMLVideoElement} video The HTML video element to buffer.\n\t */\n\n\tclass VideoBuffer {\n\t  constructor(video) {\n\t    /**\n\t     * Used by Bitmap to determine when the video buffer is ready to be drawn. Not intended for general use.\n\t     * @protected\n\t     * @type {Number}\n\t     */\n\t    this.readyState = video.readyState;\n\t    /**\n\t     * @protected\n\t     * @type {HTMLVideoElement}\n\t     */\n\n\t    this._video = video;\n\t    /**\n\t     * @protected\n\t     * @type {HTMLCanvasElement}\n\t     */\n\n\t    this._canvas = null;\n\t    /**\n\t     * @protected\n\t     * @type {Number}\n\t     * @default -1\n\t     */\n\n\t    this._lastTime = -1;\n\n\t    if (this.readyState < 2) {\n\t      video.addEventListener(\"canplaythrough\", this._videoReady.bind(this));\n\t    } // {once: true} isn't supported everywhere, but its a non-critical optimization here.\n\n\t  }\n\t  /**\n\t   * Gets an HTML canvas element showing the current video frame, or the previous frame if in a seek / loop.\n\t   * Primarily for use by {@link easeljs.Bitmap}.\n\t   */\n\n\n\t  getImage() {\n\t    if (this.readyState < 2) {\n\t      return;\n\t    }\n\n\t    let canvas = this._canvas,\n\t        video = this._video;\n\n\t    if (!canvas) {\n\t      canvas = this._canvas = createCanvas();\n\t      canvas.width = video.videoWidth;\n\t      canvas.height = video.videoHeight;\n\t    }\n\n\t    if (video.readyState >= 2 && video.currentTime !== this._lastTime) {\n\t      const ctx = canvas.getContext(\"2d\");\n\t      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\t      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\t      this._lastTime = video.currentTime;\n\t    }\n\n\t    return canvas;\n\t  }\n\t  /**\n\t   * @protected\n\t   */\n\n\n\t  _videoReady() {\n\t    this.readyState = 2;\n\t  }\n\n\t}\n\n\t/**\n\t * @license Bitmap\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * A Bitmap represents an Image, Canvas, or Video in the display list. A Bitmap can be instantiated using an existing\n\t * HTML element, or a string.\n\t *\n\t * <strong>Notes:</strong>\n\t * <ol>\n\t *     <li>When using a video source that may loop or seek, use a {@link easeljs.VideoBuffer} object to\n\t *      blinking / flashing.\n\t *     <li>When a string path or image tag that is not yet loaded is used, the stage may need to be redrawn before it\n\t *      will be displayed.</li>\n\t *     <li>Bitmaps with an SVG source currently will not respect an alpha value other than 0 or 1. To get around this,\n\t *     the Bitmap can be cached.</li>\n\t *     <li>Bitmaps with an SVG source will taint the canvas with cross-origin data, which prevents interactivity. This\n\t *     happens in all browsers except recent Firefox builds.</li>\n\t *     <li>Images loaded cross-origin will throw cross-origin security errors when interacted with using a mouse, using\n\t *     methods such as `getObjectUnderPoint`, or using filters, or caching. You can get around this by setting\n\t *     `crossOrigin` flags on your images before passing them to EaselJS, eg: `img.crossOrigin=\"Anonymous\";`</li>\n\t * </ol>\n\t *\n\t * @memberof easeljs\n\t * @extends easeljs.DisplayObject\n\t * @example\n\t * const bitmap = new Bitmap(\"imagePath.jpg\");\n\t *\n\t * @param {CanvasImageSource | String | Object} imageOrUri The source image to display. This can be a CanvasImageSource\n\t * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n\t * If the latter, a new Image instance with the URL as its src will be used.\n\t */\n\n\tclass Bitmap extends DisplayObject {\n\t  constructor(imageOrUri) {\n\t    super();\n\t    /**\n\t     * The source image to display. This can be a CanvasImageSource\n\t     * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n\t     * If the latter, a new Image instance with the URL as its src will be used.\n\t     * @property image\n\t     * @type {CanvasImageSource | Object}\n\t     */\n\n\t    if (typeof imageOrUri === \"string\") {\n\t      this.image = document.createElement(\"img\");\n\t      this.image.src = imageOrUri;\n\t    } else {\n\t      this.image = imageOrUri;\n\t    }\n\t    /**\n\t     * Specifies an area of the source image to draw. If omitted, the whole image will be drawn.\n\t     * Note that video sources must have a width / height set to work correctly with `sourceRect`.\n\t     * @type {easeljs.Rectangle}\n\t     * @default null\n\t     */\n\n\n\t    this.sourceRect = null;\n\t    /**\n\t     * Set as compatible with WebGL.\n\t     * @protected\n\t     * @type {Number}\n\t     */\n\n\t    this._webGLRenderStyle = DisplayObject._StageGL_BITMAP;\n\t  }\n\n\t  isVisible() {\n\t    let image = this.image;\n\t    let hasContent = this.cacheCanvas || image && (image.naturalWidth || image.getContext || image.readyState >= 2);\n\t    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t  }\n\n\t  draw(ctx, ignoreCache = false) {\n\t    if (super.draw(ctx, ignoreCache)) {\n\t      return true;\n\t    }\n\n\t    let img = this.image,\n\t        rect = this.sourceRect;\n\n\t    if (img instanceof VideoBuffer) {\n\t      img = img.getImage();\n\t    }\n\n\t    if (img == null) {\n\t      return true;\n\t    }\n\n\t    if (rect) {\n\t      // some browsers choke on out of bound values, so we'll fix them:\n\t      let x1 = rect.x,\n\t          y1 = rect.y,\n\t          x2 = x1 + rect.width,\n\t          y2 = y1 + rect.height,\n\t          x = 0,\n\t          y = 0,\n\t          w = img.width,\n\t          h = img.height;\n\n\t      if (x1 < 0) {\n\t        x -= x1;\n\t        x1 = 0;\n\t      }\n\n\t      if (x2 > w) {\n\t        x2 = w;\n\t      }\n\n\t      if (y1 < 0) {\n\t        y -= y1;\n\t        y1 = 0;\n\t      }\n\n\t      if (y2 > h) {\n\t        y2 = h;\n\t      }\n\n\t      ctx.drawImage(img, x1, y1, x2 - x1, y2 - y1, x, y, x2 - x1, y2 - y1);\n\t    } else {\n\t      ctx.drawImage(img, 0, 0);\n\t    }\n\n\t    return true;\n\t  } // Note, the doc sections below document using the specified APIs (from DisplayObject) from\n\t  // Bitmap. This is why they have no method implementations.\n\n\t  /**\n\t   * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t   * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t   *\n\t   * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t   * To see the API for caching, please visit the {@link easeljs.DisplayObject#cache} method.\n\t   *\n\t   * @alias easeljs.Bitmap#cache\n\t   */\n\n\t  /**\n\t   * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t   * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t   *\n\t   * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t   * To see the API for caching, please visit the {@link easeljs.DisplayObject#cache} method.\n\t   *\n\t   * @alias easeljs.Bitmap#updateCache\n\t   */\n\n\t  /**\n\t   * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t   * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t   *\n\t   * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t   * To see the API for caching, please visit the {@link easeljs.DisplayObject#cache} method.\n\t   *\n\t   * @alias easeljs.Bitmap#uncache\n\t   */\n\n\n\t  getBounds() {\n\t    let rect = super.getBounds();\n\n\t    if (rect) {\n\t      return rect;\n\t    }\n\n\t    let image = this.image,\n\t        o = this.sourceRect || image;\n\t    let hasContent = image && (image.naturalWidth || image.getContext || image.readyState >= 2);\n\t    return hasContent ? this._rectangle.setValues(0, 0, o.width, o.height) : null;\n\t  }\n\t  /**\n\t   * Returns a clone of the Bitmap instance.\n\t   * @param {Boolean} [node] Whether the underlying DOM element should be cloned as well.\n\t   * @return {easeljs.Bitmap} A clone of the Bitmap instance.\n\t   */\n\n\n\t  clone(node) {\n\t    let img = this.image;\n\n\t    if (img != null && node != null) {\n\t      img = img.cloneNode();\n\t    }\n\n\t    let bmp = new Bitmap(img);\n\n\t    if (this.sourceRect) {\n\t      bmp.sourceRect = this.sourceRect.clone();\n\t    }\n\n\t    this._cloneProps(bmp);\n\n\t    return bmp;\n\t  }\n\n\t}\n\n\t/**\n\t * @license Sprite\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * Displays a frame or sequence of frames (ie. an animation) from a SpriteSheet instance. A sprite sheet is a series of\n\t * images (usually animation frames) combined into a single image. For example, an animation consisting of 8 100x100\n\t * images could be combined into a 400x200 sprite sheet (4 frames across by 2 high). You can display individual frames,\n\t * play frames as an animation, and even sequence animations together.\n\t *\n\t * @memberof easeljs\n\t * @extends easeljs.DisplayObject\n\t * @example\n\t * let sprite = new Sprite(spriteSheet);\n\t * sprite.gotoAndStop(\"frameName\");\n\t *\n\t * Until {@link easeljs.Sprite#gotoAndStop} or {@link easeljs.Sprite#gotoAndPlay} is called,\n\t * only the first defined frame defined in the sprite sheet will be displayed.\n\t *\n\t * @see {@link easeljs.SpriteSheet \"More information on setting up frames and animations.\"}\n\t * @param {SpriteSheet} spriteSheet The SpriteSheet instance to play back. This includes the source image(s), frame\n\t * dimensions, and frame data.\n\t * @param {String | Number} [frameOrAnimation] The frame number or animation to play initially.\n\t */\n\n\tclass Sprite extends DisplayObject {\n\t  constructor(spriteSheet, frameOrAnimation) {\n\t    super();\n\t    /**\n\t     * The frame index that will be drawn when draw is called. Note that with some {@link easeljs.SpriteSheet}\n\t     * definitions, this will advance non-sequentially. This will always be an integer value.\n\t     * @type {Number}\n\t     * @default 0\n\t     * @readonly\n\t     */\n\n\t    this.currentFrame = 0;\n\t    /**\n\t     * Returns the name of the currently playing animation.\n\t     * @type {String}\n\t     * @readonly\n\t     */\n\n\t    this.currentAnimation = null;\n\t    /**\n\t     * Prevents the animation from advancing each tick automatically. For example, you could create a sprite\n\t     * sheet of icons, set paused to true, and display the appropriate icon by setting `currentFrame`.\n\t     * @type {Boolean}\n\t     * @default true\n\t     */\n\n\t    this.paused = true;\n\t    /**\n\t     * The SpriteSheet instance to play back. This includes the source image, frame dimensions, and frame data.\n\t     * @type {easeljs.SpriteSheet}\n\t     * @readonly\n\t     */\n\n\t    this.spriteSheet = spriteSheet;\n\t    /**\n\t     * Specifies the current frame index within the currently playing animation. When playing normally, this will increase\n\t     * from 0 to n-1, where n is the number of frames in the current animation.\n\t     * This could be a non-integer value if using time-based playback, or if the animation's speed is not an integer.\n\t     * @see {@link easeljs.Sprite#framerate}\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.currentAnimationFrame = 0;\n\t    /**\n\t     * By default Sprite instances advance one frame per tick. Specifying a framerate for the Sprite (or its related\n\t     * SpriteSheet) will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t     * framerate.\n\t     *\n\t     * For example, if a Sprite with a framerate of 10 is placed on a Stage being updated at 40fps, then the Sprite will\n\t     * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t     * vary slightly between frames.\n\t     *\n\t     * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t     * passed into {@link easeljs.Stage#update}.\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.framerate = 0;\n\t    /**\n\t     * Current animation object.\n\t     * @protected\n\t     * @type {Object}\n\t     * @default null\n\t     */\n\n\t    this._animation = null;\n\t    /**\n\t     * Current frame index.\n\t     * @protected\n\t     * @type {Number}\n\t     * @default null\n\t     */\n\n\t    this._currentFrame = null;\n\t    /**\n\t     * Skips the next auto advance. Used by gotoAndPlay to avoid immediately jumping to the next frame\n\t     * @protected\n\t     * @type {Boolean}\n\t     * @default false\n\t     */\n\n\t    this._skipAdvance = false;\n\t    /**\n\t     * Set as compatible with WebGL.\n\t     * @protected\n\t     * @type {Number}\n\t     * @default 1\n\t     */\n\n\t    this._webGLRenderStyle = DisplayObject._StageGL_SPRITE;\n\n\t    if (frameOrAnimation != null) {\n\t      this.gotoAndPlay(frameOrAnimation);\n\t    }\n\t  }\n\n\t  isVisible() {\n\t    let hasContent = this.cacheCanvas || this.spriteSheet.complete;\n\t    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t  }\n\n\t  draw(ctx, ignoreCache) {\n\t    if (super.draw(ctx, ignoreCache)) {\n\t      return true;\n\t    }\n\n\t    this._normalizeFrame();\n\n\t    let o = this.spriteSheet.getFrame(this._currentFrame | 0);\n\n\t    if (!o) {\n\t      return false;\n\t    }\n\n\t    let rect = o.rect;\n\n\t    if (rect.width && rect.height) {\n\t      ctx.drawImage(o.image, rect.x, rect.y, rect.width, rect.height, -o.regX, -o.regY, rect.width, rect.height);\n\t    }\n\n\t    return true;\n\t  } // Note, the doc sections below document using the specified APIs (from DisplayObject) from\n\t  // Bitmap. This is why they have no method implementations.\n\n\t  /**\n\t   * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t   * You should not cache Sprite instances as it can degrade performance.\n\t   * @name easeljs.Sprite#cache\n\t   */\n\n\t  /**\n\t   * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t   * You should not cache Sprite instances as it can degrade performance.\n\t   * @name easeljs.Sprite#updateCache\n\t   */\n\n\t  /**\n\t   * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t   * You should not cache Sprite instances as it can degrade performance.\n\t   * @name easeljs.Sprite#uncache\n\t   */\n\n\t  /**\n\t   * Play (unpause) the current animation. The Sprite will be paused if either {@link easeljs.Sprite#stop}\n\t   * or {@link easeljs.Sprite#gotoAndStop} is called. Single frame animations will remain unchanged.\n\t   */\n\n\n\t  play() {\n\t    this.paused = false;\n\t  }\n\t  /**\n\t   * Stop playing a running animation. The Sprite will be playing if {@link easeljs.Sprite#gotoAndPlay} is called.\n\t   * Note that calling `gotoAndPlay()` or {@link easeljs.Sprite#play} will resume playback.\n\t   */\n\n\n\t  stop() {\n\t    this.paused = true;\n\t  }\n\t  /**\n\t   * Sets paused to false and plays the specified animation name, named frame, or frame number.\n\t   * @param {String | Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t   * and begin playing.\n\t   */\n\n\n\t  gotoAndPlay(frameOrAnimation) {\n\t    this.paused = false;\n\t    this._skipAdvance = true;\n\n\t    this._goto(frameOrAnimation);\n\t  }\n\t  /**\n\t   * Sets paused to true and seeks to the specified animation name, named frame, or frame number.\n\t   * @param {String | Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t   * and stop.\n\t   */\n\n\n\t  gotoAndStop(frameOrAnimation) {\n\t    this.paused = true;\n\n\t    this._goto(frameOrAnimation);\n\t  }\n\t  /**\n\t   * Advances the playhead. This occurs automatically each tick by default.\n\t   * @param {Number} [time] The amount of time in ms to advance by. Only applicable if framerate is set on the Sprite\n\t   * or its SpriteSheet.\n\t  */\n\n\n\t  advance(time) {\n\t    let fps = this.framerate || this.spriteSheet.framerate;\n\t    let t = fps && time != null ? time / (1000 / fps) : 1;\n\n\t    this._normalizeFrame(t);\n\t  }\n\t  /**\n\t   * Returns a {@link easeljs.Rectangle} instance defining the bounds of the current frame relative to\n\t   * the origin. For example, a 90 x 70 frame with `regX=50` and `regY=40` would return a\n\t   * rectangle with [x=-50, y=-40, width=90, height=70]. This ignores transformations on the display object.\n\t   *\n\t   * @see {@link easeljs.SpriteSheet#frameBounds}\n\t   * @return {easeljs.Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n\t   */\n\n\n\t  getBounds() {\n\t    // TODO: should this normalizeFrame?\n\t    return super.getBounds() || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle);\n\t  }\n\t  /**\n\t   * Returns a clone of the Sprite instance. Note that the same SpriteSheet is shared between cloned instances.\n\t   * @return {easeljs.Sprite} a clone of the Sprite instance.\n\t   */\n\n\n\t  clone() {\n\t    return this._cloneProps(new Sprite(this.spriteSheet));\n\t  }\n\t  /**\n\t   * @param {easeljs.Sprite} o\n\t   * @return {easeljs.Sprite} o\n\t   * @protected\n\t   */\n\n\n\t  _cloneProps(o) {\n\t    super._cloneProps(o);\n\n\t    o.currentFrame = this.currentFrame;\n\t    o.currentAnimation = this.currentAnimation;\n\t    o.paused = this.paused;\n\t    o.currentAnimationFrame = this.currentAnimationFrame;\n\t    o.framerate = this.framerate;\n\t    o._animation = this._animation;\n\t    o._currentFrame = this._currentFrame;\n\t    o._skipAdvance = this._skipAdvance;\n\t    return o;\n\t  }\n\n\t  _tick(evtObj) {\n\t    if (!this.paused) {\n\t      if (!this._skipAdvance) {\n\t        this.advance(evtObj && evtObj.delta);\n\t      }\n\n\t      this._skipAdvance = false;\n\t    }\n\n\t    super._tick(evtObj);\n\t  }\n\t  /**\n\t   * Normalizes the current frame, advancing animations and dispatching callbacks as appropriate.\n\t   * @protected\n\t   * @param {Number} [frameDelta=0]\n\t   */\n\n\n\t  _normalizeFrame(frameDelta = 0) {\n\t    let animation = this._animation;\n\t    let paused = this.paused;\n\t    let frame = this._currentFrame;\n\n\t    if (animation) {\n\t      let speed = animation.speed || 1;\n\t      let animFrame = this.currentAnimationFrame;\n\t      let l = animation.frames.length;\n\n\t      if (animFrame + frameDelta * speed >= l) {\n\t        let next = animation.next;\n\n\t        if (this._dispatchAnimationEnd(animation, frame, paused, next, l - 1)) {\n\t          // something changed in the event stack, so we shouldn't make any more changes here.\n\t          return;\n\t        } else if (next) {\n\t          // sequence. Automatically calls _normalizeFrame again with the remaining frames.\n\t          return this._goto(next, frameDelta - (l - animFrame) / speed);\n\t        } else {\n\t          // end.\n\t          this.paused = true;\n\t          animFrame = animation.frames.length - 1;\n\t        }\n\t      } else {\n\t        animFrame += frameDelta * speed;\n\t      }\n\n\t      this.currentAnimationFrame = animFrame;\n\t      this._currentFrame = animation.frames[animFrame | 0];\n\t    } else {\n\t      frame = this._currentFrame += frameDelta;\n\t      let l = this.spriteSheet.getNumFrames();\n\n\t      if (frame >= l && l > 0) {\n\t        if (!this._dispatchAnimationEnd(animation, frame, paused, l - 1)) {\n\t          // looped.\n\t          if ((this._currentFrame -= l) >= l) {\n\t            return this._normalizeFrame();\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    frame = this._currentFrame | 0;\n\n\t    if (this.currentFrame != frame) {\n\t      this.currentFrame = frame;\n\t      this.dispatchEvent(\"change\");\n\t    }\n\t  }\n\n\t  /**\n\t   * Dispatches the \"animationend\" event. Returns true if a handler changed the animation (ex. calling {@link easlejs.Sprite#stop},\n\t   * {@link easeljs.Sprite#gotoAndPlay}, etc.)\n\t   * @param animation\n\t   * @param frame\n\t   * @param paused\n\t   * @param next\n\t   * @param end\n\t   * @private\n\t   */\n\t  _dispatchAnimationEnd(animation, frame, paused, next, end) {\n\t    let name = animation ? animation.name : null;\n\n\t    if (this.hasEventListener(\"animationend\")) {\n\t      let evt = new Event(\"animationend\");\n\t      evt.name = name;\n\t      evt.next = next;\n\t      this.dispatchEvent(evt);\n\t    } // did the animation get changed in the event stack?:\n\n\n\t    let changed = this._animation != animation || this._currentFrame != frame; // if the animation hasn't changed, but the sprite was paused, then we want to stick to the last frame:\n\n\t    if (!changed && !paused && this.paused) {\n\t      this.currentAnimationFrame = end;\n\t      changed = true;\n\t    }\n\n\t    return changed;\n\t  }\n\t  /**\n\t   * Moves the playhead to the specified frame number or animation.\n\t   * @param {String | Number} frameOrAnimation The frame number or animation that the playhead should move to.\n\t   * @param {Number} [frame=0] The frame of the animation to go to. Defaults to 0.\n\t   * @protected\n\t   */\n\n\n\t  _goto(frameOrAnimation, frame = 0) {\n\t    this.currentAnimationFrame = 0;\n\n\t    if (isNaN(frameOrAnimation)) {\n\t      let data = this.spriteSheet.getAnimation(frameOrAnimation);\n\n\t      if (data) {\n\t        this._animation = data;\n\t        this.currentAnimation = frameOrAnimation;\n\n\t        this._normalizeFrame(frame);\n\t      }\n\t    } else {\n\t      this.currentAnimation = this._animation = null;\n\t      this._currentFrame = frameOrAnimation;\n\n\t      this._normalizeFrame();\n\t    }\n\t  }\n\n\t}\n\t/**\n\t * Dispatched when an animation reaches its ends.\n\t * @event easeljs.Sprite#animationend\n\t * @property {Object} target The object that dispatched the event.\n\t * @property {String} type The event type.\n\t * @property {String} name The name of the animation that just ended.\n\t * @property {String} next The name of the next animation that will be played, or null. This will be the same as name if the animation is looping.\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched any time the current frame changes. For example, this could be due to automatic advancement on a tick,\n\t * or calling gotoAndPlay() or gotoAndStop().\n\t * @event easeljs.Sprite#change\n\t * @property {Object} target The object that dispatched the event.\n\t * @property {String} type The event type.\n\t */\n\n\t/**\n\t * @license BitmapText\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * Displays text using bitmap glyphs defined in a sprite sheet. Multi-line text is supported using new line characters,\n\t * but automatic wrapping is not supported. See the {@link easeljs.BitmapText#spriteSheet} property for more information on defining glyphs.\n\t *\n\t * <strong>Important:</strong> While BitmapText extends Container, it is not designed to be used as one.\n\t * As such, methods like addChild and removeChild are disabled.\n\t *\n\t * @memberof easeljs\n\t * @extends easeljs.Container\n\t *\n\t * @param {String} [text=\"\"] The text to display.\n\t * @param {SpriteSheet} [spriteSheet=null] The spritesheet that defines the character glyphs.\n\t */\n\n\tclass BitmapText extends Container {\n\t  constructor(text = \"\", spriteSheet = null) {\n\t    super();\n\t    /**\n\t     * The text to display.\n\t     * @type {String}\n\t     * @default \"\"\n\t     */\n\n\t    this.text = text;\n\t    /**\n\t     * A SpriteSheet instance that defines the glyphs for this bitmap text. Each glyph/character\n\t     * should have a single frame animation defined in the sprite sheet named the same as\n\t     * corresponding character.\n\t     *\n\t     * @example\n\t     * // the following animation definition would indicate that the frame at index 0 of the spritesheet should be drawn for the \"A\" character.\n\t     * \"A\": {frames: [0]}\n\t     * // The short form is also acceptable:\n\t     * \"A\": 0\n\t     *\n\t     * Note that if a character in the text is not found in the sprite sheet, it will also\n\t     * try to use the alternate case (upper or lower).\n\t     *\n\t     * @see {@link easeljs.SpriteSheet}\n\t     * @type {easeljs.SpriteSheet}\n\t     * @default null\n\t     */\n\n\t    this.spriteSheet = spriteSheet;\n\t    /**\n\t     * The height of each line of text. If 0, then it will use a line height calculated\n\t     * by checking for the height of the \"1\", \"T\", or \"L\" character (in that order). If\n\t     * those characters are not defined, it will use the height of the first frame of the\n\t     * sprite sheet.\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.lineHeight = 0;\n\t    /**\n\t     * This spacing (in pixels) will be added after each character in the output.\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.letterSpacing = 0;\n\t    /**\n\t     * If a space character is not defined in the sprite sheet, then empty pixels equal to\n\t     * spaceWidth will be inserted instead. If 0, then it will use a value calculated\n\t     * by checking for the width of the \"1\", \"l\", \"E\", or \"A\" character (in that order). If\n\t     * those characters are not defined, it will use the width of the first frame of the\n\t     * sprite sheet.\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.spaceWidth = 0;\n\t    /**\n\t    * @type {Object}\n\t    * @protected\n\t    */\n\n\t    this._oldProps = {\n\t      text: 0,\n\t      spriteSheet: 0,\n\t      lineHeight: 0,\n\t      letterSpacing: 0,\n\t      spaceWidth: 0\n\t    };\n\t    /**\n\t     * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n\t     * @type {easeljs.Stage}\n\t     * @protected\n\t     */\n\n\t    this._oldStage = null;\n\t    /**\n\t     * The event listener proxy triggered drawing draw for special circumstances.\n\t     * @type {Function}\n\t     * @protected\n\t     */\n\n\t    this._drawAction = null;\n\t  }\n\n\t  draw(ctx, ignoreCache) {\n\t    if (this.drawCache(ctx, ignoreCache)) {\n\t      return;\n\t    }\n\n\t    this._updateState();\n\n\t    super.draw(ctx, ignoreCache);\n\t  }\n\n\t  getBounds() {\n\t    this._updateText();\n\n\t    return super.getBounds();\n\t  }\n\n\t  isVisible() {\n\t    let hasContent = this.cacheCanvas || this.spriteSheet && this.spriteSheet.complete && this.text;\n\t    return !!(this.visible && this.alpha > 0 && this.scaleX !== 0 && this.scaleY !== 0 && hasContent);\n\t  }\n\n\t  clone() {\n\t    return this._cloneProps(new BitmapText(this.text, this.spriteSheet));\n\t  }\n\t  /**\n\t   * <strong>Disabled in BitmapText.</strong>\n\t   */\n\n\n\t  addChild() {}\n\t  /**\n\t   * <strong>Disabled in BitmapText.</strong>\n\t   */\n\n\n\t  addChildAt() {}\n\t  /**\n\t   * <strong>Disabled in BitmapText.</strong>\n\t   */\n\n\n\t  removeChild() {}\n\t  /**\n\t   * <strong>Disabled in BitmapText.</strong>\n\t   */\n\n\n\t  removeChildAt() {}\n\t  /**\n\t   * <strong>Disabled in BitmapText.</strong>\n\t   */\n\n\n\t  removeAllChildren() {}\n\n\t  _updateState() {\n\t    this._updateText();\n\t  }\n\t  /**\n\t  * @param {easeljs.BitmapText} o\n\t  * @return {easeljs.BitmapText}\n\t  * @protected\n\t  */\n\n\n\t  _cloneProps(o) {\n\t    super._cloneProps(o);\n\n\t    o.lineHeight = this.lineHeight;\n\t    o.letterSpacing = this.letterSpacing;\n\t    o.spaceWidth = this.spaceWidth;\n\t    return o;\n\t  }\n\t  /**\n\t   * @param {String} character\n\t   * @param {easeljs.SpriteSheet} spriteSheet\n\t   * @return {Number}\n\t   * @protected\n\t   */\n\n\n\t  _getFrameIndex(character, spriteSheet) {\n\t    let c,\n\t        o = spriteSheet.getAnimation(character);\n\n\t    if (!o) {\n\t      character != (c = character.toUpperCase()) || character != (c = character.toLowerCase()) || (c = null);\n\n\t      if (c) {\n\t        o = spriteSheet.getAnimation(c);\n\t      }\n\t    }\n\n\t    return o && o.frames[0];\n\t  }\n\t  /**\n\t   * @param {String} character\n\t   * @param {easeljs.SpriteSheet} spriteSheet\n\t   * @return {Object}\n\t   * @protected\n\t   */\n\n\n\t  _getFrame(character, spriteSheet) {\n\t    let index = this._getFrameIndex(character, spriteSheet);\n\n\t    return index == null ? index : spriteSheet.getFrame(index);\n\t  }\n\t  /**\n\t   * @param {easeljs.SpriteSheet} ss\n\t   * @return {Number}\n\t   * @protected\n\t   */\n\n\n\t  _getLineHeight(ss) {\n\t    let frame = this._getFrame(\"1\", ss) || this._getFrame(\"T\", ss) || this._getFrame(\"L\", ss) || ss.getFrame(0);\n\t    return frame ? frame.rect.height : 1;\n\t  }\n\t  /**\n\t   * @param {easeljs.SpriteSheet} ss\n\t   * @return {Number}\n\t   * @protected\n\t   */\n\n\n\t  _getSpaceWidth(ss) {\n\t    let frame = this._getFrame(\"1\", ss) || this._getFrame(\"l\", ss) || this._getFrame(\"e\", ss) || this._getFrame(\"a\", ss) || ss.getFrame(0);\n\t    return frame ? frame.rect.width : 1;\n\t  }\n\n\t  _tick(evtObj) {\n\t    let stage = this.stage;\n\t    stage && stage.on(\"drawstart\", this._updateText, this, true);\n\n\t    super._tick(evtObj);\n\t  }\n\t  /**\n\t   * @protected\n\t   */\n\n\n\t  _updateText() {\n\t    let x = 0,\n\t        y = 0,\n\t        o = this._oldProps,\n\t        change = false,\n\t        spaceW = this.spaceWidth,\n\t        lineH = this.lineHeight,\n\t        ss = this.spriteSheet;\n\t    let pool = BitmapText._spritePool,\n\t        kids = this.children,\n\t        childIndex = 0,\n\t        numKids = kids.length,\n\t        sprite;\n\n\t    for (let n in o) {\n\t      if (o[n] != this[n]) {\n\t        o[n] = this[n];\n\t        change = true;\n\t      }\n\t    }\n\n\t    if (!change) {\n\t      return;\n\t    }\n\n\t    let hasSpace = !!this._getFrame(\" \", ss);\n\n\t    if (!hasSpace && !spaceW) {\n\t      spaceW = this._getSpaceWidth(ss);\n\t    }\n\n\t    if (!lineH) {\n\t      lineH = this._getLineHeight(ss);\n\t    }\n\n\t    for (let i = 0, l = this.text.length; i < l; i++) {\n\t      let character = this.text.charAt(i);\n\n\t      if (character === \" \" && !hasSpace) {\n\t        x += spaceW;\n\t        continue;\n\t      } else if (character === \"\\n\" || character === \"\\r\") {\n\t        if (character === \"\\r\" && this.text.charAt(i + 1) === \"\\n\") {\n\t          i++;\n\t        } // crlf\n\n\n\t        x = 0;\n\t        y += lineH;\n\t        continue;\n\t      }\n\n\t      let index = this._getFrameIndex(character, ss);\n\n\t      if (index == null) {\n\t        continue;\n\t      }\n\n\t      if (childIndex < numKids) {\n\t        sprite = kids[childIndex];\n\t      } else {\n\t        kids.push(sprite = pool.length ? pool.pop() : new Sprite());\n\t        sprite.parent = this;\n\t        numKids++;\n\t      }\n\n\t      sprite.spriteSheet = ss;\n\t      sprite.gotoAndStop(index);\n\t      sprite.x = x;\n\t      sprite.y = y;\n\t      childIndex++;\n\t      x += sprite.getBounds().width + this.letterSpacing;\n\t    }\n\n\t    while (numKids > childIndex) {\n\t      // faster than removeChild.\n\t      pool.push(sprite = kids.pop());\n\t      sprite.parent = null;\n\t      numKids--;\n\t    }\n\n\t    if (pool.length > BitmapText.maxPoolSize) {\n\t      pool.length = BitmapText.maxPoolSize;\n\t    }\n\t  }\n\n\t}\n\t/**\n\t * BitmapText uses Sprite instances to draw text. To reduce the creation and destruction of instances (and thus garbage collection), it maintains\n\t * an internal object pool of sprite instances to reuse. Increasing this value can cause more sprites to be\n\t * retained, slightly increasing memory use, but reducing instantiation.\n\t * @type {Number}\n\t * @static\n\t * @default 100\n\t */\n\n\tBitmapText.maxPoolSize = 100;\n\t/**\n\t * Sprite object pool.\n\t * @type {Array}\n\t * @static\n\t * @private\n\t * @readonly\n\t */\n\n\tBitmapText._spritePool = [];\n\n\t/**\n\t * @license DOMElement\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * <b>This class is still experimental, and more advanced use is likely to be buggy. Please report bugs.</b>\n\t *\n\t * A DOMElement allows you to associate a HTMLElement with the display list. It will be transformed\n\t * within the DOM as though it is child of the {{#crossLink \"Container\"}}{{/crossLink}} it is added to. However, it is\n\t * not rendered to canvas, and as such will retain whatever z-index it has relative to the canvas (ie. it will be\n\t * drawn in front of or behind the canvas).\n\t *\n\t * The position of a DOMElement is relative to their parent node in the DOM. It is recommended that\n\t * the DOM Object be added to a div that also contains the canvas so that they share the same position\n\t * on the page.\n\t *\n\t * DOMElement is useful for positioning HTML elements over top of canvas content, and for elements\n\t * that you want to display outside the bounds of the canvas. For example, a tooltip with rich HTML\n\t * content.\n\t *\n\t * <h4>Mouse Interaction</h4>\n\t *\n\t * DOMElement instances are not full EaselJS display objects, and do not participate in EaselJS mouse\n\t * events or support methods like hitTest. To get mouse events from a DOMElement, you must instead add handlers to\n\t * the htmlElement (note, this does not support EventDispatcher)\n\t *\n\t *      var domElement = new createjs.DOMElement(htmlElement);\n\t *      domElement.htmlElement.onclick = function() {\n\t *          console.log(\"clicked\");\n\t *      }\n\t *\n\t * <strong>Important:</strong> This class needs to be notified it is about to be drawn, this will happen automatically\n\t * if you call stage.update, calling stage.draw or disabling tickEnabled will miss important steps and it will render\n\t * stale information.\n\t *\n\t * @memberof easeljs\n\t * @extends DisplayObject\n\t * @param {HTMLElement | String} htmlElement A reference or id for the DOM element to manage.\n\t */\n\n\tclass DOMElement extends DisplayObject {\n\t  constructor(htmlElement) {\n\t    super();\n\n\t    if (typeof htmlElement === \"string\") {\n\t      htmlElement = document.getElementById(htmlElement);\n\t    }\n\n\t    this.mouseEnabled = false;\n\t    let style = htmlElement.style;\n\t    style.position = \"absolute\";\n\t    style.transformOrigin = style.WebkitTransformOrigin = style.msTransformOrigin = style.MozTransformOrigin = style.OTransformOrigin = \"0% 0%\";\n\t    /**\n\t     * The DOM object to manage.\n\t     * @type {HTMLElement}\n\t     */\n\n\t    this.htmlElement = htmlElement;\n\t    /**\n\t     * @type {easeljs.Matrix2D}\n\t     * @default null\n\t     * @protected\n\t     */\n\n\t    this._oldProps = null;\n\t    /**\n\t     * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n\t     * @type {easeljs.Stage}\n\t     * @default null\n\t     * @protected\n\t     */\n\n\t    this._oldStage = null;\n\t    /**\n\t     * The event listener proxy triggered drawing draw for special circumstances.\n\t     * @type {Function}\n\t     * @default null\n\t     * @protected\n\t     */\n\n\t    this._drawAction = null;\n\t  }\n\n\t  isVisible() {\n\t    return this.htmlElement != null;\n\t  }\n\n\t  draw(ctx, ignoreCache) {\n\t    // this relies on the _tick method because draw isn't called if the parent is not visible.\n\t    // the actual update happens in _handleDrawEnd\n\t    return true;\n\t  }\n\t  /**\n\t   * Disabled in DOMElement.\n\t   */\n\n\n\t  cache() {}\n\t  /**\n\t   * Disabled in DOMElement.\n\t   */\n\n\n\t  uncache() {}\n\t  /**\n\t   * Disabled in DOMElement.\n\t   */\n\n\n\t  updateCache() {}\n\t  /**\n\t   * Disabled in DOMElement.\n\t   */\n\n\n\t  hitTest() {}\n\t  /**\n\t   * Disabled in DOMElement.\n\t   */\n\n\n\t  localToGlobal() {}\n\t  /**\n\t   * Disabled in DOMElement.\n\t   */\n\n\n\t  globalToLocal() {}\n\t  /**\n\t   * Disabled in DOMElement.\n\t   */\n\n\n\t  localToLocal() {}\n\t  /**\n\t   * DOMElement cannot be cloned.\n\t   * @throws DOMElement cannot be cloned\n\t   */\n\n\n\t  clone() {\n\t    throw \"DOMElement cannot be cloned.\";\n\t  }\n\n\t  _tick(evtObj) {\n\t    let stage = this.stage;\n\n\t    if (stage != null && stage !== this._oldStage) {\n\t      this._drawAction && stage.off(\"drawend\", this._drawAction);\n\t      this._drawAction = stage.on(\"drawend\", this._handleDrawEnd, this);\n\t      this._oldStage = stage;\n\t    }\n\n\t    super._tick(evtObj);\n\t  }\n\t  /**\n\t   * @param {core.Event} evt\n\t   * @protected\n\t   */\n\n\n\t  _handleDrawEnd(evt) {\n\t    let o = this.htmlElement;\n\n\t    if (!o) {\n\t      return;\n\t    }\n\n\t    let style = o.style;\n\t    let props = this.getConcatenatedDisplayProps(this._props),\n\t        mtx = props.matrix;\n\t    let visibility = props.visible ? \"visible\" : \"hidden\";\n\n\t    if (visibility != style.visibility) {\n\t      style.visibility = visibility;\n\t    }\n\n\t    if (!props.visible) {\n\t      return;\n\t    }\n\n\t    let oldProps = this._oldProps,\n\t        oldMtx = oldProps && oldProps.matrix;\n\t    let n = 10000; // precision\n\n\t    if (!oldMtx || !oldMtx.equals(mtx)) {\n\t      let str = \"matrix(\" + (mtx.a * n | 0) / n + \",\" + (mtx.b * n | 0) / n + \",\" + (mtx.c * n | 0) / n + \",\" + (mtx.d * n | 0) / n + \",\" + (mtx.tx + 0.5 | 0);\n\t      style.transform = style.WebkitTransform = style.OTransform = style.msTransform = str + \",\" + (mtx.ty + 0.5 | 0) + \")\";\n\t      style.MozTransform = str + \"px,\" + (mtx.ty + 0.5 | 0) + \"px)\";\n\n\t      if (!oldProps) {\n\t        oldProps = this._oldProps = new DisplayProps(true, null);\n\t      }\n\n\t      oldProps.matrix.copy(mtx);\n\t    }\n\n\t    if (oldProps.alpha != props.alpha) {\n\t      style.opacity = \"\" + (props.alpha * n | 0) / n;\n\t      oldProps.alpha = props.alpha;\n\t    }\n\t  }\n\n\t}\n\t/**\n\t * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n\t * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n\t * @event easeljs.DOMElement#click\n\t */\n\n\t/**\n\t * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n\t * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n\t * @event easeljs.DOMElement#dblClick\n\t */\n\n\t/**\n\t * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n\t * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n\t * @event easeljs.DOMElement#mousedown\n\t */\n\n\t/**\n\t * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n\t * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n\t * @event easeljs.DOMElement#mouseover\n\t */\n\n\t/**\n\t * Disabled in DOMElement.\n\t * @event easeljs.DOMElement#tick\n\t */\n\n\t/**\n\t * @license Graphics\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * The Graphics class exposes an easy to use API for generating vector drawing instructions and drawing them to a\n\t * specified context. Note that you can use Graphics without any dependency on the EaselJS framework by calling {@link easeljs.Graphics#draw}\n\t * directly, or it can be used with the {@link easeljs.Shape} object to draw vector graphics within the\n\t * context of an EaselJS display list.\n\t *\n\t * There are two approaches to working with Graphics object: calling methods on a Graphics instance (the \"Graphics API\"), or\n\t * instantiating Graphics command objects and adding them to the graphics queue via {@link easeljs.Graphics#append}.\n\t * The former abstracts the latter, simplifying beginning and ending paths, fills, and strokes.\n\t *\n\t * <h4>Tiny API</h4>\n\t * The Graphics class also includes a \"tiny API\", which is one or two-letter methods that are shortcuts for all of the\n\t * Graphics methods. These methods are great for creating compact instructions, and is used by the Toolkit for CreateJS\n\t * to generate readable code. All tiny methods are marked as protected, so you can view them by enabling protected\n\t * descriptions in the docs.\n\t *\n\t * <table>\n\t *     <tr><td><b>Tiny</b></td><td><b>Method</b></td><td><b>Tiny</b></td><td><b>Method</b></td></tr>\n\t *     <tr><td>mt</td><td>{@link easeljs.Graphics#moveTo}</td>\n\t *     <td>lt</td> <td>{@link easeljs.Graphics#lineTo}</td></tr>\n\t *     <tr><td>a/at</td><td>{@link easeljs.Graphics#arc} / {@link easeljs.Graphics#arcTo}</td>\n\t *     <td>bt</td><td>{@link easeljs.Graphics#bezierCurveTo}</td></tr>\n\t *     <tr><td>qt</td><td>{@link easeljs.Graphics#quadraticCurveTo} (also curveTo)</td>\n\t *     <td>r</td><td>{@link easeljs.Graphics#rect}</td></tr>\n\t *     <tr><td>cp</td><td>{@link easeljs.Graphics#closePath}</td>\n\t *     <td>c</td><td>{@link easeljs.Graphics#clear}</td></tr>\n\t *     <tr><td>f</td><td>{@link easeljs.Graphics#beginFill}</td>\n\t *     <td>lf</td><td>{@link easeljs.Graphics#beginLinearGradientFill}</td></tr>\n\t *     <tr><td>rf</td><td>{@link easeljs.Graphics#beginRadialGradientFill}</td>\n\t *     <td>bf</td><td>{@link easeljs.Graphics#beginBitmapFill}</td></tr>\n\t *     <tr><td>ef</td><td>{@link easeljs.Graphics#endFill}</td>\n\t *     <td>ss / sd</td><td>{@link easeljs.Graphics#setStrokeStyle} / {@link easeljs.Graphics#setStrokeDash}</td></tr>\n\t *     <tr><td>s</td><td>{@link easeljs.Graphics#beginStroke}</td>\n\t *     <td>ls</td><td>{@link easeljs.Graphics#beginLinearGradientStroke}</td></tr>\n\t *     <tr><td>rs</td><td>{@link easeljs.Graphics#beginRadialGradientStroke}</td>\n\t *     <td>bs</td><td>{@link easeljs.Graphics#beginBitmapStroke}</td></tr>\n\t *     <tr><td>es</td><td>{@link easeljs.Graphics#endStroke}</td>\n\t *     <td>dr</td><td>{@link easeljs.Graphics#drawRect}</td></tr>\n\t *     <tr><td>rr</td><td>{@link easeljs.Graphics#drawRoundRect}</td>\n\t *     <td>rc</td><td>{@link easeljs.Graphics#drawRoundRectComplex}</td></tr>\n\t *     <tr><td>dc</td><td>{@link easeljs.Graphics#drawCircle}</td>\n\t *     <td>de</td><td>{@link easeljs.Graphics#drawEllipse}</td></tr>\n\t *     <tr><td>dp</td><td>{@link easeljs.Graphics#drawPolyStar}</td>\n\t *     <td>p</td><td>{@link easeljs.Graphics#decodePath}</td></tr>\n\t * </table>\n\t *\n\t * @example\n\t * var g = new createjs.Graphics();\n\t * g.setStrokeStyle(1);\n\t * g.beginStroke(\"#000000\");\n\t * g.beginFill(\"red\");\n\t * g.drawCircle(0,0,30);\n\t *\n\t * @example\n\t * // All drawing methods in Graphics return the Graphics instance, so they can be chained together.\n\t * graphics.beginStroke(\"red\").beginFill(\"blue\").drawRect(20, 20, 100, 50);\n\t *\n\t * @example\n\t * // Each graphics API call generates a command object (see below). The last command to be created can be accessed via .command\n\t * let fillCommand = graphics.beginFill(\"red\").command;\n\t * fillCommand.style = \"blue\";\n\t * // or change it to a bitmap fill:\n\t * fillCommand.bitmap(img);\n\t *\n\t * @example\n\t * // For more direct control of rendering, you can instantiate and append command objects to the graphics queue directly.\n\t * // In this case, you need to manage path creation manually, and ensure that fill/stroke is applied to a defined path:\n\t *\n\t * // start a new path. Graphics.beginCmd is a reusable BeginPath instance:\n\t * graphics.append(Graphics.beginCmd);\n\t * // we need to define the path before applying the fill:\n\t * let circle = new Graphics.Circle(0,0,30);\n\t * graphics.append(circle);\n\t * // fill the path we just defined:\n\t * let fill = new Graphics.Fill(\"red\");\n\t * graphics.append(fill);\n\t *\n\t * // These approaches can be used together, for example to insert a custom command:\n\t * graphics.beginFill(\"red\");\n\t * let customCommand = new CustomSpiralCommand(etc);\n\t * graphics.append(customCommand);\n\t * graphics.beginFill(\"blue\");\n\t * graphics.drawCircle(0, 0, 30);\n\t *\n\t * @example <caption>Using the Tiny API</caption>\n\t * graphics.s(\"red\").f(\"blue\").r(20, 20, 100, 50);\n\t *\n\t * @see {@link easeljs.Graphics#append}\n\t * @memberof easeljs\n\t */\n\n\tclass Graphics {\n\t  constructor() {\n\t    /**\n\t     * Holds a reference to the last command that was created or appended. For example, you could retain a reference\n\t     * to a Fill command in order to dynamically update the color later by using:\n\t     *\n\t     * @example\n\t     * let fill = graphics.beginFill(\"red\").command;\n\t     * // update color later:\n\t     * fill.style = \"yellow\";\n\t     *\n\t     * @type {Object}\n\t     * @default null\n\t     */\n\t    this.command = null; // private properties\n\n\t    /**\n\t     * @protected\n\t     * @type {easeljs.Graphics.Stroke}\n\t     */\n\n\t    this._stroke = null;\n\t    /**\n\t     * @protected\n\t     * @type {easeljs.Graphics.StrokeStyle}\n\t     */\n\n\t    this._strokeStyle = null;\n\t    /**\n\t     * @protected\n\t     * @type {easeljs.Graphics.StrokeStyle}\n\t     */\n\n\t    this._oldStrokeStyle = null;\n\t    /**\n\t     * @protected\n\t     * @type {easeljs.Graphics.StrokeDash}\n\t     */\n\n\t    this._strokeDash = null;\n\t    /**\n\t     * @protected\n\t     * @type {easeljs.Graphics.StrokeDash}\n\t     */\n\n\t    this._oldStrokeDash = null;\n\t    /**\n\t     * @protected\n\t     * @type {easeljs.Graphics.Fill}\n\t     */\n\n\t    this._fill = null;\n\t    /**\n\t     * @protected\n\t     * @type {Boolean}\n\t     */\n\n\t    this._strokeIgnoreScale = false;\n\t    /**\n\t     * Indicates the last instruction index that was committed.\n\t     * @protected\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this._commitIndex = 0;\n\t    /**\n\t     * @protected\n\t     * @type {Array}\n\t     */\n\n\t    this._instructions = [];\n\t    /**\n\t     * Uncommitted instructions.\n\t     * @protected\n\t     * @type {Array}\n\t     */\n\n\t    this._activeInstructions = [];\n\t    /**\n\t     * This indicates that there have been changes to the activeInstruction list since the last updateInstructions call.\n\t     * @protected\n\t     * @type {Boolean}\n\t     * @default false\n\t     */\n\n\t    this._dirty = false;\n\t    /**\n\t     * Index to draw from if a store operation has happened.\n\t     * @protected\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this._storeIndex = 0;\n\t    /**\n\t     * Maps the familiar ActionScript `curveTo()` method to the functionally similar {@link easeljs.Graphics#quadraticCurveTo} method.\n\t     * @param {Number} cpx\n\t     * @param {Number} cpy\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t     * @chainable\n\t     */\n\n\t    this.curveTo = this.quadraticCurveTo;\n\t    /**\n\t     * Maps the familiar ActionScript `drawRect()` method to the functionally similar {@link easeljs.Graphics#rect} method.\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     * @param {Number} w Width of the rectangle\n\t     * @param {Number} h Height of the rectangle\n\t     * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t     * @chainable\n\t     */\n\n\t    this.drawRect = this.rect; // tiny api\n\n\t    this.mt = this.moveTo;\n\t    this.lt = this.lineTo;\n\t    this.at = this.arcTo;\n\t    this.bt = this.bezierCurveTo;\n\t    this.qt = this.quadraticCurveTo;\n\t    this.a = this.arc;\n\t    this.r = this.rect;\n\t    this.cp = this.closePath;\n\t    this.c = this.clear;\n\t    this.f = this.beginFill;\n\t    this.lf = this.beginLinearGradientFill;\n\t    this.rf = this.beginRadialGradientFill;\n\t    this.bf = this.beginBitmapFill;\n\t    this.ef = this.endFill;\n\t    this.ss = this.setStrokeStyle;\n\t    this.sd = this.setStrokeDash;\n\t    this.s = this.beginStroke;\n\t    this.ls = this.beginLinearGradientStroke;\n\t    this.rs = this.beginRadialGradientStroke;\n\t    this.bs = this.beginBitmapStroke;\n\t    this.es = this.endStroke;\n\t    this.dr = this.drawRect;\n\t    this.rr = this.drawRoundRect;\n\t    this.rc = this.drawRoundRectComplex;\n\t    this.dc = this.drawCircle;\n\t    this.de = this.drawEllipse;\n\t    this.dp = this.drawPolyStar;\n\t    this.p = this.decodePath;\n\t    this.clear();\n\t  }\n\t  /**\n\t   * Returns a CSS compatible color string based on the specified RGB numeric color values in the format\n\t   * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n\t   * It also supports passing a single hex color value as the first param, and an optional alpha value as the second\n\t   * param.\n\t   *\n\t   * @example\n\t   * Graphics.getRGB(50, 100, 150, 0.5); // rgba(50,100,150,0.5)\n\t   * Graphics.getRGB(0xFF00FF, 0.2); // rgba(255,0,255,0.2)\n\t   *\n\t   * @static\n\t   * @param {Number} r The red component for the color, between 0 and 0xFF (255).\n\t   * @param {Number} g The green component for the color, between 0 and 0xFF (255).\n\t   * @param {Number} b The blue component for the color, between 0 and 0xFF (255).\n\t   * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t   * @return {String} A CSS compatible color string based on the specified RGB numeric color values in the format\n\t   * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n\t   */\n\n\n\t  static getRGB(r, g, b, alpha) {\n\t    if (r != null && b == null) {\n\t      alpha = g;\n\t      b = r & 0xFF;\n\t      g = r >> 8 & 0xFF;\n\t      r = r >> 16 & 0xFF;\n\t    }\n\n\t    if (alpha == null) {\n\t      return `rgb(${r},${g},${b})`;\n\t    } else {\n\t      return `rgba(${r},${g},${b},${alpha})`;\n\t    }\n\t  }\n\t  /**\n\t   * Returns a CSS compatible color string based on the specified HSL numeric color values in the format \"hsla(360,100,100,1.0)\",\n\t   * or if alpha is null then in the format \"hsl(360,100,100)\".\n\t   *\n\t   * @example\n\t   * Graphics.getHSL(150, 100, 70); // hsl(150,100,70)\n\t   *\n\t   * @static\n\t   * @param {Number} hue The hue component for the color, between 0 and 360.\n\t   * @param {Number} saturation The saturation component for the color, between 0 and 100.\n\t   * @param {Number} lightness The lightness component for the color, between 0 and 100.\n\t   * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t   * @return {String} A CSS compatible color string based on the specified HSL numeric color values in the format\n\t   * \"hsla(360,100,100,1.0)\", or if alpha is null then in the format \"hsl(360,100,100)\".\n\t   */\n\n\n\t  static getHSL(hue, saturation, lightness, alpha) {\n\t    if (alpha == null) {\n\t      return `hsl(${hue % 360},${saturation}%,${lightness}%)`;\n\t    } else {\n\t      return `hsl(${hue % 360},${saturation}%,${lightness}%,${alpha})`;\n\t    }\n\t  }\n\t  /**\n\t   * Returns the graphics instructions array. Each entry is a graphics command object (ex. Graphics.Fill, Graphics.Rect)\n\t   * Modifying the returned array directly is not recommended, and is likely to result in unexpected behaviour.\n\t   *\n\t   * This property is mainly intended for introspection of the instructions (ex. for graphics export).\n\t   * @type {Array}\n\t   * @readonly\n\t   */\n\n\n\t  get instructions() {\n\t    this._updateInstructions();\n\n\t    return this._instructions;\n\t  }\n\t  /**\n\t   * Returns true if this Graphics instance has no drawing commands.\n\t   * @return {Boolean} Returns true if this Graphics instance has no drawing commands.\n\t   */\n\n\n\t  isEmpty() {\n\t    return !(this._instructions.length || this._activeInstructions.length);\n\t  }\n\t  /**\n\t   * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t   * Returns true if the draw was handled (useful for overriding functionality).\n\t   *\n\t   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t   *\n\t   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t   * @param {Object} data Optional data that is passed to graphics command exec methods. When called from a Shape instance, the shape passes itself as the data parameter. This can be used by custom graphic commands to insert contextual data.\n\t   */\n\n\n\t  draw(ctx, data) {\n\t    this._updateInstructions();\n\n\t    let instr = this._instructions;\n\t    const l = instr.length;\n\n\t    for (let i = this._storeIndex; i < l; i++) {\n\t      instr[i].exec(ctx, data);\n\t    }\n\t  }\n\t  /**\n\t   * Draws only the path described for this Graphics instance, skipping any non-path instructions, including fill and\n\t   * stroke descriptions. Used for `DisplayObject.mask` to draw the clipping path, for example.\n\t   *\n\t   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t   *\n\t   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t   */\n\n\n\t  drawAsPath(ctx) {\n\t    this._updateInstructions();\n\n\t    let instr,\n\t        instrs = this._instructions;\n\t    const l = instrs.length;\n\n\t    for (let i = this._storeIndex; i < l; i++) {\n\t      // the first command is always a beginPath command.\n\t      if ((instr = instrs[i]).path !== false) {\n\t        instr.exec(ctx);\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Moves the drawing point to the specified position.\n\t   * A tiny API method \"mt\" also exists.\n\t   * @param {Number} x The x coordinate the drawing point should move to.\n\t   * @param {Number} y The y coordinate the drawing point should move to.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls).\n\t   * @chainable\n\t   */\n\n\n\t  moveTo(x, y) {\n\t    return this.append(new MoveTo(x, y), true);\n\t  }\n\t  /**\n\t   * Draws a line from the current drawing point to the specified position, which become the new current drawing\n\t   * point. Note that you *must* call {@link easeljs.Graphics#moveTo} before the first `lineTo()`.\n\t   * A tiny API method \"lt\" also exists.\n\t   * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#complex-shapes-(paths) \"WHATWG spec\"}\n\t   * @param {Number} x The x coordinate the drawing point should draw to.\n\t   * @param {Number} y The y coordinate the drawing point should draw to.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  lineTo(x, y) {\n\t    return this.append(new LineTo(x, y));\n\t  }\n\t  /**\n\t   * Draws an arc with the specified control points and radius.\n\t   * A tiny API method \"at\" also exists.\n\t   * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arcto \"WHATWG spec\"}\n\t   * @param {Number} x1\n\t   * @param {Number} y1\n\t   * @param {Number} x2\n\t   * @param {Number} y2\n\t   * @param {Number} radius\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  arcTo(x1, y1, x2, y2, radius) {\n\t    return this.append(new ArcTo(x1, y1, x2, y2, radius));\n\t  }\n\t  /**\n\t   * Draws an arc defined by the radius, startAngle and endAngle arguments, centered at the position (x, y).\n\t   * A tiny API method \"a\" also exists.\n\t   *\n\t   * @example\n\t   * // draw a full circle with a radius of 20 centered at (100, 100)\n\t   * arc(100, 100, 20, 0, Math.PI*2);\n\t   *\n\t   * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arc \"WHATWG spec\"}\n\t   * @param {Number} x\n\t   * @param {Number} y\n\t   * @param {Number} radius\n\t   * @param {Number} startAngle Measured in radians.\n\t   * @param {Number} endAngle Measured in radians.\n\t   * @param {Boolean} anticlockwise\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  arc(x, y, radius, startAngle, endAngle, anticlockwise) {\n\t    return this.append(new Arc(x, y, radius, startAngle, endAngle, anticlockwise));\n\t  }\n\t  /**\n\t   * Draws a quadratic curve from the current drawing point to (x, y) using the control point (cpx, cpy).\n\t   * A tiny API method \"qt\" also exists.\n\t   * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-quadraticcurveto \"WHATWG spec\"}\n\t   * @param {Number} cpx\n\t   * @param {Number} cpy\n\t   * @param {Number} x\n\t   * @param {Number} y\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  quadraticCurveTo(cpx, cpy, x, y) {\n\t    return this.append(new QuadraticCurveTo(cpx, cpy, x, y));\n\t  }\n\t  /**\n\t   * Draws a bezier curve from the current drawing point to (x, y) using the control points (cp1x, cp1y) and (cp2x, cp2y).\n\t   * A tiny API method \"bt\" also exists.\n\t   * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-beziercurveto \"WHATWG spec\"}\n\t   * @param {Number} cp1x\n\t   * @param {Number} cp1y\n\t   * @param {Number} cp2x\n\t   * @param {Number} cp2y\n\t   * @param {Number} x\n\t   * @param {Number} y\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n\t    return this.append(new BezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y));\n\t  }\n\t  /**\n\t   * Draws a rectangle at (x, y) with the specified width and height using the current fill and/or stroke.\n\t   * A tiny API method \"r\" also exists.\n\t   * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-rect \"WHATWG spec\"}\n\t   * @param {Number} x\n\t   * @param {Number} y\n\t   * @param {Number} w Width of the rectangle\n\t   * @param {Number} h Height of the rectangle\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  rect(x, y, w, h) {\n\t    return this.append(new Rect(x, y, w, h));\n\t  }\n\t  /**\n\t   * Closes the current path, effectively drawing a line from the current drawing point to the first drawing point specified\n\t   * since the fill or stroke was last set.\n\t   * A tiny API method \"cp\" also exists.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  closePath() {\n\t    return this._activeInstructions.length ? this.append(new ClosePath()) : this;\n\t  }\n\t  /**\n\t   * Clears all drawing instructions, effectively resetting this Graphics instance. Any line and fill styles will need\n\t   * to be redefined to draw shapes following a clear call.\n\t   * A tiny API method \"c\" also exists.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  clear() {\n\t    this._instructions.length = this._activeInstructions.length = this._commitIndex = 0;\n\t    this._strokeStyle = this._oldStrokeStyle = this._stroke = this._fill = this._strokeDash = this._oldStrokeDash = null;\n\t    this._dirty = this._strokeIgnoreScale = false;\n\t    return this;\n\t  }\n\t  /**\n\t   * Begins a fill with the specified color. This ends the current sub-path.\n\t   * A tiny API method \"f\" also exists.\n\t   * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t   * null will result in no fill.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  beginFill(color) {\n\t    return this._setFill(color ? new Fill(color) : null);\n\t  }\n\t  /**\n\t   * Begins a linear gradient fill defined by the line (x0, y0) to (x1, y1).\n\t   * A tiny API method \"lf\" also exists.\n\t   *\n\t   * @example <caption>Define a black to white vertical gradient ranging from 20px to 120px, and draw a square to display it</caption>\n\t   * graphics.beginLinearGradientFill([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\t   *\n\t   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n\t   * drawing from red to blue.\n\t   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n\t   * the first color to 10% then interpolating to the second color at 90%.\n\t   * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t   * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t   * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t   * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  beginLinearGradientFill(colors, ratios, x0, y0, x1, y1) {\n\t    return this._setFill(new Fill().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t  }\n\t  /**\n\t   * Begins a radial gradient fill. This ends the current sub-path.\n\t   * A tiny API method \"rf\" also exists.\n\t   *\n\t   * @example <caption>Define a red to blue radial gradient centered at (100, 100), with a radius of 50, and draw a circle to display it</caption>\n\t   * graphics.beginRadialGradientFill([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50).drawCircle(100, 100, 50);\n\t   *\n\t   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t   * a gradient drawing from red to blue.\n\t   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t   * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t   * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t   * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t   * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t   * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t   * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t   * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  beginRadialGradientFill(colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t    return this._setFill(new Fill().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t  }\n\t  /**\n\t   * Begins a pattern fill using the specified image. This ends the current sub-path.\n\t   * A tiny API method \"bf\" also exists.\n\t   * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t   * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t   * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\t   * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\t   * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n\t   * @param {easeljs.Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n\t   * will be applied relative to the parent transform.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  beginBitmapFill(image, repetition, matrix) {\n\t    return this._setFill(new Fill(null, matrix).bitmap(image, repetition));\n\t  }\n\t  /**\n\t   * Ends the current sub-path, and begins a new one with no fill. Functionally identical to `beginFill(null)`.\n\t   * A tiny API method \"ef\" also exists.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  endFill() {\n\t    return this.beginFill();\n\t  }\n\t  /**\n\t   * Sets the stroke style.\n\t   * A tiny API method \"ss\" also exists.\n\t   *\n\t   * @example\n\t   * graphics.setStrokeStyle(8,\"round\").beginStroke(\"#F00\");\n\t   *\n\t   * @param {Number} thickness The width of the stroke.\n\t   * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n\t   * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n\t   * the tiny API.\n\t   * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n\t   * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n\t   * for use with the tiny API.\n\t   * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n\t   * controls at what point a mitered joint will be clipped.\n\t   * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n\t   * of active transformations.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  setStrokeStyle(thickness, caps = 0, joints = 0, miterLimit = 10, ignoreScale = false) {\n\t    this._updateInstructions(true);\n\n\t    this._strokeStyle = this.command = new StrokeStyle(thickness, caps, joints, miterLimit, ignoreScale); // ignoreScale lives on Stroke, not StrokeStyle, so we do a little trickery:\n\n\t    if (this._stroke) {\n\t      this._stroke.ignoreScale = ignoreScale;\n\t    }\n\n\t    this._strokeIgnoreScale = ignoreScale;\n\t    return this;\n\t  }\n\t  /**\n\t   * Sets or clears the stroke dash pattern.\n\t   * A tiny API method `sd` also exists.\n\t   *\n\t   * @example\n\t   * graphics.setStrokeDash([20, 10], 0);\n\t   *\n\t   * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n\t   * For example, `[20,10]` would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n\t   * Passing null or an empty array will clear the existing stroke dash.\n\t   * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  setStrokeDash(segments, offset = 0) {\n\t    this._updateInstructions(true);\n\n\t    this._strokeDash = this.command = new StrokeDash(segments, offset);\n\t    return this;\n\t  }\n\t  /**\n\t   * Begins a stroke with the specified color. This ends the current sub-path.\n\t   * A tiny API method \"s\" also exists.\n\t   *\n\t   * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t   * null will result in no stroke.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  beginStroke(color) {\n\t    return this._setStroke(color ? new Stroke(color) : null);\n\t  }\n\t  /**\n\t   * Begins a linear gradient stroke defined by the line (x0, y0) to (x1, y1). This ends the current sub-path.\n\t   * A tiny API method \"ls\" also exists.\n\t   *\n\t   * @example <caption>Define a black to white vertical gradient ranging from 20px to 120px, and draw a square to display it</caption>\n\t   * graphics.setStrokeStyle(10)\n\t   *   .beginLinearGradientStroke([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120)\n\t   *   .drawRect(20, 20, 120, 120);\n\t   *\n\t   * @param {Array<String>} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t   * a gradient drawing from red to blue.\n\t   * @param {Array<Number>} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t   * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t   * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t   * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t   * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t   * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  beginLinearGradientStroke(colors, ratios, x0, y0, x1, y1) {\n\t    return this._setStroke(new Stroke().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t  }\n\t  /**\n\t   * Begins a radial gradient stroke. This ends the current sub-path.\n\t   * A tiny API method \"rs\" also exists.\n\t   *\n\t   * @example <caption>Define a red to blue radial gradient centered at (100, 100), with a radius of 50, and draw a rectangle to display it</caption>\n\t   * graphics.setStrokeStyle(10)\n\t   *   .beginRadialGradientStroke([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50)\n\t   *   .drawRect(50, 90, 150, 110);\n\t   *\n\t   * @param {Array<String>} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t   * a gradient drawing from red to blue.\n\t   * @param {Array<Number>} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t   * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n\t   * to 100%.\n\t   * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t   * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t   * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t   * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t   * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t   * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  beginRadialGradientStroke(colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t    return this._setStroke(new Stroke().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t  }\n\t  /**\n\t   * Begins a pattern fill using the specified image. This ends the current sub-path. Note that unlike bitmap fills,\n\t   * strokes do not currently support a matrix parameter due to limitations in the canvas API.\n\t   * A tiny API method \"bs\" also exists.\n\t   *\n\t   * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t   * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t   * @param {String} [repetition=\"repeat\"] Indicates whether to repeat the image in the fill area. One of\n\t   * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  beginBitmapStroke(image, repetition = \"repeat\") {\n\t    // NOTE: matrix is not supported for stroke because transforms on strokes also affect the drawn stroke width.\n\t    return this._setStroke(new Stroke().bitmap(image, repetition));\n\t  }\n\t  /**\n\t   * Ends the current sub-path, and begins a new one with no stroke. Functionally identical to `beginStroke(null)`.\n\t   * A tiny API method \"es\" also exists.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  endStroke() {\n\t    return this.beginStroke();\n\t  }\n\t  /**\n\t   * Draws a rounded rectangle with all corners with the specified radius.\n\t   * @param {Number} x\n\t   * @param {Number} y\n\t   * @param {Number} w\n\t   * @param {Number} h\n\t   * @param {Number} radius Corner radius.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  drawRoundRect(x, y, w, h, radius) {\n\t    return this.drawRoundRectComplex(x, y, w, h, radius, radius, radius, radius);\n\t  }\n\t  /**\n\t   * Draws a rounded rectangle with different corner radii. Supports positive and negative corner radii.\n\t   * A tiny API method \"rc\" also exists.\n\t   * @param {Number} x The horizontal coordinate to draw the round rect.\n\t   * @param {Number} y The vertical coordinate to draw the round rect.\n\t   * @param {Number} w The width of the round rect.\n\t   * @param {Number} h The height of the round rect.\n\t   * @param {Number} radiusTL Top left corner radius.\n\t   * @param {Number} radiusTR Top right corner radius.\n\t   * @param {Number} radiusBR Bottom right corner radius.\n\t   * @param {Number} radiusBL Bottom left corner radius.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  drawRoundRectComplex(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t    return this.append(new RoundRect(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL));\n\t  }\n\t  /**\n\t   * Draws a circle with the specified radius at (x, y).\n\t   * A tiny API method \"dc\" also exists.\n\t   *\n\t   * @example\n\t   * let g = new Graphics();\n\t   * g.setStrokeStyle(1);\n\t   * g.beginStroke(Graphics.getRGB(0,0,0));\n\t   * g.beginFill(Graphics.getRGB(255,0,0));\n\t   * g.drawCircle(0,0,3);\n\t   * let s = new Shape(g);\n\t   * s.x = 100;\n\t   * s.y = 100;\n\t   * stage.addChild(s);\n\t   * stage.update();\n\t   *\n\t   * @param {Number} x x coordinate center point of circle.\n\t   * @param {Number} y y coordinate center point of circle.\n\t   * @param {Number} radius Radius of circle.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  drawCircle(x, y, radius) {\n\t    return this.append(new Circle(x, y, radius));\n\t  }\n\t  /**\n\t   * Draws an ellipse (oval) with a specified width (w) and height (h). Similar to {@link easels.Graphics#drawCircle},\n\t   * except the width and height can be different.\n\t   * A tiny API method \"de\" also exists.\n\t   * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {@link easels.Graphics#drawCircle}\n\t   * which draws from center.\n\t   * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {@link easels.Graphics#drawCircle}\n\t   * which draws from the center.\n\t   * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n\t   * number.\n\t   * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  drawEllipse(x, y, w, h) {\n\t    return this.append(new Ellipse(x, y, w, h));\n\t  }\n\t  /**\n\t   * Draws a star if pointSize is greater than 0, or a regular polygon if pointSize is 0 with the specified number of points.\n\t   * A tiny API method \"dp\" also exists.\n\t   *\n\t   * @example <caption>Draw a 5 pointed star shape centered at 100, 100 and with a radius of 50</caption>\n\t   * graphics.beginFill(\"#FF0\").drawPolyStar(100, 100, 50, 5, 0.6, -90);\n\t   * // Note: -90 makes the first point vertical\n\t   *\n\t   * @param {Number} x Position of the center of the shape.\n\t   * @param {Number} y Position of the center of the shape.\n\t   * @param {Number} radius The outer radius of the shape.\n\t   * @param {Number} sides The number of points on the star or sides on the polygon.\n\t   * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n\t   * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n\t   * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n\t   * directly to the right of the center.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  drawPolyStar(x, y, radius, sides, pointSize, angle) {\n\t    return this.append(new PolyStar(x, y, radius, sides, pointSize, angle));\n\t  }\n\t  /**\n\t   * Appends a graphics command object to the graphics queue. Command objects expose an \"exec\" method\n\t   * that accepts two parameters: the Context2D to operate on, and an arbitrary data object passed into\n\t   * {@link easeljs.Graphics#draw}. The latter will usually be the Shape instance that called draw.\n\t   *\n\t   * This method is used internally by Graphics methods, such as drawCircle, but can also be used directly to insert\n\t   * built-in or custom graphics commands.\n\t   *\n\t   * @example\n\t   * // attach data to our shape, so we can access it during the draw:\n\t   * shape.color = \"red\";\n\t   *\n\t   * // append a Circle command object:\n\t   * shape.graphics.append(new Graphics.Circle(50, 50, 30));\n\t   *\n\t   * // append a custom command object with an exec method that sets the fill style\n\t   * // based on the shape's data, and then fills the circle.\n\t   * shape.graphics.append({\n\t   *   exec: (ctx, shape) => {\n\t   *     ctx.fillStyle = shape.color;\n\t   *     ctx.fill();\n\t   *   }\n\t   * });\n\t   *\n\t   * @param {Object} command A graphics command object exposing an \"exec\" method.\n\t   * @param {Boolean} clean The clean param is primarily for internal use. A value of true indicates that a command does not generate a path that should be stroked or filled.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  append(command, clean) {\n\t    this._activeInstructions.push(command);\n\n\t    this.command = command;\n\n\t    if (!clean) {\n\t      this._dirty = true;\n\t    }\n\n\t    return this;\n\t  }\n\t  /**\n\t   * Decodes a compact encoded path string into a series of draw instructions.\n\t   * This format is not intended to be human readable, and is meant for use by authoring tools.\n\t   * The format uses a base64 character set, with each character representing 6 bits, to define a series of draw\n\t   * commands.\n\t   *\n\t   * Each command is comprised of a single \"header\" character followed by a variable number of alternating x and y\n\t   * position values. Reading the header bits from left to right (most to least significant): bits 1 to 3 specify the\n\t   * type of operation (0-moveTo, 1-lineTo, 2-quadraticCurveTo, 3-bezierCurveTo, 4-closePath, 5-7 unused). Bit 4\n\t   * indicates whether position values use 12 bits (2 characters) or 18 bits (3 characters), with a one indicating the\n\t   * latter. Bits 5 and 6 are currently unused.\n\t   *\n\t   * Following the header is a series of 0 (closePath), 2 (moveTo, lineTo), 4 (quadraticCurveTo), or 6 (bezierCurveTo)\n\t   * parameters. These parameters are alternating x/y positions represented by 2 or 3 characters (as indicated by the\n\t   * 4th bit in the command char). These characters consist of a 1 bit sign (1 is negative, 0 is positive), followed\n\t   * by an 11 (2 char) or 17 (3 char) bit integer value. All position values are in tenths of a pixel. Except in the\n\t   * case of move operations which are absolute, this value is a delta from the previous x or y position (as\n\t   * appropriate).\n\t   *\n\t   * For example, the string \"A3cAAMAu4AAA\" represents a line starting at -150,0 and ending at 150,0.\n\t   * <br />A - bits 000000. First 3 bits (000) indicate a moveTo operation. 4th bit (0) indicates 2 chars per\n\t   * parameter.\n\t   * <br />n0 - 110111011100. Absolute x position of -150.0px. First bit indicates a negative value, remaining bits\n\t   * indicate 1500 tenths of a pixel.\n\t   * <br />AA - 000000000000. Absolute y position of 0.\n\t   * <br />I - 001100. First 3 bits (001) indicate a lineTo operation. 4th bit (1) indicates 3 chars per parameter.\n\t   * <br />Au4 - 000000101110111000. An x delta of 300.0px, which is added to the previous x value of -150.0px to\n\t   * provide an absolute position of +150.0px.\n\t   * <br />AAA - 000000000000000000. A y delta value of 0.\n\t   *\n\t   * A tiny API method \"p\" also exists.\n\t   *\n\t   * @param {String} str The path string to decode.\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  decodePath(str) {\n\t    let instructions = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath];\n\t    let paramCount = [2, 2, 4, 6, 0];\n\t    let i = 0;\n\t    const l = str.length;\n\t    let params = [];\n\t    let x = 0,\n\t        y = 0;\n\t    let base64 = Graphics._BASE_64;\n\n\t    while (i < l) {\n\t      let c = str.charAt(i);\n\t      let n = base64[c];\n\t      let fi = n >> 3; // highest order bits 1-3 code for operation.\n\n\t      let f = instructions[fi]; // check that we have a valid instruction & that the unused bits are empty:\n\n\t      if (!f || n & 3) {\n\t        throw `Bad path data (@${i}):c`;\n\t      }\n\n\t      const pl = paramCount[fi];\n\n\t      if (!fi) {\n\t        x = y = 0;\n\t      } // move operations reset the position.\n\n\n\t      params.length = 0;\n\t      i++;\n\t      let charCount = (n >> 2 & 1) + 2; // 4th header bit indicates number size for this operation.\n\n\t      for (let p = 0; p < pl; p++) {\n\t        let num = base64[str.charAt(i)];\n\t        let sign = num >> 5 ? -1 : 1;\n\t        num = (num & 31) << 6 | base64[str.charAt(i + 1)];\n\n\t        if (charCount === 3) {\n\t          num = num << 6 | base64[str.charAt(i + 2)];\n\t        }\n\n\t        num = sign * num / 10;\n\n\t        if (p % 2) {\n\t          x = num += x;\n\t        } else {\n\t          y = num += y;\n\t        }\n\n\t        params[p] = num;\n\t        i += charCount;\n\t      }\n\n\t      f.apply(this, params);\n\t    }\n\n\t    return this;\n\t  }\n\t  /**\n\t   * Stores all graphics commands so they won't be executed in future draws. Calling store() a second time adds to\n\t   * the existing store. This also affects `drawAsPath()`.\n\t   *\n\t   * This is useful in cases where you are creating vector graphics in an iterative manner (ex. generative art), so\n\t   * that only new graphics need to be drawn (which can provide huge performance benefits), but you wish to retain all\n\t   * of the vector instructions for later use (ex. scaling, modifying, or exporting).\n\t   *\n\t   * Note that calling store() will force the active path (if any) to be ended in a manner similar to changing\n\t   * the fill or stroke.\n\t   *\n\t   * For example, consider a application where the user draws lines with the mouse. As each line segment (or collection of\n\t   * segments) are added to a Shape, it can be rasterized using {@link easeljs.DisplayObject#updateCache},\n\t   * and then stored, so that it can be redrawn at a different scale when the application is resized, or exported to SVGraphics.\n\t   *\n\t   * @example\n\t   * // set up cache:\n\t   * shape.cache(0,0,500,500,scale);\n\t   *\n\t   * // when the user drags, draw a new line:\n\t   * shape.graphics.moveTo(oldX,oldY).lineTo(newX,newY);\n\t   * // then draw it into the existing cache:\n\t   * shape.updateCache(\"source-over\");\n\t   * // store the new line, so it isn't redrawn next time:\n\t   * shape.store();\n\t   *\n\t   * // then, when the window resizes, we can re-render at a different scale:\n\t   * // first, unstore all our lines:\n\t   * shape.unstore();\n\t   * // then cache using the new scale:\n\t   * shape.cache(0,0,500,500,newScale);\n\t   * // finally, store the existing commands again:\n\t   * shape.store();\n\t   *\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  store() {\n\t    this._updateInstructions(true);\n\n\t    this._storeIndex = this._instructions.length;\n\t    return this;\n\t  }\n\t  /**\n\t   * Unstores any graphics commands that were previously stored using {@link easeljs.Graphics#store}\n\t   * so that they will be executed in subsequent draw calls.\n\t   *\n\t   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  unstore() {\n\t    this._storeIndex = 0;\n\t    return this;\n\t  }\n\t  /**\n\t   * Returns a clone of this Graphics instance. Note that the individual command objects are not cloned.\n\t   * @return {easeljs.Graphics} A clone of the current Graphics instance.\n\t   */\n\n\n\t  clone() {\n\t    let o = new Graphics();\n\t    o.command = this.command;\n\t    o._stroke = this._stroke;\n\t    o._strokeStyle = this._strokeStyle;\n\t    o._strokeDash = this._strokeDash;\n\t    o._strokeIgnoreScale = this._strokeIgnoreScale;\n\t    o._fill = this._fill;\n\t    o._instructions = this._instructions.slice();\n\t    o._commitIndex = this._commitIndex;\n\t    o._activeInstructions = this._activeInstructions.slice();\n\t    o._dirty = this._dirty;\n\t    o._storeIndex = this._storeIndex;\n\t    return o;\n\t  }\n\t  /**\n\t   * Returns a string representation of this object.\n\t   * @return {String} a string representation of the instance.\n\t   */\n\n\n\t  toString() {\n\t    return `[${this.constructor.name}]`;\n\t  }\n\t  /**\n\t   * @param {Boolean} commit\n\t   * @protected\n\t   */\n\n\n\t  _updateInstructions(commit) {\n\t    let instr = this._instructions,\n\t        active = this._activeInstructions,\n\t        commitIndex = this._commitIndex;\n\n\t    if (this._dirty && active.length) {\n\t      instr.length = commitIndex; // remove old, uncommitted commands\n\n\t      instr.push(Graphics.beginCmd);\n\t      const l = active.length,\n\t            ll = instr.length;\n\t      instr.length = ll + l;\n\n\t      for (let i = 0; i < l; i++) {\n\t        instr[i + ll] = active[i];\n\t      }\n\n\t      if (this._fill) {\n\t        instr.push(this._fill);\n\t      }\n\n\t      if (this._stroke) {\n\t        // doesn't need to be re-applied if it hasn't changed.\n\t        if (this._strokeDash !== this._oldStrokeDash) {\n\t          instr.push(this._strokeDash);\n\t        }\n\n\t        if (this._strokeStyle !== this._oldStrokeStyle) {\n\t          instr.push(this._strokeStyle);\n\t        }\n\n\t        if (commit) {\n\t          this._oldStrokeDash = this._strokeDash;\n\t          this._oldStrokeStyle = this._strokeStyle;\n\t        }\n\n\t        instr.push(this._stroke);\n\t      }\n\n\t      this._dirty = false;\n\t    }\n\n\t    if (commit) {\n\t      active.length = 0;\n\t      this._commitIndex = instr.length;\n\t    }\n\t  }\n\n\t  /**\n\t   * @param {easeljs.Graphics.Fill} fill\n\t   * @protected\n\t   */\n\t  _setFill(fill) {\n\t    this._updateInstructions(true);\n\n\t    this.command = this._fill = fill;\n\t    return this;\n\t  }\n\t  /**\n\t   * @param {easeljs.Graphics.Stroke} stroke\n\t   * @protected\n\t   */\n\n\n\t  _setStroke(stroke) {\n\t    this._updateInstructions(true);\n\n\t    if (this.command = this._stroke = stroke) {\n\t      stroke.ignoreScale = this._strokeIgnoreScale;\n\t    }\n\n\t    return this;\n\t  }\n\n\t  static get LineTo() {\n\t    return LineTo;\n\t  }\n\n\t  static get MoveTo() {\n\t    return MoveTo;\n\t  }\n\n\t  static get ArcTo() {\n\t    return ArcTo;\n\t  }\n\n\t  static get Arc() {\n\t    return Arc;\n\t  }\n\n\t  static get QuadraticCurveTo() {\n\t    return QuadraticCurveTo;\n\t  }\n\n\t  static get BezierCurveTo() {\n\t    return BezierCurveTo;\n\t  }\n\n\t  static get Rect() {\n\t    return Rect;\n\t  }\n\n\t  static get ClosePath() {\n\t    return ClosePath;\n\t  }\n\n\t  static get BeginPath() {\n\t    return BeginPath;\n\t  }\n\n\t  static get Fill() {\n\t    return Fill;\n\t  }\n\n\t  static get Stroke() {\n\t    return Stroke;\n\t  }\n\n\t  static get StrokeStyle() {\n\t    return StrokeStyle;\n\t  }\n\n\t  static get StrokeDash() {\n\t    return StrokeDash;\n\t  }\n\n\t  static get RoundRect() {\n\t    return RoundRect;\n\t  }\n\n\t  static get Circle() {\n\t    return Circle;\n\t  }\n\n\t  static get Ellipse() {\n\t    return Ellipse;\n\t  }\n\n\t  static get PolyStar() {\n\t    return PolyStar;\n\t  }\n\n\t}\n\t/**\n\t * @see {@link easeljs.Graphics#lineTo}\n\t * @alias easeljs.Graphics.LineTo\n\t * @param {Number} x\n\t * @param {Number} y\n\t */\n\n\tclass LineTo {\n\t  constructor(x, y) {\n\t    /**\n\t     * @type {Number}\n\t     */\n\t    this.x = x;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.y = y;\n\t  }\n\t  /**\n\t   * Execute the Graphics command in the provided Canvas context.\n\t   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t   */\n\n\n\t  exec(ctx) {\n\t    ctx.lineTo(this.x, this.y);\n\t  }\n\n\t}\n\t/**\n\t * @see {@link easeljs.Graphics#moveTo}\n\t * @alias easeljs.Graphics.MoveTo\n\t * @param {Number} x\n\t * @param {Number} y\n\t */\n\n\n\tclass MoveTo {\n\t  constructor(x, y) {\n\t    /**\n\t     * @type {Number}\n\t     */\n\t    this.x = x;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.y = y;\n\t  }\n\t  /**\n\t   * @param {CanvasRenderingContext2D} ctx\n\t   */\n\n\n\t  exec(ctx) {\n\t    ctx.moveTo(this.x, this.y);\n\t  }\n\n\t}\n\t/**\n\t * @see {@link easeljs.Graphics#arcTo}\n\t * @alias easeljs.Graphics.ArcTo\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t */\n\n\n\tclass ArcTo {\n\t  constructor(x1, y1, x2, y2, radius) {\n\t    /**\n\t     * @type {Number}\n\t     */\n\t    this.x1 = x1;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.y1 = y1;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.x2 = x2;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.y2 = y2;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.radius = radius;\n\t  }\n\t  /**\n\t   * Execute the Graphics command in the provided Canvas context.\n\t   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t   */\n\n\n\t  exec(ctx) {\n\t    ctx.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n\t  }\n\n\t}\n\t/**\n\t * @see {@link easeljs.Graphics#arc}\n\t * @alias easeljs.Graphics.Arc\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle\n\t * @param {Number} endAngle\n\t * @param {Boolean} [anticlockwise=false]\n\t */\n\n\n\tclass Arc {\n\t  constructor(x, y, radius, startAngle, endAngle, anticlockwise = false) {\n\t    /**\n\t     * @type {Number}\n\t     */\n\t    this.x = x;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.y = y;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.radius = radius;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.startAngle = startAngle;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.endAngle = endAngle;\n\t    /**\n\t     * @type {Boolean}\n\t     */\n\n\t    this.anticlockwise = anticlockwise;\n\t  }\n\t  /**\n\t   * Execute the Graphics command in the provided Canvas context.\n\t   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t   */\n\n\n\t  exec(ctx) {\n\t    ctx.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n\t  }\n\n\t}\n\t/**\n\t * @see {@link easeljs.Graphics#quadraticCurveTo}\n\t * @alias easeljs.Graphics.QuadraticCurveTo\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t */\n\n\n\tclass QuadraticCurveTo {\n\t  constructor(cpx, cpy, x, y) {\n\t    /**\n\t     * @property cpx\n\t     * @type Number\n\t     */\n\t    this.cpx = cpx;\n\t    /**\n\t     * @property cpy\n\t     * @type Number\n\t     */\n\n\t    this.cpy = cpy;\n\t    /**\n\t     * @property x\n\t     * @type Number\n\t     */\n\n\t    this.x = x;\n\t    /**\n\t     * @property y\n\t     * @type Number\n\t     */\n\n\t    this.y = y;\n\t  }\n\t  /**\n\t   * Execute the Graphics command in the provided Canvas context.\n\t   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t   */\n\n\n\t  exec(ctx) {\n\t    ctx.quadraticCurveTo(this.cpx, this.cpy, this.x, this.y);\n\t  }\n\n\t}\n\t/**\n\t * @see {@link easeljs.Graphics#bezierCurveTo}\n\t * @alias easeljs.Graphics.BezierCurveTo\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t */\n\n\n\tclass BezierCurveTo {\n\t  constructor(cp1x, cp1y, cp2x, cp2y, x, y) {\n\t    /**\n\t     * @type {Number}\n\t     */\n\t    this.cp1x = cp1x;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.cp1y = cp1y;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.cp2x = cp2x;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.cp2y = cp2y;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.x = x;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.y = y;\n\t  }\n\t  /**\n\t   * Execute the Graphics command in the provided Canvas context.\n\t   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t   */\n\n\n\t  exec(ctx) {\n\t    ctx.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.x, this.y);\n\t  }\n\n\t}\n\t/**\n\t * @see {@link easeljs.Graphics#rect}\n\t * @alias easeljs.Graphics.Rect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t */\n\n\n\tclass Rect {\n\t  constructor(x, y, w, h) {\n\t    /**\n\t     * @type {Number}\n\t     */\n\t    this.x = x;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.y = y;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.w = w;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.h = h;\n\t  }\n\t  /**\n\t   * Execute the Graphics command in the provided Canvas context.\n\t   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t   */\n\n\n\t  exec(ctx) {\n\t    ctx.rect(this.x, this.y, this.w, this.h);\n\t  }\n\n\t}\n\t/**\n\t * @see {@link easeljs.Graphics#closePath}\n\t * @alias easeljs.Graphics.ClosePath\n\t */\n\n\n\tclass ClosePath {\n\t  constructor() {}\n\t  /**\n\t   * Execute the Graphics command in the provided Canvas context.\n\t   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t   */\n\n\n\t  exec(ctx) {\n\t    ctx.closePath();\n\t  }\n\n\t}\n\t/**\n\t * @see {@link easeljs.Graphics#beginPath}\n\t * @alias easeljs.Graphics.BeginPath\n\t */\n\n\n\tclass BeginPath {\n\t  constructor() {}\n\t  /**\n\t   * Execute the Graphics command in the provided Canvas context.\n\t   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t   */\n\n\n\t  exec(ctx) {\n\t    ctx.beginPath();\n\t  }\n\n\t}\n\t/**\n\t * @see {@link easeljs.Graphics#beginFill}\n\t * @alias easeljs.Graphics.Fill\n\t * @param {Object} style A valid Context2D fillStyle.\n\t * @param {Matrix2D} matrix\n\t */\n\n\n\tclass Fill {\n\t  constructor(style, matrix) {\n\t    /**\n\t     * A valid Context2D fillStyle.\n\t     * @type {Object}\n\t     */\n\t    this.style = style;\n\t    /**\n\t     * @type {easeljs.Matrix2D}\n\t     */\n\n\t    this.matrix = matrix;\n\t    /**\n\t     * @type {Boolean}\n\t     */\n\n\t    this.path = false;\n\t  }\n\t  /**\n\t   * Execute the Graphics command in the provided Canvas context.\n\t   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t   */\n\n\n\t  exec(ctx) {\n\t    if (!this.style) {\n\t      return;\n\t    }\n\n\t    ctx.fillStyle = this.style;\n\t    let mtx = this.matrix;\n\n\t    if (mtx) {\n\t      ctx.save();\n\t      ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n\t    }\n\n\t    ctx.fill();\n\n\t    if (mtx) {\n\t      ctx.restore();\n\t    }\n\t  }\n\t  /**\n\t   * Creates a linear gradient style and assigns it to {@link easeljs.Graphics.Fill#style}.\n\t   * @see {@link easeljs.Graphics#beginLinearGradientFill}\n\t   * @param {Array<String>} colors\n\t   * @param {Array<Number>} ratios\n\t   * @param {Number} x0\n\t   * @param {Number} y0\n\t   * @param {Number} x1\n\t   * @param {Number} y1\n\t   * @return {easeljs.Graphics.Fill} Returns this Fill object for chaining or assignment.\n\t   */\n\n\n\t  linearGradient(colors, ratios, x0, y0, x1, y1) {\n\t    let o = this.style = Graphics._ctx.createLinearGradient(x0, y0, x1, y1);\n\n\t    const l = colors.length;\n\n\t    for (let i = 0; i < l; i++) {\n\t      o.addColorStop(ratios[i], colors[i]);\n\t    }\n\n\t    o.props = {\n\t      colors,\n\t      ratios,\n\t      x0,\n\t      y0,\n\t      x1,\n\t      y1,\n\t      type: \"linear\"\n\t    };\n\t    return this;\n\t  }\n\t  /**\n\t   * Creates a linear gradient style and assigns it to {@link easeljs.Graphics.Fill#style}.\n\t   * @see {@link easeljs.Graphics#beginRadialGradientFill}\n\t   * @param {Array<String>} colors\n\t   * @param {Array<Number>} ratios\n\t   * @param {Number} x0\n\t   * @param {Number} y0\n\t   * @param {Number} r0\n\t   * @param {Number} x1\n\t   * @param {Number} y1\n\t   * @param {Number} r1\n\t   * @return {easeljs.Graphics.Fill} Returns this Fill object for chaining or assignment.\n\t   */\n\n\n\t  radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t    let o = this.style = Graphics._ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\n\n\t    const l = colors.length;\n\n\t    for (let i = 0; i < l; i++) {\n\t      o.addColorStop(ratios[i], colors[i]);\n\t    }\n\n\t    o.props = {\n\t      colors,\n\t      ratios,\n\t      x0,\n\t      y0,\n\t      r0,\n\t      x1,\n\t      y1,\n\t      r1,\n\t      type: \"radial\"\n\t    };\n\t    return this;\n\t  }\n\t  /**\n\t   * Creates a linear gradient style and assigns it to {@link easeljs.Graphics.Fill#style}.\n\t   * @see {@link easeljs.Graphics#beginBitmapFill}\n\t   * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image  Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t   * @param {String} [repetition=\"\"] One of: repeat, repeat-x, repeat-y, or no-repeat.\n\t   * @return {easeljs.Graphics.Fill} Returns this Fill object for chaining or assignment.\n\t   */\n\n\n\t  bitmap(image, repetition = \"\") {\n\t    if (image.naturalWidth || image.getContext || image.readyState >= 2) {\n\t      let o = this.style = Graphics._ctx.createPattern(image, repetition);\n\n\t      o.props = {\n\t        image,\n\t        repetition,\n\t        type: \"bitmap\"\n\t      };\n\t    }\n\n\t    return this;\n\t  }\n\n\t}\n\t/**\n\t * @see {@link easeljs.Graphics#beginStroke}\n\t * @alias easeljs.Graphics.Stroke\n\t * @extends easeljs.Graphics.Fill\n\t * @param {Object} style A valid Context2D fillStyle.\n\t * @param {Boolean} ignoreScale\n\t */\n\n\n\tclass Stroke extends Fill {\n\t  constructor(style, ignoreScale) {\n\t    super();\n\t    /**\n\t     * A valid Context2D strokeStyle.\n\t     * @type {Object}\n\t     */\n\n\t    this.style = style;\n\t    /**\n\t     * @type {Boolean}\n\t     */\n\n\t    this.ignoreScale = ignoreScale;\n\t    /**\n\t     * @type {Boolean}\n\t     */\n\n\t    this.path = false;\n\t  }\n\t  /**\n\t   * Execute the Graphics command in the provided Canvas context.\n\t   * @override\n\t   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t   */\n\n\n\t  exec(ctx) {\n\t    if (!this.style) {\n\t      return;\n\t    }\n\n\t    ctx.strokeStyle = this.style;\n\n\t    if (this.ignoreScale) {\n\t      ctx.save();\n\t      ctx.setTransform(1, 0, 0, 1, 0, 0);\n\t    }\n\n\t    ctx.stroke();\n\n\t    if (this.ignoreScale) {\n\t      ctx.restore();\n\t    }\n\t  }\n\n\t}\n\t/**\n\t * @see {@link easeljs.Graphics#setStrokeStyle}\n\t * @alias easeljs.Graphics.StrokeStyle\n\t * @param {Number} [width=1]\n\t * @param {String} [caps=butt]\n\t * @param {String} [joints=miter]\n\t * @param {Number} [miterLimit=10]\n\t * @param {Boolean} [ignoreScale=false]\n\t */\n\n\n\tclass StrokeStyle {\n\t  constructor(width = 1, caps = \"butt\", joints = \"miter\", miterLimit = 10, ignoreScale = false) {\n\t    /**\n\t     * @type {Number}\n\t     */\n\t    this.width = width;\n\t    /**\n\t     * One of: butt, round, square\n\t     * @type {String}\n\t     */\n\n\t    this.caps = caps;\n\t    /**\n\t     * One of: round, bevel, miter\n\t     * @type {String}\n\t     */\n\n\t    this.joints = joints;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.miterLimit = miterLimit;\n\t    /**\n\t     * @type {Boolean}\n\t     */\n\n\t    this.ignoreScale = ignoreScale;\n\t    /**\n\t     * @type {Boolean}\n\t     */\n\n\t    this.path = false;\n\t  }\n\t  /**\n\t   * Execute the Graphics command in the provided Canvas context.\n\t   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t   */\n\n\n\t  exec(ctx) {\n\t    ctx.lineWidth = this.width;\n\t    ctx.lineCap = isNaN(this.caps) ? this.caps : Graphics._STROKE_CAPS_MAP[this.caps];\n\t    ctx.lineJoin = isNaN(this.joints) ? this.joints : Graphics._STROKE_JOINTS_MAP[this.joints];\n\t    ctx.miterLimit = this.miterLimit;\n\t    ctx.ignoreScale = this.ignoreScale;\n\t  }\n\n\t}\n\t/**\n\t * @see {@link easeljs.Graphics#setStrokeDash}\n\t * @alias easeljs.Graphics.StrokeDash\n\t * @param {Array} [segments=[]]\n\t * @param {Number} [offset=0]\n\t */\n\n\n\tclass StrokeDash {\n\t  constructor(segments = [], offset = 0) {\n\t    /**\n\t     * @type {Array}\n\t     */\n\t    this.segments = segments;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.offset = offset;\n\t  }\n\t  /**\n\t   * Execute the Graphics command in the provided Canvas context.\n\t   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t   */\n\n\n\t  exec(ctx) {\n\t    if (ctx.setLineDash) {\n\t      // feature detection.\n\t      ctx.setLineDash(this.segments);\n\t      ctx.lineDashOffset = this.offset;\n\t    }\n\t  }\n\n\t}\n\t/**\n\t * @see {@link easeljs.Graphics#drawRoundRectComplex}\n\t * @alias easeljs.Graphics.RoundRect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radiusTL\n\t * @param {Number} radiusTR\n\t * @param {Number} radiusBR\n\t * @param {Number} radiusBL\n\t */\n\n\n\tclass RoundRect {\n\t  constructor(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t    /**\n\t     * @type {Number}\n\t     */\n\t    this.x = x;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.y = y;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.w = w;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.h = h;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.radiusTL = radiusTL;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.radiusTR = radiusTR;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.radiusBR = radiusBR;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.radiusBL = radiusBL;\n\t  }\n\t  /**\n\t   * Execute the Graphics command in the provided Canvas context.\n\t   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t   */\n\n\n\t  exec(ctx) {\n\t    let max = (this.w < this.h ? this.w : this.h) / 2;\n\t    let mTL = 0,\n\t        mTR = 0,\n\t        mBR = 0,\n\t        mBL = 0;\n\t    let x = this.x,\n\t        y = this.y,\n\t        w = this.w,\n\t        h = this.h;\n\t    let rTL = this.radiusTL,\n\t        rTR = this.radiusTR,\n\t        rBR = this.radiusBR,\n\t        rBL = this.radiusBL;\n\n\t    if (rTL < 0) {\n\t      rTL *= mTL = -1;\n\t    }\n\n\t    if (rTL > max) {\n\t      rTL = max;\n\t    }\n\n\t    if (rTR < 0) {\n\t      rTR *= mTR = -1;\n\t    }\n\n\t    if (rTR > max) {\n\t      rTR = max;\n\t    }\n\n\t    if (rBR < 0) {\n\t      rBR *= mBR = -1;\n\t    }\n\n\t    if (rBR > max) {\n\t      rBR = max;\n\t    }\n\n\t    if (rBL < 0) {\n\t      rBL *= mBL = -1;\n\t    }\n\n\t    if (rBL > max) {\n\t      rBL = max;\n\t    }\n\n\t    ctx.moveTo(x + w - rTR, y);\n\t    ctx.arcTo(x + w + rTR * mTR, y - rTR * mTR, x + w, y + rTR, rTR);\n\t    ctx.lineTo(x + w, y + h - rBR);\n\t    ctx.arcTo(x + w + rBR * mBR, y + h + rBR * mBR, x + w - rBR, y + h, rBR);\n\t    ctx.lineTo(x + rBL, y + h);\n\t    ctx.arcTo(x - rBL * mBL, y + h + rBL * mBL, x, y + h - rBL, rBL);\n\t    ctx.lineTo(x, y + rTL);\n\t    ctx.arcTo(x - rTL * mTL, y - rTL * mTL, x + rTL, y, rTL);\n\t    ctx.closePath();\n\t  }\n\n\t}\n\t/**\n\t * @see {@link easeljs.Graphics#drawCircle}\n\t * @alias easeljs.Graphics.Circle\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t */\n\n\n\tclass Circle {\n\t  constructor(x, y, radius) {\n\t    /**\n\t     * @type {Number}\n\t     */\n\t    this.x = x;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.y = y;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.radius = radius;\n\t  }\n\t  /**\n\t   * Execute the Graphics command in the provided Canvas context.\n\t   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t   */\n\n\n\t  exec(ctx) {\n\t    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n\t  }\n\n\t}\n\t/**\n\t * @see {@link easeljs.Graphics#drawEllipse}\n\t * @alias easeljs.Graphics.Ellipse\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t */\n\n\n\tclass Ellipse {\n\t  constructor(x, y, w, h) {\n\t    /**\n\t     * @type {Number}\n\t     */\n\t    this.x = x;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.y = y;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.w = w;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.h = h;\n\t  }\n\t  /**\n\t   * Execute the Graphics command in the provided Canvas context.\n\t   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t   */\n\n\n\t  exec(ctx) {\n\t    let x = this.x,\n\t        y = this.y;\n\t    let w = this.w,\n\t        h = this.h;\n\t    let k = 0.5522848;\n\t    let ox = w / 2 * k;\n\t    let oy = h / 2 * k;\n\t    let xe = x + w;\n\t    let ye = y + h;\n\t    let xm = x + w / 2;\n\t    let ym = y + h / 2;\n\t    ctx.moveTo(x, ym);\n\t    ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n\t    ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n\t    ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n\t    ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n\t  }\n\n\t}\n\t/**\n\t *  @see {@link easeljs.Graphics#drawPolyStar}\n\t * @alias easeljs.Graphics.PolyStar\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} sides\n\t * @param {Number} [pointSize=0]\n\t * @param {Number} [angle=0]\n\t */\n\n\n\tclass PolyStar {\n\t  constructor(x, y, radius, sides, pointSize = 0, angle = 0) {\n\t    /**\n\t     * @type {Number}\n\t     */\n\t    this.x = x;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.y = y;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.radius = radius;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.sides = sides;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.pointSize = pointSize;\n\t    /**\n\t     * @type {Number}\n\t     */\n\n\t    this.angle = angle;\n\t  }\n\t  /**\n\t   * Execute the Graphics command in the provided Canvas context.\n\t   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t   */\n\n\n\t  exec(ctx) {\n\t    let x = this.x,\n\t        y = this.y;\n\t    let radius = this.radius;\n\t    let angle = this.angle / 180 * Math.PI;\n\t    let sides = this.sides;\n\t    let ps = 1 - this.pointSize;\n\t    let a = Math.PI / sides;\n\t    ctx.moveTo(x + Math.cos(angle) * radius, y + Math.sin(angle) * radius);\n\n\t    for (let i = 0; i < sides; i++) {\n\t      angle += a;\n\n\t      if (ps != 1) {\n\t        ctx.lineTo(x + Math.cos(angle) * radius * ps, y + Math.sin(angle) * radius * ps);\n\t      }\n\n\t      angle += a;\n\t      ctx.lineTo(x + Math.cos(angle) * radius, y + Math.sin(angle) * radius);\n\t    }\n\n\t    ctx.closePath();\n\t  }\n\n\t}\n\t/**\n\t * A reusable instance of {@link easeljs.Graphics.BeginPath} to avoid unnecessary instantiation.\n\t * @static\n\t * @readonly\n\t * @type {easeljs.Graphics.BeginPath}\n\t */\n\n\n\tGraphics.beginCmd = new BeginPath();\n\t/**\n\t * Map of Base64 characters to values. Used by {@link easeljs.Graphics#decodePath}.\n\t * @static\n\t * @readonly\n\t * @protected\n\t * @type {Object}\n\t */\n\n\tGraphics._BASE_64 = {\n\t  \"A\": 0,\n\t  \"B\": 1,\n\t  \"C\": 2,\n\t  \"D\": 3,\n\t  \"E\": 4,\n\t  \"F\": 5,\n\t  \"G\": 6,\n\t  \"H\": 7,\n\t  \"I\": 8,\n\t  \"J\": 9,\n\t  \"K\": 10,\n\t  \"L\": 11,\n\t  \"M\": 12,\n\t  \"N\": 13,\n\t  \"O\": 14,\n\t  \"P\": 15,\n\t  \"Q\": 16,\n\t  \"R\": 17,\n\t  \"S\": 18,\n\t  \"T\": 19,\n\t  \"U\": 20,\n\t  \"V\": 21,\n\t  \"W\": 22,\n\t  \"X\": 23,\n\t  \"Y\": 24,\n\t  \"Z\": 25,\n\t  \"a\": 26,\n\t  \"b\": 27,\n\t  \"c\": 28,\n\t  \"d\": 29,\n\t  \"e\": 30,\n\t  \"f\": 31,\n\t  \"g\": 32,\n\t  \"h\": 33,\n\t  \"i\": 34,\n\t  \"j\": 35,\n\t  \"k\": 36,\n\t  \"l\": 37,\n\t  \"m\": 38,\n\t  \"n\": 39,\n\t  \"o\": 40,\n\t  \"p\": 41,\n\t  \"q\": 42,\n\t  \"r\": 43,\n\t  \"s\": 44,\n\t  \"t\": 45,\n\t  \"u\": 46,\n\t  \"v\": 47,\n\t  \"w\": 48,\n\t  \"x\": 49,\n\t  \"y\": 50,\n\t  \"z\": 51,\n\t  \"0\": 52,\n\t  \"1\": 53,\n\t  \"2\": 54,\n\t  \"3\": 55,\n\t  \"4\": 56,\n\t  \"5\": 57,\n\t  \"6\": 58,\n\t  \"7\": 59,\n\t  \"8\": 60,\n\t  \"9\": 61,\n\t  \"+\": 62,\n\t  \"/\": 63\n\t};\n\t/**\n\t * Maps numeric values for the caps parameter of {@link easeljs.Graphics#setStrokeStyle} to\n\t * corresponding string values. This is primarily for use with the tiny API.<br />\n\t * The mappings are as follows:\n\t * <ul>\n\t *   <li>0 to \"butt\"</li>\n\t *   <li>1 to \"round\"</li>\n\t *   <li>2 to \"square\".</li>\n\t * </ul>\n\t *\n\t * @example <caption>Set line caps to \"square\"</caption>\n\t * graphics.ss(16, 2);\n\t *\n\t * @static\n\t * @readonly\n\t * @protected\n\t * @type {Array<String>}\n\t */\n\n\tGraphics._STROKE_CAPS_MAP = [\"butt\", \"round\", \"square\"];\n\t/**\n\t * Maps numeric values for the joints parameter of {@link easeljs.Graphics#setStrokeStyle} to\n\t * corresponding string values. This is primarily for use with the tiny API.<br />\n\t * The mappings are as follows:\n\t * <ul>\n\t *   <li>0 to \"miter\"</li>\n\t *   <li>1 to \"round\"</li>\n\t *   <li>2 to \"bevel\".</li>\n\t * </ul>\n\t *\n\t * @example <caption>Set the line joints to \"bevel\"</caption>\n\t * graphics.ss(16, 0, 2);\n\t *\n\t * @static\n\t * @readonly\n\t * @protected\n\t * @type {Array<String>}\n\t */\n\n\tGraphics._STROKE_JOINTS_MAP = [\"miter\", \"round\", \"bevel\"];\n\t/**\n\t * @static\n\t * @readonly\n\t * @protected\n\t * @type {CanvasRenderingContext2D}\n\t */\n\n\tGraphics._ctx = createCanvas().getContext(\"2d\");\n\n\t/**\n\t * @license MovieClip\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * The MovieClip class associates a TweenJS Timeline with an EaselJS {@link easeljs.Container}. It allows\n\t * you to create objects which encapsulate timeline animations, state changes, and synched actions. Due to the\n\t * complexities inherent in correctly setting up a MovieClip, it is largely intended for tool output and is not included\n\t * in the main EaselJS library.\n\t *\n\t * Currently MovieClip only works properly if it is tick based (as opposed to time based) though some concessions have\n\t * been made to support time-based timelines in the future.\n\t *\n\t * It is recommended to use `tween.to()` to animate and set properties (use no duration to have it set\n\t * immediately), and the `tween.wait()` method to create delays between animations. Note that using the\n\t * `tween.set()` method to affect properties will likely not provide the desired result.\n\t *\n\t * @memberof easeljs\n\t * @example <caption>Animate two shapes back and forth</caption>\n\t * let stage = new Stage(\"canvas\");\n\t * Ticker.addEventListener(\"tick\", stage);\n\t *\n\t * let mc = new MovieClip(null, 0, true, {start:20});\n\t * stage.addChild(mc);\n\t *\n\t * let child1 = new Shape(\n\t *   new Graphics().beginFill(\"#999999\").drawCircle(30,30,30)\n\t * );\n\t * let child2 = new Shape(\n\t *   new Graphics().beginFill(\"#5a9cfb\").drawCircle(30,30,30)\n\t * );\n\t *\n\t * mc.timeline.addTween(\n\t *   Tween.get(child1).to({x:0}).to({x:60}, 50).to({x:0}, 50)\n\t * );\n\t * mc.timeline.addTween(\n\t *   Tween.get(child2).to({x:60}).to({x:0}, 50).to({x:60}, 50)\n\t * );\n\t *\n\t * mc.gotoAndPlay(\"start\");\n\t *\n\t * @extends easeljs.Container\n\t * @param {Object} [props] The configuration properties to apply to this instances.\n\t * This object will also be passed into the Timeline instance associated with this MovieClip.\n\t * See the documentation for Timeline for a list of supported props.\n\t */\n\n\tclass MovieClip extends Container {\n\t  constructor(props) {\n\t    super();\n\t    !MovieClip.inited && MovieClip.init();\n\t    /**\n\t     * Controls how this MovieClip advances its time. Must be one of 0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED).\n\t     * See each constant for a description of the behaviour.\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.mode = props.mode != null ? props.mode : MovieClip.INDEPENDENT;\n\t    /**\n\t     * Specifies what the first frame to play in this movieclip, or the only frame to display if mode is SINGLE_FRAME.\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.startPosition = props.startPosition != null ? props.startPosition : 0;\n\t    /**\n\t       * Specifies how many times this MovieClip should loop. A value of -1 indicates it should loop indefinitely. A value of\n\t       * 1 would cause it to loop once (ie. play a total of twice).\n\t       * @property loop\n\t     * @type {Number}\n\t     * @default -1\n\t     */\n\n\t    if (typeof props.loop === \"number\") {\n\t      this.loop = props.loop;\n\t    } else if (props.loop === false) {\n\t      this.loop = 0;\n\t    } else {\n\t      this.loop = -1;\n\t    }\n\t    /**\n\t     * The current frame of the movieclip.\n\t     * @type Number\n\t     * @default 0\n\t     * @readonly\n\t     */\n\n\n\t    this.currentFrame = 0;\n\t    /**\n\t       * The TweenJS Timeline that is associated with this MovieClip. This is created automatically when the MovieClip\n\t       * instance is initialized. Animations are created by adding <a href=\"http://tweenjs.com\">TweenJS</a> Tween\n\t       * instances to the timeline.\n\t       *\n\t       * Elements can be added and removed from the timeline by toggling an \"_off\" property\n\t       * using the `tweenInstance.to()` method. Note that using `Tween.set` is not recommended to\n\t       * create MovieClip animations. The following example will toggle the target off on frame 0, and then back on for\n\t       * frame 1. You can use the \"visible\" property to achieve the same effect.\n\t       *\n\t       * @example\n\t       * let tween = Tween.get(target).to({x:0}).to({x:100}, 30);\n\t       * let mc = new MovieClip();\n\t       * mc.timeline.addTween(tween);\n\t       *\n\t       * @example\n\t       * Tween.get(target).to({_off:false})\n\t       *   .wait(1).to({_off:true})\n\t       *   .wait(1).to({_off:false});\n\t       *\n\t       * @type {easeljs.Timeline}\n\t     */\n\n\t    this.timeline = new Timeline(Object.assign({\n\t      useTicks: true,\n\t      paused: true\n\t    }, props));\n\t    /**\n\t     * If true, the MovieClip's position will not advance when ticked.\n\t     * @type {Boolean}\n\t     * @default false\n\t     */\n\n\t    this.paused = props.paused != null ? props.paused : false;\n\t    /**\n\t     * If true, actions in this MovieClip's tweens will be run when the playhead advances.\n\t     * @type {Boolean}\n\t     * @default true\n\t     */\n\n\t    this.actionsEnabled = true;\n\t    /**\n\t     * If true, the MovieClip will automatically be reset to its first frame whenever the timeline adds\n\t     * it back onto the display list. This only applies to MovieClip instances with mode=INDEPENDENT.\n\t     * <br><br>\n\t     * For example, if you had a character animation with a \"body\" child MovieClip instance\n\t     * with different costumes on each frame, you could set `body.autoReset = false`, so that\n\t     * you can manually change the frame it is on, without worrying that it will be reset\n\t     * automatically.\n\t     * @type {Boolean}\n\t     * @default true\n\t     */\n\n\t    this.autoReset = true;\n\t    /**\n\t     * An array of bounds for each frame in the MovieClip. This is mainly intended for tool output.\n\t     * @type {Array}\n\t     */\n\n\t    this.frameBounds = this.frameBounds || props.frameBounds; // frameBounds are set on the prototype in Animate.\n\n\t    /**\n\t     * By default MovieClip instances advance one frame per tick. Specifying a framerate for the MovieClip\n\t     * will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t     * framerate.\n\t     *\n\t     * For example, if a MovieClip with a framerate of 10 is placed on a Stage being updated at 40fps, then the MovieClip will\n\t     * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t     * vary slightly between frames.\n\t     *\n\t     * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t     * passed into {@link easeljs.Stage#update}.\n\t     * @type {Number}\n\t     * @default null\n\t     */\n\n\t    this.framerate = null;\n\t    /**\n\t     * @type {Number}\n\t     * @default 0\n\t     * @private\n\t     */\n\n\t    this._synchOffset = 0;\n\t    /**\n\t     * @type {Number}\n\t     * @default -1\n\t     * @private\n\t     */\n\n\t    this._rawPosition = -1; // TODO: evaluate using a ._reset Boolean prop instead of -1.\n\n\t    /**\n\t     * The time remaining from the previous tick, only applicable when .framerate is set.\n\t     * @type {Number}\n\t     * @private\n\t     */\n\n\t    this._t = 0;\n\t    /**\n\t     * List of display objects that are actively being managed by the MovieClip.\n\t     * @type {Object}\n\t     * @private\n\t     */\n\n\t    this._managed = {};\n\t    /**\n\t     * @type {Function}\n\t     * @private\n\t     */\n\n\t    this._bound_resolveState = this._resolveState.bind(this);\n\t  }\n\n\t  static init() {\n\t    if (MovieClip.inited) {\n\t      return;\n\t    } // plugins introduce some overhead to Tween, so we only install this if an MC is instantiated.\n\n\n\t    MovieClipPlugin.install();\n\t    MovieClip.inited = true;\n\t  } // TODO: can we just proxy `get currentFrame` to timeline.position as well? Ditto for `get loop` (or just remove entirely).\n\t  //\n\n\t  /**\n\t   * Returns an array of objects with label and position (aka frame) properties, sorted by position.\n\t   * @see {@link tweenjs.Timeline#labels}\n\t   * @type {Array}\n\t   * @readonly\n\t   */\n\n\n\t  get labels() {\n\t    return this.timeline.labels;\n\t  }\n\t  /**\n\t   * Returns the name of the label on or immediately before the current frame.\n\t   * @see {@link tweenjs.Timeline#currentLabel}\n\t   * for more information.\n\t   * @type {String}\n\t   * @readonly\n\t   */\n\n\n\t  get currentLabel() {\n\t    return this.timeline.currentLabel;\n\t  }\n\t  /**\n\t   * Returns the duration of this MovieClip in seconds or ticks.\n\t   * @see {@link tweenjs.Timeline#duration}\n\t   * @type {Number}\n\t   * @readonly\n\t   */\n\n\n\t  get duration() {\n\t    return this.timeline.duration;\n\t  }\n\t  /**\n\t   * Returns the duration of this MovieClip in seconds or ticks. Identical to {@link easeljs.MovieClip#duration}\n\t   * and provided for Adobe Flash/Animate API compatibility.\n\t   * @see {@link tweenjs.Timeline#duration}\n\t   * @type {Number}\n\t   * @readonly\n\t   */\n\n\n\t  get totalFrames() {\n\t    return this.duration;\n\t  }\n\n\t  isVisible() {\n\t    // children are placed in draw, so we can't determine if we have content.\n\t    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n\t  }\n\n\t  draw(ctx, ignoreCache) {\n\t    // draw to cache first:\n\t    if (this.drawCache(ctx, ignoreCache)) {\n\t      return true;\n\t    }\n\n\t    this._updateState();\n\n\t    super.draw(ctx, ignoreCache);\n\t    return true;\n\t  }\n\t  /**\n\t   * Sets paused to false.\n\t   */\n\n\n\t  play() {\n\t    this.paused = false;\n\t  }\n\t  /**\n\t   * Sets paused to true.\n\t   */\n\n\n\t  stop() {\n\t    this.paused = true;\n\t  }\n\t  /**\n\t   * Advances this movie clip to the specified position or label and plays the timeline.\n\t   * @param {String | Number} positionOrLabel The animation name or frame number to go to.\n\t   */\n\n\n\t  gotoAndPlay(positionOrLabel) {\n\t    this.play();\n\n\t    this._goto(positionOrLabel);\n\t  }\n\t  /**\n\t   * Advances this movie clip to the specified position or label and stops the timeline.\n\t   * @param {String | Number} positionOrLabel The animation or frame name to go to.\n\t   */\n\n\n\t  gotoAndStop(positionOrLabel) {\n\t    this.stop();\n\n\t    this._goto(positionOrLabel);\n\t  }\n\t  /**\n\t   * Advances the playhead. This occurs automatically each tick by default.\n\t   * @param {Number} [time] The amount of time in ms to advance by. Only applicable if framerate is set.\n\t  */\n\n\n\t  advance(time) {\n\t    if (this.mode !== MovieClip.INDEPENDENT) {\n\t      return;\n\t    } // update happens in draw for synched clips\n\t    // if this MC doesn't have a framerate, hunt ancestors for one:\n\n\n\t    let o = this,\n\t        fps = o.framerate;\n\n\t    while ((o = o.parent) && fps === null) {\n\t      if (o.mode === MovieClip.INDEPENDENT) {\n\t        fps = o._framerate;\n\t      }\n\t    }\n\n\t    this._framerate = fps;\n\n\t    if (this.paused) {\n\t      return;\n\t    } // calculate how many frames to advance:\n\n\n\t    let t = fps !== null && fps !== -1 && time !== null ? time / (1000 / fps) + this._t : 1;\n\t    let frames = t | 0;\n\t    this._t = t - frames; // leftover time, save to add to next advance.\n\n\t    while (frames--) {\n\t      this._updateTimeline(this._rawPosition + 1, false);\n\t    }\n\t  }\n\t  /**\n\t   * MovieClip instances cannot be cloned.\n\t   * @throws MovieClip cannot be cloned.\n\t   */\n\n\n\t  clone() {\n\t    // TODO: add support for this? Need to clone the Timeline & retarget tweens - pretty complex.\n\t    throw \"MovieClip cannot be cloned.\";\n\t  }\n\n\t  _updateState() {\n\t    if (this._rawPosition === -1 || this.mode !== MovieClip.INDEPENDENT) {\n\t      this._updateTimeline(-1);\n\t    }\n\t  }\n\n\t  _tick(evtObj) {\n\t    this.advance(evtObj && evtObj.delta);\n\n\t    super._tick(evtObj);\n\t  }\n\t  /**\n\t   * @param {String | Number} positionOrLabel The animation name or frame number to go to.\n\t   * @protected\n\t   */\n\n\n\t  _goto(positionOrLabel) {\n\t    let pos = this.timeline.resolve(positionOrLabel);\n\n\t    if (pos == null) {\n\t      return;\n\t    }\n\n\t    this._t = 0;\n\n\t    this._updateTimeline(pos, true);\n\t  }\n\t  /**\n\t   * @private\n\t   */\n\n\n\t  _reset() {\n\t    this._rawPosition = -1;\n\t    this._t = this.currentFrame = 0;\n\t    this.paused = false;\n\t  }\n\t  /**\n\t   * @param {Number} rawPosition\n\t   * @param {Boolean} jump Indicates whether this update is due to jumping (via gotoAndXX) to a new position.\n\t   * @protected\n\t   */\n\n\n\t  _updateTimeline(rawPosition, jump) {\n\t    let synced = this.mode !== MovieClip.INDEPENDENT,\n\t        tl = this.timeline;\n\n\t    if (synced) {\n\t      rawPosition = this.startPosition + (this.mode === MovieClip.SINGLE_FRAME ? 0 : this._synchOffset);\n\t    }\n\n\t    if (rawPosition < 1) {\n\t      rawPosition = 0;\n\t    }\n\n\t    if (this._rawPosition === rawPosition && !synced) {\n\t      return;\n\t    }\n\n\t    this._rawPosition = rawPosition; // update timeline position, ignoring actions if this is a graphic.\n\n\t    tl.loop = this.loop; // TODO: should we maintain this on MovieClip, or just have it on timeline?\n\n\t    tl.setPosition(rawPosition, synced || !this.actionsEnabled, jump, this._bound_resolveState);\n\t  }\n\t  /**\n\t   * Renders position 0 without running actions or updating _rawPosition.\n\t   * Primarily used by Animate CC to build out the first frame in the constructor of MC symbols.\n\t   * NOTE: not tested when run after the MC advances past the first frame.\n\t   * @protected\n\t   */\n\n\n\t  _renderFirstFrame() {\n\t    const tl = this.timeline,\n\t          pos = tl.rawPosition;\n\t    tl.setPosition(0, true, true, this._bound_resolveState);\n\t    tl.rawPosition = pos;\n\t  }\n\t  /**\n\t   * Runs via a callback after timeline property updates and before actions.\n\t   * @protected\n\t   */\n\n\n\t  _resolveState() {\n\t    let tl = this.timeline;\n\t    this.currentFrame = tl.position;\n\n\t    for (let n in this._managed) {\n\t      this._managed[n] = 1;\n\t    }\n\n\t    let tweens = tl.tweens;\n\n\t    for (let tween of tweens) {\n\t      let target = tween.target;\n\n\t      if (target === this || tween.passive) {\n\t        continue;\n\t      } // TODO: this assumes the actions tween from Animate has `this` as the target. Likely a better approach.\n\n\n\t      let offset = tween._stepPosition;\n\n\t      if (target instanceof DisplayObject) {\n\t        // motion tween.\n\t        this._addManagedChild(target, offset);\n\t      } else {\n\t        // state tween.\n\t        this._setState(target.state, offset);\n\t      }\n\t    }\n\n\t    let kids = this.children;\n\n\t    for (let i = kids.length - 1; i >= 0; i--) {\n\t      let id = kids[i].id;\n\n\t      if (this._managed[id] === 1) {\n\t        this.removeChildAt(i);\n\t        delete this._managed[id];\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * @param {Array} state\n\t   * @param {Number} offset\n\t   * @protected\n\t   */\n\n\n\t  _setState(state, offset) {\n\t    if (!state) {\n\t      return;\n\t    }\n\n\t    for (let i = state.length - 1; i >= 0; i--) {\n\t      let o = state[i];\n\t      let target = o.t;\n\t      let props = o.p;\n\n\t      for (let n in props) {\n\t        target[n] = props[n];\n\t      }\n\n\t      this._addManagedChild(target, offset);\n\t    }\n\t  }\n\t  /**\n\t   * Adds a child to the timeline, and sets it up as a managed child.\n\t   * @param {easeljs.MovieClip} child The child MovieClip to manage\n\t   * @param {Number} offset\n\t   * @private\n\t   */\n\n\n\t  _addManagedChild(child, offset) {\n\t    if (child._off) {\n\t      return;\n\t    }\n\n\t    this.addChildAt(child, 0);\n\n\t    if (child instanceof MovieClip) {\n\t      child._synchOffset = offset; // TODO: this does not precisely match Adobe Flash/Animate, which loses track of the clip if it is renamed or removed from the timeline, which causes it to reset.\n\t      // TODO: should also reset when MovieClip loops, though that will be a bit tricky to detect.\n\n\t      if (child.mode === MovieClip.INDEPENDENT && child.autoReset && !this._managed[child.id]) {\n\t        child._reset();\n\t      }\n\t    }\n\n\t    this._managed[child.id] = 2;\n\t  }\n\t  /**\n\t   * @param {easeljs.Matrix2D} matrix\n\t   * @param {Boolean} ignoreTransform\n\t   * @return {easeljs.Rectangle}\n\t   * @protected\n\t   */\n\n\n\t  _getBounds(matrix, ignoreTransform) {\n\t    let bounds = this.getBounds();\n\n\t    if (!bounds && this.frameBounds) {\n\t      bounds = this._rectangle.copy(this.frameBounds[this.currentFrame]);\n\t    }\n\n\t    if (bounds) {\n\t      return this._transformBounds(bounds, matrix, ignoreTransform);\n\t    }\n\n\t    return super._getBounds(matrix, ignoreTransform);\n\t  }\n\n\t}\n\t/**\n\t * The MovieClip will advance independently of its parent, even if its parent is paused.\n\t * This is the default mode.\n\t * @static\n\t * @type {String}\n\t * @default independent\n\t * @readonly\n\t */\n\n\tMovieClip.INDEPENDENT = \"independent\";\n\t/**\n\t * The MovieClip will only display a single frame (as determined by the startPosition property).\n\t * @static\n\t * @type {String}\n\t * @default single\n\t * @readonly\n\t */\n\n\tMovieClip.SINGLE_FRAME = \"single\";\n\t/**\n\t * The MovieClip will be advanced only when its parent advances and will be synched to the position of\n\t * the parent MovieClip.\n\t * @static\n\t * @type {String}\n\t * @default synched\n\t * @readonly\n\t */\n\n\tMovieClip.SYNCHED = \"synched\";\n\t/**\n\t * Has the MovieClipPlugin been installed to TweenJS yet?\n\t * @static\n\t * @type {Boolean}\n\t * @default false\n\t * @readonly\n\t */\n\n\tMovieClip.inited = false;\n\t/**\n\t * This plugin works with <a href=\"http://tweenjs.com\" target=\"_blank\">TweenJS</a> to prevent the startPosition property from tweening.\n\t * @todo update to new plugin model\n\t * @static\n\t * @inner\n\t */\n\n\tclass MovieClipPlugin {\n\t  constructor() {\n\t    throw \"MovieClipPlugin cannot be instantiated.\";\n\t  }\n\t  /**\n\t   * @private\n\t   */\n\n\n\t  static install() {\n\t    Tween.installPlugin(MovieClipPlugin);\n\t  }\n\t  /**\n\t   * @param {tweenjs.Tween} tween\n\t   * @param {String} prop\n\t   * @param {String|Number|Boolean} value\n\t   * @private\n\t   */\n\n\n\t  static init(tween, prop, value) {\n\t    return value;\n\t  }\n\t  /**\n\t   * @param {tweenjs.Tween} tween\n\t   * @param {String} prop\n\t   * @param {String | Number | Boolean} value\n\t   * @param {Array} startValues\n\t   * @param {Array} endValues\n\t   * @param {Number} ratio\n\t   * @param {Object} wait\n\t   * @param {Object} end\n\t   * @return {*}\n\t   */\n\n\n\t  static tween(tween, prop, value, startValues, endValues, ratio, wait, end) {\n\t    if (!(tween.target instanceof MovieClip)) {\n\t      return value;\n\t    }\n\n\t    return ratio === 1 ? endValues[prop] : startValues[prop];\n\t  }\n\n\t}\n\t/**\n\t * @static\n\t * @type {Number}\n\t * @default 100\n\t * @readonly\n\t */\n\n\n\tMovieClipPlugin.priority = 100;\n\n\t/**\n\t * @license Shadow\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\n\t/**\n\t * This class encapsulates the properties required to define a shadow to apply to a {@link easeljs.DisplayObject}\n\t * via its `shadow` property.\n\t *\n\t * @memberof easeljs\n\t * @example\n\t * img.shadow = new Shadow(\"#000000\", 5, 5, 10);\n\t *\n\t * @param {String} [color=black] The color of the shadow. This can be any valid CSS color value.\n\t * @param {Number} [offsetX=0] The x offset of the shadow in pixels.\n\t * @param {Number} [offsetY=0] The y offset of the shadow in pixels.\n\t * @param {Number} [blur=0] The size of the blurring effect.\n\t */\n\tclass Shadow {\n\t  constructor(color = \"black\", offsetX = 0, offsetY = 0, blur = 0) {\n\t    /**\n\t     * The color of the shadow. This can be any valid CSS color value.\n\t     * @type {String}\n\t     * @default black\n\t     */\n\t    this.color = color;\n\t    /**\n\t     * The x offset of the shadow.\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.offsetX = offsetX;\n\t    /**\n\t     * The y offset of the shadow.\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.offsetY = offsetY;\n\t    /**\n\t     * The blur of the shadow.\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.blur = blur;\n\t  }\n\t  /**\n\t   * Returns a string representation of this object.\n\t   * @return {String}\n\t   */\n\n\n\t  toString() {\n\t    return `[${this.constructor.name}]`;\n\t  }\n\t  /**\n\t   * Returns a clone of this Shadow instance.\n\t   * @return {Shadow} A clone of the current Shadow instance.\n\t   */\n\n\n\t  clone() {\n\t    return new Shadow(this.color, this.offsetX, this.offsetY, this.blur);\n\t  }\n\n\t}\n\t/**\n\t * An identity shadow object (all properties are set to 0).\n\t * @type {easeljs.Shadow}\n\t * @static\n\t * @readonly\n\t */\n\n\tShadow.identity = new Shadow(\"transparent\");\n\n\t/**\n\t * @license Shape\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * A Shape allows you to display vector art in the display list. It composites a {@link easeljs.Graphics}\n\t * instance which exposes all of the vector drawing methods. The Graphics instance can be shared between multiple Shape\n\t * instances to display the same vector graphics with different positions or transforms.\n\t *\n\t * If the vector art will not change between draws, you may want to use the {@link easeljs.DisplayObject#cache}\n\t * method to reduce the rendering cost.\n\t *\n\t * @memberof easeljs\n\t * @example\n\t * var graphics = new Graphics().beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n\t * var shape = new Shape(graphics);\n\t * // Alternatively use can also use the graphics property of the Shape class to renderer the same as above.\n\t * var shape = new Shape();\n\t * shape.graphics.beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n\t *\n\t * @extends easeljs.DisplayObject\n\t * @param {easeljs.Graphics} [graphics] The graphics instance to display. If null, a new Graphics instance will be created.\n\t */\n\n\tclass Shape extends DisplayObject {\n\t  constructor(graphics = new Graphics()) {\n\t    super();\n\t    /**\n\t     * The graphics instance to display.\n\t     * @type {easeljs.Graphics}\n\t     */\n\n\t    this.graphics = graphics;\n\t  }\n\n\t  isVisible() {\n\t    let hasContent = this.cacheCanvas || this.graphics && !this.graphics.isEmpty();\n\t    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t  }\n\n\t  draw(ctx, ignoreCache = false) {\n\t    if (super.draw(ctx, ignoreCache)) {\n\t      return true;\n\t    }\n\n\t    this.graphics.draw(ctx, this);\n\t    return true;\n\t  }\n\t  /**\n\t   * Returns a clone of this Shape. Some properties that are specific to this instance's current context are reverted to\n\t   * their defaults (for example .parent).\n\t   * @override\n\t   * @param {Boolean} [recursive=false] If true, this Shape's {@link easeljs.Graphics} instance will also be\n\t   * cloned. If false, the Graphics instance will be shared with the new Shape.\n\t   */\n\n\n\t  clone(recursive = false) {\n\t    let g = recursive && this.graphics ? this.graphics.clone() : this.graphics;\n\t    return this._cloneProps(new Shape(g));\n\t  }\n\n\t}\n\n\t/**\n\t * @license SpriteSheet\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPliED, INCLUDING BUT NOT liMITED TO THE WARRANTIES\n\t * OF MERCHANTABIliTY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HolDERS BE liABLE FOR ANY CLAIM, DAMAGES OR OTHER liABIliTY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEAliNGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * Encapsulates the properties and methods associated with a sprite sheet. A sprite sheet is a series of images (usually\n\t * animation frames) combined into a larger image (or images). For example, an animation consisting of eight 100x100\n\t * images could be combined into a single 400x200 sprite sheet (4 frames across by 2 high).\n\t * <br />\n\t * The data passed to the SpriteSheet constructor defines:\n\t * <ol>\n\t * \t<li> The source image or images to use.</li>\n\t * \t<li> The positions of individual image frames.</li>\n\t * \t<li> Sequences of frames that form named animations. Optional.</li>\n\t * \t<li> The target playback framerate. Optional.</li>\n\t * </ol>\n\t *\n\t * <h3>SpriteSheet Format</h3>\n\t * SpriteSheets are an object with two required properties (`images` and `frames`), and two optional properties\n\t * (`framerate` and `animations`). This makes them easy to define in javascript code, or in JSON.\n\t *\n\t * <h4>images</h4>\n\t * An array of source images. Images can be either an HTMlimage\n\t * instance, or a uri to an image. The former is recommended to control preloading.\n\t *\n\t * \timages: [image1, \"path/to/image2.png\"],\n\t *\n\t * <h4>frames</h4>\n\t * Defines the individual frames. There are two supported formats for frame data:\n\t * When all of the frames are the same size (in a grid), use an object with `width`, `height`, `regX`, `regY`,\n\t * and `count` properties.\n\t *\n\t * <ul>\n\t *  <li>`width` & `height` are required and specify the dimensions of the frames</li>\n\t *  <li>`regX` & `regY` indicate the registration point or \"origin\" of the frames</li>\n\t *  <li>`spacing` indicate the spacing between frames</li>\n\t *  <li>`margin` specify the margin around the image(s)</li>\n\t *  <li>`count` allows you to specify the total number of frames in the spritesheet; if omitted, this will\n\t *  be calculated based on the dimensions of the source images and the frames. Frames will be assigned\n\t *  indexes based on their position in the source images (left to right, top to bottom).</li>\n\t * </ul>\n\t *\n\t *  \tframes: {width:64, height:64, count:20, regX: 32, regY:64, spacing:0, margin:0}\n\t *\n\t * If the frames are of different sizes, use an array of frame definitions. Each definition is itself an array\n\t * with 4 required and 3 optional entries, in the order:\n\t *\n\t * <ul>\n\t *  <li>The first four, `x`, `y`, `width`, and `height` are required and define the frame rectangle.</li>\n\t *  <li>The fifth, `imageIndex`, specifies the index of the source image (defaults to 0)</li>\n\t *  <li>The last two, `regX` and `regY` specify the registration point of the frame</li>\n\t * </ul>\n\t *\n\t * \tframes: [\n\t * \t\t// x, y, width, height, imageIndex*, regX*, regY*\n\t * \t\t[64, 0, 96, 64],\n\t * \t\t[0, 0, 64, 64, 1, 32, 32]\n\t * \t\t// etc.\n\t * \t]\n\t *\n\t * <h4>animations</h4>\n\t * Optional. An object defining sequences of frames to play as named animations. Each property corresponds to an\n\t * animation of the same name. Each animation must specify the frames to play, and may\n\t * also include a relative playback `speed` (ex. 2 would playback at double speed, 0.5 at half), and\n\t * the name of the `next` animation to sequence to after it completes.\n\t *\n\t * There are three formats supported for defining the frames in an animation, which can be mixed and matched as appropriate:\n\t * <ol>\n\t * \t<li>for a single frame animation, you can simply specify the frame index\n\t *\n\t * \t\tanimations: {\n\t * \t\t\tsit: 7\n\t * \t\t}\n\t *\n\t * </li>\n\t * <li>\n\t *      for an animation of consecutive frames, you can use an array with two required, and two optional entries\n\t * \t\tin the order: `start`, `end`, `next`, and `speed`. This will play the frames from start to end inclusive.\n\t *\n\t * \t\tanimations: {\n\t * \t\t\t// start, end, next*, speed*\n\t * \t\t\trun: [0, 8],\n\t * \t\t\tjump: [9, 12, \"run\", 2]\n\t * \t\t}\n\t *\n\t *  </li>\n\t *  <li>\n\t *     for non-consecutive frames, you can use an object with a `frames` property defining an array of frame\n\t *     indexes to play in order. The object can also specify `next` and `speed` properties.\n\t *\n\t * \t\tanimations: {\n\t * \t\t\twalk: {\n\t * \t\t\t\tframes: [1,2,3,3,2,1]\n\t * \t\t\t},\n\t * \t\t\tshoot: {\n\t * \t\t\t\tframes: [1,4,5,6],\n\t * \t\t\t\tnext: \"walk\",\n\t * \t\t\t\tspeed: 0.5\n\t * \t\t\t}\n\t * \t\t}\n\t *\n\t *  </li>\n\t * </ol>\n\t * <strong>Note:</strong> the `speed` property was added in EaselJS 0.7.0. Earlier versions had a `frequency`\n\t * property instead, which was the inverse of `speed`. For example, a value of \"4\" would be 1/4 normal speed in\n\t * earlier versions, but is 4x normal speed in EaselJS 0.7.0+.\n\t *\n\t * <h4>framerate</h4>\n\t * Optional. Indicates the default framerate to play this spritesheet at in frames per second. See\n\t * {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} for more information.\n\t *\n\t * \t\tframerate: 20\n\t *\n\t * Note that the Sprite framerate will only work if the stage update method is provided with the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n\t * event generated by the {{#crossLink \"Ticker\"}}{{/crossLink}}.\n\t *\n\t * \t\tcreatejs.Ticker.on(\"tick\", handleTick);\n\t * \t\tfunction handleTick(event) {\n\t *\t\t\tstage.update(event);\n\t *\t\t}\n\t *\n\t * <h3>Example</h3>\n\t * To define a simple sprite sheet, with a single image \"sprites.jpg\" arranged in a regular 50x50 grid with three\n\t * animations: \"stand\" showing the first frame, \"run\" looping frame 1-5 inclusive, and \"jump\" playing frame 6-8 and\n\t * sequencing back to run.\n\t *\n\t * \t\tvar data = {\n\t * \t\t\timages: [\"sprites.jpg\"],\n\t * \t\t\tframes: {width:50, height:50},\n\t * \t\t\tanimations: {\n\t * \t\t\t\tstand:0,\n\t * \t\t\t\trun:[1,5],\n\t * \t\t\t\tjump:[6,8,\"run\"]\n\t * \t\t\t}\n\t * \t\t};\n\t * \t\tvar spriteSheet = new createjs.SpriteSheet(data);\n\t * \t\tvar animation = new createjs.Sprite(spriteSheet, \"run\");\n\t *\n\t * <h3>Generating SpriteSheet Images</h3>\n\t * Spritesheets can be created manually by combining images in PhotoShop, and specifying the frame size or\n\t * coordinates manually, however there are a number of tools that facilitate this.\n\t * <ul>\n\t *     <li>Exporting SpriteSheets or HTML5 content from Adobe Flash/Animate supports the EaselJS SpriteSheet format.</li>\n\t *     <li>The popular <a href=\"https://www.codeandweb.com/texturepacker/easeljs\" target=\"_blank\">Texture Packer</a> has\n\t *     EaselJS support.\n\t *     <li>SWF animations in Adobe Flash/Animate can be exported to SpriteSheets using <a href=\"http://createjs.com/zoe\" target=\"_blank\"></a></li>\n\t * </ul>\n\t *\n\t * <h3>Cross Origin Issues</h3>\n\t * <strong>Warning:</strong> Images loaded cross-origin will throw cross-origin security errors when interacted with\n\t * using:\n\t * <ul>\n\t *     <li>a mouse</li>\n\t *     <li>methods such as {{#crossLink \"Container/getObjectUnderPoint\"}}{{/crossLink}}</li>\n\t *     <li>Filters (see {{#crossLink \"Filter\"}}{{/crossLink}})</li>\n\t *     <li>caching (see {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}})</li>\n\t * </ul>\n\t * You can get around this by setting `crossOrigin` property on your images before passing them to EaselJS, or\n\t * setting the `crossOrigin` property on PreloadJS' LoadQueue or LoadItems.\n\t *\n\t * \t\tvar image = new Image();\n\t * \t\timg.crossOrigin=\"Anonymous\";\n\t * \t\timg.src = \"http://server-with-CORS-support.com/path/to/image.jpg\";\n\t *\n\t * If you pass string paths to SpriteSheets, they will not work cross-origin. The server that stores the image must\n\t * support cross-origin requests, or this will not work. For more information, check out\n\t * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\" target=\"_blank\">CORS overview on MDN</a>.\n\t *\n\t * @memberof easeljs\n\t * @extends core.EventDispatcher\n\t * @param {Object} data An object describing the SpriteSheet data.\n\t */\n\n\tclass SpriteSheet extends EventDispatcher {\n\t  constructor(data) {\n\t    super();\n\t    /**\n\t     * Indicates whether all images are finished loading.\n\t     * @type {Boolean}\n\t     * @readonly\n\t     */\n\n\t    this.complete = true;\n\t    /**\n\t     * Specifies the framerate to use by default for Sprite instances using the SpriteSheet. See the Sprite class\n\t     * {@link easeljs.Sprite#framerate} for more information.\n\t     * @type Number\n\t     */\n\n\t    this.framerate = 0;\n\t    /**\n\t     * @protected\n\t     * @type {Array}\n\t     */\n\n\t    this._animations = null;\n\t    /**\n\t     * @protected\n\t     * @type {Array}\n\t     */\n\n\t    this._frames = null;\n\t    /**\n\t     * @protected\n\t     * @type {Array}\n\t     */\n\n\t    this._images = null;\n\t    /**\n\t     * @protected\n\t     * @type {Object}\n\t     */\n\n\t    this._data = null;\n\t    /**\n\t     * @protected\n\t     * @type {Number}\n\t     */\n\n\t    this._loadCount = 0; // only used for simple frame defs:\n\n\t    /**\n\t     * @protected\n\t     * @type {Number}\n\t     */\n\n\t    this._frameHeight = 0;\n\t    /**\n\t     * @protected\n\t     * @type {Number}\n\t     */\n\n\t    this._frameWidth = 0;\n\t    /**\n\t     * @protected\n\t     * @type {Number}\n\t     */\n\n\t    this._numFrames = 0;\n\t    /**\n\t     * @protected\n\t     * @type {Number}\n\t     */\n\n\t    this._regX = 0;\n\t    /**\n\t     * @protected\n\t     * @type {Number}\n\t     */\n\n\t    this._regY = 0;\n\t    /**\n\t     * @protected\n\t     * @type {Number}\n\t     */\n\n\t    this._spacing = 0;\n\t    /**\n\t     * @protected\n\t     * @type {Number}\n\t     */\n\n\t    this._margin = 0;\n\n\t    this._parseData(data);\n\t  }\n\t  /**\n\t   * Returns an array of all available animation names available on this sprite sheet as strings.\n\t   * @type {Array}\n\t   * @readonly\n\t   */\n\n\n\t  get animations() {\n\t    return this._animations.slice();\n\t  }\n\t  /**\n\t   * Returns the total number of frames in the specified animation, or in the whole sprite\n\t   * sheet if the animation param is omitted. Returns 0 if the spritesheet relies on calculated frame counts, and\n\t   * the images have not been fully loaded.\n\t   * @param {String} animation The name of the animation to get a frame count for.\n\t   * @return {Number} The number of frames in the animation, or in the entire sprite sheet if the animation param is omitted.\n\t   */\n\n\n\t  getNumFrames(animation) {\n\t    if (animation == null) {\n\t      return this._frames ? this._frames.length : this._numFrames || 0;\n\t    } else {\n\t      let data = this._data[animation];\n\n\t      if (data == null) {\n\t        return 0;\n\t      } else {\n\t        return data.frames.length;\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Returns an object defining the specified animation. The returned object contains:\n\t   * <ul>\n\t   * \t<li>frames: an array of the frame ids in the animation</li>\n\t   * \t<li>speed: the playback speed for this animation</li>\n\t   * \t<li>name: the name of the animation</li>\n\t   * \t<li>next: the default animation to play next. If the animation loops, the name and next property will be the same.</li>\n\t   * </ul>\n\t   * @param {String} name The name of the animation to get.\n\t   * @return {Object} a generic object with frames, speed, name, and next properties.\n\t   */\n\n\n\t  getAnimation(name) {\n\t    return this._data[name];\n\t  }\n\t  /**\n\t   * Returns an object specifying the image and source rect of the specified frame. The returned object has:\n\t   * <ul>\n\t   * \t<li>an image property holding a reference to the image object in which the frame is found</li>\n\t   * \t<li>a rect property containing a Rectangle instance which defines the boundaries for the frame within that image.</li>\n\t   * \t<li> A regX and regY property corresponding to the regX/Y values for the frame.\n\t   * </ul>\n\t   * @param {Number} frameIndex The index of the frame.\n\t   * @return {Object} a generic object with image and rect properties. Returns null if the frame does not exist.\n\t   */\n\n\n\t  getFrame(frameIndex) {\n\t    let frame;\n\n\t    if (this._frames && (frame = this._frames[frameIndex])) {\n\t      return frame;\n\t    }\n\n\t    return null;\n\t  }\n\t  /**\n\t   * Returns a {@link easeljs.Rectangle} instance defining the bounds of the specified frame relative\n\t   * to the origin.\n\t   *\n\t   * @param {Number} frameIndex The index of the frame.\n\t   * @param {easeljs.Rectangle} [rectangle] A Rectangle instance to copy the values into. By default a new instance is created.\n\t   * @return {easeljs.Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n\t   */\n\n\n\t  getFrameBounds(frameIndex, rectangle = new Rectangle()) {\n\t    let frame = this.getFrame(frameIndex);\n\t    return frame ? rectangle.setValues(-frame.regX, -frame.regY, frame.rect.width, frame.rect.height) : null;\n\t  }\n\t  /**\n\t   * Returns a string representation of this object.\n\t   * @return {String} a string representation of the instance.\n\t   */\n\n\n\t  toString() {\n\t    return `[${this.constructor.name}]`;\n\t  }\n\t  /**\n\t   * SpriteSheet cannot be cloned. A SpriteSheet can be shared by multiple Sprite instances without cloning it.\n\t   * @override\n\t   * @throws SpriteSheet cannot be cloned.\n\t   */\n\n\n\t  clone() {\n\t    throw \"SpriteSheet cannot be cloned.\";\n\t  }\n\t  /**\n\t   * @param {Object} data An object describing the SpriteSheet data.\n\t   * @protected\n\t   */\n\n\n\t  _parseData(data) {\n\t    if (data == null) {\n\t      return;\n\t    }\n\n\t    this.framerate = data.framerate || 0; // parse images:\n\n\t    if (data.images) {\n\t      for (let img of data.images) {\n\t        let a = this._images = [];\n\t        let src;\n\n\t        if (typeof img === \"string\") {\n\t          src = img;\n\t          img = document.createElement(\"img\");\n\t          img.src = src;\n\t        }\n\n\t        a.push(img);\n\n\t        if (!img.getContext && !img.naturalWidth) {\n\t          this._loadCount++;\n\t          this.complete = false;\n\n\t          img.onload = () => this._handleImageLoad(src);\n\n\t          img.onerror = () => this._handleImageError(src);\n\t        }\n\t      }\n\t    } // parse frames:\n\n\n\t    if (data.frames != null) {\n\t      if (Array.isArray(data.frames)) {\n\t        this._frames = [];\n\n\t        for (let arr of data.frames) {\n\t          this._frames.push({\n\t            image: this._images[arr[4] ? arr[4] : 0],\n\t            rect: new Rectangle(arr[0], arr[1], arr[2], arr[3]),\n\t            regX: arr[5] || 0,\n\t            regY: arr[6] || 0\n\t          });\n\t        }\n\t      } else {\n\t        let o = data.frames;\n\t        this._frameWidth = o.width;\n\t        this._frameHeight = o.height;\n\t        this._regX = o.regX || 0;\n\t        this._regY = o.regY || 0;\n\t        this._spacing = o.spacing || 0;\n\t        this._margin = o.margin || 0;\n\t        this._numFrames = o.count;\n\n\t        if (this._loadCount === 0) {\n\t          this._calculateFrames();\n\t        }\n\t      }\n\t    } // parse animations:\n\n\n\t    this._animations = [];\n\n\t    if (data.animations != null) {\n\t      this._data = {};\n\t      let o = data.animations;\n\n\t      for (let name in o) {\n\t        let anim = {\n\t          name\n\t        };\n\t        let obj = o[name];\n\t        let a;\n\n\t        if (typeof obj === \"number\") {\n\t          // single frame\n\t          a = anim.frames = [obj];\n\t        } else if (Array.isArray(obj)) {\n\t          // simple\n\t          if (obj.length === 1) {\n\t            anim.frames = [obj[0]];\n\t          } else {\n\t            anim.speed = obj[3];\n\t            anim.next = obj[2];\n\t            a = anim.frames = [];\n\n\t            for (let i = obj[0]; i <= obj[1]; i++) {\n\t              a.push(i);\n\t            }\n\t          }\n\t        } else {\n\t          // complex\n\t          anim.speed = obj.speed;\n\t          anim.next = obj.next;\n\t          let frames = obj.frames;\n\t          a = anim.frames = typeof frames === \"number\" ? [frames] : frames.slice(0);\n\t        }\n\n\t        if (anim.next === true || anim.next === undefined) {\n\t          anim.next = name;\n\t        } // loop\n\n\n\t        if (anim.next === false || a.length < 2 && anim.next === name) {\n\t          anim.next = null;\n\t        } // stop\n\n\n\t        if (!anim.speed) {\n\t          anim.speed = 1;\n\t        }\n\n\t        this._animations.push(name);\n\n\t        this._data[name] = anim;\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * @emits easeljs.SpriteSheet#event:complete\n\t   * @protected\n\t   * @param {Object} src\n\t   */\n\n\n\t  _handleImageLoad(src) {\n\t    if (--this._loadCount === 0) {\n\t      this._calculateFrames();\n\n\t      this.complete = true;\n\t      this.dispatchEvent(\"complete\");\n\t    }\n\t  }\n\t  /**\n\t   * @emits easeljs.SpriteSheet#event:complete\n\t   * @emits easeljs.SpriteSheet#event:error\n\t   * @protected\n\t   * @param {Object} src\n\t   */\n\n\n\t  _handleImageError(src) {\n\t    let errorEvent = new Event(\"error\");\n\t    errorEvent.src = src;\n\t    this.dispatchEvent(errorEvent); // Complete is still dispatched.\n\n\t    if (--this._loadCount === 0) {\n\t      this.dispatchEvent(\"complete\");\n\t    }\n\t  }\n\t  /**\n\t   * @protected\n\t   */\n\n\n\t  _calculateFrames() {\n\t    if (this._frames || this._frameWidth === 0) {\n\t      return;\n\t    }\n\n\t    this._frames = [];\n\t    let maxFrames = this._numFrames || 100000; // if we go over this, something is wrong.\n\n\t    let frameCount = 0,\n\t        frameWidth = this._frameWidth,\n\t        frameHeight = this._frameHeight;\n\t    let spacing = this._spacing,\n\t        margin = this._margin;\n\n\t    imgLoop: for (let i = 0, imgs = this._images, l = imgs.length; i < l; i++) {\n\t      let img = imgs[i],\n\t          imgW = img.width || img.naturalWidth,\n\t          imgH = img.height || img.naturalHeight;\n\t      let y = margin;\n\n\t      while (y <= imgH - margin - frameHeight) {\n\t        let x = margin;\n\n\t        while (x <= imgW - margin - frameWidth) {\n\t          if (frameCount >= maxFrames) {\n\t            break imgLoop;\n\t          }\n\n\t          frameCount++;\n\n\t          this._frames.push({\n\t            image: img,\n\t            rect: new Rectangle(x, y, frameWidth, frameHeight),\n\t            regX: this._regX,\n\t            regY: this._regY\n\t          });\n\n\t          x += frameWidth + spacing;\n\t        }\n\n\t        y += frameHeight + spacing;\n\t      }\n\t    }\n\n\t    this._numFrames = frameCount;\n\t  }\n\n\t}\n\t/**\n\t * Dispatched when all images are loaded.  Note that this only fires if the images\n\t * were not fully loaded when the sprite sheet was initialized. You should check the complete property\n\t * to prior to adding a listener. Ex.\n\t *\n\t * \tvar sheet = new createjs.SpriteSheet(data);\n\t * \tif (!sheet.complete) {\n\t * \t\t// not preloaded, listen for the complete event:\n\t * \t\tsheet.addEventListener(\"complete\", handler);\n\t * \t}\n\t *\n\t * @event easeljs.SpriteSheet#complete\n\t * @property {Object} target The object that dispatched the event.\n\t * @property {String} type The event type.\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when getFrame is called with a valid frame index. This is primarily intended for use by {@link easeljs.SpriteSheetBuilder}\n\t * when doing on-demand rendering.\n\t * @event easeljs.SpriteSheet#getframe\n\t * @property {Number} index The frame index.\n\t * @property {Object} frame The frame object that getFrame will return.\n\t */\n\n\t/**\n\t * Dispatched when an image encounters an error. A SpriteSheet will dispatch an error event for each image that\n\t * encounters an error, and will still dispatch a {@link easeljs.SpriteSheet#event:complete}\n\t * event once all images are finished processing, even if an error is encountered.\n\t * @event easeljs.SpriteSheet#error\n\t * @property {String} src The source of the image that failed to load.\n\t * @since 0.8.2\n\t */\n\n\t/**\n\t * @license Text\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * Display one or more lines of dynamic text (not user editable) in the display list. Line wrapping support (using the\n\t * lineWidth) is very basic, wrapping on spaces and tabs only. Note that as an alternative to Text, you can position HTML\n\t * text above or below the canvas relative to items in the display list using the {@link easeljs.DisplayObject#localToGlobal}\n\t * method, or using {@link easeljs.DOMElement}.\n\t *\n\t * <b>Please note that Text does not support HTML text, and can only display one font style at a time.</b> To use\n\t * multiple font styles, you will need to create multiple text instances, and position them manually.\n\t *\n\t * CreateJS Text supports web fonts (the same rules as Canvas). The font must be loaded and supported by the browser\n\t * before it can be displayed.\n\t *\n\t * <strong>Note:</strong> Text can be expensive to generate, so cache instances where possible. Be aware that not all\n\t * browsers will render Text exactly the same.\n\t *\n\t * @memberof easeljs\n\t * @extends easeljs.DisplayObject\n\t * @example\n\t * let text = new Text(\"Hello World\", \"20px Arial\", \"#ff7700\");\n\t * text.x = 100;\n\t * text.textBaseline = \"alphabetic\";\n\t *\n\t * @param {String} [text] The text to display.\n\t * @param {String} [font] The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold\n\t * 36px Arial\").\n\t * @param {String} [color] The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex.\n\t * \"#F00\", \"red\", or \"#FF0000\").\n\t */\n\n\tclass Text extends DisplayObject {\n\t  constructor(text, font, color) {\n\t    super();\n\t    /**\n\t     * The text to display.\n\t     * @type {String}\n\t     */\n\n\t    this.text = text;\n\t    /**\n\t     * The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold 36px Arial\").\n\t     * @type {String}\n\t     */\n\n\t    this.font = font;\n\t    /**\n\t     * The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex. \"#F00\"). Default is \"#000\".\n\t     * It will also accept valid canvas fillStyle values.\n\t     * @type {String}\n\t     */\n\n\t    this.color = color;\n\t    /**\n\t     * The horizontal text alignment. Any of \"start\", \"end\", \"left\", \"right\", and \"center\".\n\t     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles \"WHATWG spec\"}\n\t     * @type {String}\n\t     * @default left\n\t     */\n\n\t    this.textAlign = \"left\";\n\t    /**\n\t     * The vertical alignment point on the font. Any of \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", or \"bottom\".\n\t     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles \"WHATWG spec\"}\n\t     * @type {String}\n\t     * @default top\n\t    */\n\n\t    this.textBaseline = \"top\";\n\t    /**\n\t     * The maximum width to draw the text. If maxWidth is specified (not null), the text will be condensed or\n\t     * shrunk to make it fit in this width.\n\t     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles \"WHATWG spec\"}\n\t     * @type {Number}\n\t    */\n\n\t    this.maxWidth = null;\n\t    /**\n\t     * If greater than 0, the text will be drawn as a stroke (outline) of the specified width.\n\t     * @type {Number}\n\t     */\n\n\t    this.outline = 0;\n\t    /**\n\t     * Indicates the line height (vertical distance between baselines) for multi-line text. If null or 0,\n\t     * the value of getMeasuredLineHeight is used.\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.lineHeight = 0;\n\t    /**\n\t     * Indicates the maximum width for a line of text before it is wrapped to multiple lines. If null,\n\t     * the text will not be wrapped.\n\t     * @type {Number}\n\t     */\n\n\t    this.lineWidth = null;\n\t  }\n\n\t  isVisible() {\n\t    let hasContent = this.cacheCanvas || this.text != null && this.text !== \"\";\n\t    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t  }\n\n\t  draw(ctx, ignoreCache) {\n\t    if (super.draw(ctx, ignoreCache)) {\n\t      return true;\n\t    }\n\n\t    let col = this.color || \"#000\";\n\n\t    if (this.outline) {\n\t      ctx.strokeStyle = col;\n\t      ctx.lineWidth = this.outline * 1;\n\t    } else {\n\t      ctx.fillStyle = col;\n\t    }\n\n\t    this._drawText(this._prepContext(ctx));\n\n\t    return true;\n\t  }\n\t  /**\n\t   * Returns the measured, untransformed width of the text without wrapping. Use getBounds for a more robust value.\n\t   * @return {Number} The measured, untransformed width of the text.\n\t   */\n\n\n\t  getMeasuredWidth() {\n\t    return this._getMeasuredWidth(this.text);\n\t  }\n\t  /**\n\t   * Returns an approximate line height of the text, ignoring the lineHeight property. This is based on the measured\n\t   * width of a \"M\" character multiplied by 1.2, which provides an approximate line height for most fonts.\n\t   * @return {Number} an approximate line height of the text, ignoring the lineHeight property. This is\n\t   * based on the measured width of a \"M\" character multiplied by 1.2, which approximates em for most fonts.\n\t   */\n\n\n\t  getMeasuredLineHeight() {\n\t    return this._getMeasuredWidth(\"M\") * 1.2;\n\t  }\n\t  /**\n\t   * Returns the approximate height of multi-line text by multiplying the number of lines against either the\n\t   * `lineHeight` (if specified) or {@link easeljs.Text#getMeasuredLineHeight}. Note that\n\t   * this operation requires the text flowing logic to run, which has an associated CPU cost.\n\t   * @return {Number} The approximate height of the untransformed multi-line text.\n\t   */\n\n\n\t  getMeasuredHeight() {\n\t    return this._drawText(null, {}).height;\n\t  }\n\n\t  getBounds() {\n\t    let rect = super.getBounds();\n\n\t    if (rect) {\n\t      return rect;\n\t    }\n\n\t    if (this.text == null || this.text === \"\") {\n\t      return null;\n\t    }\n\n\t    let o = this._drawText(null, {});\n\n\t    let w = this.maxWidth && this.maxWidth < o.width ? this.maxWidth : o.width;\n\t    let x = w * Text.H_OFFSETS[this.textAlign || \"left\"];\n\t    let lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n\t    let y = lineHeight * Text.V_OFFSETS[this.textBaseline || \"top\"];\n\t    return this._rectangle.setValues(x, y, w, o.height);\n\t  }\n\t  /**\n\t   * Returns an object with width, height, and lines properties. The width and height are the visual width and height\n\t   * of the drawn text. The lines property contains an array of strings, one for\n\t   * each line of text that will be drawn, accounting for line breaks and wrapping. These strings have trailing\n\t   * whitespace removed.\n\t   * @return {Object} An object with width, height, and lines properties.\n\t   */\n\n\n\t  getMetrics() {\n\t    let o = {\n\t      lines: []\n\t    };\n\t    o.lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n\t    o.vOffset = o.lineHeight * Text.V_OFFSETS[this.textBaseline || \"top\"];\n\t    return this._drawText(null, o, o.lines);\n\t  }\n\t  /**\n\t   * Returns a clone of the Text instance.\n\t   * @return {easeljs.Text} a clone of the Text instance.\n\t   */\n\n\n\t  clone() {\n\t    return this._cloneProps(new Text(this.text, this.font, this.color));\n\t  }\n\t  /**\n\t   * Returns a string representation of this object.\n\t   * @override\n\t   * @return {String} a string representation of the instance.\n\t   */\n\n\n\t  toString() {\n\t    return `[${this.constructor.name} (text=${this.text.length > 20 ? `${this.text.substr(0, 17)}...` : this.text})]`;\n\t  }\n\t  /**\n\t   * @param {easeljs.Text} o\n\t   * @protected\n\t   * @return {easeljs.Text} o\n\t   */\n\n\n\t  _cloneProps(o) {\n\t    super._cloneProps(o);\n\n\t    o.textAlign = this.textAlign;\n\t    o.textBaseline = this.textBaseline;\n\t    o.maxWidth = this.maxWidth;\n\t    o.outline = this.outline;\n\t    o.lineHeight = this.lineHeight;\n\t    o.lineWidth = this.lineWidth;\n\t    return o;\n\t  }\n\t  /**\n\t   * @param {CanvasRenderingContext2D} ctx\n\t   * @return {CanvasRenderingContext2D}\n\t   * @protected\n\t   */\n\n\n\t  _prepContext(ctx) {\n\t    ctx.font = this.font || \"10px sans-serif\";\n\t    ctx.textAlign = this.textAlign || \"left\";\n\t    ctx.textBaseline = this.textBaseline || \"top\";\n\t    ctx.lineJoin = \"miter\";\n\t    ctx.miterLimit = 2.5;\n\t    return ctx;\n\t  }\n\t  /**\n\t   * Draws multiline text.\n\t   * @param {CanvasRenderingContext2D} ctx\n\t   * @param {Object} o\n\t   * @param {Array} lines\n\t   * @return {Object}\n\t   * @protected\n\t   */\n\n\n\t  _drawText(ctx, o, lines) {\n\t    const paint = !!ctx;\n\n\t    if (!paint) {\n\t      ctx = Text._ctx;\n\t      ctx.save();\n\n\t      this._prepContext(ctx);\n\t    }\n\n\t    let lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n\t    let maxW = 0,\n\t        count = 0;\n\t    let hardLines = String(this.text).split(/(?:\\r\\n|\\r|\\n)/);\n\n\t    for (let str of hardLines) {\n\t      let w = null;\n\n\t      if (this.lineWidth != null && (w = ctx.measureText(str).width) > this.lineWidth) {\n\t        // text wrapping:\n\t        let words = str.split(/(\\s)/);\n\t        str = words[0];\n\t        w = ctx.measureText(str).width;\n\t        const l = words.length;\n\n\t        for (let i = 1; i < l; i += 2) {\n\t          // Line needs to wrap:\n\t          let wordW = ctx.measureText(words[i] + words[i + 1]).width;\n\n\t          if (w + wordW > this.lineWidth) {\n\t            if (paint) {\n\t              this._drawTextLine(ctx, str, count * lineHeight);\n\t            }\n\n\t            if (lines) {\n\t              lines.push(str);\n\t            }\n\n\t            if (w > maxW) {\n\t              maxW = w;\n\t            }\n\n\t            str = words[i + 1];\n\t            w = ctx.measureText(str).width;\n\t            count++;\n\t          } else {\n\t            str += words[i] + words[i + 1];\n\t            w += wordW;\n\t          }\n\t        }\n\t      }\n\n\t      if (paint) {\n\t        this._drawTextLine(ctx, str, count * lineHeight);\n\t      }\n\n\t      if (lines) {\n\t        lines.push(str);\n\t      }\n\n\t      if (o && w == null) {\n\t        w = ctx.measureText(str).width;\n\t      }\n\n\t      if (w > maxW) {\n\t        maxW = w;\n\t      }\n\n\t      count++;\n\t    }\n\n\t    if (o) {\n\t      o.width = maxW;\n\t      o.height = count * lineHeight;\n\t    }\n\n\t    if (!paint) {\n\t      ctx.restore();\n\t    }\n\n\t    return o;\n\t  }\n\t  /**\n\t   * @param {CanvasRenderingContext2D} ctx\n\t   * @param {String} text\n\t   * @param {Number} y\n\t   * @protected\n\t   */\n\n\n\t  _drawTextLine(ctx, text, y) {\n\t    // Chrome 17 will fail to draw the text if the last param is included but null, so we feed it a large value instead:\n\t    if (this.outline) {\n\t      ctx.strokeText(text, 0, y, this.maxWidth || 0xFFFF);\n\t    } else {\n\t      ctx.fillText(text, 0, y, this.maxWidth || 0xFFFF);\n\t    }\n\t  }\n\t  /**\n\t   * @param {String} text\n\t   * @protected\n\t   */\n\n\n\t  _getMeasuredWidth(text) {\n\t    let ctx = Text._ctx;\n\t    ctx.save();\n\n\t    let w = this._prepContext(ctx).measureText(text).width;\n\n\t    ctx.restore();\n\t    return w;\n\t  }\n\n\t}\n\t/**\n\t * Lookup table for the ratio to offset bounds x calculations based on the textAlign property.\n\t * @type {Object}\n\t * @readonly\n\t * @static\n\t */\n\n\tText.H_OFFSETS = {\n\t  start: 0,\n\t  left: 0,\n\t  center: -0.5,\n\t  end: -1,\n\t  right: -1\n\t};\n\t/**\n\t * Lookup table for the ratio to offset bounds y calculations based on the textBaseline property.\n\t * @type {Object}\n\t * @readonly\n\t * @static\n\t */\n\n\tText.V_OFFSETS = {\n\t  top: 0,\n\t  hanging: -0.01,\n\t  middle: -0.4,\n\t  alphabetic: -0.8,\n\t  ideographic: -0.85,\n\t  bottom: -1\n\t};\n\t/**\n\t * @property _ctx\n\t * @type {CanvasRenderingContext2D}\n\t * @private\n\t * @static\n\t */\n\n\tText._ctx = createCanvas().getContext(\"2d\");\n\n\t/**\n\t * @license AlphaMapFilter\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * Applies a greyscale alpha map image (or canvas) to the target, such that the alpha channel of the result will\n\t * be copied from the red channel of the map, and the RGB channels will be copied from the target.\n\t *\n\t * Generally, it is recommended that you use {@link easeljs.AlphaMaskFilter}, because it has much better performance.\n\t *\n\t * @memberof easeljs\n\t * @extends easeljs.Filter\n\t * @example *\n\t * let box = new Shape();\n\t * box.graphics.beginLinearGradientFill([\"#ff0000\", \"#0000ff\"], [0, 1], 0, 0, 0, 100)\n\t * box.graphics.drawRect(0, 0, 100, 100);\n\t * box.cache(0, 0, 100, 100);\n\t * let bmp = new Bitmap(\"path/to/image.jpg\");\n\t * bmp.filters = [ new AlphaMapFilter(box.cacheCanvas) ];\n\t * bmp.cache(0, 0, 100, 100);\n\t *\n\t * @param {HTMLImageElement | HTMLCanvasElement} alphaMap The greyscale image (or canvas) to use as the alpha value for the\n\t * result. This should be exactly the same dimensions as the target.\n\t */\n\n\tclass AlphaMapFilter extends Filter {\n\t  constructor(alphaMap) {\n\t    super();\n\t    /**\n\t     * The greyscale image (or canvas) to use as the alpha value for the result. This should be exactly the same\n\t     * dimensions as the target.\n\t     * @type {HTMLImageElement | HTMLCanvasElement}\n\t     */\n\n\t    this.alphaMap = alphaMap;\n\t    /**\n\t     * @protected\n\t     * @type {HTMLImageElement | HTMLCanvasElement}\n\t     * @default null\n\t     */\n\n\t    this._alphaMap = null;\n\t    /**\n\t     * @protected\n\t     * @type {Uint8ClampedArray}\n\t     * @default null\n\t     */\n\n\t    this._mapData = null;\n\t    /**\n\t     * @protected\n\t     * @type {*}\n\t     * @default null\n\t     */\n\n\t    this._mapTexture = null;\n\t    this.FRAG_SHADER_BODY = `\n\t\t\tuniform sampler2D uAlphaSampler;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\t\t\t\tvec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\n\n\t\t\t\t// some image formats can have transparent white rgba(1,1,1, 0) when put on the GPU, this means we need a slight tweak\n\t\t\t\t// using ceil ensure that the colour will be used so long as it exists but pure transparency will be treated black\n\t\t\t\tgl_FragColor = vec4(color.rgb, color.a * (alphaMap.r * ceil(alphaMap.a)));\n\t\t\t}\n\t\t`;\n\t  }\n\t  /**\n\t   * @todo docs\n\t   * @param {*} gl\n\t   * @param {*} stage\n\t   * @param {*} shaderProgram\n\t   */\n\n\n\t  shaderParamSetup(gl, stage, shaderProgram) {\n\t    if (!this._mapTexture) {\n\t      this._mapTexture = gl.createTexture();\n\t    }\n\n\t    gl.activeTexture(gl.TEXTURE1);\n\t    gl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n\t    stage.setTextureParams(gl);\n\t    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.alphaMap);\n\t    gl.uniform1i(gl.getUniformLocation(shaderProgram, \"uAlphaSampler\"), 1);\n\t  }\n\t  /**\n\t   * @return {easeljs.AlphaMapFilter}\n\t   */\n\n\n\t  clone() {\n\t    let o = new AlphaMapFilter(this.alphaMap);\n\t    o._alphaMap = this._alphaMap;\n\t    o._mapData = this._mapData;\n\t    return o;\n\t  }\n\n\t  _applyFilter(imageData) {\n\t    if (!this.alphaMap) {\n\t      return true;\n\t    }\n\n\t    if (!this._prepAlphaMap()) {\n\t      return false;\n\t    } // TODO: update to support scenarios where the target has different dimensions.\n\n\n\t    let data = imageData.data;\n\t    let map = this._mapData;\n\t    const l = data.length;\n\n\t    for (let i = 0; i < l; i += 4) {\n\t      data[i + 3] = map[i] || 0;\n\t    }\n\n\t    return true;\n\t  }\n\t  /**\n\t   * @protected\n\t   */\n\n\n\t  _prepAlphaMap() {\n\t    if (!this.alphaMap) {\n\t      return false;\n\t    }\n\n\t    if (this.alphaMap === this._alphaMap && this._mapData) {\n\t      return true;\n\t    }\n\n\t    this._mapData = null;\n\t    let map = this._alphaMap = this.alphaMap;\n\t    let canvas = map;\n\t    let ctx;\n\n\t    if (map instanceof HTMLCanvasElement) {\n\t      ctx = canvas.getContext(\"2d\");\n\t    } else {\n\t      canvas = window.createjs && createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n\t      canvas.width = map.width;\n\t      canvas.height = map.height;\n\t      ctx = canvas.getContext(\"2d\");\n\t      ctx.drawImage(map, 0, 0);\n\t    }\n\n\t    try {\n\t      this._mapData = ctx.getImageData(0, 0, map.width, map.height).data;\n\t      return true;\n\t    } catch (e) {\n\t      //if (!this.suppressCrossDomainErrors) throw new Error(\"unable to access local image data: \" + e);\n\t      return false;\n\t    }\n\t  }\n\n\t}\n\n\t/**\n\t * @license AlphaMaskFilter\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * Applies the alpha from the mask image (or canvas) to the target, such that the alpha channel of the result will\n\t * be derived from the mask, and the RGB channels will be copied from the target. This can be used, for example, to\n\t * apply an alpha mask to a display object. This can also be used to combine a JPG compressed RGB image with a PNG32\n\t * alpha mask, which can result in a much smaller file size than a single PNG32 containing ARGB.\n\t *\n\t * <b>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</b>\n\t *\n\t * @memberof easeljs\n\t * @extends easeljs.Filter\n\t * @example\n\t * var box = new Shape();\n\t * box.graphics.beginLinearGradientFill([\"#000000\", \"rgba(0, 0, 0, 0)\"], [0, 1], 0, 0, 100, 100)\n\t * box.graphics.drawRect(0, 0, 100, 100);\n\t * box.cache(0, 0, 100, 100);\n\t * var bmp = new Bitmap(\"path/to/image.jpg\");\n\t * bmp.filters = [ new AlphaMaskFilter(box.cacheCanvas) ];\n\t * bmp.cache(0, 0, 100, 100);\n\t *\n\t * @param {HTMLImageElement | HTMLCanvasElement} mask\n\t */\n\n\tclass AlphaMaskFilter extends Filter {\n\t  constructor(mask) {\n\t    super();\n\t    /**\n\t     * The image (or canvas) to use as the mask.\n\t     * @type {HTMLImageElement | HTMLCanvasElement}\n\t     */\n\n\t    this.mask = mask;\n\t    this.usesContext = true;\n\t    this.FRAG_SHADER_BODY = `\n\t\t\tuniform sampler2D uAlphaSampler;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\t\t\t\tvec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\n\n\t\t\t\tgl_FragColor = vec4(color.rgb, color.a * alphaMap.a);\n\t\t\t}\n\t\t`;\n\t  }\n\t  /**\n\t   * Applies the filter to the specified context.\n\t   *\n\t   * <strong>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</strong>\n\t   * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t   * @param {Number} x The x position to use for the source rect.\n\t   * @param {Number} y The y position to use for the source rect.\n\t   * @param {Number} width The width to use for the source rect.\n\t   * @param {Number} height The height to use for the source rect.\n\t   * @param {CanvasRenderingContext2D} [targetCtx] NOT SUPPORTED IN THIS FILTER. The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t   * @param {Number} [targetX] NOT SUPPORTED IN THIS FILTER. The x position to draw the result to. Defaults to the value passed to x.\n\t   * @param {Number} [targetY] NOT SUPPORTED IN THIS FILTER. The y position to draw the result to. Defaults to the value passed to y.\n\t   * @return {Boolean} If the filter was applied successfully.\n\t   */\n\n\n\t  applyFilter(ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t    if (!this.mask) {\n\t      return true;\n\t    }\n\n\t    targetCtx = targetCtx || ctx;\n\n\t    if (targetX == null) {\n\t      targetX = x;\n\t    }\n\n\t    if (targetY == null) {\n\t      targetY = y;\n\t    }\n\n\t    targetCtx.save();\n\n\t    if (ctx != targetCtx) {\n\t      // TODO: support targetCtx and targetX/Y\n\t      // clearRect, then draw the ctx in?\n\t      return false;\n\t    }\n\n\t    targetCtx.globalCompositeOperation = \"destination-in\";\n\t    targetCtx.drawImage(this.mask, targetX, targetY);\n\t    targetCtx.restore();\n\t    return true;\n\t  }\n\t  /**\n\t   * @return {easeljs.AlphaMaskFilter}\n\t   */\n\n\n\t  clone() {\n\t    return new AlphaMaskFilter(this.mask);\n\t  }\n\t  /**\n\t   * @todo docs\n\t   * @param {*} gl\n\t   * @param {*} stage\n\t   * @param {*} shaderProgram\n\t   */\n\n\n\t  shaderParamSetup(gl, stage, shaderProgram) {\n\t    if (!this._mapTexture) {\n\t      this._mapTexture = gl.createTexture();\n\t    }\n\n\t    gl.activeTexture(gl.TEXTURE1);\n\t    gl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n\t    stage.setTextureParams(gl);\n\t    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.mask);\n\t    gl.uniform1i(gl.getUniformLocation(shaderProgram, \"uAlphaSampler\"), 1);\n\t  }\n\n\t}\n\n\t/**\n\t * @license BlurFilter\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * BoxBlur Algorithm by Mario Klingemann, quasimondo.com\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * Applies a box blur to DisplayObjects. Note that this filter is fairly CPU intensive, particularly if the quality is\n\t * set higher than 1.\n\t *\n\t * @memberof easeljs\n\t * @extends easeljs.Filter\n\t * @example\n\t * let shape = new Shape().set({x:100,y:100});\n\t * shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\t * let blurFilter = new BlurFilter(5, 5, 1);\n\t * shape.filters = [blurFilter];\n\t * let bounds = blurFilter.getBounds();\n\t * shape.cache(-50+bounds.x, -50+bounds.y, 100+bounds.width, 100+bounds.height);\n\t *\n\t * @param {Number} [blurX=0] The horizontal blur radius in pixels.\n\t * @param {Number} [blurY=0] The vertical blur radius in pixels.\n\t * @param {Number} [quality=1] The number of blur iterations.\n\t */\n\n\tclass BlurFilter extends Filter {\n\t  constructor(blurX = 0, blurY = 0, quality = 1) {\n\t    super();\n\t    /**\n\t     * @protected\n\t     * @default 0\n\t     * @type {Number}\n\t     */\n\n\t    this._blurX = blurX;\n\t    /**\n\t     * @protected\n\t     * @type {Array}\n\t     */\n\n\t    this._blurXTable = [];\n\t    /**\n\t     * @protected\n\t     * @type {Number}\n\t     * @default null\n\t     */\n\n\t    this._lastBlurX = null;\n\t    /**\n\t     * @default 0\n\t     * @type {Number}\n\t     */\n\n\t    this._blurY = blurY;\n\t    /**\n\t     * @protected\n\t     * @type {Array}\n\t     */\n\n\t    this._blurYTable = [];\n\t    /**\n\t     * @protected\n\t     * @type {Number}\n\t     * @default null\n\t     */\n\n\t    this._lastBlurY = null;\n\t    /**\n\t     * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n\t     * smoother blur, but take twice as long to run.\n\t     * @default 1\n\t     * @type {Number}\n\t     */\n\n\t    this._quality = isNaN(quality) || quality < 1 ? 1 : quality;\n\t    /**\n\t     * @protected\n\t     * @type {Number}\n\t     * @default null\n\t     */\n\n\t    this._lastQuality = null;\n\t    this.FRAG_SHADER_TEMPLATE = `\n\t\t\tuniform float xWeight[{{blurX}}];\n\t\t\tuniform float yWeight[{{blurY}}];\n\t\t\tuniform vec2 textureOffset;\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = vec4(0.0);\n\n\t\t\t\tfloat xAdj = ({{blurX}}.0-1.0)/2.0;\n\t\t\t\tfloat yAdj = ({{blurY}}.0-1.0)/2.0;\n\t\t\t\tvec2 sampleOffset;\n\n\t\t\t\tfor(int i=0; i<{{blurX}}; i++) {\n\t\t\t\t\tfor(int j=0; j<{{blurY}}; j++) {\n\t\t\t\t\t\tsampleOffset = vRenderCoord + (textureOffset * vec2(float(i)-xAdj, float(j)-yAdj));\n\t\t\t\t\t\tcolor += texture2D(uSampler, sampleOffset) * (xWeight[i] * yWeight[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = color.rgba;\n\t\t\t}\n\t\t`;\n\t  }\n\t  /**\n\t   * Horizontal blur radius in pixels.\n\t   * @type {Number}\n\t   */\n\n\n\t  get blurX() {\n\t    return this._blurX;\n\t  }\n\n\t  set blurX(blurX) {\n\t    if (isNaN(blurX) || blurX < 0) {\n\t      blurX = 0;\n\t    }\n\n\t    this._blurX = blurX;\n\t  }\n\t  /**\n\t   * Vertical blur radius in pixels.\n\t   * @type {Number}\n\t   */\n\n\n\t  get blurY() {\n\t    return this._blurY;\n\t  }\n\n\t  set blurY(blurY) {\n\t    if (isNaN(blurY) || blurY < 0) {\n\t      blurY = 0;\n\t    }\n\n\t    this._blurY = blurY;\n\t  }\n\t  /**\n\t   * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n\t   * smoother blur, but take twice as long to run.\n\t   * @type {Number}\n\t   */\n\n\n\t  get quality() {\n\t    return this._quality | 0;\n\t  }\n\n\t  set quality(quality) {\n\t    if (isNaN(quality) || quality < 0) {\n\t      quality = 0;\n\t    }\n\n\t    this._quality = quality;\n\t  }\n\t  /**\n\t   * @protected\n\t   * @type {*}\n\t   */\n\n\n\t  get _buildShader() {\n\t    const xChange = this._lastBlurX !== this._blurX;\n\t    const yChange = this._lastBlurY !== this._blurY;\n\t    const qChange = this._lastQuality !== this._quality;\n\n\t    if (xChange || yChange || qChange) {\n\t      if (xChange || qChange) {\n\t        this._blurXTable = this._getTable(this._blurX * this._quality);\n\t      }\n\n\t      if (yChange || qChange) {\n\t        this._blurYTable = this._getTable(this._blurY * this._quality);\n\t      }\n\n\t      this._updateShader();\n\n\t      this._lastBlurX = this._blurX;\n\t      this._lastBlurY = this._blurY;\n\t      this._lastQuality = this._quality;\n\t      return undefined; // force a rebuild\n\t    }\n\n\t    return this._compiledShader;\n\t  }\n\n\t  set _builtShader(value) {\n\t    this._compiledShader = value;\n\t  }\n\n\t  shaderParamSetup(gl, stage, shaderProgram) {\n\t    // load the normalized gaussian weight tables\n\t    gl.uniform1fv(gl.getUniformLocation(shaderProgram, \"xWeight\"), this._blurXTable);\n\t    gl.uniform1fv(gl.getUniformLocation(shaderProgram, \"yWeight\"), this._blurYTable); // what is the size of a single pixel in -1, 1 (webGL) space\n\n\t    gl.uniform2f(gl.getUniformLocation(shaderProgram, \"textureOffset\"), 2 / (stage._viewportWidth * this._quality), 2 / (stage._viewportHeight * this._quality));\n\t  }\n\n\t  getBounds(rect) {\n\t    let x = this.blurX | 0,\n\t        y = this.blurY | 0;\n\n\t    if (x <= 0 && y <= 0) {\n\t      return rect;\n\t    }\n\n\t    let q = Math.pow(this.quality, 0.2);\n\t    return (rect || new Rectangle()).pad(y * q + 1, x * q + 1, y * q + 1, x * q + 1);\n\t  }\n\t  /**\n\t   * @return {easeljs.BlurFilter}\n\t   */\n\n\n\t  clone() {\n\t    return new BlurFilter(this.blurX, this.blurY, this.quality);\n\t  }\n\n\t  _updateShader() {\n\t    let result = this.FRAG_SHADER_TEMPLATE;\n\t    result = result.replace(/{{blurX}}/g, this._blurXTable.length.toFixed(0));\n\t    result = result.replace(/{{blurY}}/g, this._blurYTable.length.toFixed(0));\n\t    this.FRAG_SHADER_BODY = result;\n\t  }\n\n\t  _getTable(spread) {\n\t    const EDGE = 4.2;\n\n\t    if (spread <= 1) {\n\t      return [1];\n\t    }\n\n\t    let result = [];\n\t    let count = Math.ceil(spread * 2);\n\t    count += count % 2 ? 0 : 1;\n\t    let adjust = count / 2 | 0;\n\n\t    for (let i = -adjust; i <= adjust; i++) {\n\t      let x = i / adjust * EDGE;\n\t      result.push(1 / Math.sqrt(2 * Math.PI) * Math.pow(Math.E, -(Math.pow(x, 2) / 4)));\n\t    }\n\n\t    let factor = result.reduce((a, b) => a + b, 0);\n\t    return result.map(currentValue => currentValue / factor);\n\t  }\n\n\t  _applyFilter(imageData) {\n\t    let radiusX = this._blurX >> 1;\n\t    if (isNaN(radiusX) || radiusX < 0) return false;\n\t    let radiusY = this._blurY >> 1;\n\t    if (isNaN(radiusY) || radiusY < 0) return false;\n\t    if (radiusX === 0 && radiusY === 0) return false;\n\t    let iterations = this.quality;\n\t    if (isNaN(iterations) || iterations < 1) iterations = 1;\n\t    iterations |= 0;\n\t    if (iterations > 3) iterations = 3;\n\t    if (iterations < 1) iterations = 1;\n\t    let px = imageData.data;\n\t    let x = 0,\n\t        y = 0,\n\t        i = 0,\n\t        p = 0,\n\t        yp = 0,\n\t        yi = 0,\n\t        yw = 0,\n\t        r = 0,\n\t        g = 0,\n\t        b = 0,\n\t        a = 0,\n\t        pr = 0,\n\t        pg = 0,\n\t        pb = 0,\n\t        pa = 0;\n\t    let divx = radiusX + radiusX + 1 | 0;\n\t    let divy = radiusY + radiusY + 1 | 0;\n\t    let w = imageData.width | 0;\n\t    let h = imageData.height | 0;\n\t    let w1 = w - 1 | 0;\n\t    let h1 = h - 1 | 0;\n\t    let rxp1 = radiusX + 1 | 0;\n\t    let ryp1 = radiusY + 1 | 0;\n\t    let ssx = {\n\t      r: 0,\n\t      b: 0,\n\t      g: 0,\n\t      a: 0\n\t    };\n\t    let sx = ssx;\n\n\t    for (i = 1; i < divx; i++) {\n\t      sx = sx.n = {\n\t        r: 0,\n\t        b: 0,\n\t        g: 0,\n\t        a: 0\n\t      };\n\t    }\n\n\t    sx.n = ssx;\n\t    let ssy = {\n\t      r: 0,\n\t      b: 0,\n\t      g: 0,\n\t      a: 0\n\t    };\n\t    let sy = ssy;\n\n\t    for (i = 1; i < divy; i++) {\n\t      sy = sy.n = {\n\t        r: 0,\n\t        b: 0,\n\t        g: 0,\n\t        a: 0\n\t      };\n\t    }\n\n\t    sy.n = ssy;\n\t    let si = null;\n\t    let mtx = BlurFilter.MUL_TABLE[radiusX] | 0;\n\t    let stx = BlurFilter.SHG_TABLE[radiusX] | 0;\n\t    let mty = BlurFilter.MUL_TABLE[radiusY] | 0;\n\t    let sty = BlurFilter.SHG_TABLE[radiusY] | 0;\n\n\t    while (iterations-- > 0) {\n\t      yw = yi = 0;\n\t      let ms = mtx;\n\t      let ss = stx;\n\n\t      for (y = h; --y > -1;) {\n\t        r = rxp1 * (pr = px[yi | 0]);\n\t        g = rxp1 * (pg = px[yi + 1 | 0]);\n\t        b = rxp1 * (pb = px[yi + 2 | 0]);\n\t        a = rxp1 * (pa = px[yi + 3 | 0]);\n\t        sx = ssx;\n\n\t        for (i = rxp1; --i > -1;) {\n\t          sx.r = pr;\n\t          sx.g = pg;\n\t          sx.b = pb;\n\t          sx.a = pa;\n\t          sx = sx.n;\n\t        }\n\n\t        for (i = 1; i < rxp1; i++) {\n\t          p = yi + ((w1 < i ? w1 : i) << 2) | 0;\n\t          r += sx.r = px[p];\n\t          g += sx.g = px[p + 1];\n\t          b += sx.b = px[p + 2];\n\t          a += sx.a = px[p + 3];\n\t          sx = sx.n;\n\t        }\n\n\t        si = ssx;\n\n\t        for (x = 0; x < w; x++) {\n\t          px[yi++] = r * ms >>> ss;\n\t          px[yi++] = g * ms >>> ss;\n\t          px[yi++] = b * ms >>> ss;\n\t          px[yi++] = a * ms >>> ss;\n\t          p = yw + ((p = x + radiusX + 1) < w1 ? p : w1) << 2;\n\t          r -= si.r - (si.r = px[p]);\n\t          g -= si.g - (si.g = px[p + 1]);\n\t          b -= si.b - (si.b = px[p + 2]);\n\t          a -= si.a - (si.a = px[p + 3]);\n\t          si = si.n;\n\t        }\n\n\t        yw += w;\n\t      }\n\n\t      ms = mty;\n\t      ss = sty;\n\n\t      for (x = 0; x < w; x++) {\n\t        yi = x << 2 | 0;\n\t        r = ryp1 * (pr = px[yi]) | 0;\n\t        g = ryp1 * (pg = px[yi + 1 | 0]) | 0;\n\t        b = ryp1 * (pb = px[yi + 2 | 0]) | 0;\n\t        a = ryp1 * (pa = px[yi + 3 | 0]) | 0;\n\t        sy = ssy;\n\n\t        for (i = 0; i < ryp1; i++) {\n\t          sy.r = pr;\n\t          sy.g = pg;\n\t          sy.b = pb;\n\t          sy.a = pa;\n\t          sy = sy.n;\n\t        }\n\n\t        yp = w;\n\n\t        for (i = 1; i <= radiusY; i++) {\n\t          yi = yp + x << 2;\n\t          r += sy.r = px[yi];\n\t          g += sy.g = px[yi + 1];\n\t          b += sy.b = px[yi + 2];\n\t          a += sy.a = px[yi + 3];\n\t          sy = sy.n;\n\n\t          if (i < h1) {\n\t            yp += w;\n\t          }\n\t        }\n\n\t        yi = x;\n\t        si = ssy;\n\n\t        if (iterations > 0) {\n\t          for (y = 0; y < h; y++) {\n\t            p = yi << 2;\n\t            px[p + 3] = pa = a * ms >>> ss;\n\n\t            if (pa > 0) {\n\t              px[p] = r * ms >>> ss;\n\t              px[p + 1] = g * ms >>> ss;\n\t              px[p + 2] = b * ms >>> ss;\n\t            } else {\n\t              px[p] = px[p + 1] = px[p + 2] = 0;\n\t            }\n\n\t            p = x + ((p = y + ryp1) < h1 ? p : h1) * w << 2;\n\t            r -= si.r - (si.r = px[p]);\n\t            g -= si.g - (si.g = px[p + 1]);\n\t            b -= si.b - (si.b = px[p + 2]);\n\t            a -= si.a - (si.a = px[p + 3]);\n\t            si = si.n;\n\t            yi += w;\n\t          }\n\t        } else {\n\t          for (y = 0; y < h; y++) {\n\t            p = yi << 2;\n\t            px[p + 3] = pa = a * ms >>> ss;\n\n\t            if (pa > 0) {\n\t              pa = 255 / pa;\n\t              px[p] = (r * ms >>> ss) * pa;\n\t              px[p + 1] = (g * ms >>> ss) * pa;\n\t              px[p + 2] = (b * ms >>> ss) * pa;\n\t            } else {\n\t              px[p] = px[p + 1] = px[p + 2] = 0;\n\t            }\n\n\t            p = x + ((p = y + ryp1) < h1 ? p : h1) * w << 2;\n\t            r -= si.r - (si.r = px[p]);\n\t            g -= si.g - (si.g = px[p + 1]);\n\t            b -= si.b - (si.b = px[p + 2]);\n\t            a -= si.a - (si.a = px[p + 3]);\n\t            si = si.n;\n\t            yi += w;\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    return true;\n\t  }\n\n\t}\n\t/**\n\t * Array of multiply values for blur calculations.\n\t * @type {Array}\n\t * @protected\n\t * @readonly\n\t * @static\n\t */\n\n\tBlurFilter.MUL_TABLE = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1];\n\t/**\n\t * Array of shift values for blur calculations.\n\t * @type {Array}\n\t * @protected\n\t * @static\n\t */\n\n\tBlurFilter.SHG_TABLE = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9];\n\n\t/**\n\t * @license ColorFilter\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * Applies a color transform to DisplayObjects.\n\t *\n\t * @memberof easeljs\n\t * @extends easeljs.Filter\n\t * @example\n\t * let shape = new Shape().set({ x: 100, y: 100 });\n\t * shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\t * shape.filters = [ new ColorFilter(0,0,0,1, 0,0,255,0) ];\n\t * shape.cache(-50, -50, 100, 100);\n\t *\n\t * @param {Number} [redMultiplier=1] The amount to multiply against the red channel. This is a range between 0 and 1.\n\t * @param {Number} [greenMultiplier=1] The amount to multiply against the green channel. This is a range between 0 and 1.\n\t * @param {Number} [blueMultiplier=1] The amount to multiply against the blue channel. This is a range between 0 and 1.\n\t * @param {Number} [alphaMultiplier=1] The amount to multiply against the alpha channel. This is a range between 0 and 1.\n\t * @param {Number} [redOffset=0] The amount to add to the red channel after it has been multiplied. This is a range\n\t * between -255 and 255.\n\t * @param {Number} [greenOffset=0] The amount to add to the green channel after it has been multiplied. This is a range\n\t * between -255 and 255.\n\t * @param {Number} [blueOffset=0] The amount to add to the blue channel after it has been multiplied. This is a range\n\t * between -255 and 255.\n\t * @param {Number} [alphaOffset=0] The amount to add to the alpha channel after it has been multiplied. This is a range\n\t * between -255 and 255.\n\t */\n\n\tclass ColorFilter extends Filter {\n\t  constructor(redMultiplier = 1, greenMultiplier = 1, blueMultiplier = 1, alphaMultiplier = 1, redOffset = 0, greenOffset = 0, blueOffset = 0, alphaOffset = 0) {\n\t    super();\n\t    /**\n\t     * Red channel multiplier.\n\t     * @type {Number}\n\t     */\n\n\t    this.redMultiplier = redMultiplier;\n\t    /**\n\t     * Green channel multiplier.\n\t     * @type {Number}\n\t     */\n\n\t    this.greenMultiplier = greenMultiplier;\n\t    /**\n\t     * Blue channel multiplier.\n\t     * @type {Number}\n\t     */\n\n\t    this.blueMultiplier = blueMultiplier;\n\t    /**\n\t     * Alpha channel multiplier.\n\t     * @type {Number}\n\t     */\n\n\t    this.alphaMultiplier = alphaMultiplier;\n\t    /**\n\t     * Red channel offset (added to value).\n\t     * @type {Number}\n\t     */\n\n\t    this.redOffset = redOffset;\n\t    /**\n\t     * Green channel offset (added to value).\n\t     * @type {Number}\n\t     */\n\n\t    this.greenOffset = greenOffset;\n\t    /**\n\t     * Blue channel offset (added to value).\n\t     * @type {Number}\n\t     */\n\n\t    this.blueOffset = blueOffset;\n\t    /**\n\t     * Alpha channel offset (added to value).\n\t     * @type {Number}\n\t     */\n\n\t    this.alphaOffset = alphaOffset;\n\t    this.FRAG_SHADER_BODY = `\n\t\t\tuniform vec4 uColorMultiplier;\n\t\t\tuniform vec4 uColorOffset;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\n\t\t\t\tgl_FragColor = (color * uColorMultiplier) + uColorOffset;\n\t\t\t}\n\t\t`;\n\t  }\n\n\t  shaderParamSetup(gl, stage, shaderProgram) {\n\t    gl.uniform4f(gl.getUniformLocation(shaderProgram, \"uColorMultiplier\"), this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier);\n\t    gl.uniform4f(gl.getUniformLocation(shaderProgram, \"uColorOffset\"), this.redOffset / 255, this.greenOffset / 255, this.blueOffset / 255, this.alphaOffset / 255);\n\t  }\n\t  /**\n\t   * @return {easeljs.ColorFilter}\n\t   */\n\n\n\t  clone() {\n\t    return new ColorFilter(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset);\n\t  }\n\n\t  _applyFilter(imageData) {\n\t    let data = imageData.data;\n\t    const l = data.length;\n\n\t    for (let i = 0; i < l; i += 4) {\n\t      data[i] = data[i] * this.redMultiplier + this.redOffset;\n\t      data[i + 1] = data[i + 1] * this.greenMultiplier + this.greenOffset;\n\t      data[i + 2] = data[i + 2] * this.blueMultiplier + this.blueOffset;\n\t      data[i + 3] = data[i + 3] * this.alphaMultiplier + this.alphaOffset;\n\t    }\n\n\t    return true;\n\t  }\n\n\t}\n\n\t/**\n\t * @license ColorMatrix\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\n\t/**\n\t * Provides helper functions for assembling a matrix for use with the {@link easeljs.ColorMatrixFilter}.\n\t * Most methods return the instance to facilitate chained calls.\n\t *\n\t * @memberof easeljs\n\t * @example\n\t * colorMatrix.adjustHue(20).adjustBrightness(50);\n\t *\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t */\n\tclass ColorMatrix {\n\t  constructor(brightness, contrast, saturation, hue) {\n\t    this.setColor(brightness, contrast, saturation, hue);\n\t  }\n\t  /**\n\t   * Resets the instance with the specified values.\n\t   * @param {Number} brightness\n\t   * @param {Number} contrast\n\t   * @param {Number} saturation\n\t   * @param {Number} hue\n\t   * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  setColor(brightness, contrast, saturation, hue) {\n\t    return this.reset().adjustColor(brightness, contrast, saturation, hue);\n\t  }\n\t  /**\n\t   * Resets the matrix to identity values.\n\t   * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  reset() {\n\t    return this.copy(ColorMatrix.IDENTITY_MATRIX);\n\t  }\n\t  /**\n\t   * Shortcut method to adjust brightness, contrast, saturation and hue. Equivalent to calling adjustHue(hue), adjustContrast(contrast),\n\t   * adjustBrightness(brightness), adjustSaturation(saturation), in that order.\n\t   * @param {Number} brightness\n\t   * @param {Number} contrast\n\t   * @param {Number} saturation\n\t   * @param {Number} hue\n\t   * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  adjustColor(brightness, contrast, saturation, hue) {\n\t    return this.adjustBrightness(brightness).adjustContrast(contrast).adjustSaturation(saturation).adjustHue(hue);\n\t  }\n\t  /**\n\t   * Adjusts the brightness of pixel color by adding the specified value to the red, green and blue channels.\n\t   * Positive values will make the image brighter, negative values will make it darker.\n\t   * @param {Number} value A value between -255 & 255 that will be added to the RGB channels.\n\t   * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  adjustBrightness(value) {\n\t    if (value === 0 || isNaN(value)) {\n\t      return this;\n\t    }\n\n\t    value = this._cleanValue(value, 255);\n\n\t    this._multiplyMatrix([1, 0, 0, 0, value, 0, 1, 0, 0, value, 0, 0, 1, 0, value, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n\n\t    return this;\n\t  }\n\t  /**\n\t   * Adjusts the contrast of pixel color.\n\t   * Positive values will increase contrast, negative values will decrease contrast.\n\t   * @param {Number} value A value between -100 & 100.\n\t   * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  adjustContrast(value) {\n\t    if (value === 0 || isNaN(value)) {\n\t      return this;\n\t    }\n\n\t    value = this._cleanValue(value, 100);\n\t    let x;\n\n\t    if (value < 0) {\n\t      x = 127 + value / 100 * 127;\n\t    } else {\n\t      x = value % 1;\n\n\t      if (x === 0) {\n\t        x = ColorMatrix.DELTA_INDEX[value];\n\t      } else {\n\t        x = ColorMatrix.DELTA_INDEX[value << 0] * (1 - x) + ColorMatrix.DELTA_INDEX[(value << 0) + 1] * x; // use linear interpolation for more granularity.\n\t      }\n\n\t      x = x * 127 + 127;\n\t    }\n\n\t    this._multiplyMatrix([x / 127, 0, 0, 0, 0.5 * (127 - x), 0, x / 127, 0, 0, 0.5 * (127 - x), 0, 0, x / 127, 0, 0.5 * (127 - x), 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n\n\t    return this;\n\t  }\n\t  /**\n\t   * Adjusts the color saturation of the pixel.\n\t   * Positive values will increase saturation, negative values will decrease saturation (trend towards greyscale).\n\t   * @param {Number} value A value between -100 & 100.\n\t   * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  adjustSaturation(value) {\n\t    if (value === 0 || isNaN(value)) {\n\t      return this;\n\t    }\n\n\t    value = this._cleanValue(value, 100);\n\t    let x = 1 + (value > 0 ? 3 * value / 100 : value / 100);\n\t    let lumR = 0.3086;\n\t    let lumG = 0.6094;\n\t    let lumB = 0.0820;\n\n\t    this._multiplyMatrix([lumR * (1 - x) + x, lumG * (1 - x), lumB * (1 - x), 0, 0, lumR * (1 - x), lumG * (1 - x) + x, lumB * (1 - x), 0, 0, lumR * (1 - x), lumG * (1 - x), lumB * (1 - x) + x, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n\n\t    return this;\n\t  }\n\t  /**\n\t   * Adjusts the hue of the pixel color.\n\t   * @param {Number} value A value between -180 & 180.\n\t   * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  adjustHue(value) {\n\t    if (value === 0 || isNaN(value)) {\n\t      return this;\n\t    }\n\n\t    value = this._cleanValue(value, 180) / 180 * Math.PI;\n\t    let cosVal = Math.cos(value);\n\t    let sinVal = Math.sin(value);\n\t    let lumR = 0.213;\n\t    let lumG = 0.715;\n\t    let lumB = 0.072;\n\n\t    this._multiplyMatrix([lumR + cosVal * (1 - lumR) + sinVal * -lumR, lumG + cosVal * -lumG + sinVal * -lumG, lumB + cosVal * -lumB + sinVal * (1 - lumB), 0, 0, lumR + cosVal * -lumR + sinVal * 0.143, lumG + cosVal * (1 - lumG) + sinVal * 0.140, lumB + cosVal * -lumB + sinVal * -0.283, 0, 0, lumR + cosVal * -lumR + sinVal * -(1 - lumR), lumG + cosVal * -lumG + sinVal * lumG, lumB + cosVal * (1 - lumB) + sinVal * lumB, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n\n\t    return this;\n\t  }\n\t  /**\n\t   * Concatenates (multiplies) the specified matrix with this one.\n\t   * @param {Array} matrix An array or ColorMatrix instance.\n\t   * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  concat(matrix) {\n\t    matrix = this._fixMatrix(matrix);\n\n\t    if (matrix.length != ColorMatrix.LENGTH) {\n\t      return this;\n\t    }\n\n\t    this._multiplyMatrix(matrix);\n\n\t    return this;\n\t  }\n\t  /**\n\t   * @return {easeljs.ColorMatrix} A clone of this ColorMatrix.\n\t   */\n\n\n\t  clone() {\n\t    return new ColorMatrix().copy(this);\n\t  }\n\t  /**\n\t   * Return a length 25 (5x5) array instance containing this matrix's values.\n\t   * @return {Array} An array holding this matrix's values.\n\t   */\n\n\n\t  toArray() {\n\t    const arr = [];\n\t    const l = ColorMatrix.LENGTH;\n\n\t    for (let i = 0; i < l; i++) {\n\t      arr[i] = this[i];\n\t    }\n\n\t    return arr;\n\t  }\n\t  /**\n\t   * Copy the specified matrix's values to this matrix.\n\t   * @param {Array | easeljs.ColorMatrix} matrix An array or ColorMatrix instance.\n\t   * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t   * @chainable\n\t   */\n\n\n\t  copy(matrix) {\n\t    const l = ColorMatrix.LENGTH;\n\n\t    for (let i = 0; i < l; i++) {\n\t      this[i] = matrix[i];\n\t    }\n\n\t    return this;\n\t  }\n\t  /**\n\t   * Returns a string representation of this object.\n\t   * @return {String} a string representation of the instance.\n\t   */\n\n\n\t  toString() {\n\t    return `[${this.constructor.name}]`;\n\t  }\n\t  /**\n\t   * @param {Array} matrix\n\t   * @protected\n\t   */\n\n\n\t  _multiplyMatrix(matrix) {\n\t    let col = [];\n\n\t    for (let i = 0; i < 5; i++) {\n\t      for (let j = 0; j < 5; j++) {\n\t        col[j] = this[j + i * 5];\n\t      }\n\n\t      for (let j = 0; j < 5; j++) {\n\t        let val = 0;\n\n\t        for (let k = 0; k < 5; k++) {\n\t          val += matrix[j + k * 5] * col[k];\n\t        }\n\n\t        this[j + i * 5] = val;\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Make sure values are within the specified range, hue has a limit of 180, brightness is 255, others are 100.\n\t   * @param {Number} value The raw number\n\t   * @param {Number} limit The maximum that the number can be. The minimum is the limit * -1.\n\t   * @protected\n\t   */\n\n\n\t  _cleanValue(value, limit) {\n\t    return Math.min(limit, Math.max(-limit, value));\n\t  }\n\t  /**\n\t   * Makes sure matrixes are 5x5 (25 long).\n\t   * @param {Array} matrix\n\t   * @protected\n\t   */\n\n\n\t  _fixMatrix(matrix) {\n\t    if (matrix instanceof ColorMatrix) {\n\t      matrix = matrix.toArray();\n\t    }\n\n\t    if (matrix.length < ColorMatrix.LENGTH) {\n\t      matrix = matrix.slice(0, matrix.length).concat(ColorMatrix.IDENTITY_MATRIX.slice(matrix.length, ColorMatrix.LENGTH));\n\t    } else if (matrix.length > ColorMatrix.LENGTH) {\n\t      matrix = matrix.slice(0, ColorMatrix.LENGTH);\n\t    }\n\n\t    return matrix;\n\t  }\n\n\t}\n\t/**\n\t * Array of delta values for contrast calculations.\n\t * @type {Array<Number>}\n\t * @protected\n\t * @readonly\n\t * @static\n\t */\n\n\tColorMatrix.DELTA_INDEX = Object.freeze([0, 0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1, 0.11, 0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24, 0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42, 0.44, 0.46, 0.48, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65, 0.68, 0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98, 1.0, 1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54, 1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0, 2.12, 2.25, 2.37, 2.50, 2.62, 2.75, 2.87, 3.0, 3.2, 3.4, 3.6, 3.8, 4.0, 4.3, 4.7, 4.9, 5.0, 5.5, 6.0, 6.5, 6.8, 7.0, 7.3, 7.5, 7.8, 8.0, 8.4, 8.7, 9.0, 9.4, 9.6, 9.8, 10.0]);\n\t/**\n\t * Identity matrix values.\n\t * @type {Array<Number>}\n\t * @protected\n\t * @readonly\n\t * @static\n\t */\n\n\tColorMatrix.IDENTITY_MATRIX = Object.freeze([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n\t/**\n\t * The constant length of a color matrix.\n\t * @type {Number}\n\t * @protected\n\t * @readonly\n\t * @static\n\t */\n\n\tColorMatrix.LENGTH = 25;\n\n\t/**\n\t * @license ColorMatrixFilter\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * Allows you to carry out complex color operations such as modifying saturation, brightness, or inverting. See the\n\t * {@link easeljs.ColorMatrix} for more information on changing colors. For an easier color transform,\n\t * consider the {@link easeljs.ColorFilter}.\n\t *\n\t *\n\t * @memberof easeljs\n\t * @extends easeljs.Filter\n\t * @example\n\t * let shape = new Shape().set({ x: 100, y: 100 });\n\t * shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 50);\n\t * let matrix = new ColorMatrix().adjustHue(180).adjustSaturation(100);\n\t * shape.filters = [ new ColorMatrixFilter(matrix) ];\n\t * shape.cache(-50, -50, 100, 100);\n\t *\n\t * @param {Array | easeljs.ColorMatrix} matrix A 4x5 matrix describing the color operation to perform.\n\t */\n\n\tclass ColorMatrixFilter extends Filter {\n\t  constructor(matrix) {\n\t    super();\n\t    /**\n\t     * A 4x5 matrix describing the color operation to perform.\n\t     * @type {Array | easeljs.ColorMatrix}\n\t     */\n\n\t    this.matrix = matrix;\n\t    this.FRAG_SHADER_BODY = `\n\t\t\tuniform mat4 uColorMatrix;\n\t\t\tuniform vec4 uColorMatrixOffset;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\n\t\t\t\tmat4 m = uColorMatrix;\n\t\t\t\tvec4 newColor = vec4(0,0,0,0);\n\t\t\t\tnewColor.r = color.r*m[0][0] + color.g*m[0][1] + color.b*m[0][2] + color.a*m[0][3];\n\t\t\t\tnewColor.g = color.r*m[1][0] + color.g*m[1][1] + color.b*m[1][2] + color.a*m[1][3];\n\t\t\t\tnewColor.b = color.r*m[2][0] + color.g*m[2][1] + color.b*m[2][2] + color.a*m[2][3];\n\t\t\t\tnewColor.a = color.r*m[3][0] + color.g*m[3][1] + color.b*m[3][2] + color.a*m[3][3];\n\n\t\t\t\tgl_FragColor = newColor + uColorMatrixOffset;\n\t\t\t}\n\t\t`;\n\t  }\n\n\t  shaderParamSetup(gl, stage, shaderProgram) {\n\t    let mat = this.matrix;\n\t    let colorMatrix = new Float32Array([mat[0], mat[1], mat[2], mat[3], mat[5], mat[6], mat[7], mat[8], mat[10], mat[11], mat[12], mat[13], mat[15], mat[16], mat[17], mat[18]]);\n\t    gl.uniformMatrix4fv(gl.getUniformLocation(shaderProgram, \"uColorMatrix\"), false, colorMatrix);\n\t    gl.uniform4f(gl.getUniformLocation(shaderProgram, \"uColorMatrixOffset\"), mat[4] / 255, mat[9] / 255, mat[14] / 255, mat[19] / 255);\n\t  }\n\t  /**\n\t   * @return {easeljs.ColorMatrixFilter}\n\t   */\n\n\n\t  clone() {\n\t    return new ColorMatrixFilter(this.matrix);\n\t  }\n\n\t  _applyFilter(imageData) {\n\t    let data = imageData.data;\n\t    const l = data.length;\n\t    let r, g, b, a;\n\t    let mtx = this.matrix;\n\t    let m0 = mtx[0],\n\t        m1 = mtx[1],\n\t        m2 = mtx[2],\n\t        m3 = mtx[3],\n\t        m4 = mtx[4];\n\t    let m5 = mtx[5],\n\t        m6 = mtx[6],\n\t        m7 = mtx[7],\n\t        m8 = mtx[8],\n\t        m9 = mtx[9];\n\t    let m10 = mtx[10],\n\t        m11 = mtx[11],\n\t        m12 = mtx[12],\n\t        m13 = mtx[13],\n\t        m14 = mtx[14];\n\t    let m15 = mtx[15],\n\t        m16 = mtx[16],\n\t        m17 = mtx[17],\n\t        m18 = mtx[18],\n\t        m19 = mtx[19];\n\n\t    for (let i = 0; i < l; i += 4) {\n\t      r = data[i];\n\t      g = data[i + 1];\n\t      b = data[i + 2];\n\t      a = data[i + 3];\n\t      data[i] = r * m0 + g * m1 + b * m2 + a * m3 + m4; // red\n\n\t      data[i + 1] = r * m5 + g * m6 + b * m7 + a * m8 + m9; // green\n\n\t      data[i + 2] = r * m10 + g * m11 + b * m12 + a * m13 + m14; // blue\n\n\t      data[i + 3] = r * m15 + g * m16 + b * m17 + a * m18 + m19; // alpha\n\t    }\n\n\t    return true;\n\t  }\n\n\t}\n\n\t/*\n\t* @license ButtonHelper\n\t* Visit http://createjs.com/ for documentation, updates and examples.\n\t*\n\t* Copyright (c) 2017 gskinner.com, inc.\n\t*\n\t* Permission is hereby granted, free of charge, to any person\n\t* obtaining a copy of this software and associated documentation\n\t* files (the \"Software\"), to deal in the Software without\n\t* restriction, including without limitation the rights to use,\n\t* copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t* copies of the Software, and to permit persons to whom the\n\t* Software is furnished to do so, subject to the following\n\t* conditions:\n\t*\n\t* The above copyright notice and this permission notice shall be\n\t* included in all copies or substantial portions of the Software.\n\t*\n\t* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t* OTHER DEALINGS IN THE SOFTWARE.\n\t*/\n\n\t/**\n\t * The ButtonHelper is a helper class to create interactive buttons from {@link easeljs.MovieClip} or\n\t * {@link easeljs.Sprite} instances. This class will intercept mouse events from an object, and\n\t * automatically call {@link easeljs.Sprite#gotoAndStop} or {@link easlejs.Sprite#gotoAndPlay},\n\t * to the respective animation labels, add a pointer cursor, and allows the user to define a hit state frame.\n\t *\n\t * The ButtonHelper instance does not need to be added to the stage, but a reference should be maintained to prevent\n\t * garbage collection.\n\t *\n\t * Note that over states will not work unless you call {@link easeljs.Stage#enableMouseOver}.\n\t *\n\t * @memberof easeljs\n\t * @example\n\t * let helper = new ButtonHelper(sprite, \"out\", \"over\", \"down\", false, sprite, \"hit\");\n\t * sprite.addEventListener(\"click\", (evt) => {\n\t *   // clicked\n\t * }));\n\t *\n\t * @param {easeljs.Sprite | easeljs.MovieClip} target The instance to manage.\n\t * @param {String} [outLabel=\"out\"] The label or animation to go to when the user rolls out of the button.\n\t * @param {String} [overLabel=\"over\"] The label or animation to go to when the user rolls over the button.\n\t * @param {String} [downLabel=\"down\"] The label or animation to go to when the user presses the button.\n\t * @param {Boolean} [play=false] If the helper should call \"gotoAndPlay\" or \"gotoAndStop\" on the button when changing\n\t * states.\n\t * @param {easeljs.DisplayObject} [hitArea] An optional item to use as the hit state for the button. If this is not defined,\n\t * then the button's visible states will be used instead. Note that the same instance as the \"target\" argument can be\n\t * used for the hitState.\n\t * @param {String} [hitLabel] The label or animation on the hitArea instance that defines the hitArea bounds. If this is\n\t * null, then the default state of the hitArea will be used.\n\t */\n\tclass ButtonHelper {\n\t  constructor(target, outLabel = \"out\", overLabel = \"over\", downLabel = \"down\", play = false, hitArea, hitLabel) {\n\t    if (!target.addEventListener) {\n\t      return;\n\t    }\n\t    /**\n\t     * The target for this button helper.\n\t     * @type {easeljs.MovieClip | easeljs.Sprite}\n\t     * @readonly\n\t     */\n\n\n\t    this.target = target;\n\t    /**\n\t     * The label name or frame number to display when the user mouses out of the target.\n\t     * @default \"over\"\n\t     * @type {String | Number}\n\t     */\n\n\t    this.overLabel = overLabel;\n\t    /**\n\t     * The label name or frame number to display when the user mouses over the target.\n\t     * @default \"out\"\n\t     * @type {String | Number}\n\t     */\n\n\t    this.outLabel = outLabel;\n\t    /**\n\t     * The label name or frame number to display when the user presses on the target.\n\t     * @default \"down\"\n\t     * @type {String | Number}\n\t     */\n\n\t    this.downLabel = downLabel == null;\n\t    /**\n\t     * If true, then ButtonHelper will call gotoAndPlay, if false, it will use gotoAndStop.\n\t     * @default false\n\t     * @type {Boolean}\n\t     */\n\n\t    this.play = play;\n\t    /**\n\t     * @type {Boolean}\n\t     * @protected\n\t     */\n\n\t    this._isPressed = false;\n\t    /**\n\t     * @type {Boolean}\n\t     * @protected\n\t     */\n\n\t    this._isOver = false;\n\t    /**\n\t     * @type {Boolean}\n\t     * @protected\n\t     */\n\n\t    this._enabled = false;\n\t    target.mouseChildren = false; // prevents issues when children are removed from the display list when state changes.\n\n\t    this.enabled = true;\n\t    this.handleEvent({});\n\n\t    if (hitArea) {\n\t      if (hitLabel) {\n\t        hitArea.actionsEnabled = false;\n\t        hitArea.gotoAndStop && hitArea.gotoAndStop(hitLabel);\n\t      }\n\n\t      target.hitArea = hitArea;\n\t    }\n\t  }\n\t  /**\n\t   * Enables or disables the button functionality on the target.\n\t   * @type {Boolean}\n\t   */\n\n\n\t  get enabled() {\n\t    return this._enabled;\n\t  }\n\n\t  set enabled(enabled) {\n\t    if (enabled === this._enabled) {\n\t      return;\n\t    }\n\n\t    let o = this.target;\n\t    this._enabled = enabled;\n\n\t    if (enabled) {\n\t      o.cursor = \"pointer\";\n\t      o.addEventListener(\"rollover\", this);\n\t      o.addEventListener(\"rollout\", this);\n\t      o.addEventListener(\"mousedown\", this);\n\t      o.addEventListener(\"pressup\", this);\n\n\t      if (o._reset) {\n\t        o.__reset = o._reset;\n\t        o._reset = this._reset;\n\t      }\n\t    } else {\n\t      o.cursor = null;\n\t      o.removeEventListener(\"rollover\", this);\n\t      o.removeEventListener(\"rollout\", this);\n\t      o.removeEventListener(\"mousedown\", this);\n\t      o.removeEventListener(\"pressup\", this);\n\n\t      if (o.__reset) {\n\t        o._reset = o.__reset;\n\t        delete o.__reset;\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Returns a string representation of this object.\n\t   * @return {String} a string representation of the instance.\n\t   */\n\n\n\t  toString() {\n\t    return `[${this.constructor.name}]`;\n\t  }\n\t  /**\n\t   * @param {Object} evt The mouse event to handle.\n\t   * @protected\n\t   */\n\n\n\t  handleEvent(evt) {\n\t    let label,\n\t        t = this.target,\n\t        type = evt.type;\n\n\t    if (type === \"mousedown\") {\n\t      this._isPressed = true;\n\t      label = this.downLabel;\n\t    } else if (type === \"pressup\") {\n\t      this._isPressed = false;\n\t      label = this._isOver ? this.overLabel : this.outLabel;\n\t    } else if (type === \"rollover\") {\n\t      this._isOver = true;\n\t      label = this._isPressed ? this.downLabel : this.overLabel;\n\t    } else {\n\t      // rollout and default\n\t      this._isOver = false;\n\t      label = this._isPressed ? this.overLabel : this.outLabel;\n\t    }\n\n\t    if (this.play) {\n\t      t.gotoAndPlay && t.gotoAndPlay(label);\n\t    } else {\n\t      t.gotoAndStop && t.gotoAndStop(label);\n\t    }\n\t  }\n\t  /**\n\t   * Injected into target. Preserves the paused state through a reset.\n\t   * @protected\n\t   */\n\n\n\t  _reset() {\n\t    // TODO: explore better ways to handle this issue. This is hacky & disrupts object signatures.\n\t    let p = this.paused;\n\n\t    this.__reset();\n\n\t    this.paused = p;\n\t  }\n\n\t}\n\n\t/**\n\t * @license Touch\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\n\t/**\n\t * Global utility for working with multi-touch enabled devices in EaselJS. Currently supports W3C Touch API (iOS and\n\t * modern Android browser) and the Pointer API (IE), including ms-prefixed events in IE10, and unprefixed in IE11.\n\t *\n\t * Ensure that you {{#crossLink \"Touch/disable\"}}{{/crossLink}} touch when cleaning up your application. You do not have\n\t * to check if touch is supported to enable it, as it will fail gracefully if it is not supported.\n\t *\n\t * <strong>Note:</strong> It is important to disable Touch on a stage that you are no longer using:\n\t *\n\t * @memberof easeljs\n\t * @name easeljs.Touch\n\t * @example\n\t * let stage = new Stage(\"canvasId\");\n\t * Touch.enable(stage);\n\t */\n\tvar Touch = Touch = {\n\t  /**\n\t   * Returns `true` if touch is supported in the current browser.\n\t   * @return {Boolean} Indicates whether touch is supported in the current browser.\n\t   */\n\t  isSupported() {\n\t    return !!('ontouchstart' in window || // iOS & Android\n\t    window.MSPointerEvent && window.navigator.msMaxTouchPoints > 0 // IE10\n\t    || window.PointerEvent && window.navigator.maxTouchPoints > 0); // IE11+\n\t  },\n\n\t  /**\n\t   * Enables touch interaction for the specified EaselJS {@link easeljs.Stage}. Currently supports iOS\n\t   * (and compatible browsers, such as modern Android browsers), and IE10/11. Supports both single touch and\n\t   * multi-touch modes. Extends the EaselJS {@link easeljs.MouseEvent} model, but without support for\n\t   * double click or over/out events.\n\t   * @param {easeljs.Stage} stage The Stage to enable touch on.\n\t   * @param {Boolean} [singleTouch=false] If `true`, only a single touch will be active at a time.\n\t   * @param {Boolean} [allowDefault=false] If `true`, then default gesture actions (ex. scrolling, zooming) will be\n\t   * allowed when the user is interacting with the target canvas.\n\t   * @return {Boolean} Returns `true` if touch was successfully enabled on the target stage.\n\t   */\n\t  enable(stage, singleTouch = false, allowDefault = false) {\n\t    if (!stage || !stage.canvas || !this.isSupported()) {\n\t      return false;\n\t    }\n\n\t    if (stage.__touch) {\n\t      return true;\n\t    } // inject required properties on stage:\n\n\n\t    stage.__touch = {\n\t      pointers: {},\n\t      multitouch: !singleTouch,\n\t      preventDefault: !allowDefault,\n\t      count: 0\n\t    }; // note that in the future we may need to disable the standard mouse event model before adding\n\t    // these to prevent duplicate calls. It doesn't seem to be an issue with iOS devices though.\n\n\t    if ('ontouchstart' in window) {\n\t      this._IOS_enable(stage);\n\t    } else if (window.PointerEvent || window.MSPointerEvent) {\n\t      this._IE_enable(stage);\n\t    }\n\n\t    return true;\n\t  },\n\n\t  /**\n\t   * Removes all listeners that were set up when calling `Touch.enable()` on a stage.\n\t   * @param {easeljs.Stage} stage The Stage to disable touch on.\n\t   */\n\t  disable(stage) {\n\t    if (!stage) {\n\t      return;\n\t    }\n\n\t    if ('ontouchstart' in window) {\n\t      this._IOS_disable(stage);\n\t    } else if (window.PointerEvent || window.MSPointerEvent) {\n\t      this._IE_disable(stage);\n\t    }\n\n\t    delete stage.__touch;\n\t  },\n\n\t  /**\n\t   * @private\n\t   * @param {easeljs.Stage} stage\n\t   */\n\t  _IOS_enable(stage) {\n\t    let canvas = stage.canvas;\n\n\t    let f = stage.__touch.f = e => this._IOS_handleEvent(stage, e);\n\n\t    canvas.addEventListener(\"touchstart\", f, false);\n\t    canvas.addEventListener(\"touchmove\", f, false);\n\t    canvas.addEventListener(\"touchend\", f, false);\n\t    canvas.addEventListener(\"touchcancel\", f, false);\n\t  },\n\n\t  /**\n\t   * @private\n\t   * @param {easeljs.Stage} stage\n\t   */\n\t  _IOS_disable(stage) {\n\t    let canvas = stage.canvas;\n\n\t    if (!canvas) {\n\t      return;\n\t    }\n\n\t    let f = stage.__touch.f;\n\t    canvas.removeEventListener(\"touchstart\", f, false);\n\t    canvas.removeEventListener(\"touchmove\", f, false);\n\t    canvas.removeEventListener(\"touchend\", f, false);\n\t    canvas.removeEventListener(\"touchcancel\", f, false);\n\t  },\n\n\t  /**\n\t   * @private\n\t   * @param {easeljs.Stage} stage\n\t   * @param {Object} e The event to handle\n\t   */\n\t  _IOS_handleEvent(stage, e) {\n\t    if (!stage) {\n\t      return;\n\t    }\n\n\t    if (stage.__touch.preventDefault) {\n\t      e.preventDefault && e.preventDefault();\n\t    }\n\n\t    let touches = e.changedTouches;\n\t    let type = e.type;\n\t    const l = touches.length;\n\n\t    for (let touch of touches) {\n\t      let id = touch.identifier;\n\n\t      if (touch.target != stage.canvas) {\n\t        continue;\n\t      }\n\n\t      if (type === \"touchstart\") {\n\t        this._handleStart(stage, id, e, touch.pageX, touch.pageY);\n\t      } else if (type === \"touchmove\") {\n\t        this._handleMove(stage, id, e, touch.pageX, touch.pageY);\n\t      } else if (type === \"touchend\" || type === \"touchcancel\") {\n\t        this._handleEnd(stage, id, e);\n\t      }\n\t    }\n\t  },\n\n\t  /**\n\t   * @private\n\t   * @param {easeljs.Stage} stage\n\t   */\n\t  _IE_enable(stage) {\n\t    let canvas = stage.canvas;\n\n\t    let f = stage.__touch.f = e => this._IE_handleEvent(stage, e);\n\n\t    if (window.PointerEvent === undefined) {\n\t      canvas.addEventListener(\"MSPointerDown\", f, false);\n\t      window.addEventListener(\"MSPointerMove\", f, false);\n\t      window.addEventListener(\"MSPointerUp\", f, false);\n\t      window.addEventListener(\"MSPointerCancel\", f, false);\n\n\t      if (stage.__touch.preventDefault) {\n\t        canvas.style.msTouchAction = \"none\";\n\t      }\n\t    } else {\n\t      canvas.addEventListener(\"pointerdown\", f, false);\n\t      window.addEventListener(\"pointermove\", f, false);\n\t      window.addEventListener(\"pointerup\", f, false);\n\t      window.addEventListener(\"pointercancel\", f, false);\n\n\t      if (stage.__touch.preventDefault) {\n\t        canvas.style.touchAction = \"none\";\n\t      }\n\t    }\n\n\t    stage.__touch.activeIDs = {};\n\t  },\n\n\t  /**\n\t   * @private\n\t   * @param {easeljs.Stage} stage\n\t   */\n\t  _IE_disable(stage) {\n\t    let f = stage.__touch.f;\n\n\t    if (window.PointerEvent === undefined) {\n\t      window.removeEventListener(\"MSPointerMove\", f, false);\n\t      window.removeEventListener(\"MSPointerUp\", f, false);\n\t      window.removeEventListener(\"MSPointerCancel\", f, false);\n\n\t      if (stage.canvas) {\n\t        stage.canvas.removeEventListener(\"MSPointerDown\", f, false);\n\t      }\n\t    } else {\n\t      window.removeEventListener(\"pointermove\", f, false);\n\t      window.removeEventListener(\"pointerup\", f, false);\n\t      window.removeEventListener(\"pointercancel\", f, false);\n\n\t      if (stage.canvas) {\n\t        stage.canvas.removeEventListener(\"pointerdown\", f, false);\n\t      }\n\t    }\n\t  },\n\n\t  /**\n\t   * @private\n\t   * @param {easeljs.Stage} stage\n\t   * @param {Object} e The event to handle.\n\t   */\n\t  _IE_handleEvent(stage, e) {\n\t    if (!stage) {\n\t      return;\n\t    }\n\n\t    if (stage.__touch.preventDefault) {\n\t      e.preventDefault && e.preventDefault();\n\t    }\n\n\t    let type = e.type;\n\t    let id = e.pointerId;\n\t    let ids = stage.__touch.activeIDs;\n\n\t    if (type === \"MSPointerDown\" || type === \"pointerdown\") {\n\t      if (e.srcElement != stage.canvas) {\n\t        return;\n\t      }\n\n\t      ids[id] = true;\n\n\t      this._handleStart(stage, id, e, e.pageX, e.pageY);\n\t    } else if (ids[id]) {\n\t      // it's an id we're watching\n\t      if (type === \"MSPointerMove\" || type === \"pointermove\") {\n\t        this._handleMove(stage, id, e, e.pageX, e.pageY);\n\t      } else if (type === \"MSPointerUp\" || type === \"MSPointerCancel\" || type === \"pointerup\" || type === \"pointercancel\") {\n\t        delete ids[id];\n\n\t        this._handleEnd(stage, id, e);\n\t      }\n\t    }\n\t  },\n\n\t  /**\n\t   * @private\n\t   * @param {easeljs.Stage} stage\n\t   * @param {String | Number} id\n\t   * @param {Object} e\n\t   * @param {Number} x\n\t   * @param {Number} y\n\t   */\n\t  _handleStart(stage, id, e, x, y) {\n\t    let props = stage.__touch;\n\n\t    if (!props.multitouch && props.count) {\n\t      return;\n\t    }\n\n\t    let ids = props.pointers;\n\n\t    if (ids[id]) {\n\t      return;\n\t    }\n\n\t    ids[id] = true;\n\t    props.count++;\n\n\t    stage._handlePointerDown(id, e, x, y);\n\t  },\n\n\t  /**\n\t   * @private\n\t   * @param {easeljs.Stage} stage\n\t   * @param {String | Number} id\n\t   * @param {Object} e\n\t   * @param {Number} x\n\t   * @param {Number} y\n\t   */\n\t  _handleMove(stage, id, e, x, y) {\n\t    if (!stage.__touch.pointers[id]) {\n\t      return;\n\t    }\n\n\t    stage._handlePointerMove(id, e, x, y);\n\t  },\n\n\t  /**\n\t   * @private\n\t   * @param {easeljs.Stage} stage\n\t   * @param {String | Number} id\n\t   * @param {Object} e\n\t   */\n\t  _handleEnd(stage, id, e) {\n\t    // TODO: cancel should be handled differently for proper UI (ex. an up would trigger a click, a cancel would more closely resemble an out).\n\t    let props = stage.__touch;\n\t    let ids = props.pointers;\n\n\t    if (!ids[id]) {\n\t      return;\n\t    }\n\n\t    props.count--;\n\n\t    stage._handlePointerUp(id, e, true);\n\n\t    delete ids[id];\n\t  }\n\n\t};\n\n\t/**\n\t * @license SpriteSheetBuilder\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * The SpriteSheetBuilder allows you to generate {@link easeljs.SpriteSheet} instances at run time\n\t * from any display object. This can allow you to maintain your assets as vector graphics (for low file size), and\n\t * render them at run time as SpriteSheets for better performance.\n\t *\n\t * SpriteSheets can be built either synchronously, or asynchronously, so that large SpriteSheets can be generated\n\t * without locking the UI.\n\t *\n\t * Note that the \"images\" used in the generated SpriteSheet are actually canvas elements, and that they will be\n\t * sized to the nearest power of 2 up to the value of {@link easeljs.SpriteSheetBuilder#maxWidth}\n\t * or {@link easeljs.SpriteSheetBuilder#maxHeight}.\n\t *\n\t * @memberof easeljs\n\t * @extends core.EventDispatcher\n\t *\n\t * @param {Number} [framerate=0] The {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} of\n\t * {@link easeljs.SpriteSheet} instances that are created.\n\t */\n\n\tclass SpriteSheetBuilder extends EventDispatcher {\n\t  constructor(framerate = 0) {\n\t    super();\n\t    /**\n\t     * The maximum width for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t     * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t     * dimensions, then additional images will be created as needed.\n\t     * @type {Number}\n\t     * @default 2048\n\t    */\n\n\t    this.maxWidth = 2048;\n\t    /**\n\t     * The maximum height for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t     * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t     * dimensions, then additional images will be created as needed.\n\t     * @type {Number}\n\t     * @default 2048\n\t     */\n\n\t    this.maxHeight = 2048;\n\t    /**\n\t     * The SpriteSheet that was generated. This will be null before a build is completed successfully.\n\t     * @type {easeljs.SpriteSheet}\n\t     */\n\n\t    this.spriteSheet = null;\n\t    /**\n\t     * The scale to apply when drawing all frames to the SpriteSheet. This is multiplied against any scale specified\n\t     * in the addFrame call. This can be used, for example, to generate a SpriteSheet at run time that is tailored\n\t     * to the a specific device resolution (ex. tablet vs mobile).\n\t     * @type {Number}\n\t     * @default 1\n\t     */\n\n\t    this.scale = 1;\n\t    /**\n\t    * The padding to use between frames. This is helpful to preserve antialiasing on drawn vector content.\n\t    * @type {Number}\n\t    * @default 1\n\t    */\n\n\t    this.padding = 1;\n\t    /**\n\t     * A number from 0.01 to 0.99 that indicates what percentage of time the builder can use. This can be\n\t     * thought of as the number of seconds per second the builder will use. For example, with a timeSlice value of 0.3,\n\t     * the builder will run 20 times per second, using approximately 15ms per build (30% of available time, or 0.3s per second).\n\t     * Defaults to 0.3.\n\t     * @type {Number}\n\t     * @default 0.3\n\t     */\n\n\t    this.timeSlice = 0.3;\n\t    /**\n\t     * A value between 0 and 1 that indicates the progress of a build, or -1 if a build has not\n\t     * been initiated.\n\t     * @type {Number}\n\t     * @default -1\n\t     * @readonly\n\t     */\n\n\t    this.progress = -1;\n\t    /**\n\t     * A {@link easeljs.SpriteSheet#framerate} value that will be passed to new SpriteSheet instances that are\n\t     * created. If no framerate is specified (or it is 0), then SpriteSheets will use the {@link core.Ticker} framerate.\n\t     * @type {Number}\n\t     * @default 0\n\t     */\n\n\t    this.framerate = framerate;\n\t    /**\n\t     * @protected\n\t     * @type {Array}\n\t     */\n\n\t    this._frames = [];\n\t    /**\n\t     * @protected\n\t     * @type {Array}\n\t     */\n\n\t    this._animations = {};\n\t    /**\n\t     * @protected\n\t     * @type {Array}\n\t     */\n\n\t    this._data = null;\n\t    /**\n\t     * @protected\n\t     * @type {Number}\n\t     */\n\n\t    this._nextFrameIndex = 0;\n\t    /**\n\t     * @protected\n\t     * @type {Number}\n\t     */\n\n\t    this._index = 0;\n\t    /**\n\t     * @protected\n\t     * @type {Number}\n\t     */\n\n\t    this._timerID = null;\n\t    /**\n\t     * @protected\n\t     * @type {Number}\n\t     */\n\n\t    this._scale = 1;\n\t  }\n\t  /**\n\t   * Adds a frame to the {@link easeljs.SpriteSheet}. Note that the frame will not be drawn until you\n\t   * call {@link easeljs.SpriteSheetBuilder#build} method. The optional setup params allow you to have\n\t   * a function run immediately before the draw occurs. For example, this allows you to add a single source multiple\n\t   * times, but manipulate it or its children to change it to generate different frames.\n\t   *\n\t   * Note that the source's transformations (x, y, scale, rotate, alpha) will be ignored, except for regX/Y. To apply\n\t   * transforms to a source object and have them captured in the SpriteSheet, simply place it into a {@link easeljs.Container}\n\t   * and pass in the Container as the source.\n\t   * @param {easeljs.DisplayObject} source The source {{#crossLink \"DisplayObject\"}}{{/crossLink}}  to draw as the frame.\n\t   * @param {easeljs.Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the\n\t   * source to draw to the frame. If not specified, it will look for a `getBounds` method, bounds property, or\n\t   * `nominalBounds` property on the source to use. If one is not found, the frame will be skipped.\n\t   * @param {Number} [scale=1] Optional. The scale to draw this frame at. Default is 1.\n\t   * @param {Function} [setupFunction] A function to call immediately before drawing this frame. It will be called with two parameters: the source, and setupData.\n\t   * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t   * @return {Number} The index of the frame that was just added, or null if a sourceRect could not be determined.\n\t   */\n\n\n\t  addFrame(source, sourceRect, scale = 1, setupFunction, setupData) {\n\t    if (this._data) {\n\t      throw SpriteSheetBuilder.ERR_RUNNING;\n\t    }\n\n\t    let rect = sourceRect || source.bounds || source.nominalBounds || source.getBounds && source.getBounds();\n\n\t    if (!rect) {\n\t      return null;\n\t    }\n\n\t    return this._frames.push({\n\t      source,\n\t      sourceRect: rect,\n\t      scale,\n\t      funct: setupFunction,\n\t      data: setupData,\n\t      index: this._frames.length,\n\t      height: rect.height * scale\n\t    }) - 1;\n\t  }\n\t  /**\n\t   * Adds an animation that will be included in the created {@link easeljs.SpriteSheet}.\n\t   * @param {String} name The name for the animation.\n\t   * @param {Array} frames An array of frame indexes that comprise the animation. Ex. [3,6,5] would describe an animation\n\t   * that played frame indexes 3, 6, and 5 in that order.\n\t   * @param {String} [next] Specifies the name of the animation to continue to after this animation ends. You can\n\t   * also pass false to have the animation stop when it ends. By default it will loop to the start of the same animation.\n\t   * @param {Number} [speed] Specifies a frame advance speed for this animation. For example, a value of 0.5 would\n\t   * cause the animation to advance every second tick. Note that earlier versions used `frequency` instead, which had\n\t   * the opposite effect.\n\t   */\n\n\n\t  addAnimation(name, frames, next, speed) {\n\t    if (this._data) {\n\t      throw SpriteSheetBuilder.ERR_RUNNING;\n\t    }\n\n\t    this._animations[name] = {\n\t      frames,\n\t      next,\n\t      speed\n\t    };\n\t  }\n\t  /**\n\t   * This will take a {@link easeljs.MovieClip} instance, and add its frames and labels to this\n\t   * builder. Labels will be added as an animation running from the label index to the next label. For example, if\n\t   * there is a label named \"foo\" at frame 0 and a label named \"bar\" at frame 10, in a MovieClip with 15 frames, it\n\t   * will add an animation named \"foo\" that runs from frame index 0 to 9, and an animation named \"bar\" that runs from\n\t   * frame index 10 to 14.\n\t   *\n\t   * Note that this will iterate through the full MovieClip with {@link easeljs.MovieClip#actionsEnabled}\n\t   * set to `false`, ending on the last frame.\n\t   * @param {easeljs.MovieClip} source The source MovieClip instance to add to the SpriteSheet.\n\t   * @param {easeljs.Rectangle} [sourceRect] A Rectangle defining the portion of the source to\n\t   * draw to the frame. If not specified, it will look for a {{#crossLink \"DisplayObject/getBounds\"}}{{/crossLink}}\n\t   * method, `frameBounds` Array, `bounds` property, or `nominalBounds` property on the source to use. If one is not\n\t   * found, the MovieClip will be skipped.\n\t   * @param {Number} [scale=1] The scale to draw the movie clip at.\n\t   * @param {Function} [setupFunction] A function to call immediately before drawing each frame. It will be called\n\t   * with three parameters: the source, setupData, and the frame index.\n\t   * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t   * @param {Function} [labelFunction] This method will be called for each MovieClip label that is added with four\n\t   * parameters: the label name, the source MovieClip instance, the starting frame index (in the movieclip timeline)\n\t   * and the end index. It must return a new name for the label/animation, or `false` to exclude the label.\n\t   */\n\n\n\t  addMovieClip(source, sourceRect, scale = 1, setupFunction, setupData, labelFunction) {\n\t    if (this._data) {\n\t      throw SpriteSheetBuilder.ERR_RUNNING;\n\t    }\n\n\t    let rects = source.frameBounds;\n\t    let rect = sourceRect || source.bounds || source.nominalBounds || source.getBounds && source.getBounds();\n\n\t    if (!rect && !rects) {\n\t      return;\n\t    }\n\n\t    let baseFrameIndex = this._frames.length;\n\t    const duration = source.timeline.duration;\n\n\t    for (let i = 0; i < duration; i++) {\n\t      let r = rects && rects[i] ? rects[i] : rect;\n\t      this.addFrame(source, r, scale, this._setupMovieClipFrame, {\n\t        i,\n\t        f: setupFunction,\n\t        d: setupData\n\t      });\n\t    }\n\n\t    const labels = source.timeline._labels;\n\t    let lbls = [];\n\n\t    for (let n in labels) {\n\t      lbls.push({\n\t        index: labels[n],\n\t        label: n\n\t      });\n\t    }\n\n\t    if (lbls.length) {\n\t      lbls.sort((a, b) => a.index - b.index);\n\n\t      for (let i = 0, l = lbls.length; i < l; i++) {\n\t        let label = lbls[i].label;\n\t        let start = baseFrameIndex + lbls[i].index;\n\t        let end = baseFrameIndex + (i === l - 1 ? duration : lbls[i + 1].index);\n\t        let frames = [];\n\n\t        for (let i = start; i < end; i++) {\n\t          frames.push(i);\n\t        }\n\n\t        if (labelFunction) {\n\t          label = labelFunction(label, source, start, end);\n\n\t          if (!label) {\n\t            continue;\n\t          }\n\t        }\n\n\t        this.addAnimation(label, frames, true); // for now, this loops all animations.\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Builds a {@link easeljs.SpriteSheet} instance based on the current frames.\n\t   * @return {easeljs.SpriteSheet} The created SpriteSheet instance, or null if a build is already running or an error\n\t   * occurred.\n\t   */\n\n\n\t  build() {\n\t    if (this._data) {\n\t      throw SpriteSheetBuilder.ERR_RUNNING;\n\t    }\n\n\t    this._startBuild();\n\n\t    while (this._drawNext()) {}\n\n\t    this._endBuild();\n\n\t    return this.spriteSheet;\n\t  }\n\t  /**\n\t   * Asynchronously builds a {@link easeljs.SpriteSheet} instance based on the current frames. It will\n\t   * run 20 times per second, using an amount of time defined by `timeSlice`. When it is complete it will call the\n\t   * specified callback.\n\t   * @param {Number} [timeSlice] Sets the timeSlice property on this instance.\n\t   */\n\n\n\t  buildAsync(timeSlice) {\n\t    if (this._data) {\n\t      throw SpriteSheetBuilder.ERR_RUNNING;\n\t    }\n\n\t    this.timeSlice = timeSlice;\n\n\t    this._startBuild();\n\n\t    this._timerID = setTimeout(() => this._run(), 50 - Math.max(0.01, Math.min(0.99, this.timeSlice || 0.3)) * 50);\n\t  }\n\t  /**\n\t   * Stops the current asynchronous build.\n\t   */\n\n\n\t  stopAsync() {\n\t    clearTimeout(this._timerID);\n\t    this._data = null;\n\t  }\n\t  /**\n\t   * Returns a string representation of this object.\n\t   * @override\n\t   * @return {String} a string representation of the instance.\n\t   */\n\n\n\t  toString() {\n\t    return `[${this.constructor.name}]`;\n\t  }\n\t  /**\n\t   * @protected\n\t   */\n\n\n\t  _startBuild() {\n\t    let pad = this.padding || 0;\n\t    this.progress = 0;\n\t    this.spriteSheet = null;\n\t    this._index = 0;\n\t    this._scale = this.scale;\n\t    let dataFrames = [];\n\t    this._data = {\n\t      images: [],\n\t      frames: dataFrames,\n\t      framerate: this.framerate,\n\t      animations: this._animations // TODO: should we \"clone\" _animations in case someone adds more animations after a build?\n\n\t    };\n\n\t    let frames = this._frames.slice();\n\n\t    frames.sort((a, b) => a.height <= b.height ? -1 : 1);\n\n\t    if (frames[frames.length - 1].height + pad * 2 > this.maxHeight) {\n\t      throw SpriteSheetBuilder.ERR_DIMENSIONS;\n\t    }\n\n\t    let y = 0,\n\t        x = 0;\n\t    let img = 0;\n\n\t    while (frames.length) {\n\t      let o = this._fillRow(frames, y, img, dataFrames, pad);\n\n\t      if (o.w > x) {\n\t        x = o.w;\n\t      }\n\n\t      y += o.h;\n\n\t      if (!o.h || !frames.length) {\n\t        let canvas = window.createjs && createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n\t        canvas.width = this._getSize(x, this.maxWidth);\n\t        canvas.height = this._getSize(y, this.maxHeight);\n\t        this._data.images[img] = canvas;\n\n\t        if (!o.h) {\n\t          x = y = 0;\n\t          img++;\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  /**\n\t   * @protected\n\t   * @return {Number} The width & height of the row.\n\t   */\n\t  _setupMovieClipFrame(source, data) {\n\t    let ae = source.actionsEnabled;\n\t    source.actionsEnabled = false;\n\t    source.gotoAndStop(data.i);\n\t    source.actionsEnabled = ae;\n\t    data.f && data.f(source, data.d, data.i);\n\t  }\n\t  /**\n\t   * @protected\n\t   * @return {Number} The width & height of the row.\n\t   */\n\n\n\t  _getSize(size, max) {\n\t    let pow = 4;\n\n\t    while (Math.pow(2, ++pow) < size) {}\n\n\t    return Math.min(max, Math.pow(2, pow));\n\t  }\n\n\t  /**\n\t   * @protected\n\t   * @param {Array} frames\n\t   * @param {Number} y\n\t   * @param {HTMLImageElement} img\n\t   * @param {Object} dataFrames\n\t   * @param {Number} pad\n\t   * @return {Number} The width & height of the row.\n\t   */\n\t  _fillRow(frames, y, img, dataFrames, pad) {\n\t    let w = this.maxWidth;\n\t    let maxH = this.maxHeight;\n\t    y += pad;\n\t    let h = maxH - y;\n\t    let x = pad;\n\t    let height = 0;\n\n\t    for (let i = frames.length - 1; i >= 0; i--) {\n\t      let frame = frames[i];\n\t      let sc = this._scale * frame.scale;\n\t      let rect = frame.sourceRect;\n\t      let source = frame.source;\n\t      let rx = Math.floor(sc * rect.x - pad);\n\t      let ry = Math.floor(sc * rect.y - pad);\n\t      let rh = Math.ceil(sc * rect.height + pad * 2);\n\t      let rw = Math.ceil(sc * rect.width + pad * 2);\n\n\t      if (rw > w) {\n\t        throw SpriteSheetBuilder.ERR_DIMENSIONS;\n\t      }\n\n\t      if (rh > h || x + rw > w) {\n\t        continue;\n\t      }\n\n\t      frame.img = img;\n\t      frame.rect = new Rectangle(x, y, rw, rh);\n\t      height = height || rh;\n\t      frames.splice(i, 1);\n\t      dataFrames[frame.index] = [x, y, rw, rh, img, Math.round(-rx + sc * source.regX - pad), Math.round(-ry + sc * source.regY - pad)];\n\t      x += rw;\n\t    }\n\n\t    return {\n\t      w: x,\n\t      h: height\n\t    };\n\t  }\n\t  /**\n\t   * @protected\n\t   */\n\n\n\t  _endBuild() {\n\t    this.spriteSheet = new SpriteSheet(this._data);\n\t    this._data = null;\n\t    this.progress = 1;\n\t    this.dispatchEvent(\"complete\");\n\t  }\n\t  /**\n\t   * @protected\n\t   */\n\n\n\t  _run() {\n\t    let ts = Math.max(0.01, Math.min(0.99, this.timeSlice || 0.3)) * 50;\n\t    let t = new Date().getTime() + ts;\n\t    let complete = false;\n\n\t    while (t > new Date().getTime()) {\n\t      if (!this._drawNext()) {\n\t        complete = true;\n\t        break;\n\t      }\n\t    }\n\n\t    if (complete) {\n\t      this._endBuild();\n\t    } else {\n\t      this._timerID = setTimeout(() => this._run(), 50 - ts);\n\t    }\n\n\t    let p = this.progress = this._index / this._frames.length;\n\n\t    if (this.hasEventListener(\"progress\")) {\n\t      let evt = new Event(\"progress\");\n\t      evt.progress = p;\n\t      this.dispatchEvent(evt);\n\t    }\n\t  }\n\t  /**\n\t   * @protected\n\t   * @return {Boolean} Returns false if this is the last draw.\n\t   */\n\n\n\t  _drawNext() {\n\t    let frame = this._frames[this._index];\n\t    let sc = frame.scale * this._scale;\n\t    let rect = frame.rect;\n\t    let sourceRect = frame.sourceRect;\n\t    let canvas = this._data.images[frame.img];\n\t    let ctx = canvas.getContext(\"2d\");\n\t    frame.funct && frame.funct(frame.source, frame.data);\n\t    ctx.save();\n\t    ctx.beginPath();\n\t    ctx.rect(rect.x, rect.y, rect.width, rect.height);\n\t    ctx.clip();\n\t    ctx.translate(Math.ceil(rect.x - sourceRect.x * sc), Math.ceil(rect.y - sourceRect.y * sc));\n\t    ctx.scale(sc, sc);\n\t    frame.source.draw(ctx); // display object will draw itself.\n\n\t    ctx.restore();\n\t    return ++this._index < this._frames.length;\n\t  }\n\n\t}\n\t/**\n\t * @static\n\t * @readonly\n\t * @protected\n\t * @type {String}\n\t */\n\n\tSpriteSheetBuilder.ERR_DIMENSIONS = \"frame dimensions exceed max spritesheet dimensions\";\n\t/**\n\t * @static\n\t * @readonly\n\t * @protected\n\t * @type {String}\n\t */\n\n\tSpriteSheetBuilder.ERR_RUNNING = \"a build is already running\";\n\t/**\n\t * Dispatched when a build completes.\n\t * @event easeljs.SpriteSheetBuilder#complete\n\t * @property {Object} target The object that dispatched the event.\n\t * @property {String} type The event type.\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when an asynchronous build has progress.\n\t * @event easeljs.SpriteSheetBuilder#progress\n\t * @property {Object} target The object that dispatched the event.\n\t * @property {String} type The event type.\n\t * @property {Number} progress The current progress value (0-1).\n\t * @since 0.6.0\n\t */\n\n\t/*\n\t* @license SpriteSheetUtils\n\t* Visit http://createjs.com/ for documentation, updates and examples.\n\t*\n\t* Copyright (c) 2017 gskinner.com, inc.\n\t*\n\t* Permission is hereby granted, free of charge, to any person\n\t* obtaining a copy of this software and associated documentation\n\t* files (the \"Software\"), to deal in the Software without\n\t* restriction, including without limitation the rights to use,\n\t* copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t* copies of the Software, and to permit persons to whom the\n\t* Software is furnished to do so, subject to the following\n\t* conditions:\n\t*\n\t* The above copyright notice and this permission notice shall be\n\t* included in all copies or substantial portions of the Software.\n\t*\n\t* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t* OTHER DEALINGS IN THE SOFTWARE.\n\t*/\n\t/**\n\t * The SpriteSheetUtils class is a collection of static methods for working with {{#crossLink \"SpriteSheet\"}}{{/crossLink}}s.\n\t * A sprite sheet is a series of images (usually animation frames) combined into a single image on a regular grid. For\n\t * example, an animation consisting of 8 100x100 images could be combined into a 400x200 sprite sheet (4 frames across\n\t * by 2 high). The SpriteSheetUtils class uses a static interface and should not be instantiated.\n\t *\n\t * @memberof easeljs\n\t * @name easeljs.SpriteSheetUtils\n\t */\n\n\tvar SpriteSheetUtils = SpriteSheetUtils = {\n\t  /**\n\t   * @protected\n\t   * @type {HTMLCanvasElement | Object}\n\t   */\n\t  _workingCanvas: createCanvas(),\n\n\t  /**\n\t   * @protected\n\t   * @type {CanvasRenderingContext2D}\n\t   */\n\t  get _workingContext() {\n\t    return this._workingCanvas.getContext(\"2d\");\n\t  },\n\n\t  /**\n\t   * Returns a single frame of the specified sprite sheet as a new PNG image. An example of when this may be useful is\n\t   * to use a spritesheet frame as the source for a bitmap fill.\n\t   *\n\t   * <strong>WARNING:</strong> In almost all cases it is better to display a single frame using a {@link easeljs.Sprite}\n\t   * with a {@link easeljs.Sprite#gotoAndStop} call than it is to slice out a frame using this\n\t   * method and display it with a Bitmap instance. You can also crop an image using the {@link easeljs.Bitmap#sourceRect}\n\t   * property of {@link easeljs.Bitmap}.\n\t   *\n\t   * The extractFrame method may cause cross-domain warnings since it accesses pixels directly on the canvas.\n\t   *\n\t   * @param {easeljs.SpriteSheet} spriteSheet The SpriteSheet instance to extract a frame from.\n\t   * @param {Number | String} frameOrAnimation The frame number or animation name to extract. If an animation\n\t   * name is specified, only the first frame of the animation will be extracted.\n\t   * @return {HTMLImageElement} a single frame of the specified sprite sheet as a new PNG image.\n\t   */\n\t  extractFrame(spriteSheet, frameOrAnimation) {\n\t    if (isNaN(frameOrAnimation)) {\n\t      frameOrAnimation = spriteSheet.getAnimation(frameOrAnimation).frames[0];\n\t    }\n\n\t    let data = spriteSheet.getFrame(frameOrAnimation);\n\n\t    if (!data) {\n\t      return null;\n\t    }\n\n\t    let r = data.rect;\n\t    let canvas = this._workingCanvas;\n\t    canvas.width = r.width;\n\t    canvas.height = r.height;\n\n\t    this._workingContext.drawImage(data.image, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height);\n\n\t    let img = document.createElement(\"img\");\n\t    img.src = canvas.toDataURL(\"image/png\");\n\t    return img;\n\t  },\n\n\t  /**\n\t   * @protected\n\t   * @param {easeljs.SpriteSheet} spriteSheet\n\t   * @param {Number} count\n\t   * @param {Number} h\n\t   * @param {Number} v\n\t   */\n\t  _flip(spriteSheet, count, h, v) {\n\t    let imgs = spriteSheet._images;\n\t    let canvas = this._workingCanvas;\n\t    let ctx = this._workingContext;\n\t    const il = imgs.length / count;\n\n\t    for (let i = 0; i < il; i++) {\n\t      let src = imgs[i];\n\t      src.__tmp = i; // a bit hacky, but faster than doing indexOf below.\n\n\t      ctx.setTransform(1, 0, 0, 1, 0, 0);\n\t      ctx.clearRect(0, 0, canvas.width + 1, canvas.height + 1);\n\t      canvas.width = src.width;\n\t      canvas.height = src.height;\n\t      ctx.setTransform(h ? -1 : 1, 0, 0, v ? -1 : 1, h ? src.width : 0, v ? src.height : 0);\n\t      ctx.drawImage(src, 0, 0);\n\t      let img = document.createElement(\"img\");\n\t      img.src = canvas.toDataURL(\"image/png\"); // work around a strange bug in Safari:\n\n\t      img.width = src.width || src.naturalWidth;\n\t      img.height = src.height || src.naturalHeight;\n\t      imgs.push(img);\n\t    }\n\n\t    let frames = spriteSheet._frames;\n\t    const fl = frames.length / count;\n\n\t    for (let i = 0; i < fl; i++) {\n\t      let src = frames[i];\n\t      let rect = src.rect.clone();\n\t      let img = imgs[src.image.__tmp + il * count];\n\t      let frame = {\n\t        image: img,\n\t        rect,\n\t        regX: src.regX,\n\t        regY: src.regY\n\t      };\n\n\t      if (h) {\n\t        rect.x = (img.width || img.naturalWidth) - rect.x - rect.width; // update rect\n\n\t        frame.regX = rect.width - src.regX; // update registration point\n\t      }\n\n\t      if (v) {\n\t        rect.y = (img.height || img.naturalHeight) - rect.y - rect.height; // update rect\n\n\t        frame.regY = rect.height - src.regY; // update registration point\n\t      }\n\n\t      frames.push(frame);\n\t    }\n\n\t    let sfx = `_${h ? \"h\" : \"\"}${v ? \"v\" : \"\"}`;\n\t    let names = spriteSheet._animations;\n\t    let data = spriteSheet._data;\n\t    const al = names.length / count;\n\n\t    for (let i = 0; i < al; i++) {\n\t      let name = names[i];\n\t      let src = data[name];\n\t      let anim = {\n\t        name: name + sfx,\n\t        speed: src.speed,\n\t        next: src.next,\n\t        frames: []\n\t      };\n\n\t      if (src.next) {\n\t        anim.next += sfx;\n\t      }\n\n\t      let frames = src.frames;\n\n\t      for (let i = 0, l = frames.length; i < l; i++) {\n\t        anim.frames.push(frames[i] + fl * count);\n\t      }\n\n\t      data[anim.name] = anim;\n\t      names.push(anim.name);\n\t    }\n\t  }\n\n\t};\n\n\t/**\n\t * @license WebGLInspector\n\t * Visit http://createjs.com/ for documentation, updates and examples.\n\t *\n\t * Copyright (c) 2017 gskinner.com, inc.\n\t *\n\t * Permission is hereby granted, free of charge, to any person\n\t * obtaining a copy of this software and associated documentation\n\t * files (the \"Software\"), to deal in the Software without\n\t * restriction, including without limitation the rights to use,\n\t * copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the\n\t * Software is furnished to do so, subject to the following\n\t * conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t * OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t/**\n\t * A utility and helper class designed to work with {{#crossLink \"StageGL\"}}{{/crossLink}} to help investigate and\n\t * test performance or display problems. It contains logging functions to analyze behaviour and performance testing\n\t * utilities.\n\t *\n\t * @memberof easeljs\n\t * @extends core.EventDispatcher\n\t *\n\t * @param {StageGL} stage The default stage to use when none is supplied.\n\t */\n\n\tclass WebGLInspector extends EventDispatcher {\n\t  constructor(stage) {\n\t    super();\n\t    /**\n\t     * The internal reference to the default stage this Inspector is for.\n\t     * @protected\n\t     * @type {easeljs.StageGL}\n\t     */\n\n\t    this._stage = stage;\n\t  }\n\t  /**\n\t   * Utility function for use with {@link easeljs.WebGLInspector#logDepth}. Logs an item's position and registration.\n\t   * Useful to see if something is being forced off screen or has an integer position.\n\t   * @param {easeljs.DisplayObject} item The item we're currently logging about.\n\t   * @param {String} [prepend] The string to show before the item, usually formatting for a tree view.\n\t   * @static\n\t   */\n\n\n\t  static dispProps(item, prepend = \"\") {\n\t    let p = `\\tP: ${item.x.toFixed(2)}x${item.y.toFixed(2)}\\t`;\n\t    let r = `\\tR: ${item.regX.toFixed(2)}x${item.regY.toFixed(2)}\\t`;\n\n\t    WebGLInspector._log(prepend, `${item.toString()}\\t`, p, r);\n\t  }\n\t  /**\n\t   * Log with alternateOutput if available, defaulting to the console.\n\t   * @param {...*} info The info to log.\n\t   * @static\n\t   */\n\n\n\t  static _log(...info) {\n\t    if (WebGLInspector.alternateOutput) {\n\t      WebGLInspector.alternateOutput.log(...info);\n\t    } else {\n\t      console.log(...info);\n\t    }\n\t  }\n\t  /**\n\t   * Perform all of the logging reports at once.\n\t   * @param {easeljs.StageGL} [stage] The stage to log information for.\n\t   */\n\n\n\t  log(stage) {\n\t    if (!stage) {\n\t      stage = this._stage;\n\t    }\n\n\t    WebGLInspector._log(`Batches Per Draw: ${(stage._batchID / stage._drawID).toFixed(4)}`);\n\n\t    this.logContextInfo(stage._webGLContext);\n\t    this.logDepth(stage.children, \"\");\n\t    this.logTextureFill(stage);\n\t  }\n\t  /**\n\t   * Replace the stage's Draw command with an empty draw command. This is useful for testing performance, and ignoring rendering.\n\t   * @param {StageGL} [stage=] The stage to log information for.\n\t   * @param {Boolean} [enabled] Force enabled. If left undefined, it will toggle.\n\t   */\n\n\n\t  toggleGPUDraw(stage, enabled) {\n\t    if (!stage) {\n\t      stage = this._stage;\n\t    }\n\n\t    if (enabled === undefined) {\n\t      enabled = !!stage._drawBuffers_;\n\t    }\n\n\t    if (enabled && stage._drawBuffers_) {\n\t      stage._drawBuffers = stage._drawBuffers_;\n\t      stage._drawBuffers_ = undefined;\n\t    } else {\n\t      stage._drawBuffers_ = stage._drawBuffers;\n\n\t      stage._drawBuffers = function _inspectorDrawBuffers(gl) {\n\t        if (this.vocalDebug) {\n\t          WebGLInspector._log(`BlankDraw[${this._drawID}:${this._batchID}] : ${this.batchReason}`);\n\t        }\n\t      };\n\t    }\n\t  }\n\t  /**\n\t   * Recursively walk the entire display tree, log the attached items, and display it in a tree view.\n\t   * @param {Array} [children] The children array to walk through.\n\t   * @param {String} [prepend] What to prepend to this output from this point onwards.\n\t   * @param {Function} [logFunc] Custom logging function, mainly for filtering or formatting output.\n\t   */\n\n\n\t  logDepth(children, prepend = \"\", logFunc = WebGLInspector._log) {\n\t    if (!children) {\n\t      children = this._stage.children;\n\t    }\n\n\t    const l = children.length;\n\n\t    for (let i = 0; i < l; i++) {\n\t      let child = children[i];\n\t      logFunc(`${prepend}-`, child);\n\n\t      if (child.children && child.children.length) {\n\t        this.logDepth(child.children, `|${prepend}`, logFunc);\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Examine the context and provide information about its capabilities.\n\t   * @param {WebGLRenderingContext} [gl] The WebGL context to inspect.\n\t   */\n\n\n\t  logContextInfo(gl) {\n\t    if (!gl) {\n\t      gl = this._stage._webGLContext;\n\t    }\n\n\t    let data = `\n\t\t\t== LOG:\\n\n\t\t\tMax textures per draw: ${gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)}\\n\n\t\t\tMax textures active: ${gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS)}\\n\n\t\t\t\\n\n\t\t\tMax texture size: ${gl.getParameter(gl.MAX_TEXTURE_SIZE) / 2}\\n\n\t\t\tMax cache size: ${gl.getParameter(gl.MAX_RENDERBUFFER_SIZE) / 2}\\n\n\t\t\t\\n\n\t\t\tMax attributes per vertex: ${gl.getParameter(gl.MAX_VERTEX_ATTRIBS)}\\n\n\t\t\tWebGL Version string: ${gl.getParameter(gl.VERSION)}\\n\n\t\t\t======\n\t\t`;\n\n\t    WebGLInspector._log(data);\n\t  }\n\t  /**\n\t   * Simulate renders and watch what happens for textures moving around between draw calls. A texture moving between\n\t   * slots means it was removed and then re-added to draw calls. Performance may be better if it was allowed to stay\n\t   * in place.\n\t   * @param {StageGL} [stage] The stage to log information for.\n\t   */\n\n\n\t  logTextureFill(stage) {\n\t    if (!stage) {\n\t      stage = this._stage;\n\t    }\n\n\t    let dict = stage._textureDictionary;\n\t    let count = stage._batchTextureCount;\n\n\t    WebGLInspector._log(`${textureMax}: ${count}`);\n\n\t    let output = [];\n\n\t    for (let n in dict) {\n\t      let str = n.replace(window.location.origin, \"\");\n\t      let tex = dict[n];\n\t      let shifted = tex._lastActiveIndex ? tex._lastActiveIndex === tex._activeIndex : false;\n\t      output.push({\n\t        src,\n\t        element: tex,\n\t        shifted\n\t      });\n\t      tex._lastActiveIndex = tex._activeIndex;\n\t    }\n\n\t    output.sort((a, b) => {\n\t      if (a.element._drawID === stage._drawID) {\n\t        return 1;\n\t      }\n\n\t      if (a.element._drawID < b.element._drawID) {\n\t        return -1;\n\t      }\n\n\t      return 0;\n\t    });\n\t    const l = output.length;\n\n\t    for (let i = 0; i < l; i++) {\n\t      let out = output[i];\n\t      let active = out.element._drawID === stage._drawID;\n\n\t      WebGLInspector._log(`[${out.src}] ${active ? \"ACTIVE\" : \"stale\"} ${out.shifted ? \"steady\" : \"DRIFT\"}`, out.element);\n\t    }\n\t  }\n\n\t}\n\t/**\n\t * Alternate output for debugging situations where \"console\" is not available, i.e. Mobile or remote debugging.\n\t * Expects object with a \"log\" function that takes any number of params.\n\t * @type {Console}\n\t * @default null\n\t * @static\n\t * @protected\n\t */\n\n\tWebGLInspector.alternateOutput = null;\n\n\t/**\n\t * The core classes of EaselJS.\n\t * @namespace easeljs\n\t *\n\t * @example\n\t * import { Stage, Shape } from \"@createjs/easeljs\";\n\t * const stage = new Stage(\"myCanvas\");\n\t * const shape = new Shape();\n\t * shape.graphics.beginFill(\"red\").drawCircle(0, 0, 50);\n\t * stage.addChild(shape);\n\t * stage.update();\n\t */\n\n\texports.StageGL = StageGL;\n\texports.Stage = Stage;\n\texports.Container = Container;\n\texports.DisplayObject = DisplayObject;\n\texports.Bitmap = Bitmap;\n\texports.BitmapText = BitmapText;\n\texports.DOMElement = DOMElement;\n\texports.Graphics = Graphics;\n\texports.MovieClip = MovieClip;\n\texports.Shadow = Shadow;\n\texports.Shape = Shape;\n\texports.Sprite = Sprite;\n\texports.SpriteSheet = SpriteSheet;\n\texports.Text = Text;\n\texports.MouseEvent = MouseEvent;\n\texports.AlphaMapFilter = AlphaMapFilter;\n\texports.AlphaMaskFilter = AlphaMaskFilter;\n\texports.BitmapCache = BitmapCache;\n\texports.BlurFilter = BlurFilter;\n\texports.ColorFilter = ColorFilter;\n\texports.ColorMatrix = ColorMatrix;\n\texports.ColorMatrixFilter = ColorMatrixFilter;\n\texports.Filter = Filter;\n\texports.DisplayProps = DisplayProps;\n\texports.Matrix2D = Matrix2D;\n\texports.Point = Point;\n\texports.Rectangle = Rectangle;\n\texports.ButtonHelper = ButtonHelper;\n\texports.Touch = Touch;\n\texports.SpriteSheetBuilder = SpriteSheetBuilder;\n\texports.SpriteSheetUtils = SpriteSheetUtils;\n\texports.uid = uid;\n\texports.createCanvas = createCanvas;\n\texports.WebGLInspector = WebGLInspector;\n\n\texports.Event = Event;\n\texports.EventDispatcher = EventDispatcher;\n\texports.Ticker = Ticker;\n\tvar v = exports.versions = exports.versions || {};\n\tv.easeljs = \"NEXT\";\n\n}((this.createjs = this.createjs || {}),this.createjs && this.createjs.Tween,this.createjs && this.createjs.Timeline));\n"]}