{"version":3,"sources":["easeljs.common.js"],"names":["Object","defineProperty","exports","value","_interopDefault","ex","Tween","require","Timeline","Event","[object Object]","type","bubbles","cancelable","this","target","currentTarget","eventPhase","timeStamp","Date","getTime","defaultPrevented","propagationStopped","immediatePropagationStopped","removed","event","n","hasOwnProperty","props","constructor","name","EventDispatcher","p","prototype","addEventListener","on","removeEventListener","off","removeAllEventListeners","hasEventListener","dispatchEvent","_dispatchEvent","willTrigger","_listeners","_captureListeners","listener","useCapture","listeners","arr","push","scope","once","data","handleEvent","evt","call","remove","l","length","i","splice","eventObj","clone","e","parent","top","list","captureListeners","o","slice","Ticker","RAF_SYNCHED","RAF","TIMEOUT","super","timingMode","maxDelta","paused","_inited","_startTime","_pausedTime","_ticks","_pausedTicks","_interval","_lastTime","_times","_tickTimes","_timerId","_raf","interval","_setupTick","framerate","_getTime","f","window","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","init","ticks","times","Math","min","reduce","a","b","runTime","pauseable","_tick","mode","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","_handleRAF","bind","_handleSynch","setTimeout","_handleTimeout","time","elapsedTime","delta","unshift","pop","now","performance","_instance","toString","reset","getMeasuredTickTime","getMeasuredFPS","getEventTime","getTicks","StageGL","Error","_nextId","uid","Point","x","y","setValues","point","Matrix2D","c","d","tx","ty","a1","b1","c1","d1","tx1","matrix","append","prepend","scaleX","scaleY","rotation","skewX","skewY","regX","regY","r","cos","sin","DEG_TO_RAD","angle","pt","sqrt","atan2","abs","PI","identity","DisplayProps","visible","alpha","shadow","compositeOperation","appendMatrix","prependMatrix","Rectangle","width","height","left","bottom","right","rect","extend","x1","y1","x2","y2","Filter","usesContext","_multiPass","VTX_SHADER_BODY","FRAG_SHADER_BODY","gl","stage","shaderProgram","ctx","targetCtx","targetX","targetY","imageData","getImageData","_applyFilter","putImageData","BitmapCache","undefined","scale","offX","offY","cacheID","_filterOffX","_filterOffY","_cacheDataURLID","_cacheDataURL","_drawWidth","_drawHeight","_boundRect","output","filters","filterCount","getBounds","test","options","_options","_useWebGL","update","filterBounds","getFilterBounds","surface","cacheCanvas","ceil","_updateSurface","_drawToCache","_webGLCache","isCacheControlled","__lastRT","__rtA","_killTextureObject","__rtB","releaseTexture","toDataURL","drawImage","setValue","createjs","createCanvas","document","createElement","useGL","isWebGL","antialias","transparent","autoPurge","stageGL","updateViewport","getTargetRenderTexture","webGL","getContext","clearRect","save","globalCompositeOperation","setTransform","translate","draw","restore","_applyFilters","_invalid","cacheDraw","w","h","DisplayObject","bitmapCache","id","mouseEnabled","tickEnabled","transformMatrix","snapToPixel","mask","hitArea","cursor","_props","_rectangle","_bounds","_webGLRenderStyle","_StageGL_NONE","ignoreCache","drawCache","cache","mtx","graphics","isEmpty","getMatrix","transform","drawAsPath","clip","invert","_snapToPixelEnabled","globalAlpha","_applyShadow","define","release","getDataURL","getConcatenatedMatrix","transformPoint","localToGlobal","globalToLocal","copy","appendTransform","_hitTestContext","hit","_testHit","_cacheScale","_cacheOffsetX","_cacheOffsetY","_getBounds","_cloneProps","Shadow","shadowColor","color","shadowOffsetX","offsetX","shadowOffsetY","offsetY","shadowBlur","blur","evtObj","ls","suppressCrossDomainErrors","ignoreTransform","_transformBounds","bounds","x_a","x_b","y_c","y_d","minX","maxX","minY","maxY","evts","_MOUSE_EVENTS","canvas","_hitTestCanvas","snapToPixelEnabled","_StageGL_SPRITE","_StageGL_BITMAP","Container","children","mouseChildren","tickChildren","numChildren","hasContent","child","isVisible","updateContext","addChild","silent","_removeChildAt","indexOf","index","addChildAt","good","removeChild","indexes","sort","kids","sortFunction","index1","index2","o1","o2","child1","child2","getObjectUnderPoint","_getObjectsUnderPoint","recursive","_cloneChildren","removeAllChildren","mouse","activeListener","currentDepth","_testMask","_hasMouseEventListener","result","getConcatenatedDisplayProps","fillStyle","fill","MouseEvent","stageX","stageY","nativeEvent","pointerID","primary","rawX","rawY","relatedTarget","localX","localY","isTouch","Stage","autoClear","getElementById","mouseX","mouseY","drawRect","mouseInBounds","tickOnUpdate","mouseMoveOutside","preventSelection","_pointerData","_pointerCount","_primaryPointerID","_mouseOverIntervalID","_nextStage","_prevStage","enableDOMEvents","nextStage","tick","beginPath","backgroundColor","mimeType","fillRect","dataURL","frequency","clearInterval","_testMouseOver","setInterval","enable","_eventListeners","t","mouseup","_handleMouseUp","mousemove","_handleMouseMove","dblclick","_handleDoubleClick","mousedown","_handleMouseDown","getBoundingClientRect","err","offsetTop","offsetLeft","offsetWidth","offsetHeight","pageXOffset","scrollLeft","clientLeft","body","pageYOffset","scrollTop","clientTop","styles","getComputedStyle","currentStyle","padL","parseInt","paddingLeft","borderLeftWidth","padT","paddingTop","borderTopWidth","padR","paddingRight","borderRightWidth","padB","paddingBottom","borderBottomWidth","_handlePointerMove","pageX","pageY","owner","_getPointerData","inBounds","_updatePointerPosition","_dispatchMouseEvent","_getElementRect","posEvtObj","_handlePointerUp","clear","oTarget","down","_handlePointerDown","preventDefault","eventTarget","_mouseOverX","_mouseOverY","isEventTarget","common","oldList","_mouseOverTarget","oldTarget","style","pointerId","HTMLCanvasElement","VideoBuffer","video","readyState","_video","_canvas","_videoReady","videoWidth","videoHeight","currentTime","Bitmap","imageOrUri","image","src","sourceRect","naturalWidth","img","getImage","node","cloneNode","bmp","Sprite","spriteSheet","frameOrAnimation","currentFrame","currentAnimation","currentAnimationFrame","_animation","_currentFrame","_skipAdvance","gotoAndPlay","complete","_normalizeFrame","getFrame","_goto","fps","getFrameBounds","advance","frameDelta","animation","frame","speed","animFrame","frames","next","_dispatchAnimationEnd","getNumFrames","end","changed","isNaN","getAnimation","BitmapText","text","lineHeight","letterSpacing","spaceWidth","_oldProps","_oldStage","_drawAction","_updateState","_updateText","character","toUpperCase","toLowerCase","_getFrameIndex","ss","_getFrame","change","spaceW","lineH","pool","_spritePool","childIndex","numKids","sprite","hasSpace","_getSpaceWidth","_getLineHeight","charAt","gotoAndStop","maxPoolSize","DOMElement","htmlElement","position","transformOrigin","WebkitTransformOrigin","msTransformOrigin","MozTransformOrigin","OTransformOrigin","_handleDrawEnd","visibility","oldProps","oldMtx","equals","str","WebkitTransform","OTransform","msTransform","MozTransform","opacity","Graphics","command","_stroke","_strokeStyle","_oldStrokeStyle","_strokeDash","_oldStrokeDash","_fill","_strokeIgnoreScale","_commitIndex","_instructions","_activeInstructions","_dirty","_storeIndex","curveTo","quadraticCurveTo","mt","moveTo","lt","lineTo","at","arcTo","bt","bezierCurveTo","qt","arc","cp","closePath","beginFill","lf","beginLinearGradientFill","rf","beginRadialGradientFill","bf","beginBitmapFill","ef","endFill","setStrokeStyle","sd","setStrokeDash","s","beginStroke","beginLinearGradientStroke","rs","beginRadialGradientStroke","bs","beginBitmapStroke","es","endStroke","dr","rr","drawRoundRect","rc","drawRoundRectComplex","dc","drawCircle","de","drawEllipse","dp","drawPolyStar","decodePath","g","hue","saturation","lightness","instructions","_updateInstructions","instr","exec","instrs","path","MoveTo","LineTo","radius","ArcTo","startAngle","endAngle","anticlockwise","Arc","cpx","cpy","QuadraticCurveTo","cp1x","cp1y","cp2x","cp2y","BezierCurveTo","Rect","ClosePath","_setFill","Fill","colors","ratios","x0","y0","linearGradient","r0","r1","radialGradient","repetition","bitmap","thickness","caps","joints","miterLimit","ignoreScale","StrokeStyle","segments","offset","StrokeDash","_setStroke","Stroke","radiusTL","radiusTR","radiusBR","radiusBL","RoundRect","Circle","Ellipse","sides","pointSize","PolyStar","clean","paramCount","params","base64","_BASE_64","fi","pl","charCount","num","sign","apply","commit","active","commitIndex","beginCmd","ll","stroke","BeginPath","_ctx","createLinearGradient","addColorStop","createRadialGradient","createPattern","strokeStyle","lineWidth","lineCap","_STROKE_CAPS_MAP","lineJoin","_STROKE_JOINTS_MAP","setLineDash","lineDashOffset","max","mTL","mTR","mBR","mBL","rTL","rTR","rBR","rBL","k","ox","oy","xe","ye","xm","ym","ps","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","j","m","q","u","v","z","0","1","2","3","4","5","6","7","8","9","+","/","MovieClip","inited","INDEPENDENT","startPosition","loop","timeline","assign","useTicks","actionsEnabled","autoReset","frameBounds","_synchOffset","_rawPosition","_t","_managed","_bound_resolveState","_resolveState","MovieClipPlugin","install","labels","currentLabel","duration","totalFrames","positionOrLabel","play","stop","_framerate","_updateTimeline","pos","resolve","rawPosition","jump","synced","tl","SINGLE_FRAME","setPosition","tweens","tween","passive","_stepPosition","_addManagedChild","_setState","state","removeChildAt","_off","_reset","SYNCHED","installPlugin","prop","startValues","endValues","ratio","wait","priority","Shadow","Shape","SpriteSheet","_animations","_frames","_images","_data","_loadCount","_frameHeight","_frameWidth","_numFrames","_regX","_regY","_spacing","_margin","_parseData","animations","frameIndex","rectangle","images","onload","_handleImageLoad","onerror","_handleImageError","Array","isArray","spacing","margin","count","_calculateFrames","anim","obj","errorEvent","maxFrames","frameCount","frameWidth","frameHeight","imgLoop","imgs","imgW","imgH","naturalHeight","Text","font","textAlign","textBaseline","maxWidth","outline","col","_drawText","_prepContext","_getMeasuredWidth","H_OFFSETS","getMeasuredLineHeight","V_OFFSETS","lines","vOffset","substr","paint","maxW","hardLines","String","split","measureText","words","wordW","_drawTextLine","strokeText","fillText","start","center","hanging","middle","alphabetic","ideographic","AlphaMapFilter","alphaMap","_alphaMap","_mapData","_mapTexture","createTexture","activeTexture","TEXTURE1","bindTexture","TEXTURE_2D","setTextureParams","texImage2D","RGBA","UNSIGNED_BYTE","uniform1i","getUniformLocation","_prepAlphaMap","map","AlphaMaskFilter","BlurFilter","blurX","blurY","quality","_blurX","_blurXTable","_lastBlurX","_blurY","_blurYTable","_lastBlurY","_quality","_lastQuality","FRAG_SHADER_TEMPLATE","_buildShader","xChange","yChange","qChange","_getTable","_updateShader","_compiledShader","_builtShader","uniform1fv","uniform2f","_viewportWidth","_viewportHeight","pow","pad","replace","toFixed","spread","EDGE","adjust","factor","currentValue","radiusX","radiusY","iterations","px","yp","yi","yw","pr","pg","pb","pa","divx","divy","w1","h1","rxp1","ryp1","ssx","sx","ssy","sy","si","MUL_TABLE","stx","SHG_TABLE","mty","sty","ms","ColorFilter","redMultiplier","greenMultiplier","blueMultiplier","alphaMultiplier","redOffset","greenOffset","blueOffset","alphaOffset","uniform4f","ColorMatrix","brightness","contrast","setColor","adjustColor","IDENTITY_MATRIX","adjustBrightness","adjustContrast","adjustSaturation","adjustHue","_cleanValue","_multiplyMatrix","DELTA_INDEX","lumR","lumG","lumB","cosVal","sinVal","_fixMatrix","LENGTH","val","limit","toArray","concat","freeze","ColorMatrixFilter","mat","colorMatrix","Float32Array","uniformMatrix4fv","m0","m1","m2","m3","m4","m5","m6","m7","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","ButtonHelper","outLabel","overLabel","downLabel","hitLabel","_isPressed","_isOver","_enabled","enabled","__reset","label","Touch","Touch","MSPointerEvent","navigator","msMaxTouchPoints","PointerEvent","maxTouchPoints","singleTouch","allowDefault","isSupported","__touch","pointers","multitouch","_IOS_enable","_IE_enable","_IOS_disable","_IE_disable","_IOS_handleEvent","touches","changedTouches","touch","identifier","_handleStart","_handleMove","_handleEnd","_IE_handleEvent","msTouchAction","touchAction","activeIDs","ids","srcElement","SpriteSheetBuilder","maxHeight","padding","timeSlice","progress","_nextFrameIndex","_index","_timerID","_scale","source","setupFunction","setupData","ERR_RUNNING","nominalBounds","funct","labelFunction","rects","baseFrameIndex","addFrame","_setupMovieClipFrame","_labels","lbls","addAnimation","_startBuild","_drawNext","_endBuild","_run","dataFrames","ERR_DIMENSIONS","_fillRow","_getSize","ae","size","maxH","sc","rx","floor","ry","rh","rw","round","ts","SpriteSheetUtils","SpriteSheetUtils","_workingCanvas","_workingContext","il","__tmp","fl","sfx","names","al","WebGLInspector","_stage","item","_log","info","alternateOutput","log","console","_batchID","_drawID","logContextInfo","_webGLContext","logDepth","logTextureFill","_drawBuffers_","_drawBuffers","_inspectorDrawBuffers","vocalDebug","batchReason","logFunc","getParameter","MAX_TEXTURE_IMAGE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_RENDERBUFFER_SIZE","MAX_VERTEX_ATTRIBS","VERSION","dict","_textureDictionary","_batchTextureCount","textureMax","location","origin","tex","shifted","_lastActiveIndex","_activeIndex","element","out","cjs","easeljs"],"mappings":"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","file":"../easeljs.common.js","sourcesContent":["/**\n * @license\n * EaselJS\n * Visit https://createjs.com for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Tween = _interopDefault(require('@createjs/tweenjs/src/Tween'));\nvar Timeline = _interopDefault(require('@createjs/tweenjs/src/Timeline'));\n\n/**\n * @license Event\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Contains properties and methods shared by all events for use with {@link core.EventDispatcher}.\n * Note that Event objects are often reused, so you should never\n * rely on an event object's state outside of the call stack it was received in.\n *\n * @memberof core\n * @example\n * const evt = new Event(\"myEvent\");\n * const dispatcher = new EventDispatcher();\n * dispatcher.on(\"myEvent\", event => console.log(event.type));\n * dispatcher.dispatchEvent(evt); // logs \"myEvent\"\n *\n * @param {string} type The event type.\n * @param {boolean} [bubbles=false] Indicates whether the event will bubble through the display list.\n * @param {boolean} [cancelable=false] Indicates whether the default behaviour of this event can be cancelled.\n */\nclass Event {\n  constructor(type, bubbles = false, cancelable = false) {\n    /**\n     * The type of event.\n     * @type string\n     */\n    this.type = type;\n    /**\n     * The object that generated an event.\n     *\n     * @type Object\n     * @default null\n     * @readonly\n     */\n\n    this.target = null;\n    /**\n     * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n     * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n     * is generated from childObj, then a listener on parentObj would receive the event with\n     * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n     *\n     * @type Object\n     * @default null\n     * @readonly\n     */\n\n    this.currentTarget = null;\n    /**\n     * For bubbling events, this indicates the current event phase:\n     * <OL>\n     * \t<LI> capture phase: starting from the top parent to the target</LI>\n     * \t<LI> at target phase: currently being dispatched from the target</LI>\n     * \t<LI> bubbling phase: from the target to the top parent</LI>\n     * </OL>\n     *\n     * @type number\n     * @default 0\n     * @readonly\n     */\n\n    this.eventPhase = 0;\n    /**\n     * Indicates whether the event will bubble through the display list.\n     *\n     * @type boolean\n     * @readonly\n     */\n\n    this.bubbles = bubbles;\n    /**\n     * Indicates whether the default behaviour of this event can be cancelled via {@link core.Event#preventDefault}.\n     *\n     * @type boolean\n     * @readonly\n     */\n\n    this.cancelable = cancelable;\n    /**\n     * The epoch time at which this event was created.\n     *\n     * @type number\n     * @readonly\n     */\n\n    this.timeStamp = new Date().getTime();\n    /**\n     * Indicates if {@link core.Event#preventDefault} has been called on this event.\n     *\n     * @type boolean\n     * @default false\n     * @readonly\n     */\n\n    this.defaultPrevented = false;\n    /**\n     * Indicates if {@link core.Event#stopPropagation} or {@link core.Event#stopImmediatePropagation} has been called on this event.\n     *\n     * @type boolean\n     * @default false\n     * @readonly\n     */\n\n    this.propagationStopped = false;\n    /**\n     * Indicates if {@link core.Event#stopImmediatePropagation} has been called on this event.\n     *\n     * @type boolean\n     * @default false\n     * @readonly\n     */\n\n    this.immediatePropagationStopped = false;\n    /**\n     * Indicates if {@link core.Event#remove} has been called on this event.\n     *\n     * @type boolean\n     * @default false\n     * @readonly\n     */\n\n    this.removed = false;\n  }\n  /**\n   * Sets {@link core.Event#defaultPrevented} to true if the event is cancelable.\n   * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n   * cancel the default behaviour associated with the event.\n   * @return {core.Event} this, chainable\n   */\n\n\n  preventDefault() {\n    this.defaultPrevented = this.cancelable;\n    return this;\n  }\n  /**\n   * Sets {@link core.Event#propagationStopped} to true.\n   * Mirrors the DOM event standard.\n   * @return {core.Event} this, chainable\n   */\n\n\n  stopPropagation() {\n    this.propagationStopped = true;\n    return this;\n  }\n  /**\n   * Sets {@link core.Event#propagationStopped} and {@link core.Event#immediatePropagationStopped} to true.\n   * Mirrors the DOM event standard.\n   * @return {core.Event} this, chainable\n   */\n\n\n  stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n    return this;\n  }\n  /**\n   * Causes the active listener to be removed via removeEventListener();\n   *\n   * @example\n   * myBtn.addEventListener(\"click\", event => {\n   *   event.remove(); // removes this listener.\n   * });\n   *\n   * @return {core.Event} this, chainable\n   */\n\n\n  remove() {\n    this.removed = true;\n    return this;\n  }\n  /**\n   * Returns a clone of the Event instance.\n   *\n   * @return {core.Event} a clone of the Event instance.\n   */\n\n\n  clone() {\n    const event = new Event(this.type, this.bubbles, this.cancelable);\n\n    for (let n in this) {\n      if (this.hasOwnProperty(n)) {\n        event[n] = this[n];\n      }\n    }\n\n    return event;\n  }\n  /**\n   * Provides a return {core.Event} this, chainable shortcut method for setting a number of properties on the instance.\n   *\n   * @param {Object} props A generic object containing properties to copy to the instance.\n   * @return {core.Event} this, chainable\n   */\n\n\n  set(props) {\n    for (let n in props) {\n      this[n] = props[n];\n    }\n\n    return this;\n  }\n  /**\n   * Returns a string representation of this object.\n   *\n   * @return {string} A string representation of the instance.\n   */\n\n\n  toString() {\n    return `[${this.constructor.name} (type=${this.type})]`;\n  }\n\n}\n\n/**\n * @license EventDispatcher\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\n *\n * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\n * EventDispatcher {@link core.EventDispatcher.initialize} method.\n *\n * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\n * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\n * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\n *\n * EventDispatcher also exposes a {@link core.EventDispatcher#on} method, which makes it easier\n * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The\n * {@link core.EventDispatcher#off} method is merely an alias to {@link core.EventDispatcher#removeEventListener}.\n *\n * Another addition to the DOM Level 2 model is the {@link core.EventDispatcher#removeAllEventListeners}\n * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also\n * includes a {@link core.Event#remove} method which removes the active listener.\n *\n * @memberof core\n * @example\n * // add EventDispatcher capabilities to the \"MyClass\" class.\n * EventDispatcher.initialize(MyClass.prototype);\n *\n * // Add an event.\n * instance.addEventListener(\"eventName\", event => console.log(event.target + \" was clicked.\"));\n *\n * // scope (\"this\") can be be a challenge with events.\n * // using the {@link core.EventDispatcher#on} method to subscribe to events simplifies this.\n * instance.addEventListener(\"click\", event => console.log(instance === this)); // false, scope is ambiguous.\n * instance.on(\"click\", event => console.log(instance === this)); // true, `on` uses dispatcher scope by default.\n */\n\nclass EventDispatcher {\n  /**\n   * Static initializer to mix EventDispatcher methods into a target object or prototype.\n   *\n   * @static\n   * @example\n   * EventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n   * EventDispatcher.initialize(myInstance); // add to a specific instance\n   *\n   * @param {Object} target The target object to inject EventDispatcher methods into.\n   */\n  static initialize(target) {\n    const p = EventDispatcher.prototype;\n    target.addEventListener = p.addEventListener;\n    target.on = p.on;\n    target.removeEventListener = target.off = p.removeEventListener;\n    target.removeAllEventListeners = p.removeAllEventListeners;\n    target.hasEventListener = p.hasEventListener;\n    target.dispatchEvent = p.dispatchEvent;\n    target._dispatchEvent = p._dispatchEvent;\n    target.willTrigger = p.willTrigger;\n  }\n\n  constructor() {\n    /**\n     * @private\n     * @default null\n     * @type Object\n     */\n    this._listeners = null;\n    /**\n     * @private\n     * @default null\n     * @type Object\n     */\n\n    this._captureListeners = null;\n  }\n  /**\n   * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\n   * multiple callbacks getting fired.\n   *\n   * @example\n   * displayObject.addEventListener(\"click\", event => console.log('clicked', event));\n   *\n   * @param {string} type The string type of the event.\n   * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n   * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n   * @return {Function|Object} Returns the listener for chaining or assignment.\n   */\n\n\n  addEventListener(type, listener, useCapture = false) {\n    let listeners;\n\n    if (useCapture) {\n      listeners = this._captureListeners = this._captureListeners || {};\n    } else {\n      listeners = this._listeners = this._listeners || {};\n    }\n\n    let arr = listeners[type];\n\n    if (arr) {\n      this.removeEventListener(type, listener, useCapture);\n      arr = listeners[type]; // remove may have deleted the array\n    }\n\n    if (arr) {\n      arr.push(listener);\n    } else {\n      listeners[type] = [listener];\n    }\n\n    return listener;\n  }\n  /**\n   * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\n   * only run once, associate arbitrary data with the listener, and remove the listener.\n   *\n   * This method works by creating an anonymous wrapper function and subscribing it with `addEventListener`.\n   * The wrapper function is returned for use with `removeEventListener` (or `off`).\n   *\n   * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n   * {@link core.Event#remove}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\n   * to `on` with the same params will create multiple listeners.\n   *\n   * @example\n   * const listener = myBtn.on(\"click\", handleClick, null, false, { count: 3 });\n   * function handleClick (evt, data) {\n   *   data.count -= 1;\n   *   console.log(this == myBtn); // true - scope defaults to the dispatcher\n   *   if (data.count == 0) {\n   *     alert(\"clicked 3 times!\");\n   *     myBtn.off(\"click\", listener);\n   *     // alternately: evt.remove();\n   *   }\n   * }\n   *\n   * @param {string} type The string type of the event.\n   * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n   * @param {Object} [scope=null] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\n   * @param {boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\n   * @param {*} [data={}] Arbitrary data that will be included as the second parameter when the listener is called.\n   * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n   * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\n   */\n\n\n  on(type, listener, scope = null, once = false, data = {}, useCapture = false) {\n    if (listener.handleEvent) {\n      scope = scope || listener;\n      listener = listener.handleEvent;\n    }\n\n    scope = scope || this;\n    return this.addEventListener(type, evt => {\n      listener.call(scope, evt, data);\n      once && evt.remove();\n    }, useCapture);\n  }\n  /**\n   * Removes the specified event listener.\n   *\n   * You must pass the exact function reference used when the event was added. If a proxy\n   * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\n   * closure will not work.\n   *\n   * @example\n   * displayObject.removeEventListener(\"click\", handleClick);\n   *\n   * @param {string} type The string type of the event.\n   * @param {Function|Object} listener The listener function or object.\n   * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n   */\n\n\n  removeEventListener(type, listener, useCapture = false) {\n    const listeners = useCapture ? this._captureListeners : this._listeners;\n\n    if (!listeners) {\n      return;\n    }\n\n    const arr = listeners[type];\n\n    if (!arr) {\n      return;\n    }\n\n    const l = arr.length;\n\n    for (let i = 0; i < l; i++) {\n      if (arr[i] === listener) {\n        if (l === 1) {\n          delete listeners[type];\n        } // allows for faster checks.\n        else {\n            arr.splice(i, 1);\n          }\n\n        break;\n      }\n    }\n  }\n  /**\n   * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n   * `on` method.\n   *\n   * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See\n   * {@link core.EventDispatcher#on} for an example.\n   *\n   * @param {string} type The string type of the event.\n   * @param {Function|Object} listener The listener function or object.\n   * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n   */\n\n\n  off(type, listener, useCapture = false) {\n    this.removeEventListener(type, listener, useCapture);\n  }\n  /**\n   * Removes all listeners for the specified type, or all listeners of all types.\n   *\n   * @example\n   * // remove all listeners\n   * displayObject.removeAllEventListeners();\n   *\n   * // remove all click listeners\n   * displayObject.removeAllEventListeners(\"click\");\n   *\n   * @param {string} [type=null] The string type of the event. If omitted, all listeners for all types will be removed.\n   */\n\n\n  removeAllEventListeners(type = null) {\n    if (type) {\n      if (this._listeners) {\n        delete this._listeners[type];\n      }\n\n      if (this._captureListeners) {\n        delete this._captureListeners[type];\n      }\n    } else {\n      this._listeners = this._captureListeners = null;\n    }\n  }\n  /**\n   * Dispatches the specified event to all listeners.\n   *\n   * @example\n   * // use a string event\n   * this.dispatchEvent(\"complete\")\n   *\n   * // use an Event instance\n   * const event = new createjs.Event(\"progress\");\n   * this.dispatchEvent(event);\n   *\n   * @param {Object|Event|string} eventObj An object with a \"type\" property, or a string type.\n   * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\n   * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\n   * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\n   * @param {boolean} [bubbles=false] Specifies the `bubbles` value when a string was passed to eventObj.\n   * @param {boolean} [cancelable=false] Specifies the `cancelable` value when a string was passed to eventObj.\n   * @return {boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\n   */\n\n\n  dispatchEvent(eventObj, bubbles = false, cancelable = false) {\n    if (typeof eventObj === \"string\") {\n      // skip everything if there's no listeners and it doesn't bubble:\n      const listeners = this._listeners;\n\n      if (!bubbles && (!listeners || !listeners[eventObj])) {\n        return true;\n      }\n\n      eventObj = new Event(eventObj, bubbles, cancelable);\n    } else if (eventObj.target && eventObj.clone) {\n      // redispatching an active event object, so clone it:\n      eventObj = eventObj.clone();\n    } // TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\n\n\n    try {\n      eventObj.target = this;\n    } catch (e) {} // try/catch allows redispatching of native events\n\n\n    if (!eventObj.bubbles || !this.parent) {\n      this._dispatchEvent(eventObj, 2);\n    } else {\n      let top = this;\n      const list = [top];\n\n      while (top.parent) {\n        list.push(top = top.parent);\n      }\n\n      const l = list.length;\n      let i; // capture & atTarget\n\n      for (i = l - 1; i >= 0 && !eventObj.propagationStopped; i--) {\n        list[i]._dispatchEvent(eventObj, 1 + (i == 0));\n      } // bubbling\n\n\n      for (i = 1; i < l && !eventObj.propagationStopped; i++) {\n        list[i]._dispatchEvent(eventObj, 3);\n      }\n    }\n\n    return !eventObj.defaultPrevented;\n  }\n  /**\n   * Indicates whether there is at least one listener for the specified event type.\n   *\n   * @param {string} type The string type of the event.\n   * @return {boolean} Returns true if there is at least one listener for the specified event.\n   */\n\n\n  hasEventListener(type) {\n    const listeners = this._listeners,\n          captureListeners = this._captureListeners;\n    return !!(listeners && listeners[type] || captureListeners && captureListeners[type]);\n  }\n  /**\n   * Indicates whether there is at least one listener for the specified event type on this object or any of its\n   * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\n   * specified type is dispatched from this object, it will trigger at least one listener.\n   *\n   * This is similar to {@link core.EventDispatcher#hasEventListener}, but it searches the entire\n   * event flow for a listener, not just this object.\n   *\n   * @param {string} type The string type of the event.\n   * @return {boolean} Returns `true` if there is at least one listener for the specified event.\n   */\n\n\n  willTrigger(type) {\n    let o = this;\n\n    while (o) {\n      if (o.hasEventListener(type)) {\n        return true;\n      }\n\n      o = o.parent;\n    }\n\n    return false;\n  }\n  /**\n   * @return {String} a string representation of the instance.\n   */\n\n\n  toString() {\n    return `[${this.constructor.name + this.name ? ` ${this.name}` : \"\"}]`;\n  }\n  /**\n   * @private\n   * @param {Object|Event|string} eventObj\n   * @param {Object} eventPhase\n   */\n\n\n  _dispatchEvent(eventObj, eventPhase) {\n    const listeners = eventPhase === 1 ? this._captureListeners : this._listeners;\n\n    if (eventObj && listeners) {\n      let arr = listeners[eventObj.type];\n      let l;\n\n      if (!arr || (l = arr.length) === 0) {\n        return;\n      }\n\n      try {\n        eventObj.currentTarget = this;\n      } catch (e) {}\n\n      try {\n        eventObj.eventPhase = eventPhase;\n      } catch (e) {}\n\n      eventObj.removed = false;\n      arr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\n\n      for (let i = 0; i < l && !eventObj.immediatePropagationStopped; i++) {\n        let o = arr[i];\n\n        if (o.handleEvent) {\n          o.handleEvent(eventObj);\n        } else {\n          o(eventObj);\n        }\n\n        if (eventObj.removed) {\n          this.off(eventObj.type, o, eventPhase === 1);\n          eventObj.removed = false;\n        }\n      }\n    }\n  }\n\n}\n\n/**\n * @license Ticker\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * The Ticker provides a centralized tick or heartbeat broadcast at a set interval. Listeners can subscribe to the tick\n * event to be notified when a set time interval has elapsed.\n *\n * Note that the interval that the tick event is called is a target interval, and may be broadcast at a slower interval\n * when under high CPU load. The Ticker class uses a static interface (ex. `Ticker.framerate = 30;`) and\n * can not be instantiated.\n *\n * @todo Pass timingMode, maxDelta, paused values as instantiation arguments?\n *\n * @memberof core\n * @example\n * Ticker.addEventListener(\"tick\", event => {\n *   // Actions carried out each tick (aka frame)\n *   if (!event.paused) {\n *     // Actions carried out when the Ticker is not paused.\n *   }\n * });\n * @example\n * // Ticker export explanation\n * import Ticker, { Ticker as TickerClass, getTicker } from \"@createjs/core\";\n * Ticker.name, Ticker.RAF // -> createjs.global, undefined\n * TickerClass.RAF // -> raf\n * Ticker === getTicker(\"createjs.global\") // -> true\n *\n * @extends core.EventDispatcher\n * @param {string} name The name assigned to this instance.\n */\n\nclass Ticker extends EventDispatcher {\n  /**\n   * In this mode, Ticker uses the requestAnimationFrame API, but attempts to synch the ticks to target framerate. It\n   * uses a simple heuristic that compares the time of the RAF return to the target time for the current frame and\n   * dispatches the tick when the time is within a certain threshold.\n   *\n   * This mode has a higher variance for time between frames than {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}},\n   * but does not require that content be time based as with {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}} while\n   * gaining the benefits of that API (screen synch, background throttling).\n   *\n   * Variance is usually lowest for framerates that are a divisor of the RAF frequency. This is usually 60, so\n   * framerates of 10, 12, 15, 20, and 30 work well.\n   *\n   * Falls back to {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n   * supported.\n   *\n   * @static\n   * @type {string}\n   * @default \"synched\"\n   * @readonly\n   */\n  static get RAF_SYNCHED() {\n    return \"synched\";\n  }\n  /**\n   * In this mode, Ticker passes through the requestAnimationFrame heartbeat, ignoring the target framerate completely.\n   * Because requestAnimationFrame frequency is not deterministic, any content using this mode should be time based.\n   * You can leverage {@link core.Ticker#getTime} and the {@link core.Ticker#event:tick}\n   * event object's \"delta\" properties to make this easier.\n   *\n   * Falls back on {@link core.Ticker.TIMEOUT} if the requestAnimationFrame API is not supported.\n   *\n   * @static\n   * @type {string}\n   * @default \"raf\"\n   * @readonly\n   */\n\n\n  static get RAF() {\n    return \"raf\";\n  }\n  /**\n   * In this mode, Ticker uses the setTimeout API. This provides predictable, adaptive frame timing, but does not\n   * provide the benefits of requestAnimationFrame (screen synch, background throttling).\n   *\n   * @static\n   * @type {string}\n   * @default \"timeout\"\n   * @readonly\n   */\n\n\n  static get TIMEOUT() {\n    return \"timeout\";\n  }\n\n  constructor(name) {\n    super();\n    /**\n     * The name of this instance.\n     * @type {string}\n     */\n\n    this.name = name;\n    /**\n     * Specifies the timing api (setTimeout or requestAnimationFrame) and mode to use.\n     *\n     * @see {@link core.Ticker.TIMEOUT}\n     * @see {@link core.Ticker.RAF}\n     * @see {@link core.Ticker.RAF_SYNCHED}\n     *\n     * @type {string}\n     * @default Ticker.TIMEOUT\n     */\n\n    this.timingMode = Ticker.TIMEOUT;\n    /**\n     * Specifies a maximum value for the delta property in the tick event object. This is useful when building time\n     * based animations and systems to prevent issues caused by large time gaps caused by background tabs, system sleep,\n     * alert dialogs, or other blocking routines. Double the expected frame duration is often an effective value\n     * (ex. maxDelta=50 when running at 40fps).\n     *\n     * This does not impact any other values (ex. time, runTime, etc), so you may experience issues if you enable maxDelta\n     * when using both delta and other values.\n     *\n     * If 0, there is no maximum.\n     *\n     * @type {number}\n     * @default 0\n     */\n\n    this.maxDelta = 0;\n    /**\n     * When the ticker is paused, all listeners will still receive a tick event, but the `paused` property\n     * of the event will be `true`. Also, while paused the `runTime` will not increase.\n     *\n     * @example\n     * Ticker.addEventListener(\"tick\", event => console.log(event.paused, Ticker.getTime(false), Ticker.getTime(true)));\n     * Ticker.paused = true;\n     *\n     * @see {@link core.Ticker#event:tick}\n     * @see {@link core.Ticker#getTime}\n     * @see {@link core.Ticker#getEventTime}\n     *\n     * @type {boolean}\n     * @default false\n     */\n\n    this.paused = false;\n    /**\n     * @private\n     * @type {boolean}\n     * @default false\n     */\n\n    this._inited = false;\n    /**\n     * @private\n     * @type {number}\n     * @default 0\n     */\n\n    this._startTime = 0;\n    /**\n     * @private\n     * @type {number}\n     * @default 0\n     */\n\n    this._pausedTime = 0;\n    /**\n     * The number of ticks that have passed.\n     *\n     * @private\n     * @type {number}\n     * @default 0\n     */\n\n    this._ticks = 0;\n    /**\n     * The number of ticks that have passed while Ticker has been paused.\n     *\n     * @private\n     * @type {number}\n     * @default\n     */\n\n    this._pausedTicks = 0;\n    /**\n     * @private\n     * @type {number}\n     * @default\n     */\n\n    this._interval = 50;\n    /**\n     * @private\n     * @type {number}\n     * @default\n     */\n\n    this._lastTime = 0;\n    /**\n     * @private\n     * @type {Array}\n     * @default null\n     */\n\n    this._times = null;\n    /**\n     * @private\n     * @type {Array}\n     * @default null\n     */\n\n    this._tickTimes = null;\n    /**\n     * Stores the timeout or requestAnimationFrame id.\n     *\n     * @private\n     * @type {number}\n     * @default null\n     */\n\n    this._timerId = null;\n    /**\n     * True if currently using requestAnimationFrame, false if using setTimeout. This may be different than timingMode\n     * if that property changed and a tick hasn't fired.\n     *\n     * @private\n     * @type {boolean}\n     * @default true\n     */\n\n    this._raf = true;\n  }\n  /**\n   * Indicates the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\n   * Note that actual time between ticks may be more than specified depending on CPU load.\n   * This property is ignored if the ticker is using the `RAF` timing mode.\n   *\n   * @type {number}\n   */\n\n\n  get interval() {\n    return this._interval;\n  }\n\n  set interval(interval) {\n    this._interval = interval;\n\n    if (!this._inited) {\n      return;\n    }\n\n    this._setupTick();\n  }\n  /**\n   * Indicates the target frame rate in frames per second (FPS). Effectively just a shortcut to `interval`, where\n   * `framerate == 1000/interval`.\n   *\n   * @type {number}\n   */\n\n\n  get framerate() {\n    return 1000 / this._interval;\n  }\n\n  set framerate(framerate) {\n    this.interval = 1000 / framerate;\n  }\n  /**\n   * Starts the tick. This is called automatically when the first listener is added.\n   */\n\n\n  init() {\n    if (this._inited) {\n      return;\n    }\n\n    this._inited = true;\n    this._times = [];\n    this._tickTimes = [];\n    this._startTime = this._getTime();\n\n    this._times.push(this._lastTime = 0);\n\n    this._setupTick();\n  }\n  /**\n   * Stops the Ticker and removes all listeners. Use init() to restart the Ticker.\n   */\n\n\n  reset() {\n    if (this._raf) {\n      let f = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame;\n      f && f(this._timerId);\n    } else {\n      clearTimeout(this._timerId);\n    }\n\n    this.removeAllEventListeners(\"tick\");\n    this._timerId = this._times = this._tickTimes = null;\n    this._startTime = this._lastTime = this._ticks = 0;\n    this._inited = false;\n  }\n  /**\n   * Init the Ticker instance if it hasn't been already.\n   */\n\n\n  addEventListener(type, listener, useCapture) {\n    !this._inited && this.init();\n    return super.addEventListener(type, listener, useCapture);\n  }\n  /**\n   * Returns the average time spent within a tick. This can vary significantly from the value provided by getMeasuredFPS\n   * because it only measures the time spent within the tick execution stack.\n   *\n   * Example 1: With a target FPS of 20, getMeasuredFPS() returns 20fps, which indicates an average of 50ms between\n   * the end of one tick and the end of the next. However, getMeasuredTickTime() returns 15ms. This indicates that\n   * there may be up to 35ms of \"idle\" time between the end of one tick and the start of the next.\n   *\n   * Example 2: With a target FPS of 30, getFPS() returns 10fps, which indicates an average of 100ms between the end of\n   * one tick and the end of the next. However, getMeasuredTickTime() returns 20ms. This would indicate that something\n   * other than the tick is using ~80ms (another script, DOM rendering, etc).\n   *\n   * @param {number} [ticks=null] The number of previous ticks over which to measure the average time spent in a tick.\n   * Defaults to the number of ticks per second. To get only the last tick's time, pass in 1.\n   * @return {number} The average time spent in a tick in milliseconds.\n   */\n\n\n  getMeasuredTickTime(ticks = null) {\n    const times = this._tickTimes;\n\n    if (!times || times.length < 1) {\n      return -1;\n    } // by default, calculate average for the past ~1 second:\n\n\n    ticks = Math.min(times.length, ticks || this.framerate | 0);\n    return times.reduce((a, b) => a + b, 0) / ticks;\n  }\n  /**\n   * Returns the actual frames / ticks per second.\n   *\n   * @param {number} [ticks=null] The number of previous ticks over which to measure the actual frames / ticks per second.\n   * Defaults to the number of ticks per second.\n   * @return {number} The actual frames / ticks per second. Depending on performance, this may differ\n   * from the target frames per second.\n   */\n\n\n  getMeasuredFPS(ticks = null) {\n    const times = this._times;\n\n    if (!times || times.length < 2) {\n      return -1;\n    } // by default, calculate fps for the past ~1 second:\n\n\n    ticks = Math.min(times.length - 1, ticks || this.framerate | 0);\n    return 1000 / ((times[0] - times[ticks]) / ticks);\n  }\n  /**\n   * Returns the number of milliseconds that have elapsed since Ticker was initialized via {@link core.Ticker#init}.\n   * Returns -1 if Ticker has not been initialized. For example, you could use\n   * this in a time synchronized animation to determine the exact amount of time that has elapsed.\n   *\n   * @param {boolean} [runTime=false] If true only time elapsed while Ticker was not paused will be returned.\n   * If false, the value returned will be total time elapsed since the first tick event listener was added.\n   * @return {number} Number of milliseconds that have elapsed since Ticker was initialized or -1.\n   */\n\n\n  getTime(runTime = false) {\n    return this._startTime ? this._getTime() - (runTime ? this._pausedTime : 0) : -1;\n  }\n  /**\n   * Similar to {@link core.Ticker#getTime}, but returns the time on the most recent {@link core.Ticker#event:tick}\n   * event object.\n   *\n   * @param {boolean} [runTime=false] If true, the runTime property will be returned instead of time.\n   * @returns {number} The time or runTime property from the most recent tick event or -1.\n   */\n\n\n  getEventTime(runTime = false) {\n    return this._startTime ? (this._lastTime || this._startTime) - (runTime ? this._pausedTime : 0) : -1;\n  }\n  /**\n   * Returns the number of ticks that have been broadcast by Ticker.\n   *\n   * @param {boolean} [pauseable=false] Indicates whether to include ticks that would have been broadcast\n   * while Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\n   * If false, tick events that would have been broadcast while Ticker was paused will be included in the return\n   * value.\n   * @return {number} of ticks that have been broadcast.\n   */\n\n\n  getTicks(pauseable = false) {\n    return this._ticks - (pauseable ? this._pausedTicks : 0);\n  }\n  /**\n   * @private\n   */\n\n\n  _handleSynch() {\n    this._timerId = null;\n\n    this._setupTick(); // run if enough time has elapsed, with a little bit of flexibility to be early:\n\n\n    if (this._getTime() - this._lastTime >= (this._interval - 1) * 0.97) {\n      this._tick();\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  _handleRAF() {\n    this._timerId = null;\n\n    this._setupTick();\n\n    this._tick();\n  }\n  /**\n   * @private\n   */\n\n\n  _handleTimeout() {\n    this._timerId = null;\n\n    this._setupTick();\n\n    this._tick();\n  }\n  /**\n   * @private\n   */\n\n\n  _setupTick() {\n    if (this._timerId != null) {\n      return;\n    } // avoid duplicates\n\n\n    const mode = this.timingMode || this._raf && Ticker.RAF;\n\n    if (mode === Ticker.RAF_SYNCHED || mode === Ticker.RAF) {\n      const f = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;\n\n      if (f) {\n        this._timerId = f(mode === Ticker.RAF ? this._handleRAF.bind(this) : this._handleSynch.bind(this));\n        this._raf = true;\n        return;\n      }\n    }\n\n    this._raf = false;\n    this._timerId = setTimeout(this._handleTimeout.bind(this), this._interval);\n  }\n  /**\n   * @private\n   * @emits core.Ticker#event:tick\n   */\n\n\n  _tick() {\n    const paused = this.paused,\n          time = this._getTime(),\n          elapsedTime = time - this._lastTime;\n\n    this._lastTime = time;\n    this._ticks++;\n\n    if (paused) {\n      this._pausedTicks++;\n      this._pausedTime += elapsedTime;\n    }\n\n    if (this.hasEventListener(\"tick\")) {\n      const event = new Event(\"tick\");\n      const maxDelta = this.maxDelta;\n      event.delta = maxDelta && elapsedTime > maxDelta ? maxDelta : elapsedTime;\n      event.paused = paused;\n      event.time = time;\n      event.runTime = time - this._pausedTime;\n      this.dispatchEvent(event);\n    }\n\n    this._tickTimes.unshift(this._getTime() - time);\n\n    while (this._tickTimes.length > 100) {\n      this._tickTimes.pop();\n    }\n\n    this._times.unshift(time);\n\n    while (this._times.length > 100) {\n      this._times.pop();\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  _getTime() {\n    const now = window.performance && window.performance.now;\n    return (now && now.call(performance) || new Date().getTime()) - this._startTime;\n  }\n\n  static on(type, listener, scope, once, data, useCapture) {\n    return _instance.on(type, listener, scope, once, data, useCapture);\n  }\n\n  static removeEventListener(type, listener, useCapture) {\n    _instance.removeEventListener(type, listener, useCapture);\n  }\n\n  static off(type, listener, useCapture) {\n    _instance.off(type, listener, useCapture);\n  }\n\n  static removeAllEventListeners(type) {\n    _instance.removeAllEventListeners(type);\n  }\n\n  static dispatchEvent(eventObj, bubbles, cancelable) {\n    return _instance.dispatchEvent(eventObj, bubbles, cancelable);\n  }\n\n  static hasEventListener(type) {\n    return _instance.hasEventListener(type);\n  }\n\n  static willTrigger(type) {\n    return _instance.willTrigger(type);\n  }\n\n  static toString() {\n    return _instance.toString();\n  }\n\n  static init() {\n    _instance.init();\n  }\n\n  static reset() {\n    _instance.reset();\n  }\n\n  static addEventListener(type, listener, useCapture) {\n    _instance.addEventListener(type, listener, useCapture);\n  }\n\n  static getMeasuredTickTime(ticks) {\n    return _instance.getMeasuredTickTime(ticks);\n  }\n\n  static getMeasuredFPS(ticks) {\n    return _instance.getMeasuredFPS(ticks);\n  }\n\n  static getTime(runTime) {\n    return _instance.getTime(runTime);\n  }\n\n  static getEventTime(runTime) {\n    return _instance.getEventTime(runTime);\n  }\n\n  static getTicks(pauseable) {\n    return _instance.getTicks(pauseable);\n  }\n\n  static get interval() {\n    return _instance.interval;\n  }\n\n  static set interval(interval) {\n    _instance.interval = interval;\n  }\n\n  static get framerate() {\n    return _instance.framerate;\n  }\n\n  static set framerate(framerate) {\n    _instance.framerate = framerate;\n  }\n\n  static get name() {\n    return _instance.name;\n  }\n\n  static set name(name) {\n    _instance.name = name;\n  }\n\n  static get timingMode() {\n    return _instance.timingMode;\n  }\n\n  static set timingMode(timingMode) {\n    _instance.timingMode = timingMode;\n  }\n\n  static get maxDelta() {\n    return _instance.maxDelta;\n  }\n\n  static set maxDelta(maxDelta) {\n    _instance.maxDelta = maxDelta;\n  }\n\n  static get paused() {\n    return _instance.paused;\n  }\n\n  static set paused(paused) {\n    _instance.paused = paused;\n  }\n\n}\n\nconst _instance = new Ticker(\"createjs.global\");\n\n/**\n * @license\n *\n * StageGL\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nclass StageGL {\n  constructor() {\n    throw new Error(`\n\t\t\tStageGL is not currently supported on the EaselJS 2.0 branch.\n\t\t\tEnd of Q1 2018 is targetted for StageGL support.\n\t\t\tFollow @CreateJS on Twitter for updates.\n\t\t`);\n  }\n\n}\n\n/**\n * @license uid\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/** @ignore */\nlet _nextId = 0;\n/**\n * Global utility for generating sequential unique ID numbers.\n *\n * @memberof easeljs\n * @name easeljs.uid\n * @example\n * import { uid } from \"@createjs/easeljs\";\n * var ids = [];\n * while (ids.length <= 3) {\n *   ids.push(uid());\n * }\n * // ids == [0, 1, 2, 3]\n */\n\nfunction uid() {\n  return _nextId++;\n}\n\n/**\n * @license Point\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Represents a point on a 2 dimensional x / y coordinate system.\n *\n * @memberof easeljs\n * @example\n * let point = new Point(0, 100);\n *\n * @param {Number} [x] X position.\n * @param {Number} [y] Y position.\n */\nclass Point {\n  constructor(x, y) {\n    this.setValues(x, y); // assigned in the setValues method.\n\n    /**\n     * X position.\n     * @property x\n     * @type {Number}\n     */\n\n    /**\n     * Y position.\n     * @property y\n     * @type {Number}\n     */\n  }\n  /**\n   * Sets the specified values on this instance.\n   * @param {Number} [x=0] X position.\n   * @param {Number} [y=0] Y position.\n   * @return {easeljs.Point} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  setValues(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n  /**\n   * Copies all properties from the specified point to this point.\n   * @param {easeljs.Point} point The point to copy properties from.\n   * @return {easeljs.Point} This point. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  copy(point) {\n    this.x = point.x;\n    this.y = point.y;\n    return this;\n  }\n  /**\n   * Returns a clone of the Point instance.\n   * @return {easeljs.Point} a clone of the Point instance.\n   */\n\n\n  clone() {\n    return new Point(this.x, this.y);\n  }\n  /**\n   * Returns a string representation of this object.\n   * @return {String} a string representation of the instance.\n   */\n\n\n  toString() {\n    return `[${this.constructor.name} (x=${this.x} y=${this.y})]`;\n  }\n\n}\n\n/**\n * @license Matrix2D\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * Represents an affine transformation matrix, and provides tools for constructing and concatenating matrices.\n *\n * <pre>\n * This matrix can be visualized as:\n *\n * \t[ a  c  tx\n * \t  b  d  ty\n * \t  0  0  1  ]\n *\n * Note the locations of b and c.\n * </pre>\n *\n * @param {Number} [a] Specifies the a property for the new matrix.\n * @param {Number} [b] Specifies the b property for the new matrix.\n * @param {Number} [c] Specifies the c property for the new matrix.\n * @param {Number} [d] Specifies the d property for the new matrix.\n * @param {Number} [tx] Specifies the tx property for the new matrix.\n * @param {Number} [ty] Specifies the ty property for the new matrix.\n */\n\nclass Matrix2D {\n  constructor(a, b, c, d, tx, ty) {\n    this.setValues(a, b, c, d, tx, ty); // assigned in the setValues method.\n\n    /**\n     * Position (0, 0) in a 3x3 affine transformation matrix.\n     * @property a\n     * @type {Number}\n     */\n\n    /**\n     * Position (0, 1) in a 3x3 affine transformation matrix.\n     * @property b\n     * @type {Number}\n     */\n\n    /**\n     * Position (1, 0) in a 3x3 affine transformation matrix.\n     * @property c\n     * @type {Number}\n     */\n\n    /**\n     * Position (1, 1) in a 3x3 affine transformation matrix.\n     * @property d\n     * @type {Number}\n     */\n\n    /**\n     * Position (2, 0) in a 3x3 affine transformation matrix.\n     * @property tx\n     * @type {Number}\n     */\n\n    /**\n     * Position (2, 1) in a 3x3 affine transformation matrix.\n     * @property ty\n     * @type {Number}\n     */\n  }\n  /**\n   * Sets the specified values on this instance.\n   * @param {Number} [a=1] Specifies the a property for the new matrix.\n   * @param {Number} [b=0] Specifies the b property for the new matrix.\n   * @param {Number} [c=0] Specifies the c property for the new matrix.\n   * @param {Number} [d=1] Specifies the d property for the new matrix.\n   * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n   * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n   * @return {Matrix2D} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  setValues(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n    // don't forget to update docs in the constructor if these change:\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.d = d;\n    this.tx = tx;\n    this.ty = ty;\n    return this;\n  }\n  /**\n   * Appends the specified matrix properties to this matrix. All parameters are required.\n   * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n   * @param {Number} a\n   * @param {Number} b\n   * @param {Number} c\n   * @param {Number} d\n   * @param {Number} tx\n   * @param {Number} ty\n   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n   * @chainable\n   */\n\n\n  append(a, b, c, d, tx, ty) {\n    let a1 = this.a;\n    let b1 = this.b;\n    let c1 = this.c;\n    let d1 = this.d;\n\n    if (a != 1 || b != 0 || c != 0 || d != 1) {\n      this.a = a1 * a + c1 * b;\n      this.b = b1 * a + d1 * b;\n      this.c = a1 * c + c1 * d;\n      this.d = b1 * c + d1 * d;\n    }\n\n    this.tx = a1 * tx + c1 * ty + this.tx;\n    this.ty = b1 * tx + d1 * ty + this.ty;\n    return this;\n  }\n\n  /**\n   * Prepends the specified matrix properties to this matrix.\n   * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n   * @param {Number} a\n   * @param {Number} b\n   * @param {Number} c\n   * @param {Number} d\n   * @param {Number} tx\n   * @param {Number} ty\n   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n   * @chainable\n   */\n  prepend(a, b, c, d, tx, ty) {\n    let a1 = this.a;\n    let c1 = this.c;\n    let tx1 = this.tx;\n    this.a = a * a1 + c * this.b;\n    this.b = b * a1 + d * this.b;\n    this.c = a * c1 + c * this.d;\n    this.d = b * c1 + d * this.d;\n    this.tx = a * tx1 + c * this.ty + tx;\n    this.ty = b * tx1 + d * this.ty + ty;\n    return this;\n  }\n  /**\n   * Appends the specified matrix to this matrix.\n   * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n   * @param {easeljs.Matrix2D} matrix\n   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n   * @chainable\n   */\n\n\n  appendMatrix(matrix) {\n    return this.append(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  }\n  /**\n   * Prepends the specified matrix to this matrix.\n   * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n   *\n   * @example <caption>Calculate the combined transformation for a child object</caption>\n   * let o = displayObject;\n   * let mtx = o.getMatrix();\n   * while (o = o.parent) {\n   * \t // prepend each parent's transformation in turn:\n   * \t o.prependMatrix(o.getMatrix());\n   * }\n   *\n   * @param {easeljs.Matrix2D} matrix\n   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n   * @chainable\n   */\n\n\n  prependMatrix(matrix) {\n    return this.prepend(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  }\n  /**\n   * Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\n   *\n   * @example <caption>Generate a matrix representing the transformations of a display object</caption>\n   * let mtx = new Matrix2D();\n   * mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);\n   *\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} scaleX\n   * @param {Number} scaleY\n   * @param {Number} rotation\n   * @param {Number} skewX\n   * @param {Number} skewY\n   * @param {Number} [regX]\n   * @param {Number} [regY]\n   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n   * @chainable\n   */\n\n\n  appendTransform(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n    let r, cos, sin;\n\n    if (rotation % 360) {\n      r = rotation * Matrix2D.DEG_TO_RAD;\n      cos = Math.cos(r);\n      sin = Math.sin(r);\n    } else {\n      cos = 1;\n      sin = 0;\n    }\n\n    if (skewX || skewY) {\n      // TODO: can this be combined into a single append operation?\n      skewX *= Matrix2D.DEG_TO_RAD;\n      skewY *= Matrix2D.DEG_TO_RAD;\n      this.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n      this.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, 0, 0);\n    } else {\n      this.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n    }\n\n    if (regX || regY) {\n      // append the registration offset:\n      this.tx -= regX * this.a + regY * this.c;\n      this.ty -= regX * this.b + regY * this.d;\n    }\n\n    return this;\n  }\n  /**\n   * Generates matrix properties from the specified display object transform properties, and prepends them to this matrix.\n   *\n   * Note that the above example would not account for {@link easeljs.DisplayObject#transformMatrix} values.\n   * See {@link easeljs.Matrix2D#prependMatrix} for an example that does.\n   *\n   * @example <caption>Calculate the combined transformation for a child object</caption>\n   * let o = displayObject;\n   * let mtx = new Matrix2D();\n   * do  {\n   * \t // prepend each parent's transformation in turn:\n   * \t mtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n   * } while (o = o.parent);\n   *\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} scaleX\n   * @param {Number} scaleY\n   * @param {Number} rotation\n   * @param {Number} skewX\n   * @param {Number} skewY\n   * @param {Number} [regX]\n   * @param {Number} [regY]\n   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n   */\n\n\n  prependTransform(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n    let r, cos, sin;\n\n    if (rotation % 360) {\n      r = rotation * Matrix2D.DEG_TO_RAD;\n      cos = Math.cos(r);\n      sin = Math.sin(r);\n    } else {\n      cos = 1;\n      sin = 0;\n    }\n\n    if (regX || regY) {\n      // prepend the registration offset:\n      this.tx -= regX;\n      this.ty -= regY;\n    }\n\n    if (skewX || skewY) {\n      // TODO: can this be combined into a single prepend operation?\n      skewX *= Matrix2D.DEG_TO_RAD;\n      skewY *= Matrix2D.DEG_TO_RAD;\n      this.prepend(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, 0, 0);\n      this.prepend(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n    } else {\n      this.prepend(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n    }\n\n    return this;\n  }\n  /**\n   * Applies a clockwise rotation transformation to the matrix.\n   * @param {Number} angle The angle to rotate by, in degrees. To use a value in radians, multiply it by `Math.PI/180`.\n   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n   * @chainable\n   */\n\n\n  rotate(angle) {\n    angle *= Matrix2D.DEG_TO_RAD;\n    let cos = Math.cos(angle);\n    let sin = Math.sin(angle);\n    let a1 = this.a;\n    let b1 = this.b;\n    this.a = a1 * cos + this.c * sin;\n    this.b = b1 * cos + this.d * sin;\n    this.c = -a1 * sin + this.c * cos;\n    this.d = -b1 * sin + this.d * cos;\n    return this;\n  }\n  /**\n   * Applies a skew transformation to the matrix.\n   * @param {Number} skewX The amount to skew horizontally in degrees. To use a value in radians, multiply it by `Math.PI/180`.\n   * @param {Number} skewY The amount to skew vertically in degrees.\n   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  skew(skewX, skewY) {\n    skewX *= Matrix2D.DEG_TO_RAD;\n    skewY *= Matrix2D.DEG_TO_RAD;\n    this.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), 0, 0);\n    return this;\n  }\n  /**\n   * Applies a scale transformation to the matrix.\n   * @param {Number} x The amount to scale horizontally. E.G. a value of 2 will double the size in the X direction, and 0.5 will halve it.\n   * @param {Number} y The amount to scale vertically.\n   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n   * @chainable\n   */\n\n\n  scale(x, y) {\n    this.a *= x;\n    this.b *= x;\n    this.c *= y;\n    this.d *= y; //this.tx *= x;\n    //this.ty *= y;\n\n    return this;\n  }\n  /**\n   * Translates the matrix on the x and y axes.\n   * @param {Number} x\n   * @param {Number} y\n   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n   * @chainable\n   */\n\n\n  translate(x, y) {\n    this.tx += this.a * x + this.c * y;\n    this.ty += this.b * x + this.d * y;\n    return this;\n  }\n  /**\n   * Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation).\n   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n   * @chainable\n   */\n\n\n  identity() {\n    this.a = this.d = 1;\n    this.b = this.c = this.tx = this.ty = 0;\n    return this;\n  }\n  /**\n   * Inverts the matrix, causing it to perform the opposite transformation.\n   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n   * @chainable\n   */\n\n\n  invert() {\n    let a1 = this.a;\n    let b1 = this.b;\n    let c1 = this.c;\n    let d1 = this.d;\n    let tx1 = this.tx;\n    let n = a1 * d1 - b1 * c1;\n    this.a = d1 / n;\n    this.b = -b1 / n;\n    this.c = -c1 / n;\n    this.d = a1 / n;\n    this.tx = (c1 * this.ty - d1 * tx1) / n;\n    this.ty = -(a1 * this.ty - b1 * tx1) / n;\n    return this;\n  }\n  /**\n   * Returns true if the matrix is an identity matrix.\n   * @return {Boolean}\n   */\n\n\n  isIdentity() {\n    return this.tx === 0 && this.ty === 0 && this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1;\n  }\n  /**\n   * Returns true if this matrix is equal to the specified matrix (all property values are equal).\n   * @param {easeljs.Matrix2D} matrix The matrix to compare.\n   * @return {Boolean}\n   */\n\n\n  equals(matrix) {\n    return this.tx === matrix.tx && this.ty === matrix.ty && this.a === matrix.a && this.b === matrix.b && this.c === matrix.c && this.d === matrix.d;\n  }\n  /**\n   * Transforms a point according to this matrix.\n   * @param {Number} x The x component of the point to transform.\n   * @param {Number} y The y component of the point to transform.\n   * @param {easeljs.Point | Object} [pt] An object to copy the result into. If omitted a generic object with x/y properties will be returned.\n   * @return {easeljs.Point} This matrix. Useful for chaining method calls.\n   */\n\n\n  transformPoint(x, y, pt = new Point()) {\n    pt.x = x * this.a + y * this.c + this.tx;\n    pt.y = x * this.b + y * this.d + this.ty;\n    return pt;\n  }\n  /**\n   * Decomposes the matrix into transform properties (x, y, scaleX, scaleY, and rotation). Note that these values\n   * may not match the transform properties you used to generate the matrix, though they will produce the same visual\n   * results.\n   * @param {Object} [target] The object to apply the transform properties to. If null, then a new object will be returned.\n   * @return {Object} The target, or a new generic object with the transform properties applied.\n  */\n\n\n  decompose(target = {}) {\n    // TODO: it would be nice to be able to solve for whether the matrix can be decomposed into only scale/rotation even when scale is negative\n    target.x = this.tx;\n    target.y = this.ty;\n    target.scaleX = Math.sqrt(this.a * this.a + this.b * this.b);\n    target.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);\n    let skewX = Math.atan2(-this.c, this.d);\n    let skewY = Math.atan2(this.b, this.a);\n    let delta = Math.abs(1 - skewX / skewY);\n\n    if (delta < 0.00001) {\n      // effectively identical, can use rotation:\n      target.rotation = skewY / Matrix2D.DEG_TO_RAD;\n\n      if (this.a < 0 && this.d >= 0) {\n        target.rotation += target.rotation <= 0 ? 180 : -180;\n      }\n\n      target.skewX = target.skewY = 0;\n    } else {\n      target.skewX = skewX / Matrix2D.DEG_TO_RAD;\n      target.skewY = skewY / Matrix2D.DEG_TO_RAD;\n    }\n\n    return target;\n  }\n  /**\n   * Copies all properties from the specified matrix to this matrix.\n   * @param {easeljs.Matrix2D} matrix The matrix to copy properties from.\n   * @return {easeljs.Matrix2D} This matrix. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  copy(matrix) {\n    return this.setValues(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  }\n  /**\n   * Returns a clone of the Matrix2D instance.\n   * @return {easeljs.Matrix2D} a clone of the Matrix2D instance.\n   */\n\n\n  clone() {\n    return new Matrix2D(this.a, this.b, this.c, this.d, this.tx, this.ty);\n  }\n  /**\n   * Returns a string representation of this object.\n   * @return {String} a string representation of the instance.\n   */\n\n\n  toString() {\n    return `[${this.constructor.name} (a=${this.a} b=${this.b} c=${this.c} d=${this.d} tx=${this.tx} ty=${this.ty})]`;\n  }\n\n}\n/**\n * Multiplier for converting degrees to radians. Used internally by Matrix2D.\n * @static\n * @type {Number}\n * @readonly\n */\n\nMatrix2D.DEG_TO_RAD = Math.PI / 180;\n/**\n * An identity matrix, representing a null transformation.\n * @static\n * @type {easeljs.Matrix2D}\n * @readonly\n */\n\nMatrix2D.identity = new Matrix2D();\n\n/**\n * @license DisplayProps\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * Used for calculating and encapsulating display related properties.\n * @memberof easeljs\n * @param {Number} [visible] Visible value.\n * @param {Number} [alpha] Alpha value.\n * @param {Number} [shadow] A Shadow instance or null.\n * @param {Number} [compositeOperation] A compositeOperation value or null.\n * @param {Number} [matrix] A transformation matrix. Defaults to a new identity matrix.\n */\n\nclass DisplayProps {\n  constructor(visible, alpha, shadow, compositeOperation, matrix) {\n    this.setValues(visible, alpha, shadow, compositeOperation, matrix); // assigned in the setValues method.\n\n    /**\n     * Property representing the alpha that will be applied to a display object.\n     * @property alpha\n     * @type {Number}\n     */\n\n    /**\n     * Property representing the shadow that will be applied to a display object.\n     * @property shadow\n     * @type {easeljs.Shadow}\n     */\n\n    /**\n     * Property representing the compositeOperation that will be applied to a display object.\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing}\n     * @property compositeOperation\n     * @type {String}\n     */\n\n    /**\n     * Property representing the value for visible that will be applied to a display object.\n     * @property visible\n     * @type {Boolean}\n     */\n\n    /**\n     * The transformation matrix that will be applied to a display object.\n     * @property matrix\n     * @type {easeljs.Matrix2D}\n     */\n  }\n  /**\n   * Reinitializes the instance with the specified values.\n   * @param {Number} [visible=true] Visible value.\n   * @param {Number} [alpha=1] Alpha value.\n   * @param {Number} [shadow] A Shadow instance or null.\n   * @param {Number} [compositeOperation] A compositeOperation value or null.\n   * @param {Number} [matrix] A transformation matrix. Defaults to an identity matrix.\n   * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  setValues(visible = true, alpha = 1, shadow, compositeOperation, matrix) {\n    this.visible = visible;\n    this.alpha = alpha;\n    this.shadow = shadow;\n    this.compositeOperation = compositeOperation;\n    this.matrix = matrix || this.matrix && this.matrix.identity() || new Matrix2D();\n    return this;\n  }\n  /**\n   * Appends the specified display properties. This is generally used to apply a child's properties its parent's.\n   * @param {Boolean} visible desired visible value\n   * @param {Number} alpha desired alpha value\n   * @param {easeljs.Shadow} shadow desired shadow value\n   * @param {String} compositeOperation desired composite operation value\n   * @param {easeljs.Matrix2D} [matrix] a Matrix2D instance\n   * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  append(visible, alpha, shadow, compositeOperation, matrix) {\n    this.alpha *= alpha;\n    this.shadow = shadow || this.shadow;\n    this.compositeOperation = compositeOperation || this.compositeOperation;\n    this.visible = this.visible && visible;\n    matrix && this.matrix.appendMatrix(matrix);\n    return this;\n  }\n  /**\n   * Prepends the specified display properties. This is generally used to apply a parent's properties to a child's.\n   * For example, to get the combined display properties that would be applied to a child, you could use:\n   *\n   * @example\n   * let o = displayObject;\n   * let props = new DisplayProps();\n   * do {\n   * \t // prepend each parent's props in turn:\n   * \t props.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation, o.getMatrix());\n   * } while (o = o.parent);\n   *\n   * @param {Boolean} visible desired visible value\n   * @param {Number} alpha desired alpha value\n   * @param {easeljs.Shadow} shadow desired shadow value\n   * @param {String} compositeOperation desired composite operation value\n   * @param {easeljs.Matrix2D} [matrix] a Matrix2D instance\n   * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  prepend(visible, alpha, shadow, compositeOperation, matrix) {\n    this.alpha *= alpha;\n    this.shadow = this.shadow || shadow;\n    this.compositeOperation = this.compositeOperation || compositeOperation;\n    this.visible = this.visible && visible;\n    matrix && this.matrix.prependMatrix(matrix);\n    return this;\n  }\n  /**\n   * Resets this instance and its matrix to default values.\n   * @return {easeljs.DisplayProps} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  identity() {\n    this.visible = true;\n    this.alpha = 1;\n    this.shadow = this.compositeOperation = null;\n    this.matrix.identity();\n    return this;\n  }\n  /**\n   * Returns a clone of the DisplayProps instance. Clones the associated matrix.\n   * @return {easeljs.DisplayProps} a clone of the DisplayProps instance.\n   */\n\n\n  clone() {\n    return new DisplayProps(this.alpha, this.shadow, this.compositeOperation, this.visible, this.matrix.clone());\n  }\n\n}\n\n/**\n * @license Rectangle\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Represents a rectangle as defined by the points (x, y) and (x+width, y+height).\n * Used by {@link easeljs.DisplayObjects#getBounds}.\n *\n * @memberof easeljs\n * @example\n * let rect = new Rectangle(0, 0, 100, 100);\n *\n * @param {Number} [x] X position.\n * @param {Number} [y] Y position.\n * @param {Number} [width] The width of the Rectangle.\n * @param {Number} [height] The height of the Rectangle.\n */\nclass Rectangle {\n  constructor(x, y, width, height) {\n    this.setValues(x, y, width, height); // assigned in the setValues method.\n\n    /**\n     * X position.\n     * @property x\n     * @type {Number}\n     */\n\n    /**\n     * Y position.\n     * @property y\n     * @type {Number}\n     */\n\n    /**\n     * Width.\n     * @property width\n     * @type {Number}\n     */\n\n    /**\n     * Height.\n     * @property height\n     * @type {Number}\n     */\n  }\n  /**\n   * Sets the specified values on this instance.\n   * @param {Number} [x=0] X position.\n   * @param {Number} [y=0] Y position.\n   * @param {Number} [width=0] The width of the Rectangle.\n   * @param {Number} [height=0] The height of the Rectangle.\n   * @return {easeljs.Rectangle} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  setValues(x = 0, y = 0, width = 0, height = 0) {\n    // don't forget to update docs in the constructor if these change:\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    return this;\n  }\n  /**\n   * Extends the rectangle's bounds to include the described point or rectangle.\n   * @param {Number} x X position of the point or rectangle.\n   * @param {Number} y Y position of the point or rectangle.\n   * @param {Number} [width=0] The width of the rectangle.\n   * @param {Number} [height=0] The height of the rectangle.\n   * @return {easeljs.Rectangle} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  extend(x, y, width = 0, height = 0) {\n    if (x + width > this.x + this.width) {\n      this.width = x + width - this.x;\n    }\n\n    if (y + height > this.y + this.height) {\n      this.height = y + height - this.y;\n    }\n\n    if (x < this.x) {\n      this.width += this.x - x;\n      this.x = x;\n    }\n\n    if (y < this.y) {\n      this.height += this.y - y;\n      this.y = y;\n    }\n\n    return this;\n  }\n  /**\n   * Adds the specified padding to the rectangle's bounds.\n   * @param {Number} top\n   * @param {Number} left\n   * @param {Number} bottom\n   * @param {Number} right\n   * @return {easeljs.Rectangle} This instance. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  pad(top, left, bottom, right) {\n    this.x -= left;\n    this.y -= top;\n    this.width += left + right;\n    this.height += top + bottom;\n    return this;\n  }\n  /**\n   * Copies all properties from the specified rectangle to this rectangle.\n   * @param {easeljs.Rectangle} rectangle The rectangle to copy properties from.\n   * @return {easeljs.Rectangle} This rectangle. Useful for chaining method calls.\n   * @chainable\n  */\n\n\n  copy(rect) {\n    return this.setValues(rect.x, rect.y, rect.width, rect.height);\n  }\n  /**\n   * Returns true if this rectangle fully encloses the described point or rectangle.\n   * @param {Number} x X position of the point or rectangle.\n   * @param {Number} y Y position of the point or rectangle.\n   * @param {Number} [width=0] The width of the rectangle.\n   * @param {Number} [height=0] The height of the rectangle.\n   * @return {Boolean} True if the described point or rectangle is contained within this rectangle.\n  */\n\n\n  contains(x, y, width = 0, height = 0) {\n    return x >= this.x && x + width <= this.x + this.width && y >= this.y && y + height <= this.y + this.height;\n  }\n  /**\n   * Returns a new rectangle which contains this rectangle and the specified rectangle.\n   * @param {easeljs.Rectangle} rect The rectangle to calculate a union with.\n   * @return {easeljs.Rectangle} A new rectangle describing the union.\n  */\n\n\n  union(rect) {\n    return this.clone().extend(rect.x, rect.y, rect.width, rect.height);\n  }\n  /**\n   * Returns a new rectangle which describes the intersection (overlap) of this rectangle and the specified rectangle,\n   * or null if they do not intersect.\n   * @param {easeljs.Rectangle} rect The rectangle to calculate an intersection with.\n   * @return {easeljs.Rectangle} A new rectangle describing the intersection or null.\n  */\n\n\n  intersection(rect) {\n    let x1 = rect.x,\n        y1 = rect.y,\n        x2 = x1 + rect.width,\n        y2 = y1 + rect.height;\n\n    if (this.x > x1) {\n      x1 = this.x;\n    }\n\n    if (this.y > y1) {\n      y1 = this.y;\n    }\n\n    if (this.x + this.width < x2) {\n      x2 = this.x + this.width;\n    }\n\n    if (this.y + this.height < y2) {\n      y2 = this.y + this.height;\n    }\n\n    return x2 <= x1 || y2 <= y1 ? null : new Rectangle(x1, y1, x2 - x1, y2 - y1);\n  }\n  /**\n   * Returns true if the specified rectangle intersects (has any overlap) with this rectangle.\n   * @param {easeljs.Rectangle} rect The rectangle to compare.\n   * @return {Boolean} True if the rectangles intersect.\n  */\n\n\n  intersects(rect) {\n    return rect.x <= this.x + this.width && this.x <= rect.x + rect.width && rect.y <= this.y + this.height && this.y <= rect.y + rect.height;\n  }\n  /**\n   * Returns true if the width or height are equal or less than 0.\n   * @return {Boolean} True if the rectangle is empty.\n  */\n\n\n  isEmpty() {\n    return this.width <= 0 || this.height <= 0;\n  }\n  /**\n   * Returns a clone of the Rectangle instance.\n   * @return {easeljs.Rectangle} a clone of the Rectangle instance.\n   */\n\n\n  clone() {\n    return new Rectangle(this.x, this.y, this.width, this.height);\n  }\n  /**\n   * Returns a string representation of this object.\n   * @return {String} a string representation of the instance.\n   */\n\n\n  toString() {\n    return `[${this.constructor.name} (x=${this.x} y=${this.y} width=${this.width} height=${this.height})]`;\n  }\n\n}\n\n/**\n * @license Filter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Base class that all filters should inherit from. Filters need to be applied to objects that have been cached using\n * the {@link easeljs.DisplayObject#cache} method. If an object changes, please cache it again, or use\n * {@link easeljs.DisplayObject#updateCache}. Note that the filters must be applied before caching.\n *\n * Note that each filter can implement a {@link easeljs.Filter#getBounds} method, which returns the\n * margins that need to be applied in order to fully display the filter. For example, the {@link easeljs.BlurFilter}\n * will cause an object to feather outwards, resulting in a margin around the shape.\n *\n * <h4>EaselJS Filters</h4>\n * EaselJS comes with a number of pre-built filters:\n * <ul>\n *   <li>{@link easeljs.AlphaMapFilter}: Map a greyscale image to the alpha channel of a display object</li>\n *   <li>{@link easeljs.AlphaMaskFilter}: Map an image's alpha channel to the alpha channel of a display object</li>\n *   <li>{@link easeljs.BlurFilter}: Apply vertical and horizontal blur to a display object</li>\n *   <li>{@link easeljs.ColorFilter}: Color transform a display object</li>\n *   <li>{@link easeljs.ColorMatrixFilter}: Transform an image using a {{#crossLink \"ColorMatrix\"}}{{/crossLink}}</li>\n * </ul>\n *\n * @memberof easeljs\n * @example\n * shape.filters = [\n *   new createjs.ColorFilter(0, 0, 0, 1, 255, 0, 0),\n *   new createjs.BlurFilter(5, 5, 10)\n * ];\n * shape.cache(0, 0, 100, 100);\n */\nclass Filter {\n  constructor() {\n    /**\n     * A flag stating that this filter uses a context draw mode and cannot be batched into imageData processing.\n     * @type {Boolean}\n     * @default false\n     */\n    this.usesContext = false;\n    /**\n     * Another filter that is required to act as part of this filter and created and managed under the hood.\n     * @private\n     * @type {easeljs.Filter}\n     * @default null\n     */\n\n    this._multiPass = null;\n    /**\n     * Pre-processing shader code, will be parsed before being fed in.\n     * This should be based upon StageGL.SHADER_VERTEX_BODY_REGULAR\n     * @virtual\n     * @type {String}\n     * @readonly\n     */\n\n    this.VTX_SHADER_BODY = null;\n    /**\n     * Pre-processing shader code, will be parsed before being fed in.\n     * This should be based upon StageGL.SHADER_FRAGMENT_BODY_REGULAR\n     * @virtual\n     * @type {String}\n     * @readonly\n     */\n\n    this.FRAG_SHADER_BODY = null;\n  }\n  /**\n   * Provides padding values for this filter. That is, how much the filter will extend the visual bounds of an object it is applied to.\n   * @abstract\n   * @param {easeljs.Rectangle} [rect] If specified, the provided Rectangle instance will be expanded by the padding amounts and returned.\n   * @return {easeljs.Rectangle} If a `rect` param was provided, it is returned. If not, either a new rectangle with the padding values, or null if no padding is required for this filter.\n   */\n\n\n  getBounds(rect) {}\n  /**\n   * @virtual\n   * @abstract\n   * @param {WebGLContext} gl The context associated with the stage performing the render.\n   * @param {easeljs.StageGL} stage The stage instance that will be rendering.\n   * @param {ShaderProgram} shaderProgram The compiled shader that is going to be sued to perform the render.\n   */\n\n\n  shaderParamSetup(gl, stage, shaderProgram) {}\n  /**\n   * Applies the filter to the specified context.\n   * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n   * @param {Number} x The x position to use for the source rect.\n   * @param {Number} y The y position to use for the source rect.\n   * @param {Number} width The width to use for the source rect.\n   * @param {Number} height The height to use for the source rect.\n   * @param {CanvasRenderingContext2D} [targetCtx] The 2D context to draw the result to. Defaults to the context passed to ctx.\n   * @param {Number} [targetX] The x position to draw the result to. Defaults to the value passed to x.\n   * @param {Number} [targetY] The y position to draw the result to. Defaults to the value passed to y.\n   * @return {Boolean} If the filter was applied successfully.\n   */\n\n\n  applyFilter(ctx, x, y, width, height, targetCtx, targetX, targetY) {\n    // this is the default behaviour because most filters access pixel data. It is overridden when not needed.\n    targetCtx = targetCtx || ctx;\n\n    if (targetX == null) {\n      targetX = x;\n    }\n\n    if (targetY == null) {\n      targetY = y;\n    }\n\n    try {\n      let imageData = ctx.getImageData(x, y, width, height);\n\n      if (this._applyFilter(imageData)) {\n        targetCtx.putImageData(imageData, targetX, targetY);\n        return true;\n      }\n    } catch (e) {}\n\n    return false;\n  }\n  /**\n   * Returns a string representation of this object.\n   * @return {String} a string representation of the instance.\n   */\n\n\n  toString() {\n    return `[${this.constructor.name}]`;\n  }\n  /**\n   * Returns a clone of this Filter instance.\n   * @return {easeljs.Filter} A clone of the current Filter instance.\n   */\n\n\n  clone() {\n    return new Filter();\n  }\n  /**\n   * @abstract\n   * @param {ImageData} imageData Target ImageData instance.\n   * @return {Boolean}\n   */\n\n\n  _applyFilter(imageData) {}\n\n}\n\n/**\n * @license BitmapCache\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * The BitmapCache is an internal representation of all the cache properties and logic required in order to \"cache\"\n * an object. This information and functionality used to be located on a {@link easeljs.DisplayObject#cache}\n * method in {@link easeljs.DisplayObject}, but was moved to its own class.\n *\n * Caching in this context is purely visual, and will render the DisplayObject out into an image to be used instead\n * of the object. The actual cache itself is still stored on the target with the {@link easeljs.DisplayObject#cacheCanvas}.\n *\n * Working with a singular image like a {@link easeljs.Bitmap}, there is little benefit to performing\n * a cache operation, as it is already a single image. Caching is best done on containers that have multiple complex\n * parts that do not change often, so that rendering the image will improve overall rendering speed. A cached object\n * will not visually update until explicitly told to do so with a call to {@link easeljs.Stage#update},\n * much like a Stage. If a cache is being updated every frame, it is likely not improving rendering performance.\n * Caches are best used when updates will be sparse.\n *\n * Caching is also a co-requisite for applying filters to prevent expensive filters running constantly without need.\n * The BitmapCache is also responsible for applying filters to objects, and reads each {@link easeljs.Filter}.\n * Real-time Filters are not recommended when dealing with a Context2D canvas if performance is a concern. For best\n * performance and to still allow for some visual effects, use a {{#crossLink \"DisplayObject/compositeOperation:property\"}}{{/crossLink}}\n * when possible.\n *\n * @memberof easeljs\n * @extends easeljs.Filter\n */\n\nclass BitmapCache extends Filter {\n  constructor() {\n    super();\n    /**\n     * Width of the cache relative to the target object.\n     * @protected\n     * @type {Number}\n     * @default undefined\n     */\n\n    this.width = undefined;\n    /**\n     * Height of the cache relative to the target object.\n     * @protected\n     * @type {Number}\n     * @default undefined\n     */\n\n    this.height = undefined;\n    /**\n     * Horizontal position of the cache relative to the target's origin.\n     * @protected\n     * @type {Number}\n     * @default undefined\n     */\n\n    this.x = undefined;\n    /**\n     * Vertical position of the cache relative to target's origin.\n     * @protected\n     * @type {Number}\n     * @default undefined\n     */\n\n    this.y = undefined;\n    /**\n     * The internal scale of the cache image, does not affects display size. This is useful to both increase and\n     * decrease render quality. Objects with increased scales are more likely to look good when scaled up. Objects\n     * with decreased scales can save on rendering performance.\n     * @protected\n     * @type {Number}\n     * @default 1\n     */\n\n    this.scale = 1;\n    /**\n     * The relative offset of the {@link easeljs.BitmapCache#x} position, used for drawing\n     * into the cache with the correct offsets. Re-calculated every update call before drawing.\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n\n    this.offX = 0;\n    /**\n     * The relative offset of the {@link easeljs.BitmapCache#y} position, used for drawing\n     * into the cache with the correct offsets. Re-calculated every update call before drawing.\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n\n    this.offY = 0;\n    /**\n     * Track how many times the cache has been updated, mostly used for preventing duplicate cacheURLs. This can be\n     * useful to see if a cache has been updated.\n     * @type {Number}\n     * @default 0\n     */\n\n    this.cacheID = 0;\n    /**\n     * Relative offset of the x position, used for drawing the cache into other scenes.\n     * Re-calculated every update call before drawing.\n     * @protected\n     * @type {Number}\n     * @default 0\n     * @todo Is this description right? Its the same as offX.\n     */\n\n    this._filterOffX = 0;\n    /**\n     * Relative offset of the y position, used for drawing into the cache into other scenes.\n     * Re-calculated every update call before drawing.\n     * @protected\n     * @type {Number}\n     * @default 0\n     * @todo Is this description right? Its the same as offY.\n     */\n\n    this._filterOffY = 0;\n    /**\n     * The cacheID when a DataURL was requested.\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n\n    this._cacheDataURLID = 0;\n    /**\n     * The cache's DataURL, generated on-demand using the getter.\n     * @protected\n     * @type {String}\n     * @default null\n     */\n\n    this._cacheDataURL = null;\n    /**\n     * Internal tracking of final bounding width, approximately `width*scale;` however, filters can complicate the actual value.\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n\n    this._drawWidth = 0;\n    /**\n     * Internal tracking of final bounding height, approximately `height*scale;` however, filters can complicate the actual value.\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n\n    this._drawHeight = 0;\n    /**\n     * Internal tracking of the last requested bounds, may happen repeadtedly so stored to avoid object creation.\n     * @protected\n     * @type {easeljs.Rectangle}\n     * @default easeljs.Rectangle\n     */\n\n    this._boundRect = new Rectangle();\n  }\n  /**\n   * Returns the bounds that surround all applied filters. This relies on each filter to describe how it changes bounds.\n   * @param {easeljs.DisplayObject} target The object to check the filter bounds for.\n   * @param {easeljs.Rectangle} [output] Calculated bounds will be applied to this rect.\n   * @return {easeljs.Rectangle}\n   * @static\n   */\n\n\n  static getFilterBounds(target, output = new Rectangle()) {\n    let filters = target.filters;\n    let filterCount = filters && filters.length;\n\n    if (!!filterCount <= 0) {\n      return output;\n    }\n\n    for (let i = 0; i < filterCount; i++) {\n      let f = filters[i];\n\n      if (!f || !f.getBounds) {\n        continue;\n      }\n\n      let test = f.getBounds();\n\n      if (!test) {\n        continue;\n      }\n\n      if (i == 0) {\n        output.setValues(test.x, test.y, test.width, test.height);\n      } else {\n        output.extend(test.x, test.y, test.width, test.height);\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Directly called via {@link easeljs.DisplayObject#cache}. Creates and sets properties needed\n   * for a cache to function, and performs the initial update.\n   * @param {easeljs.DisplayObject} target The DisplayObject this cache is linked to.\n   * @param {Number} [x=0] The x coordinate origin for the cache region.\n   * @param {Number} [y=0] The y coordinate origin for the cache region.\n   * @param {Number} [width=1] The width of the cache region.\n   * @param {Number} [height=1] The height of the cache region.\n   * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape\n   * using `myShape.cache(0,0,100,100,2)`, then the resulting cacheCanvas will be 200x200 pixels. This lets you scale\n   * and rotate cached elements with greater fidelity.\n   * @param {Object} [options] When using things like {@link easeljs.StageGL} there may be\n   * extra caching opportunities or requirements.\n   */\n\n\n  define(target, x = 0, y = 0, width = 1, height = 1, scale = 1, options) {\n    if (!target) {\n      throw \"No symbol to cache\";\n    }\n\n    this._options = options;\n    this._useWebGL = options !== undefined;\n    this.target = target;\n    this.width = width >= 1 ? width : 1;\n    this.height = height >= 1 ? height : 1;\n    this.x = x;\n    this.y = y;\n    this.scale = scale;\n    this.update();\n  }\n  /**\n   * Directly called via {@link easeljs.DisplayObject#updateCache}, but also internally. This\n   * has the dual responsibility of making sure the surface is ready to be drawn to, and performing the draw. For\n   * full details of each behaviour, check the protected functions {@link easeljs.BitmapCache#_updateSurface}\n   * and {@link easeljs.BitmapCache#_drawToCache} respectively.\n   * @param {String} [compositeOperation] The DisplayObject this cache is linked to.\n   */\n\n\n  update(compositeOperation) {\n    if (!this.target) {\n      throw \"define() must be called before update()\";\n    }\n\n    let filterBounds = BitmapCache.getFilterBounds(this.target);\n    let surface = this.target.cacheCanvas;\n    this._drawWidth = Math.ceil(this.width * this.scale) + filterBounds.width;\n    this._drawHeight = Math.ceil(this.height * this.scale) + filterBounds.height;\n\n    if (!surface || this._drawWidth != surface.width || this._drawHeight != surface.height) {\n      this._updateSurface();\n    }\n\n    this._filterOffX = filterBounds.x;\n    this._filterOffY = filterBounds.y;\n    this.offX = this.x * this.scale + this._filterOffX;\n    this.offY = this.y * this.scale + this._filterOffY;\n\n    this._drawToCache(compositeOperation);\n\n    this.cacheID = this.cacheID ? this.cacheID + 1 : 1;\n  }\n  /**\n   * Reset and release all the properties and memory associated with this cache.\n   */\n\n\n  release() {\n    let stage = this.target.stage;\n\n    if (this._useWebGL && this._webGLCache) {\n      // if it isn't cache controlled clean up after yourself\n      if (!this._webGLCache.isCacheControlled) {\n        if (this.__lastRT) {\n          this.__lastRT = undefined;\n        }\n\n        if (this.__rtA) {\n          this._webGLCache._killTextureObject(this.__rtA);\n        }\n\n        if (this.__rtB) {\n          this._webGLCache._killTextureObject(this.__rtB);\n        }\n\n        if (this.target && this.target.cacheCanvas) {\n          this._webGLCache._killTextureObject(this.target.cacheCanvas);\n        }\n      } // set the context to none and let the garbage collector get the rest when the canvas itself gets removed\n\n\n      this._webGLCache = false;\n    } else if (stage instanceof StageGL) {\n      stage.releaseTexture(this.target.cacheCanvas);\n    }\n\n    this.target = this.target.cacheCanvas = null;\n    this.cacheID = this._cacheDataURLID = this._cacheDataURL = undefined;\n    this.width = this.height = this.x = this.y = this.offX = this.offY = 0;\n    this.scale = 1;\n  }\n  /**\n   * Returns a data URL for the cache, or `null` if this display object is not cached.\n   * Uses {@link easeljs.BitmapCache#cacheID} to ensure a new data URL is not generated if the\n   * cache has not changed.\n   * @return {String} The image data url for the cache.\n   */\n\n\n  getCacheDataURL() {\n    let cacheCanvas = this.target && this.target.cacheCanvas;\n\n    if (!cacheCanvas) {\n      return null;\n    }\n\n    if (this.cacheID != this._cacheDataURLID) {\n      this._cacheDataURLID = this.cacheID;\n      this._cacheDataURL = cacheCanvas.toDataURL ? cacheCanvas.toDataURL() : null; // incase function is\n    }\n\n    return this._cacheDataURL;\n  }\n  /**\n   * Use context2D drawing commands to display the cache canvas being used.\n   * @param {CanvasRenderingContext2D} ctx The context to draw into.\n   * @return {Boolean} Whether the draw was handled successfully.\n   */\n\n\n  draw(ctx) {\n    if (!this.target) {\n      return false;\n    }\n\n    ctx.drawImage(this.target.cacheCanvas, this.x + this._filterOffX / this.scale, this.y + this._filterOffY / this.scale, this._drawWidth / this.scale, this._drawHeight / this.scale);\n    return true;\n  }\n  /**\n   * Determine the bounds of the shape in local space.\n   * @returns {easeljs.Rectangle}\n   */\n\n\n  getBounds() {\n    const scale = this.scale;\n    return this._boundRect.setValue(this._filterOffX / scale, this._filterOffY / scale, this.width / scale, this.height / scale);\n  }\n  /**\n   * Basic context2D caching works by creating a new canvas element and setting its physical size. This function will\n   * create and or size the canvas as needed.\n   * @protected\n   */\n\n\n  _updateSurface() {\n    let surface;\n\n    if (!this._useWebGL) {\n      surface = this.target.cacheCanvas; // create it if it's missing\n\n      if (!surface) {\n        surface = this.target.cacheCanvas = window.createjs && createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n      } // now size it\n\n\n      surface.width = this._drawWidth;\n      surface.height = this._drawHeight; // skip the webgl-only updates\n\n      return;\n    } // create it if it's missing\n\n\n    if (!this._webGLCache) {\n      if (this._options.useGL === \"stage\") {\n        if (!(this.target.stage != null && this.target.stage.isWebGL)) {\n          throw `Cannot use 'stage' for cache because the object's parent stage is ${this.target.stage != null ? \"non WebGL.\" : \"not set, please addChild to the correct stage.\"}`;\n        }\n\n        this.target.cacheCanvas = true; // will be replaced with RenderTexture, temporary positive value for old \"isCached\" checks\n\n        this._webGLCache = this.target.stage;\n      } else if (this._options.useGL === \"new\") {\n        this.target.cacheCanvas = document.createElement(\"canvas\"); // we can turn off autopurge because we wont be making textures here\n\n        this._webGLCache = new StageGL(this.target.cacheCanvas, {\n          antialias: true,\n          transparent: true,\n          autoPurge: -1\n        });\n        this._webGLCache.isCacheControlled = true; // use this flag to control stage sizing and final output\n      } else {\n        throw \"Invalid option provided to useGL, expected ['stage', 'new', StageGL, undefined], got \" + this._options.useGL;\n      }\n    } // now size render surfaces\n\n\n    let stageGL = this._webGLCache;\n    surface = this.target.cacheCanvas; // if we have a dedicated stage we've gotta size it\n\n    if (stageGL.isCacheControlled) {\n      surface.width = this._drawWidth;\n      surface.height = this._drawHeight;\n      stageGL.updateViewport(this._drawWidth, this._drawHeight);\n    }\n\n    if (this.target.filters) {\n      // with filters we can't tell how many we'll need but the most we'll ever need is two, so make them now\n      stageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);\n      stageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);\n    } else if (!stageGL.isCacheControlled) {\n      // without filters then we only need one RenderTexture, and that's only if its not a dedicated stage\n      stageGL.getTargetRenderTexture(this.target, this._drawWidth, this._drawHeight);\n    }\n  }\n  /**\n   * Perform the cache draw out for context 2D now that the setup properties have been performed.\n   * @protected\n   */\n\n\n  _drawToCache(compositeOperation) {\n    let target = this.target;\n    let surface = target.cacheCanvas;\n    let webGL = this._webGLCache;\n\n    if (!this._useWebGL || !webGL) {\n      let ctx = surface.getContext(\"2d\");\n\n      if (!compositeOperation) {\n        ctx.clearRect(0, 0, this._drawWidth + 1, this._drawHeight + 1);\n      }\n\n      ctx.save();\n      ctx.globalCompositeOperation = compositeOperation;\n      ctx.setTransform(this.scale, 0, 0, this.scale, -this._filterOffX, -this._filterOffY);\n      ctx.translate(-this.x, -this.y);\n      target.draw(ctx, true);\n      ctx.restore();\n\n      if (target.filters && target.filters.length) {\n        this._applyFilters(target);\n      }\n\n      surface._invalid = true;\n      return;\n    }\n\n    this._webGLCache.cacheDraw(target, target.filters, this); // NOTE: we may of swapped around which element the surface is, so we re-fetch it\n\n\n    surface = this.target.cacheCanvas;\n    surface.width = this._drawWidth;\n    surface.height = this._drawHeight;\n    surface._invalid = true;\n  }\n  /**\n   * Work through every filter and apply its individual transformation to it.\n   * @protected\n   */\n\n\n  _applyFilters() {\n    let surface = this.target.cacheCanvas;\n    let filters = this.target.filters;\n    let w = this._drawWidth;\n    let h = this._drawHeight; // setup\n\n    let data = surface.getContext(\"2d\").getImageData(0, 0, w, h); // apply\n\n    let l = filters.length;\n\n    for (let i = 0; i < l; i++) {\n      filters[i]._applyFilter(data);\n    } //done\n\n\n    surface.getContext(\"2d\").putImageData(data, 0, 0);\n  }\n\n}\n/**\n * Functionality injected to {@link easeljs.BitmapCache}. Ensure StageGL is loaded after all other\n * standard EaselJS classes are loaded but before making any DisplayObject instances for injection to take full effect.\n * Replaces the context2D cache draw with the option for WebGL or context2D drawing.\n * If options is set to \"true\" a StageGL is created and contained on the object for use when rendering a cache.\n * If options is a StageGL instance it will not create an instance but use the one provided.\n * If possible it is best to provide the StageGL instance that is a parent to this DisplayObject for performance reasons.\n * A StageGL cache does not infer the ability to draw objects a StageGL cannot currently draw,\n * i.e. do not use a WebGL context cache when caching a Shape, Text, etc.\n *\n * You can make your own StageGL and have it render to a canvas if you set \".isCacheControlled\" to true on your stage.\n * You may wish to create your own StageGL instance to control factors like background color/transparency, AA, and etc.\n * You must set \"options\" to its own stage if you wish to use the fast Render Textures available only to StageGLs.\n * If you use WebGL cache on a container with Shapes you will have to cache each shape individually before the container,\n * otherwise the WebGL cache will not render the shapes.\n *\n * @name easeljs.BitmapCache#cache\n *\n * @example <caption>WebGL cache with 2d context</caption>\n * let stage = new Stage();\n * let bmp = new Bitmap(src);\n * bmp.cache(0, 0, bmp.width, bmp.height, 1, true); // no StageGL to use, so make one\n * let shape = new Shape();\n * shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n * shape.cache(0, 0, 20, 20, 1); // cannot use WebGL cache\n *\n * @example <caption>WebGL cache with WebGL context</caption>\n * let stageGL = new StageGL();\n * let bmp = new Bitmap(src);\n * bmp.cache(0, 0, bmp.width, bmp.height, 1, stageGL); // use our StageGL to cache\n * let shape = new Shape();\n * shape.graphics.clear().fill(\"red\").drawRect(0,0,20,20);\n * shape.cache(0, 0, 20, 20, 1); // cannot use WebGL cache\n *\n * @param {Number} x The x coordinate origin for the cache region.\n * @param {Number} y The y coordinate origin for the cache region.\n * @param {Number} width The width of the cache region.\n * @param {Number} height The height of the cache region.\n * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\n * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n * \tcached elements with greater fidelity.\n * @param {Boolean | easeljs.StageGL} [options] Select whether to use context 2D, or WebGL rendering, and whether to make a new stage instance or use an existing one.\n */\n\n/**\n * @license DisplayObject\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * DisplayObject is an abstract class that should not be constructed directly. Instead construct subclasses such as\n * {@link easeljs.Container}, {@link easeljs.Bitmap}, and {@link easeljs.Shape}.\n * DisplayObject is the base class for all display classes in the EaselJS library. It defines the core properties and\n * methods that are shared between all display objects, such as transformation properties (x, y, scaleX, scaleY, etc),\n * caching, and mouse handlers.\n *\n * @memberof easeljs\n * @extends EventDispatcher\n */\n\nclass DisplayObject extends EventDispatcher {\n  constructor() {\n    super();\n    /**\n     * The alpha (transparency) for this display object. 0 is fully transparent, 1 is fully opaque.\n     * @type {Number}\n     * @default 1\n     */\n\n    this.alpha = 1;\n    /**\n     * If a cache is active, this returns the canvas that holds the image of this display object.\n     * Use this to display the result of a cache. This will be a HTMLCanvasElement unless special cache rules have been deliberately enabled for this cache.\n     * @see {@link easeljs.DisplayObject#cache}\n     * @type {HTMLCanvasElement | Object}\n     * @default null\n     * @readonly\n     */\n\n    this.cacheCanvas = null;\n    /**\n     * If a cache has been made, this returns the class that is managing the cacheCanvas and its properties.\n     * @see {@link easeljs.BitmapCache}\n     * @type {easeljs.BitmapCache}\n     * @default null\n     * @readonly\n     */\n\n    this.bitmapCache = null;\n    /**\n     * Unique ID for this display object. Makes display objects easier for some uses.\n     * @type {Number}\n     */\n\n    this.id = uid();\n    /**\n     * Indicates whether to include this object when running mouse interactions. Setting this to `false` for children\n     * of a {@link easeljs.Container} will cause events on the Container to not fire when that child is\n     * clicked. Setting this property to `false` does not prevent the {@link easeljs.Container#getObjectsUnderPoint}\n     * method from returning the child.\n     *\n     * <strong>Note:</strong> In EaselJS 0.7.0, the `mouseEnabled` property will not work properly with nested Containers.\n     *\n     * @type {Boolean}\n     * @default true\n     */\n\n    this.mouseEnabled = true;\n    /**\n     * If false, the tick will not run on this display object (or its children). This can provide some performance benefits.\n     * In addition to preventing the {@link core.Ticker#event:tick} event from being dispatched, it will also prevent tick related updates\n     * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\n     * @type Boolean\n     * @default true\n     */\n\n    this.tickEnabled = true;\n    /**\n     * An optional name for this display object. Included in {@link easeljs.DisplayObject#toString}. Useful for debugging.\n     * @type {String}\n     * @default null\n     */\n\n    this.name = null;\n    /**\n     * A reference to the {@link easeljs.Container} or {@link easeljs.Stage} object that\n     * contains this display object, or null if it has not been added to one.\n     * @type {easeljs.Container}\n     * @default null\n     * @readonly\n     */\n\n    this.parent = null;\n    /**\n     * The left offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate\n     * around its center, you would set regX and {@link easeljs.DisplayObject#regY} to 50.\n     * @type {Number}\n     * @default 0\n     */\n\n    this.regX = 0;\n    /**\n     * The y offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate around\n     * its center, you would set {@link easeljs.DisplayObject#regX} and regY to 50.\n     * @type {Number}\n     * @default 0\n     */\n\n    this.regY = 0;\n    /**\n     * The rotation in degrees for this display object.\n     * @type {Number}\n     * @default 0\n     */\n\n    this.rotation = 0;\n    /**\n     * The factor to stretch this display object horizontally. For example, setting scaleX to 2 will stretch the display\n     * object to twice its nominal width. To horizontally flip an object, set the scale to a negative number.\n     * @type {Number}\n     * @default 1\n     */\n\n    this.scaleX = 1;\n    /**\n     * The factor to stretch this display object vertically. For example, setting scaleY to 0.5 will stretch the display\n     * object to half its nominal height. To vertically flip an object, set the scale to a negative number.\n     * @type {Number}\n     * @default 1\n     */\n\n    this.scaleY = 1;\n    /**\n     * The factor to skew this display object horizontally.\n     * @type {Number}\n     * @default 0\n     */\n\n    this.skewX = 0;\n    /**\n     * The factor to skew this display object vertically.\n     * @type {Number}\n     * @default 0\n     */\n\n    this.skewY = 0;\n    /**\n     * A shadow object that defines the shadow to render on this display object. Set to `null` to remove a shadow. If\n     * null, this property is inherited from the parent container.\n     * @type {easeljs.Shadow}\n     * @default null\n     */\n\n    this.shadow = null;\n    /**\n     * Indicates whether this display object should be rendered to the canvas and included when running the Stage\n     * {@link easeljs.Stage#getObjectsUnderPoint} method.\n     * @type {Boolean}\n     * @default true\n     */\n\n    this.visible = true;\n    /**\n     * The x (horizontal) position of the display object, relative to its parent.\n     * @type {Number}\n     * @default 0\n     */\n\n    this.x = 0;\n    /**\n     * The y (vertical) position of the display object, relative to its parent.\n     * @type {Number}\n     * @default 0\n     */\n\n    this.y = 0;\n    /**\n     * If set, defines the transformation for this display object, overriding all other transformation properties\n     * (x, y, rotation, scale, skew).\n     * @type {easeljs.Matrix2D}\n     * @default null\n     */\n\n    this.transformMatrix = null;\n    /**\n     * The composite operation indicates how the pixels of this display object will be composited with the elements\n     * behind it. If `null`, this property is inherited from the parent container.\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing \"WHATWG spec on compositing\"}\n     * @type {String}\n     * @default null\n     */\n\n    this.compositeOperation = null;\n    /**\n     * Indicates whether the display object should be drawn to a whole pixel when {@link easeljs.Stage#snapToPixelEnabled} is true.\n     * To enable/disable snapping on whole categories of display objects, set this value on the prototype (Ex. Text.prototype.snapToPixel = true).\n     * @type {Boolean}\n     * @default true\n     */\n\n    this.snapToPixel = true;\n    /**\n     * An array of Filter objects to apply to this display object. Filters are only applied / updated when {@link easeljs.DisplayObject#cache}\n     * or {@link easeljs.DisplayObject#updateCache} is called on the display object, and only apply to the area that is cached.\n     * @type {Array<easeljs.Filter>}\n     * @default null\n     */\n\n    this.filters = null;\n    /**\n     * A Shape instance that defines a vector mask (clipping path) for this display object.  The shape's transformation\n     * will be applied relative to the display object's parent coordinates (as if it were a child of the parent).\n     * @type {easeljs.Shape}\n     * @default null\n     */\n\n    this.mask = null;\n    /**\n     * A display object that will be tested when checking mouse interactions or testing {@link easeljs.Container#getObjectsUnderPoint}.\n     * The hit area will have its transformation applied relative to this display object's coordinate space (as though\n     * the hit test object were a child of this display object and relative to its regX/Y). The hitArea will be tested\n     * using only its own `alpha` value regardless of the alpha value on the target display object, or the target's\n     * ancestors (parents).\n     *\n     * If set on a {@link easeljs.Container}, children of the Container will not receive mouse events.\n     * This is similar to setting {@link easeljs.DisplayObject#mouseChildren} to false.\n     *\n     * Note that hitArea is NOT currently used by the `hitTest()` method, nor is it supported for {@link easeljs.Stage}.\n     *\n     * @type {easeljs.DisplayObject}\n     * @default null\n     */\n\n    this.hitArea = null;\n    /**\n     * A CSS cursor (ex. \"pointer\", \"help\", \"text\", etc) that will be displayed when the user hovers over this display\n     * object. You must enable mouseover events using the {@link easeljs.Stage#enableMouseOver} method to\n     * use this property. Setting a non-null cursor on a Container will override the cursor set on its descendants.\n     *\n     * @type {String}\n     * @default null\n     */\n\n    this.cursor = null;\n    /**\n     * @protected\n     * @type {easeljs.DisplayProps}\n     */\n\n    this._props = new DisplayProps();\n    /**\n     * @protected\n     * @type {easeljs.Rectangle}\n     */\n\n    this._rectangle = new Rectangle();\n    /**\n     * @protected\n     * @type {easeljs.Rectangle}\n     * @default null\n     */\n\n    this._bounds = null;\n    /**\n     * Where StageGL should look for required display properties, matters only for leaf display objects. Containers\n     * or cached objects won't use this property, it's for native display of terminal elements.\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n\n    this._webGLRenderStyle = DisplayObject._StageGL_NONE;\n  }\n  /**\n   * Returns the {@link easeljs.Stage} instance that this display object will be rendered on, or null if it has not been added to one.\n   * @type {Stage}\n   * @readonly\n   */\n\n\n  get stage() {\n    // uses dynamic access to avoid circular dependencies;\n    let o = this;\n\n    while (o.parent) {\n      o = o.parent;\n    }\n\n    if (/^\\[Stage(GL)?(\\s\\(name=\\w+\\))?\\]$/.test(o.toString())) {\n      return o;\n    }\n\n    return null;\n  }\n  /**\n   * Set both the {@link easeljs.DisplayObject#scaleX} and the {@link easeljs.DisplayObject#scaleY} property to the same value.\n   * Note that when you get the value, if the `scaleX` and `scaleY` are different values, it will return only the `scaleX`.\n   * @type {Number}\n   * @default 1\n   */\n\n\n  set scale(value) {\n    this.scaleX = this.scaleY = value;\n  }\n\n  get scale() {\n    return this.scaleX;\n  }\n  /**\n   * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n   * This does not account for whether it would be visible within the boundaries of the stage.\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n   */\n\n\n  isVisible() {\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n  }\n  /**\n   * Alias for drawCache(). Used by grandchildren (or deeper) in their draw method to directly\n   * call {@link easeljs.DisplayObject#drawCache}, bypassing their parent(s).\n   *\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n   * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n   * @return {Boolean}\n   */\n\n\n  draw(ctx, ignoreCache = false) {\n    return this.drawCache(ctx, ignoreCache);\n  }\n  /**\n   * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n   * Returns `true` if the draw was handled (useful for overriding functionality).\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n   * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n   * @return {Boolean}\n   */\n\n\n  drawCache(ctx, ignoreCache = false) {\n    let cache = this.bitmapCache;\n\n    if (cache && !ignoreCache) {\n      return cache.draw(ctx);\n    }\n\n    return false;\n  }\n  /**\n   * Applies this display object's transformation, alpha, globalCompositeOperation, clipping path (mask), and shadow\n   * to the specified context. This is typically called prior to {@link easeljs.DisplayObject#draw}.\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D to update.\n   */\n\n\n  updateContext(ctx) {\n    let o = this,\n        mask = o.mask,\n        mtx = o._props.matrix;\n\n    if (mask && mask.graphics && !mask.graphics.isEmpty()) {\n      mask.getMatrix(mtx);\n      ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n      mask.graphics.drawAsPath(ctx);\n      ctx.clip();\n      mtx.invert();\n      ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n    }\n\n    this.getMatrix(mtx);\n    let tx = mtx.tx,\n        ty = mtx.ty;\n\n    if (DisplayObject._snapToPixelEnabled && o.snapToPixel) {\n      tx = tx + (tx < 0 ? -0.5 : 0.5) | 0;\n      ty = ty + (ty < 0 ? -0.5 : 0.5) | 0;\n    }\n\n    ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, tx, ty);\n    ctx.globalAlpha *= o.alpha;\n\n    if (o.compositeOperation) {\n      ctx.globalCompositeOperation = o.compositeOperation;\n    }\n\n    if (o.shadow) {\n      this._applyShadow(ctx, o.shadow);\n    }\n  }\n  /**\n   * Draws the display object into a new element, which is then used for subsequent draws. Intended for complex content\n   * that does not change frequently (ex. a Container with many children that do not move, or a complex vector Shape),\n   * this can provide for much faster rendering because the content does not need to be re-rendered each tick. The\n   * cached display object can be moved, rotated, faded, etc freely, however if its content changes, you must manually\n   * update the cache by calling `updateCache()` again. You must specify the cached area via the x, y, w,\n   * and h parameters. This defines the rectangle that will be rendered and cached using this display object's coordinates.\n   *\n   * Note that filters need to be defined <em>before</em> the cache is applied or you will have to call updateCache after\n   * application. Check out the {@link easeljs.Filter} class for more information. Some filters\n   * (ex. {@link easeljs.BlurFilter}) may not work as expected in conjunction with the scale param.\n   *\n   * Usually, the resulting cacheCanvas will have the dimensions width*scale by height*scale, however some filters (ex. BlurFilter)\n   * will add padding to the canvas dimensions.\n   *\n   * Actual implementation of the caching mechanism can change with a {@link easeljs.StageGL} and so\n   * all caching and filter behaviour has been moved to the {@link easeljs.BitmapCache}\n   *\n   * @example\n   * // If you defined a Shape that drew a circle at 0, 0 with a radius of 25:\n   * var shape = new createjs.Shape();\n   * shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n   * shape.cache(-25, -25, 50, 50);\n   *\n   * @param {Number} x The x coordinate origin for the cache region.\n   * @param {Number} y The y coordinate origin for the cache region.\n   * @param {Number} width The width of the cache region.\n   * @param {Number} height The height of the cache region.\n   * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\n   * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\n   * \tcached elements with greater fidelity. Default is 1.\n   * @param {Object} [options] When using alternate displays there may be extra caching opportunities or needs.\n   */\n\n\n  cache(x, y, width, height, scale = 1, options) {\n    if (!this.bitmapCache) {\n      this.bitmapCache = new BitmapCache();\n    }\n\n    this.bitmapCache.define(this, x, y, width, height, scale, options);\n  }\n  /**\n   * Redraws the display object to its cache. Calling updateCache without an active cache will throw an error.\n   * If compositeOperation is null the current cache will be cleared prior to drawing. Otherwise the display object\n   * will be drawn over the existing cache using the specified compositeOperation.\n   *\n   * Actual implementation of the caching mechanism can change with a {@link easeljs.StageGL} and so\n   * all caching and filter behaviour has been moved to the {@link easeljs.BitmapCache}\n   *\n   * @example\n   * // clear current graphics\n   * shapeInstance.clear();\n   * // draw new instructions\n   * shapeInstance.setStrokeStyle(3).beginStroke(\"#FF0000\").moveTo(100, 100).lineTo(200,200);\n   * // update cache, drawing new line on top of old one\n   * shapeInstance.updateCache();\n   *\n   * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing \"WHATWG spec on compositing\"}\n   * @param {String} compositeOperation The compositeOperation to use, or null to clear the cache and redraw it.\n   */\n\n\n  updateCache(compositeOperation) {\n    if (!this.bitmapCache) {\n      throw \"No cache found. cache() must be called before updateCache()\";\n    }\n\n    this.bitmapCache.update(compositeOperation);\n  }\n  /**\n   * Clears the current cache.\n   * @see {@link easeljs.DisplayObject.#cache}\n   */\n\n\n  uncache() {\n    if (this.bitmapCache) {\n      this.bitmapCache.release();\n      this.bitmapCache = undefined;\n    }\n  }\n  /**\n   * Returns a data URL for the cache, or null if this display object is not cached.\n   * Only generated if the cache has changed, otherwise returns last result.\n   * @return {String} The image data url for the cache.\n   */\n\n\n  getCacheDataURL() {\n    return this.bitmapCache ? this.bitmapCache.getDataURL() : null;\n  }\n  /**\n   * Transforms the specified x and y position from the coordinate space of the display object\n   * to the global (stage) coordinate space. For example, this could be used to position an HTML label\n   * over a specific point on a nested display object. Returns a Point instance with x and y properties\n   * correlating to the transformed coordinates on the stage.\n   *\n   * @example\n   * displayObject.x = 300;\n   * displayObject.y = 200;\n   * stage.addChild(displayObject);\n   * let point = displayObject.localToGlobal(100, 100);\n   * // Results in x=400, y=300\n   *\n   * @param {Number} x The x position in the source display object to transform.\n   * @param {Number} y The y position in the source display object to transform.\n   * @param {easeljs.Point | Object} [pt=Point] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n   * @return {easeljs.Point} A Point instance with x and y properties correlating to the transformed coordinates\n   * on the stage.\n   */\n\n\n  localToGlobal(x, y, pt = new Point()) {\n    return this.getConcatenatedMatrix(this._props.matrix).transformPoint(x, y, pt);\n  }\n  /**\n   * Transforms the specified x and y position from the global (stage) coordinate space to the\n   * coordinate space of the display object. For example, this could be used to determine\n   * the current mouse position within the display object. Returns a Point instance with x and y properties\n   * correlating to the transformed position in the display object's coordinate space.\n   *\n   * @example\n   * displayObject.x = 300;\n   * displayObject.y = 200;\n   * stage.addChild(displayObject);\n   * let point = displayObject.globalToLocal(100, 100);\n   * // Results in x=-200, y=-100\n   *\n   * @param {Number} x The x position on the stage to transform.\n   * @param {Number} y The y position on the stage to transform.\n   * @param {easeljs.Point | Object} [pt=Point] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n   * @return {easeljs.Point} A Point instance with x and y properties correlating to the transformed position in the\n   * display object's coordinate space.\n   */\n\n\n  globalToLocal(x, y, pt = new Point()) {\n    return this.getConcatenatedMatrix(this._props.matrix).invert().transformPoint(x, y, pt);\n  }\n  /**\n   * Transforms the specified x and y position from the coordinate space of this display object to the coordinate\n   * space of the target display object. Returns a Point instance with x and y properties correlating to the\n   * transformed position in the target's coordinate space. Effectively the same as using the following code with\n   * {@link easeljs.DisplayObject#localToGlobal} and {@link easeljs.DisplayObject#globalToLocal}.\n   *\n   * @example\n   * // long way\n   * let pt = this.localToGlobal(x, y);\n   * pt = target.globalToLocal(pt.x, pt.y);\n   * // shorthand\n   * let pt = this.localToLocal(x, y, target);\n   *\n   * @param {Number} x The x position in the source display object to transform.\n   * @param {Number} y The y position on the source display object to transform.\n   * @param {easeljs.DisplayObject} target The target display object to which the coordinates will be transformed.\n   * @param {easeljs.Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned.\n   * @return {easeljs.Point} Returns a Point instance with x and y properties correlating to the transformed position\n   * in the target's coordinate space.\n   */\n\n\n  localToLocal(x, y, target, pt) {\n    pt = this.localToGlobal(x, y, pt);\n    return target.globalToLocal(pt.x, pt.y, pt);\n  }\n  /**\n   * Shortcut method to quickly set the transform properties on the display object. All parameters are optional.\n   * Omitted parameters will have the default value set.\n   *\n   * @example\n   * displayObject.setTransform(100, 100, 2, 2);\n   *\n   * @param {Number} [x=0] The horizontal translation (x position) in pixels\n   * @param {Number} [y=0] The vertical translation (y position) in pixels\n   * @param {Number} [scaleX=1] The horizontal scale, as a percentage of 1\n   * @param {Number} [scaleY=1] the vertical scale, as a percentage of 1\n   * @param {Number} [rotation=0] The rotation, in degrees\n   * @param {Number} [skewX=0] The horizontal skew factor\n   * @param {Number} [skewY=0] The vertical skew factor\n   * @param {Number} [regX=0] The horizontal registration point in pixels\n   * @param {Number} [regY=0] The vertical registration point in pixels\n   * @return {easeljs.DisplayObject} Returns this instance. Useful for chaining commands.\n  */\n\n\n  setTransform(x = 0, y = 0, scaleX = 1, scaleY = 1, rotation = 0, skewX = 0, skewY = 0, regX = 0, regY = 0) {\n    this.x = x;\n    this.y = y;\n    this.scaleX = scaleX;\n    this.scaleY = scaleY;\n    this.rotation = rotation;\n    this.skewX = skewX;\n    this.skewY = skewY;\n    this.regX = regX;\n    this.regY = regY;\n    return this;\n  }\n  /**\n   * Returns a matrix based on this object's current transform.\n   * @param {easeljs.Matrix2D} [matrix] A Matrix2D object to populate with the calculated values. If null, a new Matrix object is returned.\n   * @return {easeljs.Matrix2D} A matrix representing this display object's transform.\n   */\n\n\n  getMatrix(matrix) {\n    let o = this,\n        mtx = matrix && matrix.identity() || new Matrix2D();\n    return o.transformMatrix ? mtx.copy(o.transformMatrix) : mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n  }\n  /**\n   * Generates a Matrix2D object representing the combined transform of the display object and all of its\n   * parent Containers up to the highest level ancestor (usually the {@link easeljs.Stage}). This can\n   * be used to transform positions between coordinate spaces, such as with {@link easeljs.DisplayObject#localToGlobal}\n   * and {@link easeljs.DisplayObject#globalToLocal}.\n   *\n   * @param {easeljs.Matrix2D} [matrix] A Matrix2D object to populate with the calculated values. If null, a new Matrix2D object is returned.\n   * @return {easeljs.Matrix2D} The combined matrix.\n   */\n\n\n  getConcatenatedMatrix(matrix) {\n    let o = this,\n        mtx = this.getMatrix(matrix);\n\n    while (o = o.parent) {\n      mtx.prependMatrix(o.getMatrix(o._props.matrix));\n    }\n\n    return mtx;\n  }\n  /**\n   * Generates a DisplayProps object representing the combined display properties of the  object and all of its\n   * parent Containers up to the highest level ancestor (usually the {@link easeljs.Stage}).\n   * @param {easeljs.DisplayProps} [props] A DisplayProps object to populate with the calculated values. If null, a new DisplayProps object is returned.\n   * @return {easeljs.DisplayProps} The combined display properties.\n   */\n\n\n  getConcatenatedDisplayProps(props) {\n    props = props ? props.identity() : new DisplayProps();\n    let o = this,\n        mtx = o.getMatrix(props.matrix);\n\n    do {\n      props.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation); // we do this to avoid problems with the matrix being used for both operations when o._props.matrix is passed in as the props param.\n      // this could be simplified (ie. just done as part of the prepend above) if we switched to using a pool.\n\n      if (o != this) {\n        mtx.prependMatrix(o.getMatrix(o._props.matrix));\n      }\n    } while (o = o.parent);\n\n    return props;\n  }\n  /**\n   * Tests whether the display object intersects the specified point in local coordinates (ie. draws a pixel with alpha > 0 at\n   * the specified position). This ignores the alpha, shadow, hitArea, mask, and compositeOperation of the display object.\n   *\n   * Please note that shape-to-shape collision is not currently supported by EaselJS.\n   *\n   * @example\n   * stage.addEventListener(\"stagemousedown\", event => {\n   *   let hit = shape.hitTest(event.stageX, event.stageY);\n   *   // hit == true when shape is clicked\n   * });\n   *\n   * @param {Number} x The x position to check in the display object's local coordinates.\n   * @param {Number} y The y position to check in the display object's local coordinates.\n   * @return {Boolean} A Boolean indicating whether a visible portion of the DisplayObject intersect the specified\n   * local Point.\n  */\n\n\n  hitTest(x, y) {\n    let ctx = DisplayObject._hitTestContext;\n    ctx.setTransform(1, 0, 0, 1, -x, -y);\n    this.draw(ctx);\n\n    let hit = this._testHit(ctx);\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, 2, 2);\n    return hit;\n  }\n  /**\n   * Provides a chainable shortcut method for setting a number of properties on the instance.\n   *\n   * @example\n   * let graphics = new Graphics().beginFill(\"#ff0000\").drawCircle(0, 0, 25);\n   * let shape = stage.addChild(new Shape()).set({ graphics, x: 100, y: 100, alpha: 0.5 });\n   *\n   * @param {Object} props A generic object containing properties to copy to the DisplayObject instance.\n   * @return {easeljs.DisplayObject} Returns the instance the method is called on (useful for chaining calls.)\n   * @chainable\n  */\n\n\n  set(props) {\n    for (let n in props) {\n      this[n] = props[n];\n    }\n\n    return this;\n  }\n  /**\n   * Returns a rectangle representing this object's bounds in its local coordinate system (ie. with no transformation).\n   * Objects that have been cached will return the bounds of the cache.\n   *\n   * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use\n   * {@link easeljs.DisplayObject#setBounds} so that they are included when calculating Container bounds.\n   *\n   * <table>\n   * \t<tr><td><b>All</b></td><td>\n   * \t\tAll display objects support setting bounds manually using setBounds(). Likewise, display objects that\n   * \t\thave been cached using cache() will return the bounds of their cache. Manual and cache bounds will override\n   * \t\tthe automatic calculations listed below.\n   * \t</td></tr>\n   * \t<tr><td><b>Bitmap</b></td><td>\n   * \t\tReturns the width and height of the sourceRect (if specified) or image, extending from (x=0,y=0).\n   * \t</td></tr>\n   * \t<tr><td><b>Sprite</b></td><td>\n   * \t\tReturns the bounds of the current frame. May have non-zero x/y if a frame registration point was specified\n   * \t\tin the spritesheet data. See also {@link easeljs.SpriteSheet#getFrameBounds}\n   * \t</td></tr>\n   * \t<tr><td><b>Container</b></td><td>\n   * \t\tReturns the aggregate (combined) bounds of all children that return a non-null value from getBounds().\n   * \t</td></tr>\n   * \t<tr><td><b>Shape</b></td><td>\n   * \t\tDoes not currently support automatic bounds calculations. Use setBounds() to manually define bounds.\n   * \t</td></tr>\n   * \t<tr><td><b>Text</b></td><td>\n   * \t\tReturns approximate bounds. Horizontal values (x/width) are quite accurate, but vertical values (y/height) are\n   * \t\tnot, especially when using textBaseline values other than \"top\".\n   * \t</td></tr>\n   * \t<tr><td><b>BitmapText</b></td><td>\n   * \t\tReturns approximate bounds. Values will be more accurate if spritesheet frame registration points are close\n   * \t\tto (x=0,y=0).\n   * \t</td></tr>\n  * </table>\n   *\n   * @example\n   * /* Bounds can be expensive to calculate for some objects (ex. text, or containers with many children), and\n   * are recalculated each time you call getBounds(). You can prevent recalculation on static objects by setting the\n   * bounds explicitly. *\\/\n   * let bounds = obj.getBounds();\n   * obj.setBounds(bounds.x, bounds.y, bounds.width, bounds.height);\n   * // getBounds will now use the set values, instead of recalculating\n   *\n   * @example\n   * // To reduce memory impact, the returned Rectangle instance may be reused internally\n   * let bounds = obj.getBounds().clone();\n   * // OR:\n   * rect.copy(obj.getBounds());\n   *\n   * @return {easeljs.Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\n   */\n\n\n  getBounds() {\n    if (this._bounds) {\n      return this._rectangle.copy(this._bounds);\n    }\n\n    let cacheCanvas = this.cacheCanvas;\n\n    if (cacheCanvas) {\n      let scale = this._cacheScale;\n      return this._rectangle.setValues(this._cacheOffsetX, this._cacheOffsetY, cacheCanvas.width / scale, cacheCanvas.height / scale);\n    }\n\n    return null;\n  }\n  /**\n   * Returns a rectangle representing this object's bounds in its parent's coordinate system (ie. with transformations applied).\n   * Objects that have been cached will return the transformed bounds of the cache.\n   *\n   * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use\n   * {@link easeljs.DisplayObject#setBounds} so that they are included when calculating Container bounds.\n   *\n   * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\n   * values if you need to retain it.\n   *\n   * Container instances calculate aggregate bounds for all children that return bounds via getBounds.\n   * @return {easeljs.Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\n   */\n\n\n  getTransformedBounds() {\n    return this._getBounds();\n  }\n  /**\n   * Allows you to manually specify the bounds of an object that either cannot calculate their own bounds (ex. Shape &\n   * Text) for future reference, or so the object can be included in Container bounds. Manually set bounds will always\n   * override calculated bounds.\n   *\n   * The bounds should be specified in the object's local (untransformed) coordinates. For example, a Shape instance\n   * with a 25px radius circle centered at 0,0 would have bounds of (-25, -25, 50, 50).\n   *\n   * @param {Number} x The x origin of the bounds. Pass null to remove the manual bounds.\n   * @param {Number} y The y origin of the bounds.\n   * @param {Number} width The width of the bounds.\n   * @param {Number} height The height of the bounds.\n   */\n\n\n  setBounds(x, y, width, height) {\n    if (x == null) {\n      this._bounds = null;\n    }\n\n    this._bounds = (this._bounds || new Rectangle()).setValues(x, y, width, height);\n  }\n  /**\n   * Returns a clone of this DisplayObject. Some properties that are specific to this instance's current context are\n   * reverted to their defaults (for example .parent). Caches are not maintained across clones, and some elements\n   * are copied by reference (masks, individual filter instances, hit area)\n   *\n   * @return {easeljs.DisplayObject} A clone of the current DisplayObject instance.\n   */\n\n\n  clone() {\n    return this._cloneProps(new DisplayObject());\n  }\n  /**\n   * Returns a string representation of this object.\n   * @return {String} a string representation of the instance.\n   */\n\n\n  toString() {\n    return `[${this.constructor.name}${this.name ? ` (name=${this.name})` : \"\"}]`;\n  }\n  /**\n   * @protected\n   * @param {easeljs.DisplayObject} o The DisplayObject instance which will have properties from the current DisplayObject\n   * instance copied into.\n   * @return {easeljs.DisplayObject} o\n   */\n\n\n  _cloneProps(o) {\n    o.alpha = this.alpha;\n    o.mouseEnabled = this.mouseEnabled;\n    o.tickEnabled = this.tickEnabled;\n    o.name = this.name;\n    o.regX = this.regX;\n    o.regY = this.regY;\n    o.rotation = this.rotation;\n    o.scaleX = this.scaleX;\n    o.scaleY = this.scaleY;\n    o.shadow = this.shadow;\n    o.skewX = this.skewX;\n    o.skewY = this.skewY;\n    o.visible = this.visible;\n    o.x = this.x;\n    o.y = this.y;\n    o.compositeOperation = this.compositeOperation;\n    o.snapToPixel = this.snapToPixel;\n    o.filters = this.filters == null ? null : this.filters.slice(0);\n    o.mask = this.mask;\n    o.hitArea = this.hitArea;\n    o.cursor = this.cursor;\n    o._bounds = this._bounds;\n    return o;\n  }\n  /**\n   * @protected\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {easeljs.Shadow} [shadow=Shadow]\n   */\n\n\n  _applyShadow(ctx, shadow = Shadow.identity) {\n    shadow = shadow;\n    ctx.shadowColor = shadow.color;\n    ctx.shadowOffsetX = shadow.offsetX;\n    ctx.shadowOffsetY = shadow.offsetY;\n    ctx.shadowBlur = shadow.blur;\n  }\n  /**\n   * @protected\n   * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n   */\n\n\n  _tick(evtObj) {\n    // because tick can be really performance sensitive, check for listeners before calling dispatchEvent.\n    let ls = this._listeners;\n\n    if (ls && ls[\"tick\"]) {\n      // reset & reuse the event object to avoid construction / GC costs:\n      evtObj.target = null;\n      evtObj.propagationStopped = evtObj.immediatePropagationStopped = false;\n      this.dispatchEvent(evtObj);\n    }\n  }\n  /**\n   * @protected\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {Boolean}\n   */\n\n\n  _testHit(ctx) {\n    try {\n      return ctx.getImageData(0, 0, 1, 1).data[3] > 1;\n    } catch (e) {\n      if (!DisplayObject.suppressCrossDomainErrors) {\n        throw \"An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.\";\n      }\n\n      return false;\n    }\n  }\n  /**\n   * @protected\n   * @param {easeljs.Matrix2D} matrix\n   * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n   * @return {easeljs.Rectangle}\n   */\n\n\n  _getBounds(matrix, ignoreTransform) {\n    return this._transformBounds(this.getBounds(), matrix, ignoreTransform);\n  }\n  /**\n   * @protected\n   * @param {easeljs.Rectangle} bounds\n   * @param {easeljs.Matrix2D} matrix\n   * @param {Boolean} ignoreTransform\n   * @return {easeljs.Rectangle}\n   */\n\n\n  _transformBounds(bounds, matrix, ignoreTransform) {\n    if (!bounds) {\n      return bounds;\n    }\n\n    let {\n      x,\n      y,\n      width,\n      height\n    } = bounds;\n    let mtx = this._props.matrix;\n    mtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\n    if (x || y) {\n      mtx.appendTransform(0, 0, 1, 1, 0, 0, 0, -x, -y);\n    } // TODO: simplify this.\n\n\n    if (matrix) {\n      mtx.prependMatrix(matrix);\n    }\n\n    let x_a = width * mtx.a,\n        x_b = width * mtx.b;\n    let y_c = height * mtx.c,\n        y_d = height * mtx.d;\n    let tx = mtx.tx,\n        ty = mtx.ty;\n    let minX = tx,\n        maxX = tx,\n        minY = ty,\n        maxY = ty;\n\n    if ((x = x_a + tx) < minX) {\n      minX = x;\n    } else if (x > maxX) {\n      maxX = x;\n    }\n\n    if ((x = x_a + y_c + tx) < minX) {\n      minX = x;\n    } else if (x > maxX) {\n      maxX = x;\n    }\n\n    if ((x = y_c + tx) < minX) {\n      minX = x;\n    } else if (x > maxX) {\n      maxX = x;\n    }\n\n    if ((y = x_b + ty) < minY) {\n      minY = y;\n    } else if (y > maxY) {\n      maxY = y;\n    }\n\n    if ((y = x_b + y_d + ty) < minY) {\n      minY = y;\n    } else if (y > maxY) {\n      maxY = y;\n    }\n\n    if ((y = y_d + ty) < minY) {\n      minY = y;\n    } else if (y > maxY) {\n      maxY = y;\n    }\n\n    return bounds.setValues(minX, minY, maxX - minX, maxY - minY);\n  }\n  /**\n   * Indicates whether the display object has any mouse event listeners or a cursor.\n   * @protected\n   * @return {Boolean}\n   */\n\n\n  _hasMouseEventListener() {\n    let evts = DisplayObject._MOUSE_EVENTS;\n\n    for (let i = 0, l = evts.length; i < l; i++) {\n      if (this.hasEventListener(evts[i])) {\n        return true;\n      }\n    }\n\n    return !!this.cursor;\n  }\n\n}\n{\n  let canvas = window.createjs && createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\"); // prevent errors on load in browsers without canvas.\n\n  if (canvas.getContext) {\n    /**\n     * @type {HTMLCanvasElement | Object}\n     * @static\n     */\n    DisplayObject._hitTestCanvas = canvas;\n    /**\n     * @type {CanvasRenderingContext2D}\n     * @static\n     */\n\n    DisplayObject._hitTestContext = canvas.getContext(\"2d\");\n    canvas.width = canvas.height = 1;\n  }\n}\n/**\n * Listing of mouse event names. Used in _hasMouseEventListener.\n * @static\n * @type {Array<String>}\n * @readonly\n */\n\nDisplayObject._MOUSE_EVENTS = [\"click\", \"dblclick\", \"mousedown\", \"mouseout\", \"mouseover\", \"pressmove\", \"pressup\", \"rollout\", \"rollover\"];\n/**\n * Suppresses errors generated when using features like hitTest, mouse events, and {{#crossLink \"getObjectsUnderPoint\"}}{{/crossLink}}\n * with cross domain content.\n * @static\n * @type {Boolean}\n * @default false\n */\n\nDisplayObject.suppressCrossDomainErrors = false;\n/**\n * @static\n * @type {Boolean}\n * @default false\n */\n\nDisplayObject.snapToPixelEnabled = false;\n/**\n * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n * @static\n * @type {Number}\n */\n\nDisplayObject._StageGL_NONE = 0;\n/**\n * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n * @static\n * @type {Number}\n */\n\nDisplayObject._StageGL_SPRITE = 1;\n/**\n * Enum like property for determining StageGL render lookup, i.e. where to expect properties.\n * @static\n * @type {Number}\n */\n\nDisplayObject._StageGL_BITMAP = 2;\n/**\n * Dispatched when the user presses their left mouse button over the display object.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#mousedown\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user presses their left mouse button and then releases it while over the display object.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#click\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user double clicks their left mouse button over this display object.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#dblclick\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user's mouse enters this display object. This event must be enabled using\n * {@link easeljs.Stage#enableMouseOver}.\n * @see {@link easeljs.DisplayObject#event:rollover}\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#mouseover\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user's mouse leaves this display object. This event must be enabled using\n * {@link easeljs.Stage#enableMouseOver}.\n * @see {@link easeljs.DisplayObject#event:rollout}\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#mouseout\n * @since 0.6.0\n */\n\n/**\n * This event is similar to {@link easeljs.DisplayObject#event:mouseover}, with the following\n * differences: it does not bubble, and it considers {@link easeljs.Container} instances as an\n * aggregate of their content.\n *\n * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n * shapeA and then directly on to shapeB. With a listener for {@link easeljs.DisplayObject#event:mouseover} on\n * myContainer, two events would be received, each targeting a child element:\n * <ol>\n *   <li>when the mouse enters shapeA (target=shapeA)</li>\n *   <li>when the mouse enters shapeB (target=shapeB)</li>\n * </ol>\n * However, with a listener for \"rollover\" instead, only a single event is received when the mouse first enters\n * the aggregate myContainer content (target=myContainer).\n *\n * This event must be enabled using {@link easeljs.Stage#enableMouseOver}.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#rollover\n * @since 0.7.0\n */\n\n/**\n * This event is similar to {@link easeljs.DisplayObject#event:mouseout}, with the following\n * differences: it does not bubble, and it considers {@link easeljs.Container} instances as an\n * aggregate of their content.\n *\n * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\n * shapeA, then directly on to shapeB, then off both. With a listener for {@link easeljs.DisplayObject#event:mouseout}\n * on myContainer, two events would be received, each targeting a child element:<OL>\n * <LI>when the mouse leaves shapeA (target=shapeA)</LI>\n * <LI>when the mouse leaves shapeB (target=shapeB)</LI>\n * </OL>\n * However, with a listener for \"rollout\" instead, only a single event is received when the mouse leaves\n * the aggregate myContainer content (target=myContainer).\n *\n * This event must be enabled using {@link easeljs.Stage#enableMouseOver}.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.DisplayObject#rollout\n * @since 0.7.0\n */\n\n/**\n * After a {@link easeljs.DisplayObject#event:mousedown} occurs on a display object, a pressmove\n * event will be generated on that object whenever the mouse moves until the mouse press is released. This can be\n * useful for dragging and similar operations.\n * @event easeljs.DisplayObject#pressmove\n * @since 0.7.0\n */\n\n/**\n * After a {@link easeljs.DisplayObject#event:mousedown} occurs on a display object, a pressup event\n * will be generated on that object when that mouse press is released. This can be useful for dragging and similar\n * operations.\n * @event easeljs.DisplayObject#pressup\n * @since 0.7.0\n */\n\n/**\n * Dispatched when the display object is added to a parent container.\n * @event easeljs.DisplayObject#added\n */\n\n/**\n * Dispatched when the display object is removed from its parent container.\n * @event easeljs.DisplayObject#removed\n */\n\n/**\n * Dispatched on each display object on a stage whenever the stage updates. This occurs immediately before the\n * rendering (draw) pass. When {@link easeljs.Stage#update} is called, first all display objects on\n * the stage dispatch the tick event, then all of the display objects are drawn to stage. Children will have their\n * tick event dispatched in order of their depth prior to the event being dispatched on their parent.\n * @event easeljs.DisplayObject#tick\n * @param {Object} target The object that dispatched the event.\n * @param {String} type The event type.\n * @param {Array} params An array containing any arguments that were passed to the Stage.update() method.\n * @since 0.6.0\n */\n\n/**\n * @license Container\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * A Container is a nestable display list that allows you to work with compound display elements. For  example you could\n * group arm, leg, torso and head {{#crossLink \"Bitmap\"}}{{/crossLink}} instances together into a Person Container, and\n * transform them as a group, while still being able to move the individual parts relative to each other. Children of\n * containers have their `transform` and `alpha` properties concatenated with their parent\n * Container.\n *\n * For example, a {{#crossLink \"Shape\"}}{{/crossLink}} with x=100 and alpha=0.5, placed in a Container with `x=50`\n * and `alpha=0.7` will be rendered to the canvas at `x=150` and `alpha=0.35`.\n * Containers have some overhead, so you generally shouldn't create a Container to hold a single child.\n *\n * @memberof easeljs\n * @extends easeljs.DisplayObject\n * @example\n * import { Container } from \"@createjs/easeljs\";\n * const container = new Container();\n * container.addChild(bitmapInstance, shapeInstance);\n * container.x = 100;\n */\n\nclass Container extends DisplayObject {\n  constructor() {\n    super();\n    /**\n     * The array of children in the display list. You should usually use the child management methods such as\n     * {@link easeljs.Container#addChild}, {@link easeljs.Container#removeChild}, {@link easeljs.Container#swapChildren},\n     * etc, rather than accessing this directly, but it is included for advanced uses.\n     * @type {Array}\n     * @default []\n     */\n\n    this.children = [];\n    /**\n     * Indicates whether the children of this container are independently enabled for mouse/pointer interaction.\n     * If false, the children will be aggregated under the container - for example, a click on a child shape would\n     * trigger a click event on the container.\n     * @type {Boolean}\n     * @default true\n     */\n\n    this.mouseChildren = true;\n    /**\n     * If false, the tick will not be propagated to children of this Container. This can provide some performance benefits.\n     * In addition to preventing the {@link core.Ticker#event:tick} event from being dispatched, it will also prevent tick related updates\n     * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\n     * @type {Boolean}\n     * @default true\n     */\n\n    this.tickChildren = true;\n  }\n  /**\n   * Returns the number of children in the container.\n   * @type {Number}\n   * @readonly\n   */\n\n\n  get numChildren() {\n    return this.children.length;\n  }\n\n  isVisible() {\n    let hasContent = this.cacheCanvas || this.children.length;\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  }\n\n  draw(ctx, ignoreCache = false) {\n    if (super.draw(ctx, ignoreCache)) {\n      return true;\n    } // this ensures we don't have issues with display list changes that occur during a draw:\n\n\n    let list = this.children.slice();\n\n    for (let i = 0, l = list.length; i < l; i++) {\n      let child = list[i];\n\n      if (!child.isVisible()) {\n        continue;\n      } // draw the child:\n\n\n      ctx.save();\n      child.updateContext(ctx);\n      child.draw(ctx);\n      ctx.restore();\n    }\n\n    return true;\n  }\n  /**\n   * Adds a child to the top of the display list.\n   *\n   * @example\n   * container.addChild(bitmapInstance);\n   * // You can also add multiple children at once:\n   * container.addChild(bitmapInstance, shapeInstance, textInstance);\n   *\n   * @param {...easeljs.DisplayObject} children The display object(s) to add.\n   * @return {easeljs.DisplayObject} The child that was added, or the last child if multiple children were added.\n   */\n\n\n  addChild(...children) {\n    const l = children.length;\n\n    if (l === 0) {\n      return null;\n    }\n\n    let child = children[0];\n\n    if (l > 1) {\n      for (let i = 0; i < l; i++) {\n        child = this.addChild(children[i]);\n      }\n\n      return child;\n    } // Note: a lot of duplication with addChildAt, but push is WAY faster than splice.\n\n\n    let parent = child.parent,\n        silent = parent === this;\n    parent && parent._removeChildAt(parent.children.indexOf(child), silent);\n    child.parent = this;\n    this.children.push(child);\n\n    if (!silent) {\n      child.dispatchEvent(\"added\");\n    }\n\n    return child;\n  }\n  /**\n   * Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\n   * setting its parent to this container.\n   *\n   * @example\n   * container.addChildAt(child1, index);\n   * // You can also add multiple children, such as:\n   * container.addChildAt(child1, child2, ..., index);\n   * // The index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list, you could use:\n   * container.addChildAt(myShape, container.getChildIndex(otherShape));\n   * // This would also bump otherShape's index up by one. Fails silently if the index is out of range.\n   *\n   * @param {...easeljs.DisplayObject} children The display object(s) to add.\n   * @param {Number} index The index to add the child at.\n   * @return {easeljs.DisplayObject} Returns the last child that was added, or the last child if multiple children were added.\n   */\n\n\n  addChildAt(...children) {\n    const l = children.length;\n\n    if (l === 0) {\n      return null;\n    }\n\n    let index = children.pop();\n\n    if (index < 0 || index > this.children.length) {\n      return children[l - 2];\n    }\n\n    if (l > 2) {\n      for (let i = 0; i < l - 1; i++) {\n        this.addChildAt(children[i], index++);\n      }\n\n      return children[l - 2];\n    }\n\n    let child = children[0];\n    let parent = child.parent,\n        silent = parent === this;\n    parent && parent._removeChildAt(parent.children.indexOf(child), silent);\n    child.parent = this;\n    this.children.splice(index++, 0, child);\n\n    if (!silent) {\n      child.dispatchEvent(\"added\");\n    }\n\n    return child;\n  }\n  /**\n   * Removes the specified child from the display list. Note that it is faster to use removeChildAt() if the index is\n   * already known.\n   *\n   * @example\n   * container.removeChild(child);\n   * // You can also remove multiple children:\n   * container.removeChild(child1, child2, ...);\n   *\n   * @param {...easeljs.DisplayObject} children The display object(s) to remove.\n   * @return {Boolean} true if the child (or children) was removed, or false if it was not in the display list.\n   */\n\n\n  removeChild(...children) {\n    const l = children.length;\n\n    if (l === 0) {\n      return true;\n    }\n\n    if (l > 1) {\n      let good = true;\n\n      for (let i = 0; i < l; i++) {\n        good = good && this.removeChild(children[i]);\n      }\n\n      return good;\n    }\n\n    return this._removeChildAt(this.children.indexOf(children[0]));\n  }\n  /**\n   * Removes the child at the specified index from the display list, and sets its parent to null.\n   *\n   * @example\n   * container.removeChildAt(2);\n   * // You can also remove multiple children:\n   * container.removeChildAt(2, 7, ...)\n   *\n   * @param {...Number} indexes The indexes of children to remove.\n   * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n   */\n\n\n  removeChildAt(...indexes) {\n    const l = indexes.length;\n\n    if (l === 0) {\n      return true;\n    }\n\n    if (l > 1) {\n      indexes.sort((a, b) => b - a);\n      let good = true;\n\n      for (let i = 0; i < l; i++) {\n        good = good && this._removeChildAt(indexes[i]);\n      }\n\n      return good;\n    }\n\n    return this._removeChildAt(indexes[0]);\n  }\n  /**\n   * Removes all children from the display list.\n   */\n\n\n  removeAllChildren() {\n    let kids = this.children;\n\n    while (kids.length) {\n      this._removeChildAt(0);\n    }\n  }\n  /**\n   * Returns the child at the specified index.\n   * @param {Number} index The index of the child to return.\n   * @return {easeljs.DisplayObject} The child at the specified index. Returns null if there is no child at the index.\n   */\n\n\n  getChildAt(index) {\n    return this.children[index];\n  }\n  /**\n   * Returns the child with the specified name.\n   * @param {String} name The name of the child to return.\n   * @return {easeljs.DisplayObject} The child with the specified name.\n   */\n\n\n  getChildByName(name) {\n    let kids = this.children;\n    const l = kids.length;\n\n    for (let i = 0; i < l; i++) {\n      if (kids[i].name === name) {\n        return kids[i];\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Performs an array sort operation on the child list.\n   *\n   * @example\n   * // Display children with a higher y in front.\n   * container.sortChildren((obj1, obj2, options) => {\n   * \t if (obj1.y > obj2.y) { return 1; }\n   *   if (obj1.y < obj2.y) { return -1; }\n   *   return 0;\n   * });\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort}\n   * @param {Function} sortFunction the function to use to sort the child list.\n   */\n\n\n  sortChildren(sortFunction) {\n    this.children.sort(sortFunction);\n  }\n  /**\n   * Returns the index of the specified child in the display list, or -1 if it is not in the display list.\n   * @param {easeljs.DisplayObject} child The child to return the index of.\n   * @return {Number} The index of the specified child. -1 if the child is not found.\n   */\n\n\n  getChildIndex(child) {\n    return this.children.indexOf(child);\n  }\n  /**\n   * Swaps the children at the specified indexes. Fails silently if either index is out of range.\n   * @param {Number} index1\n   * @param {Number} index2\n   */\n\n\n  swapChildrenAt(index1, index2) {\n    let kids = this.children;\n    let o1 = kids[index1];\n    let o2 = kids[index2];\n\n    if (!o1 || !o2) {\n      return;\n    }\n\n    kids[index1] = o2;\n    kids[index2] = o1;\n  }\n\n  /**\n   * Swaps the specified children's depth in the display list. Fails silently if either child is not a child of this\n   * Container.\n   * @param {easeljs.DisplayObject} child1\n   * @param {easeljs.DisplayObject} child2\n   */\n  swapChildren(child1, child2) {\n    let kids = this.children;\n    const l = kids.length;\n    let index1, index2;\n\n    for (var i = 0; i < l; i++) {\n      if (kids[i] === child1) {\n        index1 = i;\n      }\n\n      if (kids[i] === child2) {\n        index2 = i;\n      }\n\n      if (index1 != null && index2 != null) {\n        break;\n      }\n    }\n\n    if (i === l) {\n      return;\n    } // TODO: throw error?\n\n\n    kids[index1] = child2;\n    kids[index2] = child1;\n  }\n  /**\n   * Changes the depth of the specified child. Fails silently if the child is not a child of this container, or the index is out of range.\n   * @param {easeljs.DisplayObject} child\n   * @param {Number} index\n   */\n\n\n  setChildIndex(child, index) {\n    let kids = this.children;\n    const l = kids.length;\n\n    if (child.parent != this || index < 0 || index >= l) {\n      return;\n    }\n\n    for (var i = 0; i < l; i++) {\n      if (kids[i] === child) {\n        break;\n      }\n    }\n\n    if (i === l || i === index) {\n      return;\n    }\n\n    kids.splice(i, 1);\n    kids.splice(index, 0, child);\n  }\n  /**\n   * Returns true if the specified display object either is this container or is a descendent (child, grandchild, etc)\n   * of this container.\n   * @param {easeljs.DisplayObject} child The DisplayObject to be checked.\n   * @return {Boolean} true if the specified display object either is this container or is a descendent.\n   */\n\n\n  contains(child) {\n    while (child) {\n      if (child === this) {\n        return true;\n      }\n\n      child = child.parent;\n    }\n\n    return false;\n  }\n  /**\n   * Tests whether the display object intersects the specified local point (ie. draws a pixel with alpha > 0 at the\n   * specified position). This ignores the alpha, shadow and compositeOperation of the display object, and all\n   * transform properties including regX/Y.\n   * @param {Number} x The x position to check in the display object's local coordinates.\n   * @param {Number} y The y position to check in the display object's local coordinates.\n   * @return {Boolean} A Boolean indicating whether there is a visible section of a DisplayObject that overlaps the specified\n   * coordinates.\n   */\n\n\n  hitTest(x, y) {\n    // TODO: optimize to use the fast cache check where possible.\n    return this.getObjectUnderPoint(x, y) != null;\n  }\n  /**\n   * Returns an array of all display objects under the specified coordinates that are in this container's display\n   * list. This routine ignores any display objects with {@link easeljs.DisplayObject#mouseEnabled} set to `false`.\n   * The array will be sorted in order of visual depth, with the top-most display object at index 0.\n   * This uses shape based hit detection, and can be an expensive operation to run, so it is best to use it carefully.\n   * For example, if testing for objects under the mouse, test on tick (instead of on {@link easeljs.DisplayObject#event:mousemove}),\n   * and only if the mouse's position has changed.\n   *\n   * <ul>\n   *   <li>By default (mode=0) this method evaluates all display objects.</li>\n   *   <li>By setting the `mode` parameter to `1`, the {@link easeljs.DisplayObject#mouseEnabled}\n   *       and {@link easeljs.DisplayObject#mouseChildren} properties will be respected.</li>\n   *   <li>Setting the `mode` to `2` additionally excludes display objects that do not have active mouse event\n   *       listeners or a {@link easeljs.DisplayObject#cursor} property. That is, only objects\n   *       that would normally intercept mouse interaction will be included. This can significantly improve performance\n   *       in some cases by reducing the number of display objects that need to be tested.</li>\n   * </ul>\n   *\n   * This method accounts for both {@link easeljs.DisplayObject#hitArea} and {@link easeljs.DisplayObject#mask}.\n   *\n   * @param {Number} x The x position in the container to test.\n   * @param {Number} y The y position in the container to test.\n   * @param {Number} [mode=0] The mode to use to determine which display objects to include. 0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n   * @return {Array<easeljs.DisplayObject>} An array of DisplayObjects under the specified coordinates.\n   */\n\n\n  getObjectsUnderPoint(x, y, mode = 0) {\n    let arr = [];\n    let pt = this.localToGlobal(x, y);\n\n    this._getObjectsUnderPoint(pt.x, pt.y, arr, mode > 0, mode === 1);\n\n    return arr;\n  }\n  /**\n   * Similar to {@link easeljs.Container#getObjectsUnderPoint}, but returns only the top-most display\n   * object. This runs significantly faster than `getObjectsUnderPoint()`, but is still potentially an expensive\n   * operation.\n   *\n   * @param {Number} x The x position in the container to test.\n   * @param {Number} y The y position in the container to test.\n   * @param {Number} [mode=0] The mode to use to determine which display objects to include.  0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\n   * @return {easeljs.DisplayObject} The top-most display object under the specified coordinates.\n   */\n\n\n  getObjectUnderPoint(x, y, mode = 0) {\n    let pt = this.localToGlobal(x, y);\n    return this._getObjectsUnderPoint(pt.x, pt.y, null, mode > 0, mode === 1);\n  }\n\n  getBounds() {\n    return this._getBounds(null, true);\n  }\n\n  getTransformedBounds() {\n    return this._getBounds();\n  }\n  /**\n   * Returns a clone of this Container. Some properties that are specific to this instance's current context are\n   * reverted to their defaults (for example `.parent`).\n   * @param {Boolean} [recursive=false] If true, all of the descendants of this container will be cloned recursively. If false, the\n   * properties of the container will be cloned, but the new instance will not have any children.\n   * @return {easeljs.Container} A clone of the current Container instance.\n   */\n\n\n  clone(recursive = false) {\n    let o = this._cloneProps(new Container());\n\n    if (recursive) {\n      this._cloneChildren(o);\n    }\n\n    return o;\n  }\n\n  _tick(evtObj) {\n    if (this.tickChildren) {\n      for (let i = this.children.length - 1; i >= 0; i--) {\n        let child = this.children[i];\n\n        if (child.tickEnabled && child._tick) {\n          child._tick(evtObj);\n        }\n      }\n    }\n\n    super._tick(evtObj);\n  }\n  /**\n   * Recursively clones all children of this container, and adds them to the target container.\n   * @protected\n   * @param {easeljs.Container} o The target container.\n   */\n\n\n  _cloneChildren(o) {\n    if (o.children.length) {\n      o.removeAllChildren();\n    }\n\n    let arr = o.children;\n    const l = this.children.length;\n\n    for (let i = 0; i < l; i++) {\n      let clone = this.children[i].clone(true);\n      clone.parent = o;\n      arr.push(clone);\n    }\n  }\n  /**\n   * Removes the child at the specified index from the display list, and sets its parent to null.\n   * Used by `removeChildAt`, `addChild`, and `addChildAt`.\n   *\n   * @protected\n   * @param {Number} index The index of the child to remove.\n   * @param {Boolean} [silent=false] Prevents dispatch of `removed` event if true.\n   * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\n   */\n\n\n  _removeChildAt(index, silent = false) {\n    if (index < 0 || index > this.children.length - 1) {\n      return false;\n    }\n\n    let child = this.children[index];\n\n    if (child) {\n      child.parent = null;\n    }\n\n    this.children.splice(index, 1);\n\n    if (!silent) {\n      child.dispatchEvent(\"removed\");\n    }\n\n    return true;\n  }\n  /**\n   * @protected\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Array} arr\n   * @param {Boolean} mouse If true, it will respect mouse interaction properties like mouseEnabled, mouseChildren, and active listeners.\n   * @param {Boolean} activeListener If true, there is an active mouse event listener on a parent object.\n   * @param {Number} [currentDepth=0] Indicates the current depth of the search.\n   * @return {easeljs.DisplayObject}\n   */\n\n\n  _getObjectsUnderPoint(x, y, arr, mouse, activeListener, currentDepth = 0) {\n    if (!currentDepth && !this._testMask(this, x, y)) {\n      return null;\n    }\n\n    let mtx,\n        ctx = DisplayObject._hitTestContext;\n    activeListener = activeListener || mouse && this._hasMouseEventListener(); // draw children one at a time, and check if we get a hit:\n\n    let children = this.children;\n    const l = children.length;\n\n    for (let i = l - 1; i >= 0; i--) {\n      let child = children[i];\n      let hitArea = child.hitArea;\n\n      if (!child.visible || !hitArea && !child.isVisible() || mouse && !child.mouseEnabled) {\n        continue;\n      }\n\n      if (!hitArea && !this._testMask(child, x, y)) {\n        continue;\n      } // if a child container has a hitArea then we only need to check its hitArea, so we can treat it as a normal DO:\n\n\n      if (!hitArea && child instanceof Container) {\n        let result = child._getObjectsUnderPoint(x, y, arr, mouse, activeListener, currentDepth + 1);\n\n        if (!arr && result) {\n          return mouse && !this.mouseChildren ? this : result;\n        }\n      } else {\n        if (mouse && !activeListener && !child._hasMouseEventListener()) {\n          continue;\n        } // TODO: can we pass displayProps forward, to avoid having to calculate this backwards every time? It's kind of a mixed bag. When we're only hunting for DOs with event listeners, it may not make sense.\n\n\n        let props = child.getConcatenatedDisplayProps(child._props);\n        mtx = props.matrix;\n\n        if (hitArea) {\n          mtx.appendMatrix(hitArea.getMatrix(hitArea._props.matrix));\n          props.alpha = hitArea.alpha;\n        }\n\n        ctx.globalAlpha = props.alpha;\n        ctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx - x, mtx.ty - y);\n        (hitArea || child).draw(ctx);\n\n        if (!this._testHit(ctx)) {\n          continue;\n        }\n\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.clearRect(0, 0, 2, 2);\n\n        if (arr) {\n          arr.push(child);\n        } else {\n          return mouse && !this.mouseChildren ? this : child;\n        }\n      }\n    }\n\n    return null;\n  }\n  /**\n   * @protected\n   * @param {easeljs.DisplayObject} target\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Boolean} Indicates whether the x/y is within the masked region.\n   */\n\n\n  _testMask(target, x, y) {\n    let mask = target.mask;\n\n    if (!mask || !mask.graphics || mask.graphics.isEmpty()) {\n      return true;\n    }\n\n    let mtx = this._props.matrix,\n        parent = target.parent;\n    mtx = parent ? parent.getConcatenatedMatrix(mtx) : mtx.identity();\n    mtx = mask.getMatrix(mask._props.matrix).prependMatrix(mtx);\n    let ctx = DisplayObject._hitTestContext;\n    ctx.setTransform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx - x, mtx.ty - y); // draw the mask as a solid fill:\n\n    mask.graphics.drawAsPath(ctx);\n    ctx.fillStyle = \"#000\";\n    ctx.fill();\n\n    if (!this._testHit(ctx)) {\n      return false;\n    }\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, 2, 2);\n    return true;\n  }\n  /**\n   * @protected\n   * @param {easeljs.Matrix2D} matrix\n   * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\n   * @return {easeljs.Rectangle}\n   */\n\n\n  _getBounds(matrix, ignoreTransform) {\n    let bounds = super.getBounds();\n\n    if (bounds) {\n      return this._transformBounds(bounds, matrix, ignoreTransform);\n    }\n\n    let mtx = this._props.matrix;\n    mtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\n\n    if (matrix) {\n      mtx.prependMatrix(matrix);\n    }\n\n    const l = this.children.length;\n    let rect = null;\n\n    for (let i = 0; i < l; i++) {\n      let child = this.children[i];\n\n      if (!child.visible || !(bounds = child._getBounds(mtx))) {\n        continue;\n      }\n\n      if (rect) {\n        rect.extend(bounds.x, bounds.y, bounds.width, bounds.height);\n      } else {\n        rect = bounds.clone();\n      }\n    }\n\n    return rect;\n  }\n\n}\n\n/**\n * @license MouseEvent\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * Passed as the parameter to all mouse/pointer/touch related events. For a listing of mouse events and their properties,\n * see the {@link easeljs.DisplayObject} and {@link easeljs.Stage} event listings.\n * @memberof easeljs\n * @extends core.Event\n * @param {String} type The event type.\n * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n * @param {Number} stageX The normalized x position relative to the stage.\n * @param {Number} stageY The normalized y position relative to the stage.\n * @param {easeljs.MouseEvent} nativeEvent The native DOM event related to this mouse event.\n * @param {Number} pointerID The unique id for the pointer.\n * @param {Boolean} primary Indicates whether this is the primary pointer in a multitouch environment.\n * @param {Number} rawX The raw x position relative to the stage.\n * @param {Number} rawY The raw y position relative to the stage.\n * @param {easeljs.DisplayObject} relatedTarget The secondary target for the event.\n */\n\nclass MouseEvent extends Event {\n  constructor(type, bubbles, cancelable, stageX, stageY, nativeEvent, pointerID, primary, rawX, rawY, relatedTarget) {\n    super(type, bubbles, cancelable); // public properties:\n\n    /**\n     * The normalized x position on the stage. This will always be within the range 0 to stage width.\n     * @type {Number}\n    */\n\n    this.stageX = stageX;\n    /**\n     * The normalized y position on the stage. This will always be within the range 0 to stage height.\n     * @type {Number}\n     */\n\n    this.stageY = stageY;\n    /**\n     * The raw x position relative to the stage. Normally this will be the same as the stageX value, unless\n     * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n     * @type {Number}\n    */\n\n    this.rawX = rawX == null ? stageX : rawX;\n    /**\n     * The raw y position relative to the stage. Normally this will be the same as the stageY value, unless\n     * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n     * @type {Number}\n    */\n\n    this.rawY = rawY == null ? stageY : rawY;\n    /**\n     * The native MouseEvent generated by the browser. The properties and API for this\n     * event may differ between browsers. This property will be null if the\n     * EaselJS property was not directly generated from a native MouseEvent.\n     * @type {HTMLMouseEvent}\n     */\n\n    this.nativeEvent = nativeEvent;\n    /**\n     * The unique id for the pointer (touch point or cursor). This will be either -1 for the mouse, or the system\n     * supplied id value.\n     * @type {Number}\n     */\n\n    this.pointerID = pointerID;\n    /**\n     * Indicates whether this is the primary pointer in a multitouch environment. This will always be true for the mouse.\n     * For touch pointers, the first pointer in the current stack will be considered the primary pointer.\n     * @type {Boolean}\n     */\n\n    this.primary = !!primary;\n    /**\n     * The secondary target for the event, if applicable. This is used for mouseout/rollout\n     * events to indicate the object that the mouse entered from, mouseover/rollover for the object the mouse exited,\n     * and stagemousedown/stagemouseup events for the object that was the under the cursor, if any.\n     *\n     * Only valid interaction targets will be returned (ie. objects with mouse listeners or a cursor set).\n     * @type {easeljs.DisplayObject}\n     */\n\n    this.relatedTarget = relatedTarget;\n  }\n  /**\n   * Returns the x position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n   * @type {Number}\n   * @readonly\n   */\n\n\n  get localX() {\n    return this.currentTarget.globalToLocal(this.rawX, this.rawY).x;\n  }\n  /**\n   * Returns the y position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n   * @type {Number}\n   * @readonly\n   */\n\n\n  get localY() {\n    return this.currentTarget.globalToLocal(this.rawX, this.rawY).y;\n  }\n  /**\n   * Indicates whether the event was generated by a touch input (versus a mouse input).\n   * @type {Boolean}\n   * @readonly\n   */\n\n\n  get isTouch() {\n    return this.pointerID !== -1;\n  }\n  /**\n   * Returns a clone of the MouseEvent instance.\n   * @return {easeljs.MouseEvent} a clone of the MouseEvent instance.\n   */\n\n\n  clone() {\n    return new MouseEvent(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY);\n  }\n  /**\n   * Returns a string representation of this object.\n   * @return {String} a string representation of the instance.\n   */\n\n\n  toString() {\n    return `[${this.constructor.name} (type=${this.type} stageX=${this.stageX} stageY=${this.stageY})]`;\n  }\n\n}\n\n/**\n * @license Stage\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * A stage is the root level {@link easeljs.Container} for a display list. Each time its {@link easeljs.Stage#tick}\n * method is called, it will render its display list to its target canvas.\n *\n * @memberof easeljs\n * @extends easeljs.Container\n * @example\n * let stage = new Stage(\"canvasElementId\");\n * let image = new Bitmap(\"imagePath.png\");\n * stage.addChild(image);\n * Ticker.addEventListener(\"tick\", event => {\n *   image.x += 10;\n * \t stage.update();\n * });\n *\n * @param {HTMLCanvasElement | String | Object} canvas A canvas object that the Stage will render to, or the string id\n * of a canvas object in the current document.\n */\n\nclass Stage extends Container {\n  constructor(canvas) {\n    super();\n    /**\n     * Indicates whether the stage should automatically clear the canvas before each render. You can set this to `false`\n     * to manually control clearing (for generative art, or when pointing multiple stages at the same canvas for\n     * example).\n     *\n     * @example\n     * let stage = new Stage(\"canvasId\");\n     * stage.autoClear = false;\n     *\n     * @type {Boolean}\n     * @default true\n     */\n\n    this.autoClear = true;\n    /**\n     * The canvas the stage will render to. Multiple stages can share a single canvas, but you must disable autoClear for all but the\n     * first stage that will be ticked (or they will clear each other's render).\n     *\n     * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n     * new canvas or mouse events will not work as expected.\n     *\n     * @example\n     * stage.enableDOMEvents(false);\n     * stage.canvas = anotherCanvas;\n     * stage.enableDOMEvents(true);\n     *\n     * @type {HTMLCanvasElement | Object}\n     */\n\n    this.canvas = typeof canvas === \"string\" ? document.getElementById(canvas) : canvas;\n    /**\n     * The current mouse X position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n     * position over the canvas, and mouseInBounds will be set to false.\n     * @type {Number}\n     * @default 0\n     * @readonly\n     */\n\n    this.mouseX = 0;\n    /**\n     * The current mouse Y position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n     * position over the canvas, and mouseInBounds will be set to false.\n     * @type {Number}\n     * @default 0\n     * @readonly\n     */\n\n    this.mouseY = 0;\n    /**\n     * Specifies the area of the stage to affect when calling update. This can be use to selectively\n     * re-draw specific regions of the canvas. If null, the whole canvas area is drawn.\n     * @type {easeljs.Rectangle}\n     */\n\n    this.drawRect = null;\n    /**\n     * Indicates whether display objects should be rendered on whole pixels. You can set the {@link easeljs.DisplayObject.snapToPixelEnabled}\n     * property of display objects to false to enable/disable this behaviour on a per instance basis.\n     * @type {Boolean}\n     * @default false\n     */\n\n    this.snapToPixelEnabled = false;\n    /**\n     * Indicates whether the mouse is currently within the bounds of the canvas.\n     * @type {Boolean}\n     * @default false\n     */\n\n    this.mouseInBounds = false;\n    /**\n     * If true, tick callbacks will be called on all display objects on the stage prior to rendering to the canvas.\n     * @type {Boolean}\n     * @default true\n     */\n\n    this.tickOnUpdate = true;\n    /**\n     * If true, mouse move events will continue to be called when the mouse leaves the target canvas.\n     * See {@link easeljs.Stage#mouseInBounds}, and {@link easeljs.MouseEvent} x/y/rawX/rawY.\n     * @type {Boolean}\n     * @default false\n     */\n\n    this.mouseMoveOutside = false;\n    /**\n     * Prevents selection of other elements in the html page if the user clicks and drags, or double clicks on the canvas.\n     * This works by calling `preventDefault()` on any mousedown events (or touch equivalent) originating on the canvas.\n     * @type {Boolean}\n     * @default true\n     */\n\n    this.preventSelection = true;\n    /**\n     * The hitArea property is not supported for Stage.\n     * @property hitArea\n     * @override\n     * @default null\n     * @private\n     */\n\n    /**\n     * Holds objects with data for each active pointer id. Each object has the following properties:\n     * x, y, event, target, overTarget, overX, overY, inBounds, posEvtObj (native event that last updated position)\n     * @type {Object}\n     * @private\n     */\n\n    this._pointerData = {};\n    /**\n     * Number of active pointers.\n     * @type {Number}\n     * @private\n     */\n\n    this._pointerCount = 0;\n    /**\n     * The ID of the primary pointer.\n     * @type {String}\n     * @private\n     */\n\n    this._primaryPointerID = null;\n    /**\n     * @protected\n     * @type {Number}\n     */\n\n    this._mouseOverIntervalID = null;\n    /**\n     * @protected\n     * @type {easeljs.Stage}\n     */\n\n    this._nextStage = null;\n    /**\n     * @protected\n     * @type {easeljs.Stage}\n     */\n\n    this._prevStage = null;\n    this.enableDOMEvents(true);\n  }\n  /**\n   * Specifies a target stage that will have mouse/touch interactions relayed to it after this stage handles them.\n   * This can be useful in cases where you have multiple layered canvases and want user interactions\n   * events to pass through.\n   *\n   * MouseOver, MouseOut, RollOver, and RollOut interactions are also passed through using the mouse over settings\n   * of the top-most stage, but are only processed if the target stage has mouse over interactions enabled.\n   * Considerations when using roll over in relay targets:\n   * <ol>\n   *   <li> The top-most (first) stage must have mouse over interactions enabled (via enableMouseOver)</li>\n   *   <li> All stages that wish to participate in mouse over interaction must enable them via enableMouseOver</li>\n   *   <li> All relay targets will share the frequency value of the top-most stage</li>\n   * </ol>\n   *\n   * @example <caption>Relay mouse events from topStage to bottomStage</caption>\n   * topStage.nextStage = bottomStage;\n   *\n   * @example <caption>Disable DOM events</caption>\n   * stage.enableDOMEvents(false);\n   *\n   * @type {easeljs.Stage}\n   */\n\n\n  get nextStage() {\n    return this._nextStage;\n  }\n\n  set nextStage(stage) {\n    if (this._nextStage) {\n      this._nextStage._prevStage = null;\n    }\n\n    if (stage) {\n      stage._prevStage = this;\n    }\n\n    this._nextStage = stage;\n  } // public methods:\n\n  /**\n   * Each time the update method is called, the stage will call {@link easeljs.Stage#tick}\n   * unless {@link easeljs.Stage#tickOnupdate} is set to false,\n   * and then render the display list to the canvas.\n   *\n   * @param {Object} [props] Props object to pass to `tick()`. Should usually be a {@link core.Ticker} event object, or similar object with a delta property.\n   */\n\n\n  update(props) {\n    if (!this.canvas) {\n      return;\n    }\n\n    if (this.tickOnUpdate) {\n      this.tick(props);\n    }\n\n    if (this.dispatchEvent(\"drawstart\", false, true) === false) {\n      return;\n    }\n\n    DisplayObject._snapToPixelEnabled = this.snapToPixelEnabled;\n    let r = this.drawRect,\n        ctx = this.canvas.getContext(\"2d\");\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    if (this.autoClear) {\n      if (r) {\n        ctx.clearRect(r.x, r.y, r.width, r.height);\n      } else {\n        ctx.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1);\n      }\n    }\n\n    ctx.save();\n\n    if (this.drawRect) {\n      ctx.beginPath();\n      ctx.rect(r.x, r.y, r.width, r.height);\n      ctx.clip();\n    }\n\n    this.updateContext(ctx);\n    this.draw(ctx, false);\n    ctx.restore();\n    this.dispatchEvent(\"drawend\");\n  }\n  /**\n   * Propagates a tick event through the display list. This is automatically called by {@link easeljs.Stage#update}\n   * unless {@link easeljs.Stage#tickOnUpdate} is set to false.\n   *\n   * If a props object is passed to `tick()`, then all of its properties will be copied to the event object that is\n   * propagated to listeners.\n   *\n   * Some time-based features in EaselJS (for example {@link easeljs.Sprite#framerate} require that\n   * a {@link core.Ticker#event:tick} event object (or equivalent object with a delta property) be\n   * passed as the `props` parameter to `tick()`.\n   *\n   * @example\n   * Ticker.on(\"tick\", (evt) => {\n   *   // clone the event object from Ticker, and add some custom data to it:\n   * \t let data = evt.clone().set({ greeting: \"hello\", name: \"world\" });\n   * \t // pass it to stage.update():\n   * \t stage.update(data); // subsequently calls tick() with the same param\n   * });\n   *\n   * shape.on(\"tick\", (evt) => {\n   *   console.log(evt.delta); // the delta property from the Ticker tick event object\n   * \t console.log(evt.greeting, evt.name); // custom data: \"hello world\"\n   * });\n   *\n   * @emits easeljs.Stage#event:tickstart\n   * @emits easeljs.Stage#event:tickend\n   * @param {Object} [props] An object with properties that should be copied to the event object. Should usually be a Ticker event object, or similar object with a delta property.\n   */\n\n\n  tick(props) {\n    if (!this.tickEnabled || this.dispatchEvent(\"tickstart\", false, true) === false) {\n      return;\n    }\n\n    let evtObj = new Event(\"tick\");\n\n    if (props) {\n      for (let n in props) {\n        if (props.hasOwnProperty(n)) {\n          evtObj[n] = props[n];\n        }\n      }\n    }\n\n    this._tick(evtObj);\n\n    this.dispatchEvent(\"tickend\");\n  }\n  /**\n   * Default event handler that calls the Stage {@link easeljs.Stage#update} method when a {@link easeljs.DisplayObject#event:tick}\n   * event is received. This allows you to register a Stage instance as a event listener on {@link core.Ticker} directly.\n   * Note that if you subscribe to ticks using this pattern, then the tick event object will be passed through to\n   * display object tick handlers, instead of `delta` and `paused` parameters.\n   */\n\n\n  handleEvent(evt) {\n    if (evt.type === \"tick\") {\n      this.update(evt);\n    }\n  }\n  /**\n   * Clears the target canvas. Useful if {@link easeljs.State#autoClear} is set to `false`.\n   */\n\n\n  clear() {\n    if (!this.canvas) {\n      return;\n    }\n\n    let ctx = this.canvas.getContext(\"2d\");\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1);\n  }\n  /**\n   * Returns a data url that contains a Base64-encoded image of the contents of the stage. The returned data url can\n   * be specified as the src value of an image element.\n   *\n   * @param {String} [backgroundColor] The background color to be used for the generated image. Any valid CSS color\n   * value is allowed. The default value is a transparent background.\n   * @param {String} [mimeType=\"image/png\"] The MIME type of the image format to be create. If an unknown MIME type\n   * is passed in, or if the browser does not support the specified MIME type, the default value will be used.\n   * @return {String} a Base64 encoded image.\n   */\n\n\n  toDataURL(backgroundColor, mimeType = \"image/png\") {\n    let data,\n        ctx = this.canvas.getContext('2d'),\n        w = this.canvas.width,\n        h = this.canvas.height;\n\n    if (backgroundColor) {\n      data = ctx.getImageData(0, 0, w, h);\n      var compositeOperation = ctx.globalCompositeOperation;\n      ctx.globalCompositeOperation = \"destination-over\";\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(0, 0, w, h);\n    }\n\n    let dataURL = this.canvas.toDataURL(mimeType);\n\n    if (backgroundColor) {\n      ctx.putImageData(data, 0, 0);\n      ctx.globalCompositeOperation = compositeOperation;\n    }\n\n    return dataURL;\n  }\n  /**\n   * Enables or disables (by passing a frequency of 0) mouse over {@link easeljs.DisplayObject#event:mouseover}\n   * and {@link easeljs.DisplayObject#event:mouseout} and roll over events {@link easeljs.DisplayObject#event:rollover}\n   * and {@link easeljs.DisplayObject#event:rollout} for this stage's display list. These events can\n   * be expensive to generate, so they are disabled by default. The frequency of the events can be controlled\n   * independently of mouse move events via the optional `frequency` parameter.\n   *\n   * @example\n   * const stage = new Stage(\"canvasId\");\n   * stage.enableMouseOver(10); // 10 updates per second\n   *\n   * @param {Number} [frequency=20] Optional param specifying the maximum number of times per second to broadcast\n   * mouse over/out events. Set to 0 to disable mouse over events completely. Maximum is 50. A lower frequency is less\n   * responsive, but uses less CPU.\n   */\n\n\n  enableMouseOver(frequency = 20) {\n    if (this._mouseOverIntervalID) {\n      clearInterval(this._mouseOverIntervalID);\n      this._mouseOverIntervalID = null;\n\n      if (frequency === 0) {\n        this._testMouseOver(true);\n      }\n    }\n\n    if (frequency <= 0) {\n      return;\n    }\n\n    this._mouseOverIntervalID = setInterval(() => this._testMouseOver(), 1000 / Math.min(50, frequency));\n  }\n  /**\n   * Enables or disables the event listeners that stage adds to DOM elements (window, document and canvas). It is good\n   * practice to disable events when disposing of a Stage instance, otherwise the stage will continue to receive\n   * events from the page.\n   * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n   * new canvas or mouse events will not work as expected.\n   *\n   * @example\n   * stage.enableDOMEvents(false);\n   * stage.canvas = anotherCanvas;\n   * stage.enableDOMEvents(true);\n   *\n   * @param {Boolean} [enable=true] Indicates whether to enable or disable the events.\n   */\n\n\n  enableDOMEvents(enable = true) {\n    let ls = this._eventListeners;\n\n    if (!enable && ls) {\n      for (let n in ls) {\n        let o = ls[n];\n        o.t.removeEventListener(n, o.f, false);\n      }\n\n      this._eventListeners = null;\n    } else if (enable && !ls && this.canvas) {\n      let t = window.addEventListener ? window : document;\n      ls = this._eventListeners = {\n        mouseup: {\n          t,\n          f: e => this._handleMouseUp(e)\n        },\n        mousemove: {\n          t,\n          f: e => this._handleMouseMove(e)\n        },\n        dblclick: {\n          t: this.canvas,\n          f: e => this._handleDoubleClick(e)\n        },\n        mousedown: {\n          t: this.canvas,\n          f: e => this._handleMouseDown(e)\n        }\n      };\n\n      for (let n in ls) {\n        let o = ls[n];\n        o.t.addEventListener && o.t.addEventListener(n, o.f, false);\n      }\n    }\n  }\n  /**\n   * Stage instances cannot be cloned.\n   * @throws Stage cannot be cloned\n   * @override\n   */\n\n\n  clone() {\n    throw \"Stage cannot be cloned.\";\n  }\n  /**\n   * @protected\n   * @param {HTMLElement} e\n   * @returns {Object}\n   */\n\n\n  _getElementRect(e) {\n    let bounds;\n\n    try {\n      bounds = e.getBoundingClientRect();\n    } // this can fail on disconnected DOM elements in IE9\n    catch (err) {\n      bounds = {\n        top: e.offsetTop,\n        left: e.offsetLeft,\n        width: e.offsetWidth,\n        height: e.offsetHeight\n      };\n    }\n\n    let offX = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0);\n    let offY = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop || document.body.clientTop || 0);\n    let styles = window.getComputedStyle ? getComputedStyle(e, null) : e.currentStyle; // IE <9 compatibility.\n\n    let padL = parseInt(styles.paddingLeft) + parseInt(styles.borderLeftWidth);\n    let padT = parseInt(styles.paddingTop) + parseInt(styles.borderTopWidth);\n    let padR = parseInt(styles.paddingRight) + parseInt(styles.borderRightWidth);\n    let padB = parseInt(styles.paddingBottom) + parseInt(styles.borderBottomWidth); // note: in some browsers bounds properties are read only.\n\n    return {\n      left: bounds.left + offX + padL,\n      right: bounds.right + offX - padR,\n      top: bounds.top + offY + padT,\n      bottom: bounds.bottom + offY - padB\n    };\n  }\n  /**\n   * @protected\n   * @param {Number} id\n   * @returns {Object}\n   */\n\n\n  _getPointerData(id) {\n    let data = this._pointerData[id];\n\n    if (!data) {\n      data = this._pointerData[id] = {\n        x: 0,\n        y: 0\n      };\n    }\n\n    return data;\n  }\n  /**\n   * @protected\n   * @param {easeljs.MouseEvent} [e=window.event]\n   */\n\n\n  _handleMouseMove(e = window.event) {\n    this._handlePointerMove(-1, e, e.pageX, e.pageY);\n  }\n  /**\n   * @emits {@link easeljs.DisplayObject#event:mouseleave}\n   * @emits {@link easeljs.DisplayObject#event:mouseenter}\n   * @emits {@link easeljs.DisplayObject#event:pressmove}\n   * @emits {@link easeljs.Stage#event:stagemousemove}\n   * @protected\n   * @param {Number} id\n   * @param {easeljs.MouseEvent | Event} e\n   * @param {Number} pageX\n   * @param {Number} pageY\n   * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n   */\n\n\n  _handlePointerMove(id, e, pageX, pageY, owner) {\n    if (this._prevStage && owner === undefined) {\n      return;\n    } // redundant listener.\n\n\n    if (!this.canvas) {\n      return;\n    }\n\n    let nextStage = this._nextStage,\n        o = this._getPointerData(id);\n\n    let inBounds = o.inBounds;\n\n    this._updatePointerPosition(id, e, pageX, pageY);\n\n    if (inBounds || o.inBounds || this.mouseMoveOutside) {\n      if (id === -1 && o.inBounds === !inBounds) {\n        this._dispatchMouseEvent(this, inBounds ? \"mouseleave\" : \"mouseenter\", false, id, o, e);\n      }\n\n      this._dispatchMouseEvent(this, \"stagemousemove\", false, id, o, e);\n\n      this._dispatchMouseEvent(o.target, \"pressmove\", true, id, o, e);\n    }\n\n    nextStage && nextStage._handlePointerMove(id, e, pageX, pageY, null);\n  }\n  /**\n   * @protected\n   * @param {Number} id\n   * @param {easeljs.MouseEvent | Event} e\n   * @param {Number} pageX\n   * @param {Number} pageY\n   */\n\n\n  _updatePointerPosition(id, e, pageX, pageY) {\n    let rect = this._getElementRect(this.canvas);\n\n    pageX -= rect.left;\n    pageY -= rect.top;\n    let w = this.canvas.width;\n    let h = this.canvas.height;\n    pageX /= (rect.right - rect.left) / w;\n    pageY /= (rect.bottom - rect.top) / h;\n\n    let o = this._getPointerData(id);\n\n    if (o.inBounds = pageX >= 0 && pageY >= 0 && pageX <= w - 1 && pageY <= h - 1) {\n      o.x = pageX;\n      o.y = pageY;\n    } else if (this.mouseMoveOutside) {\n      o.x = pageX < 0 ? 0 : pageX > w - 1 ? w - 1 : pageX;\n      o.y = pageY < 0 ? 0 : pageY > h - 1 ? h - 1 : pageY;\n    }\n\n    o.posEvtObj = e;\n    o.rawX = pageX;\n    o.rawY = pageY;\n\n    if (id === this._primaryPointerID || id === -1) {\n      this.mouseX = o.x;\n      this.mouseY = o.y;\n      this.mouseInBounds = o.inBounds;\n    }\n  }\n  /**\n   * @protected\n   * @param {easeljs.MouseEvent} e\n   */\n\n\n  _handleMouseUp(e) {\n    this._handlePointerUp(-1, e, false);\n  }\n  /**\n   * @emits {@link easeljs.Stage#event:stagemouseup}\n   * @emits {@link easeljs.DisplayObject#event:click}\n   * @emits {@link easeljs.DisplayObject#event:pressup}\n   * @protected\n   * @param {Number} id\n   * @param {easeljs.MouseEvent | Event} e\n   * @param {Boolean} clear\n   * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n   */\n\n\n  _handlePointerUp(id, e, clear, owner) {\n    let nextStage = this._nextStage,\n        o = this._getPointerData(id);\n\n    if (this._prevStage && owner === undefined) {\n      return;\n    } // redundant listener.\n\n\n    let target = null,\n        oTarget = o.target;\n\n    if (!owner && (oTarget || nextStage)) {\n      target = this._getObjectsUnderPoint(o.x, o.y, null, true);\n    }\n\n    if (o.down) {\n      this._dispatchMouseEvent(this, \"stagemouseup\", false, id, o, e, target);\n\n      o.down = false;\n    }\n\n    if (target === oTarget) {\n      this._dispatchMouseEvent(oTarget, \"click\", true, id, o, e);\n    }\n\n    this._dispatchMouseEvent(oTarget, \"pressup\", true, id, o, e);\n\n    if (clear) {\n      if (id == this._primaryPointerID) {\n        this._primaryPointerID = null;\n      }\n\n      delete this._pointerData[id];\n    } else {\n      o.target = null;\n    }\n\n    nextStage && nextStage._handlePointerUp(id, e, clear, owner || target && this);\n  }\n  /**\n   * @protected\n   * @param {easeljs.MouseEvent} e\n   */\n\n\n  _handleMouseDown(e) {\n    this._handlePointerDown(-1, e, e.pageX, e.pageY);\n  }\n  /**\n   * @emits {@link easeljs.Stage#event:stagemousedown}\n   * @emits {@link easeljs.DisplayObject#event:mousedown}\n   * @protected\n   * @param {Number} id\n   * @param {easeljs.MouseEvent | Event} e\n   * @param {Number} pageX\n   * @param {Number} pageY\n   * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n   */\n\n\n  _handlePointerDown(id, e, pageX, pageY, owner) {\n    if (this.preventSelection) {\n      e.preventDefault();\n    }\n\n    if (this._primaryPointerID == null || id === -1) {\n      this._primaryPointerID = id;\n    } // mouse always takes over.\n\n\n    if (pageY != null) {\n      this._updatePointerPosition(id, e, pageX, pageY);\n    }\n\n    let target = null,\n        nextStage = this._nextStage,\n        o = this._getPointerData(id);\n\n    if (!owner) {\n      target = o.target = this._getObjectsUnderPoint(o.x, o.y, null, true);\n    }\n\n    if (o.inBounds) {\n      this._dispatchMouseEvent(this, \"stagemousedown\", false, id, o, e, target);\n\n      o.down = true;\n    }\n\n    this._dispatchMouseEvent(target, \"mousedown\", true, id, o, e);\n\n    nextStage && nextStage._handlePointerDown(id, e, pageX, pageY, owner || target && this);\n  }\n  /**\n   * @emits {@link easeljs.DisplayObject#event:mouseout}\n   * @emits {@link easeljs.DisplayObject#event:rollout}\n   * @emits {@link easeljs.DisplayObject#event:rollover}\n   * @emits {@link easeljs.DisplayObject#event:mouseover}\n   * @param {Boolean} clear If true, clears the mouseover / rollover (ie. no target)\n   * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n   * @param {easeljs.Stage} eventTarget The stage that the cursor is actively over.\n   * @protected\n   */\n\n\n  _testMouseOver(clear, owner, eventTarget) {\n    if (this._prevStage && owner === undefined) {\n      return;\n    } // redundant listener.\n\n\n    let nextStage = this._nextStage;\n\n    if (!this._mouseOverIntervalID) {\n      // not enabled for mouseover, but should still relay the event.\n      nextStage && nextStage._testMouseOver(clear, owner, eventTarget);\n      return;\n    }\n\n    let o = this._getPointerData(-1); // only update if the mouse position has changed. This provides a lot of optimization, but has some trade-offs.\n\n\n    if (!o || !clear && this.mouseX === this._mouseOverX && this.mouseY === this._mouseOverY && this.mouseInBounds) {\n      return;\n    }\n\n    let e = o.posEvtObj;\n    let isEventTarget = eventTarget || e && e.target === this.canvas;\n    let target = null,\n        common = -1,\n        cursor = \"\";\n\n    if (!owner && (clear || this.mouseInBounds && isEventTarget)) {\n      target = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, true);\n      this._mouseOverX = this.mouseX;\n      this._mouseOverY = this.mouseY;\n    }\n\n    let oldList = this._mouseOverTarget || [];\n    let oldTarget = oldList[oldList.length - 1];\n    let list = this._mouseOverTarget = []; // generate ancestor list and check for cursor:\n\n    let t = target;\n\n    while (t) {\n      list.unshift(t);\n\n      if (!cursor) {\n        cursor = t.cursor;\n      }\n\n      t = t.parent;\n    }\n\n    this.canvas.style.cursor = cursor;\n\n    if (!owner && eventTarget) {\n      eventTarget.canvas.style.cursor = cursor;\n    } // find common ancestor:\n\n\n    for (let i = 0, l = list.length; i < l; i++) {\n      if (list[i] != oldList[i]) {\n        break;\n      }\n\n      common = i;\n    }\n\n    if (oldTarget != target) {\n      this._dispatchMouseEvent(oldTarget, \"mouseout\", true, -1, o, e, target);\n    }\n\n    for (let i = oldList.length - 1; i > common; i--) {\n      this._dispatchMouseEvent(oldList[i], \"rollout\", false, -1, o, e, target);\n    }\n\n    for (let i = list.length - 1; i > common; i--) {\n      this._dispatchMouseEvent(list[i], \"rollover\", false, -1, o, e, oldTarget);\n    }\n\n    if (oldTarget != target) {\n      this._dispatchMouseEvent(target, \"mouseover\", true, -1, o, e, oldTarget);\n    }\n\n    nextStage && nextStage._testMouseOver(clear, owner || target && this, eventTarget || isEventTarget && this);\n  }\n  /**\n   * @emits {@link easeljs.DisplayObject#event:dblclick}\n   * @protected\n   * @param {easeljs.MouseEvent} e\n   * @param {easeljs.Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n   */\n\n\n  _handleDoubleClick(e, owner) {\n    let target = null,\n        nextStage = this._nextStage,\n        o = this._getPointerData(-1);\n\n    if (!owner) {\n      target = this._getObjectsUnderPoint(o.x, o.y, null, true);\n\n      this._dispatchMouseEvent(target, \"dblclick\", true, -1, o, e);\n    }\n\n    nextStage && nextStage._handleDoubleClick(e, owner || target && this);\n  }\n  /**\n   * @protected\n   * @param {easeljs.DisplayObject} target\n   * @param {String} type\n   * @param {Boolean} bubbles\n   * @param {Number} pointerId\n   * @param {Object} o\n   * @param {easeljs.MouseEvent} [nativeEvent]\n   * @param {easeljs.DisplayObject} [relatedTarget]\n   */\n\n\n  _dispatchMouseEvent(target, type, bubbles, pointerId, o, nativeEvent, relatedTarget) {\n    // TODO: might be worth either reusing MouseEvent instances, or adding a willTrigger method to avoid GC.\n    if (!target || !bubbles && !target.hasEventListener(type)) {\n      return;\n    }\n    /*\n    // TODO: account for stage transformations?\n    this._mtx = this.getConcatenatedMatrix(this._mtx).invert();\n    let pt = this._mtx.transformPoint(o.x, o.y);\n    let evt = new MouseEvent(type, bubbles, false, pt.x, pt.y, nativeEvent, pointerId, pointerId==this._primaryPointerID || pointerId==-1, o.rawX, o.rawY);\n    */\n\n\n    let evt = new MouseEvent(type, bubbles, false, o.x, o.y, nativeEvent, pointerId, pointerId === this._primaryPointerID || pointerId === -1, o.rawX, o.rawY, relatedTarget);\n    target.dispatchEvent(evt);\n  }\n\n}\n/**\n * Dispatched when the user moves the mouse over the canvas.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.Stage#stagemousemove\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user presses their left mouse button on the canvas.\n * You can use {@link easeljs.Stage#mouseInBounds} to check whether the mouse is currently within the stage bounds.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.Stage#stagemousedown\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the user the user presses somewhere on the stage, then releases the mouse button anywhere that the page can detect it (this varies slightly between browsers).\n * You can use {@link easeljs.Stage#mouseInBounds} to check whether the mouse is currently within the stage bounds.\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.Stage#stagemouseup\n * @since 0.6.0\n */\n\n/**\n * Dispatched when the mouse moves from within the canvas area (mouseInBounds === true) to outside it (mouseInBounds === false).\n * This is currently only dispatched for mouse input (not touch).\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.Stage#mouseleave\n * @since 0.7.0\n */\n\n/**\n * Dispatched when the mouse moves into the canvas area (mouseInBounds === false) from outside it (mouseInBounds === true).\n * This is currently only dispatched for mouse input (not touch).\n * @see {@link easeljs.MouseEvent}\n * @event easeljs.Stage#mouseenter\n * @since 0.7.0\n */\n\n/**\n * Dispatched each update immediately before the tick event is propagated through the display list.\n * You can call preventDefault on the event object to cancel propagating the tick event.\n * @event easeljs.Stage#tickstart\n * @since 0.7.0\n */\n\n/**\n * Dispatched each update immediately after the tick event is propagated through the display list. Does not fire if\n * tickOnUpdate is false. Precedes the \"drawstart\" event.\n * @event easeljs.Stage#tickend\n * @since 0.7.0\n */\n\n/**\n * Dispatched each update immediately before the canvas is cleared and the display list is drawn to it.\n * You can call preventDefault on the event object to cancel the draw.\n * @event easeljs.Stage#drawstart\n * @since 0.7.0\n */\n\n/**\n * Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.\n * @event easeljs.Stage#drawend\n * @since 0.7.0\n */\n\n/**\n * @license Canvas\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Global utility for creating canvases.\n * @memberof easeljs\n * @name easeljs.createCanvas\n * @param {Number} [width=1]\n * @param {Number} [height=1]\n */\nfunction createCanvas(width = 1, height = 1) {\n  let c;\n\n  if (window.createjs !== undefined && window.createjs.createCanvas !== undefined) {\n    c = window.createjs.createCanvas();\n  }\n\n  if (HTMLCanvasElement) {\n    c = new HTMLCanvasElement();\n  }\n\n  if (c !== undefined) {\n    c.width = width;\n    c.height = height;\n    return c;\n  }\n\n  throw \"Canvas not supported in this environment.\";\n}\n\n/**\n * @license VideoBuffer\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2010 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * When an HTML video seeks, including when looping, there is an indeterminate period before a new frame is available.\n * This can result in the video blinking or flashing when it is drawn to a canvas. The VideoBuffer class resolves\n * this issue by drawing each frame to an off-screen canvas and preserving the prior frame during a seek.\n *\n * @example\n * let buffer = new VideoBuffer(video);\n * let bitmap = new Bitmap(buffer);\n *\n * @param {HTMLVideoElement} video The HTML video element to buffer.\n */\n\nclass VideoBuffer {\n  constructor(video) {\n    /**\n     * Used by Bitmap to determine when the video buffer is ready to be drawn. Not intended for general use.\n     * @protected\n     * @type {Number}\n     */\n    this.readyState = video.readyState;\n    /**\n     * @protected\n     * @type {HTMLVideoElement}\n     */\n\n    this._video = video;\n    /**\n     * @protected\n     * @type {HTMLCanvasElement}\n     */\n\n    this._canvas = null;\n    /**\n     * @protected\n     * @type {Number}\n     * @default -1\n     */\n\n    this._lastTime = -1;\n\n    if (this.readyState < 2) {\n      video.addEventListener(\"canplaythrough\", this._videoReady.bind(this));\n    } // {once: true} isn't supported everywhere, but its a non-critical optimization here.\n\n  }\n  /**\n   * Gets an HTML canvas element showing the current video frame, or the previous frame if in a seek / loop.\n   * Primarily for use by {@link easeljs.Bitmap}.\n   */\n\n\n  getImage() {\n    if (this.readyState < 2) {\n      return;\n    }\n\n    let canvas = this._canvas,\n        video = this._video;\n\n    if (!canvas) {\n      canvas = this._canvas = createCanvas();\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n    }\n\n    if (video.readyState >= 2 && video.currentTime !== this._lastTime) {\n      const ctx = canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n      this._lastTime = video.currentTime;\n    }\n\n    return canvas;\n  }\n  /**\n   * @protected\n   */\n\n\n  _videoReady() {\n    this.readyState = 2;\n  }\n\n}\n\n/**\n * @license Bitmap\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * A Bitmap represents an Image, Canvas, or Video in the display list. A Bitmap can be instantiated using an existing\n * HTML element, or a string.\n *\n * <strong>Notes:</strong>\n * <ol>\n *     <li>When using a video source that may loop or seek, use a {@link easeljs.VideoBuffer} object to\n *      blinking / flashing.\n *     <li>When a string path or image tag that is not yet loaded is used, the stage may need to be redrawn before it\n *      will be displayed.</li>\n *     <li>Bitmaps with an SVG source currently will not respect an alpha value other than 0 or 1. To get around this,\n *     the Bitmap can be cached.</li>\n *     <li>Bitmaps with an SVG source will taint the canvas with cross-origin data, which prevents interactivity. This\n *     happens in all browsers except recent Firefox builds.</li>\n *     <li>Images loaded cross-origin will throw cross-origin security errors when interacted with using a mouse, using\n *     methods such as `getObjectUnderPoint`, or using filters, or caching. You can get around this by setting\n *     `crossOrigin` flags on your images before passing them to EaselJS, eg: `img.crossOrigin=\"Anonymous\";`</li>\n * </ol>\n *\n * @memberof easeljs\n * @extends easeljs.DisplayObject\n * @example\n * const bitmap = new Bitmap(\"imagePath.jpg\");\n *\n * @param {CanvasImageSource | String | Object} imageOrUri The source image to display. This can be a CanvasImageSource\n * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n * If the latter, a new Image instance with the URL as its src will be used.\n */\n\nclass Bitmap extends DisplayObject {\n  constructor(imageOrUri) {\n    super();\n    /**\n     * The source image to display. This can be a CanvasImageSource\n     * (image, video, canvas), an object with a `getImage` method that returns a CanvasImageSource, or a string URL to an image.\n     * If the latter, a new Image instance with the URL as its src will be used.\n     * @property image\n     * @type {CanvasImageSource | Object}\n     */\n\n    if (typeof imageOrUri === \"string\") {\n      this.image = document.createElement(\"img\");\n      this.image.src = imageOrUri;\n    } else {\n      this.image = imageOrUri;\n    }\n    /**\n     * Specifies an area of the source image to draw. If omitted, the whole image will be drawn.\n     * Note that video sources must have a width / height set to work correctly with `sourceRect`.\n     * @type {easeljs.Rectangle}\n     * @default null\n     */\n\n\n    this.sourceRect = null;\n    /**\n     * Set as compatible with WebGL.\n     * @protected\n     * @type {Number}\n     */\n\n    this._webGLRenderStyle = DisplayObject._StageGL_BITMAP;\n  }\n\n  isVisible() {\n    let image = this.image;\n    let hasContent = this.cacheCanvas || image && (image.naturalWidth || image.getContext || image.readyState >= 2);\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  }\n\n  draw(ctx, ignoreCache = false) {\n    if (super.draw(ctx, ignoreCache)) {\n      return true;\n    }\n\n    let img = this.image,\n        rect = this.sourceRect;\n\n    if (img instanceof VideoBuffer) {\n      img = img.getImage();\n    }\n\n    if (img == null) {\n      return true;\n    }\n\n    if (rect) {\n      // some browsers choke on out of bound values, so we'll fix them:\n      let x1 = rect.x,\n          y1 = rect.y,\n          x2 = x1 + rect.width,\n          y2 = y1 + rect.height,\n          x = 0,\n          y = 0,\n          w = img.width,\n          h = img.height;\n\n      if (x1 < 0) {\n        x -= x1;\n        x1 = 0;\n      }\n\n      if (x2 > w) {\n        x2 = w;\n      }\n\n      if (y1 < 0) {\n        y -= y1;\n        y1 = 0;\n      }\n\n      if (y2 > h) {\n        y2 = h;\n      }\n\n      ctx.drawImage(img, x1, y1, x2 - x1, y2 - y1, x, y, x2 - x1, y2 - y1);\n    } else {\n      ctx.drawImage(img, 0, 0);\n    }\n\n    return true;\n  } // Note, the doc sections below document using the specified APIs (from DisplayObject) from\n  // Bitmap. This is why they have no method implementations.\n\n  /**\n   * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n   * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n   *\n   * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n   * To see the API for caching, please visit the {@link easeljs.DisplayObject#cache} method.\n   *\n   * @alias easeljs.Bitmap#cache\n   */\n\n  /**\n   * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n   * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n   *\n   * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n   * To see the API for caching, please visit the {@link easeljs.DisplayObject#cache} method.\n   *\n   * @alias easeljs.Bitmap#updateCache\n   */\n\n  /**\n   * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n   * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n   *\n   * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n   * To see the API for caching, please visit the {@link easeljs.DisplayObject#cache} method.\n   *\n   * @alias easeljs.Bitmap#uncache\n   */\n\n\n  getBounds() {\n    let rect = super.getBounds();\n\n    if (rect) {\n      return rect;\n    }\n\n    let image = this.image,\n        o = this.sourceRect || image;\n    let hasContent = image && (image.naturalWidth || image.getContext || image.readyState >= 2);\n    return hasContent ? this._rectangle.setValues(0, 0, o.width, o.height) : null;\n  }\n  /**\n   * Returns a clone of the Bitmap instance.\n   * @param {Boolean} [node] Whether the underlying DOM element should be cloned as well.\n   * @return {easeljs.Bitmap} A clone of the Bitmap instance.\n   */\n\n\n  clone(node) {\n    let img = this.image;\n\n    if (img != null && node != null) {\n      img = img.cloneNode();\n    }\n\n    let bmp = new Bitmap(img);\n\n    if (this.sourceRect) {\n      bmp.sourceRect = this.sourceRect.clone();\n    }\n\n    this._cloneProps(bmp);\n\n    return bmp;\n  }\n\n}\n\n/**\n * @license Sprite\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * Displays a frame or sequence of frames (ie. an animation) from a SpriteSheet instance. A sprite sheet is a series of\n * images (usually animation frames) combined into a single image. For example, an animation consisting of 8 100x100\n * images could be combined into a 400x200 sprite sheet (4 frames across by 2 high). You can display individual frames,\n * play frames as an animation, and even sequence animations together.\n *\n * @memberof easeljs\n * @extends easeljs.DisplayObject\n * @example\n * let sprite = new Sprite(spriteSheet);\n * sprite.gotoAndStop(\"frameName\");\n *\n * Until {@link easeljs.Sprite#gotoAndStop} or {@link easeljs.Sprite#gotoAndPlay} is called,\n * only the first defined frame defined in the sprite sheet will be displayed.\n *\n * @see {@link easeljs.SpriteSheet \"More information on setting up frames and animations.\"}\n * @param {SpriteSheet} spriteSheet The SpriteSheet instance to play back. This includes the source image(s), frame\n * dimensions, and frame data.\n * @param {String | Number} [frameOrAnimation] The frame number or animation to play initially.\n */\n\nclass Sprite extends DisplayObject {\n  constructor(spriteSheet, frameOrAnimation) {\n    super();\n    /**\n     * The frame index that will be drawn when draw is called. Note that with some {@link easeljs.SpriteSheet}\n     * definitions, this will advance non-sequentially. This will always be an integer value.\n     * @type {Number}\n     * @default 0\n     * @readonly\n     */\n\n    this.currentFrame = 0;\n    /**\n     * Returns the name of the currently playing animation.\n     * @type {String}\n     * @readonly\n     */\n\n    this.currentAnimation = null;\n    /**\n     * Prevents the animation from advancing each tick automatically. For example, you could create a sprite\n     * sheet of icons, set paused to true, and display the appropriate icon by setting `currentFrame`.\n     * @type {Boolean}\n     * @default true\n     */\n\n    this.paused = true;\n    /**\n     * The SpriteSheet instance to play back. This includes the source image, frame dimensions, and frame data.\n     * @type {easeljs.SpriteSheet}\n     * @readonly\n     */\n\n    this.spriteSheet = spriteSheet;\n    /**\n     * Specifies the current frame index within the currently playing animation. When playing normally, this will increase\n     * from 0 to n-1, where n is the number of frames in the current animation.\n     * This could be a non-integer value if using time-based playback, or if the animation's speed is not an integer.\n     * @see {@link easeljs.Sprite#framerate}\n     * @type {Number}\n     * @default 0\n     */\n\n    this.currentAnimationFrame = 0;\n    /**\n     * By default Sprite instances advance one frame per tick. Specifying a framerate for the Sprite (or its related\n     * SpriteSheet) will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n     * framerate.\n     *\n     * For example, if a Sprite with a framerate of 10 is placed on a Stage being updated at 40fps, then the Sprite will\n     * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n     * vary slightly between frames.\n     *\n     * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n     * passed into {@link easeljs.Stage#update}.\n     * @type {Number}\n     * @default 0\n     */\n\n    this.framerate = 0;\n    /**\n     * Current animation object.\n     * @protected\n     * @type {Object}\n     * @default null\n     */\n\n    this._animation = null;\n    /**\n     * Current frame index.\n     * @protected\n     * @type {Number}\n     * @default null\n     */\n\n    this._currentFrame = null;\n    /**\n     * Skips the next auto advance. Used by gotoAndPlay to avoid immediately jumping to the next frame\n     * @protected\n     * @type {Boolean}\n     * @default false\n     */\n\n    this._skipAdvance = false;\n    /**\n     * Set as compatible with WebGL.\n     * @protected\n     * @type {Number}\n     * @default 1\n     */\n\n    this._webGLRenderStyle = DisplayObject._StageGL_SPRITE;\n\n    if (frameOrAnimation != null) {\n      this.gotoAndPlay(frameOrAnimation);\n    }\n  }\n\n  isVisible() {\n    let hasContent = this.cacheCanvas || this.spriteSheet.complete;\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  }\n\n  draw(ctx, ignoreCache) {\n    if (super.draw(ctx, ignoreCache)) {\n      return true;\n    }\n\n    this._normalizeFrame();\n\n    let o = this.spriteSheet.getFrame(this._currentFrame | 0);\n\n    if (!o) {\n      return false;\n    }\n\n    let rect = o.rect;\n\n    if (rect.width && rect.height) {\n      ctx.drawImage(o.image, rect.x, rect.y, rect.width, rect.height, -o.regX, -o.regY, rect.width, rect.height);\n    }\n\n    return true;\n  } // Note, the doc sections below document using the specified APIs (from DisplayObject) from\n  // Bitmap. This is why they have no method implementations.\n\n  /**\n   * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n   * You should not cache Sprite instances as it can degrade performance.\n   * @name easeljs.Sprite#cache\n   */\n\n  /**\n   * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n   * You should not cache Sprite instances as it can degrade performance.\n   * @name easeljs.Sprite#updateCache\n   */\n\n  /**\n   * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n   * You should not cache Sprite instances as it can degrade performance.\n   * @name easeljs.Sprite#uncache\n   */\n\n  /**\n   * Play (unpause) the current animation. The Sprite will be paused if either {@link easeljs.Sprite#stop}\n   * or {@link easeljs.Sprite#gotoAndStop} is called. Single frame animations will remain unchanged.\n   */\n\n\n  play() {\n    this.paused = false;\n  }\n  /**\n   * Stop playing a running animation. The Sprite will be playing if {@link easeljs.Sprite#gotoAndPlay} is called.\n   * Note that calling `gotoAndPlay()` or {@link easeljs.Sprite#play} will resume playback.\n   */\n\n\n  stop() {\n    this.paused = true;\n  }\n  /**\n   * Sets paused to false and plays the specified animation name, named frame, or frame number.\n   * @param {String | Number} frameOrAnimation The frame number or animation name that the playhead should move to\n   * and begin playing.\n   */\n\n\n  gotoAndPlay(frameOrAnimation) {\n    this.paused = false;\n    this._skipAdvance = true;\n\n    this._goto(frameOrAnimation);\n  }\n  /**\n   * Sets paused to true and seeks to the specified animation name, named frame, or frame number.\n   * @param {String | Number} frameOrAnimation The frame number or animation name that the playhead should move to\n   * and stop.\n   */\n\n\n  gotoAndStop(frameOrAnimation) {\n    this.paused = true;\n\n    this._goto(frameOrAnimation);\n  }\n  /**\n   * Advances the playhead. This occurs automatically each tick by default.\n   * @param {Number} [time] The amount of time in ms to advance by. Only applicable if framerate is set on the Sprite\n   * or its SpriteSheet.\n  */\n\n\n  advance(time) {\n    let fps = this.framerate || this.spriteSheet.framerate;\n    let t = fps && time != null ? time / (1000 / fps) : 1;\n\n    this._normalizeFrame(t);\n  }\n  /**\n   * Returns a {@link easeljs.Rectangle} instance defining the bounds of the current frame relative to\n   * the origin. For example, a 90 x 70 frame with `regX=50` and `regY=40` would return a\n   * rectangle with [x=-50, y=-40, width=90, height=70]. This ignores transformations on the display object.\n   *\n   * @see {@link easeljs.SpriteSheet#frameBounds}\n   * @return {easeljs.Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n   */\n\n\n  getBounds() {\n    // TODO: should this normalizeFrame?\n    return super.getBounds() || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle);\n  }\n  /**\n   * Returns a clone of the Sprite instance. Note that the same SpriteSheet is shared between cloned instances.\n   * @return {easeljs.Sprite} a clone of the Sprite instance.\n   */\n\n\n  clone() {\n    return this._cloneProps(new Sprite(this.spriteSheet));\n  }\n  /**\n   * @param {easeljs.Sprite} o\n   * @return {easeljs.Sprite} o\n   * @protected\n   */\n\n\n  _cloneProps(o) {\n    super._cloneProps(o);\n\n    o.currentFrame = this.currentFrame;\n    o.currentAnimation = this.currentAnimation;\n    o.paused = this.paused;\n    o.currentAnimationFrame = this.currentAnimationFrame;\n    o.framerate = this.framerate;\n    o._animation = this._animation;\n    o._currentFrame = this._currentFrame;\n    o._skipAdvance = this._skipAdvance;\n    return o;\n  }\n\n  _tick(evtObj) {\n    if (!this.paused) {\n      if (!this._skipAdvance) {\n        this.advance(evtObj && evtObj.delta);\n      }\n\n      this._skipAdvance = false;\n    }\n\n    super._tick(evtObj);\n  }\n  /**\n   * Normalizes the current frame, advancing animations and dispatching callbacks as appropriate.\n   * @protected\n   * @param {Number} [frameDelta=0]\n   */\n\n\n  _normalizeFrame(frameDelta = 0) {\n    let animation = this._animation;\n    let paused = this.paused;\n    let frame = this._currentFrame;\n\n    if (animation) {\n      let speed = animation.speed || 1;\n      let animFrame = this.currentAnimationFrame;\n      let l = animation.frames.length;\n\n      if (animFrame + frameDelta * speed >= l) {\n        let next = animation.next;\n\n        if (this._dispatchAnimationEnd(animation, frame, paused, next, l - 1)) {\n          // something changed in the event stack, so we shouldn't make any more changes here.\n          return;\n        } else if (next) {\n          // sequence. Automatically calls _normalizeFrame again with the remaining frames.\n          return this._goto(next, frameDelta - (l - animFrame) / speed);\n        } else {\n          // end.\n          this.paused = true;\n          animFrame = animation.frames.length - 1;\n        }\n      } else {\n        animFrame += frameDelta * speed;\n      }\n\n      this.currentAnimationFrame = animFrame;\n      this._currentFrame = animation.frames[animFrame | 0];\n    } else {\n      frame = this._currentFrame += frameDelta;\n      let l = this.spriteSheet.getNumFrames();\n\n      if (frame >= l && l > 0) {\n        if (!this._dispatchAnimationEnd(animation, frame, paused, l - 1)) {\n          // looped.\n          if ((this._currentFrame -= l) >= l) {\n            return this._normalizeFrame();\n          }\n        }\n      }\n    }\n\n    frame = this._currentFrame | 0;\n\n    if (this.currentFrame != frame) {\n      this.currentFrame = frame;\n      this.dispatchEvent(\"change\");\n    }\n  }\n\n  /**\n   * Dispatches the \"animationend\" event. Returns true if a handler changed the animation (ex. calling {@link easlejs.Sprite#stop},\n   * {@link easeljs.Sprite#gotoAndPlay}, etc.)\n   * @param animation\n   * @param frame\n   * @param paused\n   * @param next\n   * @param end\n   * @private\n   */\n  _dispatchAnimationEnd(animation, frame, paused, next, end) {\n    let name = animation ? animation.name : null;\n\n    if (this.hasEventListener(\"animationend\")) {\n      let evt = new Event(\"animationend\");\n      evt.name = name;\n      evt.next = next;\n      this.dispatchEvent(evt);\n    } // did the animation get changed in the event stack?:\n\n\n    let changed = this._animation != animation || this._currentFrame != frame; // if the animation hasn't changed, but the sprite was paused, then we want to stick to the last frame:\n\n    if (!changed && !paused && this.paused) {\n      this.currentAnimationFrame = end;\n      changed = true;\n    }\n\n    return changed;\n  }\n  /**\n   * Moves the playhead to the specified frame number or animation.\n   * @param {String | Number} frameOrAnimation The frame number or animation that the playhead should move to.\n   * @param {Number} [frame=0] The frame of the animation to go to. Defaults to 0.\n   * @protected\n   */\n\n\n  _goto(frameOrAnimation, frame = 0) {\n    this.currentAnimationFrame = 0;\n\n    if (isNaN(frameOrAnimation)) {\n      let data = this.spriteSheet.getAnimation(frameOrAnimation);\n\n      if (data) {\n        this._animation = data;\n        this.currentAnimation = frameOrAnimation;\n\n        this._normalizeFrame(frame);\n      }\n    } else {\n      this.currentAnimation = this._animation = null;\n      this._currentFrame = frameOrAnimation;\n\n      this._normalizeFrame();\n    }\n  }\n\n}\n/**\n * Dispatched when an animation reaches its ends.\n * @event easeljs.Sprite#animationend\n * @property {Object} target The object that dispatched the event.\n * @property {String} type The event type.\n * @property {String} name The name of the animation that just ended.\n * @property {String} next The name of the next animation that will be played, or null. This will be the same as name if the animation is looping.\n * @since 0.6.0\n */\n\n/**\n * Dispatched any time the current frame changes. For example, this could be due to automatic advancement on a tick,\n * or calling gotoAndPlay() or gotoAndStop().\n * @event easeljs.Sprite#change\n * @property {Object} target The object that dispatched the event.\n * @property {String} type The event type.\n */\n\n/**\n * @license BitmapText\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * Displays text using bitmap glyphs defined in a sprite sheet. Multi-line text is supported using new line characters,\n * but automatic wrapping is not supported. See the {@link easeljs.BitmapText#spriteSheet} property for more information on defining glyphs.\n *\n * <strong>Important:</strong> While BitmapText extends Container, it is not designed to be used as one.\n * As such, methods like addChild and removeChild are disabled.\n *\n * @memberof easeljs\n * @extends easeljs.Container\n *\n * @param {String} [text=\"\"] The text to display.\n * @param {SpriteSheet} [spriteSheet=null] The spritesheet that defines the character glyphs.\n */\n\nclass BitmapText extends Container {\n  constructor(text = \"\", spriteSheet = null) {\n    super();\n    /**\n     * The text to display.\n     * @type {String}\n     * @default \"\"\n     */\n\n    this.text = text;\n    /**\n     * A SpriteSheet instance that defines the glyphs for this bitmap text. Each glyph/character\n     * should have a single frame animation defined in the sprite sheet named the same as\n     * corresponding character.\n     *\n     * @example\n     * // the following animation definition would indicate that the frame at index 0 of the spritesheet should be drawn for the \"A\" character.\n     * \"A\": {frames: [0]}\n     * // The short form is also acceptable:\n     * \"A\": 0\n     *\n     * Note that if a character in the text is not found in the sprite sheet, it will also\n     * try to use the alternate case (upper or lower).\n     *\n     * @see {@link easeljs.SpriteSheet}\n     * @type {easeljs.SpriteSheet}\n     * @default null\n     */\n\n    this.spriteSheet = spriteSheet;\n    /**\n     * The height of each line of text. If 0, then it will use a line height calculated\n     * by checking for the height of the \"1\", \"T\", or \"L\" character (in that order). If\n     * those characters are not defined, it will use the height of the first frame of the\n     * sprite sheet.\n     * @type {Number}\n     * @default 0\n     */\n\n    this.lineHeight = 0;\n    /**\n     * This spacing (in pixels) will be added after each character in the output.\n     * @type {Number}\n     * @default 0\n     */\n\n    this.letterSpacing = 0;\n    /**\n     * If a space character is not defined in the sprite sheet, then empty pixels equal to\n     * spaceWidth will be inserted instead. If 0, then it will use a value calculated\n     * by checking for the width of the \"1\", \"l\", \"E\", or \"A\" character (in that order). If\n     * those characters are not defined, it will use the width of the first frame of the\n     * sprite sheet.\n     * @type {Number}\n     * @default 0\n     */\n\n    this.spaceWidth = 0;\n    /**\n    * @type {Object}\n    * @protected\n    */\n\n    this._oldProps = {\n      text: 0,\n      spriteSheet: 0,\n      lineHeight: 0,\n      letterSpacing: 0,\n      spaceWidth: 0\n    };\n    /**\n     * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n     * @type {easeljs.Stage}\n     * @protected\n     */\n\n    this._oldStage = null;\n    /**\n     * The event listener proxy triggered drawing draw for special circumstances.\n     * @type {Function}\n     * @protected\n     */\n\n    this._drawAction = null;\n  }\n\n  draw(ctx, ignoreCache) {\n    if (this.drawCache(ctx, ignoreCache)) {\n      return;\n    }\n\n    this._updateState();\n\n    super.draw(ctx, ignoreCache);\n  }\n\n  getBounds() {\n    this._updateText();\n\n    return super.getBounds();\n  }\n\n  isVisible() {\n    let hasContent = this.cacheCanvas || this.spriteSheet && this.spriteSheet.complete && this.text;\n    return !!(this.visible && this.alpha > 0 && this.scaleX !== 0 && this.scaleY !== 0 && hasContent);\n  }\n\n  clone() {\n    return this._cloneProps(new BitmapText(this.text, this.spriteSheet));\n  }\n  /**\n   * <strong>Disabled in BitmapText.</strong>\n   */\n\n\n  addChild() {}\n  /**\n   * <strong>Disabled in BitmapText.</strong>\n   */\n\n\n  addChildAt() {}\n  /**\n   * <strong>Disabled in BitmapText.</strong>\n   */\n\n\n  removeChild() {}\n  /**\n   * <strong>Disabled in BitmapText.</strong>\n   */\n\n\n  removeChildAt() {}\n  /**\n   * <strong>Disabled in BitmapText.</strong>\n   */\n\n\n  removeAllChildren() {}\n\n  _updateState() {\n    this._updateText();\n  }\n  /**\n  * @param {easeljs.BitmapText} o\n  * @return {easeljs.BitmapText}\n  * @protected\n  */\n\n\n  _cloneProps(o) {\n    super._cloneProps(o);\n\n    o.lineHeight = this.lineHeight;\n    o.letterSpacing = this.letterSpacing;\n    o.spaceWidth = this.spaceWidth;\n    return o;\n  }\n  /**\n   * @param {String} character\n   * @param {easeljs.SpriteSheet} spriteSheet\n   * @return {Number}\n   * @protected\n   */\n\n\n  _getFrameIndex(character, spriteSheet) {\n    let c,\n        o = spriteSheet.getAnimation(character);\n\n    if (!o) {\n      character != (c = character.toUpperCase()) || character != (c = character.toLowerCase()) || (c = null);\n\n      if (c) {\n        o = spriteSheet.getAnimation(c);\n      }\n    }\n\n    return o && o.frames[0];\n  }\n  /**\n   * @param {String} character\n   * @param {easeljs.SpriteSheet} spriteSheet\n   * @return {Object}\n   * @protected\n   */\n\n\n  _getFrame(character, spriteSheet) {\n    let index = this._getFrameIndex(character, spriteSheet);\n\n    return index == null ? index : spriteSheet.getFrame(index);\n  }\n  /**\n   * @param {easeljs.SpriteSheet} ss\n   * @return {Number}\n   * @protected\n   */\n\n\n  _getLineHeight(ss) {\n    let frame = this._getFrame(\"1\", ss) || this._getFrame(\"T\", ss) || this._getFrame(\"L\", ss) || ss.getFrame(0);\n    return frame ? frame.rect.height : 1;\n  }\n  /**\n   * @param {easeljs.SpriteSheet} ss\n   * @return {Number}\n   * @protected\n   */\n\n\n  _getSpaceWidth(ss) {\n    let frame = this._getFrame(\"1\", ss) || this._getFrame(\"l\", ss) || this._getFrame(\"e\", ss) || this._getFrame(\"a\", ss) || ss.getFrame(0);\n    return frame ? frame.rect.width : 1;\n  }\n\n  _tick(evtObj) {\n    let stage = this.stage;\n    stage && stage.on(\"drawstart\", this._updateText, this, true);\n\n    super._tick(evtObj);\n  }\n  /**\n   * @protected\n   */\n\n\n  _updateText() {\n    let x = 0,\n        y = 0,\n        o = this._oldProps,\n        change = false,\n        spaceW = this.spaceWidth,\n        lineH = this.lineHeight,\n        ss = this.spriteSheet;\n    let pool = BitmapText._spritePool,\n        kids = this.children,\n        childIndex = 0,\n        numKids = kids.length,\n        sprite;\n\n    for (let n in o) {\n      if (o[n] != this[n]) {\n        o[n] = this[n];\n        change = true;\n      }\n    }\n\n    if (!change) {\n      return;\n    }\n\n    let hasSpace = !!this._getFrame(\" \", ss);\n\n    if (!hasSpace && !spaceW) {\n      spaceW = this._getSpaceWidth(ss);\n    }\n\n    if (!lineH) {\n      lineH = this._getLineHeight(ss);\n    }\n\n    for (let i = 0, l = this.text.length; i < l; i++) {\n      let character = this.text.charAt(i);\n\n      if (character === \" \" && !hasSpace) {\n        x += spaceW;\n        continue;\n      } else if (character === \"\\n\" || character === \"\\r\") {\n        if (character === \"\\r\" && this.text.charAt(i + 1) === \"\\n\") {\n          i++;\n        } // crlf\n\n\n        x = 0;\n        y += lineH;\n        continue;\n      }\n\n      let index = this._getFrameIndex(character, ss);\n\n      if (index == null) {\n        continue;\n      }\n\n      if (childIndex < numKids) {\n        sprite = kids[childIndex];\n      } else {\n        kids.push(sprite = pool.length ? pool.pop() : new Sprite());\n        sprite.parent = this;\n        numKids++;\n      }\n\n      sprite.spriteSheet = ss;\n      sprite.gotoAndStop(index);\n      sprite.x = x;\n      sprite.y = y;\n      childIndex++;\n      x += sprite.getBounds().width + this.letterSpacing;\n    }\n\n    while (numKids > childIndex) {\n      // faster than removeChild.\n      pool.push(sprite = kids.pop());\n      sprite.parent = null;\n      numKids--;\n    }\n\n    if (pool.length > BitmapText.maxPoolSize) {\n      pool.length = BitmapText.maxPoolSize;\n    }\n  }\n\n}\n/**\n * BitmapText uses Sprite instances to draw text. To reduce the creation and destruction of instances (and thus garbage collection), it maintains\n * an internal object pool of sprite instances to reuse. Increasing this value can cause more sprites to be\n * retained, slightly increasing memory use, but reducing instantiation.\n * @type {Number}\n * @static\n * @default 100\n */\n\nBitmapText.maxPoolSize = 100;\n/**\n * Sprite object pool.\n * @type {Array}\n * @static\n * @private\n * @readonly\n */\n\nBitmapText._spritePool = [];\n\n/**\n * @license DOMElement\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * <b>This class is still experimental, and more advanced use is likely to be buggy. Please report bugs.</b>\n *\n * A DOMElement allows you to associate a HTMLElement with the display list. It will be transformed\n * within the DOM as though it is child of the {{#crossLink \"Container\"}}{{/crossLink}} it is added to. However, it is\n * not rendered to canvas, and as such will retain whatever z-index it has relative to the canvas (ie. it will be\n * drawn in front of or behind the canvas).\n *\n * The position of a DOMElement is relative to their parent node in the DOM. It is recommended that\n * the DOM Object be added to a div that also contains the canvas so that they share the same position\n * on the page.\n *\n * DOMElement is useful for positioning HTML elements over top of canvas content, and for elements\n * that you want to display outside the bounds of the canvas. For example, a tooltip with rich HTML\n * content.\n *\n * <h4>Mouse Interaction</h4>\n *\n * DOMElement instances are not full EaselJS display objects, and do not participate in EaselJS mouse\n * events or support methods like hitTest. To get mouse events from a DOMElement, you must instead add handlers to\n * the htmlElement (note, this does not support EventDispatcher)\n *\n *      var domElement = new createjs.DOMElement(htmlElement);\n *      domElement.htmlElement.onclick = function() {\n *          console.log(\"clicked\");\n *      }\n *\n * <strong>Important:</strong> This class needs to be notified it is about to be drawn, this will happen automatically\n * if you call stage.update, calling stage.draw or disabling tickEnabled will miss important steps and it will render\n * stale information.\n *\n * @memberof easeljs\n * @extends DisplayObject\n * @param {HTMLElement | String} htmlElement A reference or id for the DOM element to manage.\n */\n\nclass DOMElement extends DisplayObject {\n  constructor(htmlElement) {\n    super();\n\n    if (typeof htmlElement === \"string\") {\n      htmlElement = document.getElementById(htmlElement);\n    }\n\n    this.mouseEnabled = false;\n    let style = htmlElement.style;\n    style.position = \"absolute\";\n    style.transformOrigin = style.WebkitTransformOrigin = style.msTransformOrigin = style.MozTransformOrigin = style.OTransformOrigin = \"0% 0%\";\n    /**\n     * The DOM object to manage.\n     * @type {HTMLElement}\n     */\n\n    this.htmlElement = htmlElement;\n    /**\n     * @type {easeljs.Matrix2D}\n     * @default null\n     * @protected\n     */\n\n    this._oldProps = null;\n    /**\n     * Used to track the object which this class attached listeners to, helps optimize listener attachment.\n     * @type {easeljs.Stage}\n     * @default null\n     * @protected\n     */\n\n    this._oldStage = null;\n    /**\n     * The event listener proxy triggered drawing draw for special circumstances.\n     * @type {Function}\n     * @default null\n     * @protected\n     */\n\n    this._drawAction = null;\n  }\n\n  isVisible() {\n    return this.htmlElement != null;\n  }\n\n  draw(ctx, ignoreCache) {\n    // this relies on the _tick method because draw isn't called if the parent is not visible.\n    // the actual update happens in _handleDrawEnd\n    return true;\n  }\n  /**\n   * Disabled in DOMElement.\n   */\n\n\n  cache() {}\n  /**\n   * Disabled in DOMElement.\n   */\n\n\n  uncache() {}\n  /**\n   * Disabled in DOMElement.\n   */\n\n\n  updateCache() {}\n  /**\n   * Disabled in DOMElement.\n   */\n\n\n  hitTest() {}\n  /**\n   * Disabled in DOMElement.\n   */\n\n\n  localToGlobal() {}\n  /**\n   * Disabled in DOMElement.\n   */\n\n\n  globalToLocal() {}\n  /**\n   * Disabled in DOMElement.\n   */\n\n\n  localToLocal() {}\n  /**\n   * DOMElement cannot be cloned.\n   * @throws DOMElement cannot be cloned\n   */\n\n\n  clone() {\n    throw \"DOMElement cannot be cloned.\";\n  }\n\n  _tick(evtObj) {\n    let stage = this.stage;\n\n    if (stage != null && stage !== this._oldStage) {\n      this._drawAction && stage.off(\"drawend\", this._drawAction);\n      this._drawAction = stage.on(\"drawend\", this._handleDrawEnd, this);\n      this._oldStage = stage;\n    }\n\n    super._tick(evtObj);\n  }\n  /**\n   * @param {core.Event} evt\n   * @protected\n   */\n\n\n  _handleDrawEnd(evt) {\n    let o = this.htmlElement;\n\n    if (!o) {\n      return;\n    }\n\n    let style = o.style;\n    let props = this.getConcatenatedDisplayProps(this._props),\n        mtx = props.matrix;\n    let visibility = props.visible ? \"visible\" : \"hidden\";\n\n    if (visibility != style.visibility) {\n      style.visibility = visibility;\n    }\n\n    if (!props.visible) {\n      return;\n    }\n\n    let oldProps = this._oldProps,\n        oldMtx = oldProps && oldProps.matrix;\n    let n = 10000; // precision\n\n    if (!oldMtx || !oldMtx.equals(mtx)) {\n      let str = \"matrix(\" + (mtx.a * n | 0) / n + \",\" + (mtx.b * n | 0) / n + \",\" + (mtx.c * n | 0) / n + \",\" + (mtx.d * n | 0) / n + \",\" + (mtx.tx + 0.5 | 0);\n      style.transform = style.WebkitTransform = style.OTransform = style.msTransform = str + \",\" + (mtx.ty + 0.5 | 0) + \")\";\n      style.MozTransform = str + \"px,\" + (mtx.ty + 0.5 | 0) + \"px)\";\n\n      if (!oldProps) {\n        oldProps = this._oldProps = new DisplayProps(true, null);\n      }\n\n      oldProps.matrix.copy(mtx);\n    }\n\n    if (oldProps.alpha != props.alpha) {\n      style.opacity = \"\" + (props.alpha * n | 0) / n;\n      oldProps.alpha = props.alpha;\n    }\n  }\n\n}\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event easeljs.DOMElement#click\n */\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event easeljs.DOMElement#dblClick\n */\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event easeljs.DOMElement#mousedown\n */\n\n/**\n * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n * @event easeljs.DOMElement#mouseover\n */\n\n/**\n * Disabled in DOMElement.\n * @event easeljs.DOMElement#tick\n */\n\n/**\n * @license Graphics\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * The Graphics class exposes an easy to use API for generating vector drawing instructions and drawing them to a\n * specified context. Note that you can use Graphics without any dependency on the EaselJS framework by calling {@link easeljs.Graphics#draw}\n * directly, or it can be used with the {@link easeljs.Shape} object to draw vector graphics within the\n * context of an EaselJS display list.\n *\n * There are two approaches to working with Graphics object: calling methods on a Graphics instance (the \"Graphics API\"), or\n * instantiating Graphics command objects and adding them to the graphics queue via {@link easeljs.Graphics#append}.\n * The former abstracts the latter, simplifying beginning and ending paths, fills, and strokes.\n *\n * <h4>Tiny API</h4>\n * The Graphics class also includes a \"tiny API\", which is one or two-letter methods that are shortcuts for all of the\n * Graphics methods. These methods are great for creating compact instructions, and is used by the Toolkit for CreateJS\n * to generate readable code. All tiny methods are marked as protected, so you can view them by enabling protected\n * descriptions in the docs.\n *\n * <table>\n *     <tr><td><b>Tiny</b></td><td><b>Method</b></td><td><b>Tiny</b></td><td><b>Method</b></td></tr>\n *     <tr><td>mt</td><td>{@link easeljs.Graphics#moveTo}</td>\n *     <td>lt</td> <td>{@link easeljs.Graphics#lineTo}</td></tr>\n *     <tr><td>a/at</td><td>{@link easeljs.Graphics#arc} / {@link easeljs.Graphics#arcTo}</td>\n *     <td>bt</td><td>{@link easeljs.Graphics#bezierCurveTo}</td></tr>\n *     <tr><td>qt</td><td>{@link easeljs.Graphics#quadraticCurveTo} (also curveTo)</td>\n *     <td>r</td><td>{@link easeljs.Graphics#rect}</td></tr>\n *     <tr><td>cp</td><td>{@link easeljs.Graphics#closePath}</td>\n *     <td>c</td><td>{@link easeljs.Graphics#clear}</td></tr>\n *     <tr><td>f</td><td>{@link easeljs.Graphics#beginFill}</td>\n *     <td>lf</td><td>{@link easeljs.Graphics#beginLinearGradientFill}</td></tr>\n *     <tr><td>rf</td><td>{@link easeljs.Graphics#beginRadialGradientFill}</td>\n *     <td>bf</td><td>{@link easeljs.Graphics#beginBitmapFill}</td></tr>\n *     <tr><td>ef</td><td>{@link easeljs.Graphics#endFill}</td>\n *     <td>ss / sd</td><td>{@link easeljs.Graphics#setStrokeStyle} / {@link easeljs.Graphics#setStrokeDash}</td></tr>\n *     <tr><td>s</td><td>{@link easeljs.Graphics#beginStroke}</td>\n *     <td>ls</td><td>{@link easeljs.Graphics#beginLinearGradientStroke}</td></tr>\n *     <tr><td>rs</td><td>{@link easeljs.Graphics#beginRadialGradientStroke}</td>\n *     <td>bs</td><td>{@link easeljs.Graphics#beginBitmapStroke}</td></tr>\n *     <tr><td>es</td><td>{@link easeljs.Graphics#endStroke}</td>\n *     <td>dr</td><td>{@link easeljs.Graphics#drawRect}</td></tr>\n *     <tr><td>rr</td><td>{@link easeljs.Graphics#drawRoundRect}</td>\n *     <td>rc</td><td>{@link easeljs.Graphics#drawRoundRectComplex}</td></tr>\n *     <tr><td>dc</td><td>{@link easeljs.Graphics#drawCircle}</td>\n *     <td>de</td><td>{@link easeljs.Graphics#drawEllipse}</td></tr>\n *     <tr><td>dp</td><td>{@link easeljs.Graphics#drawPolyStar}</td>\n *     <td>p</td><td>{@link easeljs.Graphics#decodePath}</td></tr>\n * </table>\n *\n * @example\n * var g = new createjs.Graphics();\n * g.setStrokeStyle(1);\n * g.beginStroke(\"#000000\");\n * g.beginFill(\"red\");\n * g.drawCircle(0,0,30);\n *\n * @example\n * // All drawing methods in Graphics return the Graphics instance, so they can be chained together.\n * graphics.beginStroke(\"red\").beginFill(\"blue\").drawRect(20, 20, 100, 50);\n *\n * @example\n * // Each graphics API call generates a command object (see below). The last command to be created can be accessed via .command\n * let fillCommand = graphics.beginFill(\"red\").command;\n * fillCommand.style = \"blue\";\n * // or change it to a bitmap fill:\n * fillCommand.bitmap(img);\n *\n * @example\n * // For more direct control of rendering, you can instantiate and append command objects to the graphics queue directly.\n * // In this case, you need to manage path creation manually, and ensure that fill/stroke is applied to a defined path:\n *\n * // start a new path. Graphics.beginCmd is a reusable BeginPath instance:\n * graphics.append(Graphics.beginCmd);\n * // we need to define the path before applying the fill:\n * let circle = new Graphics.Circle(0,0,30);\n * graphics.append(circle);\n * // fill the path we just defined:\n * let fill = new Graphics.Fill(\"red\");\n * graphics.append(fill);\n *\n * // These approaches can be used together, for example to insert a custom command:\n * graphics.beginFill(\"red\");\n * let customCommand = new CustomSpiralCommand(etc);\n * graphics.append(customCommand);\n * graphics.beginFill(\"blue\");\n * graphics.drawCircle(0, 0, 30);\n *\n * @example <caption>Using the Tiny API</caption>\n * graphics.s(\"red\").f(\"blue\").r(20, 20, 100, 50);\n *\n * @see {@link easeljs.Graphics#append}\n * @memberof easeljs\n */\n\nclass Graphics {\n  constructor() {\n    /**\n     * Holds a reference to the last command that was created or appended. For example, you could retain a reference\n     * to a Fill command in order to dynamically update the color later by using:\n     *\n     * @example\n     * let fill = graphics.beginFill(\"red\").command;\n     * // update color later:\n     * fill.style = \"yellow\";\n     *\n     * @type {Object}\n     * @default null\n     */\n    this.command = null; // private properties\n\n    /**\n     * @protected\n     * @type {easeljs.Graphics.Stroke}\n     */\n\n    this._stroke = null;\n    /**\n     * @protected\n     * @type {easeljs.Graphics.StrokeStyle}\n     */\n\n    this._strokeStyle = null;\n    /**\n     * @protected\n     * @type {easeljs.Graphics.StrokeStyle}\n     */\n\n    this._oldStrokeStyle = null;\n    /**\n     * @protected\n     * @type {easeljs.Graphics.StrokeDash}\n     */\n\n    this._strokeDash = null;\n    /**\n     * @protected\n     * @type {easeljs.Graphics.StrokeDash}\n     */\n\n    this._oldStrokeDash = null;\n    /**\n     * @protected\n     * @type {easeljs.Graphics.Fill}\n     */\n\n    this._fill = null;\n    /**\n     * @protected\n     * @type {Boolean}\n     */\n\n    this._strokeIgnoreScale = false;\n    /**\n     * Indicates the last instruction index that was committed.\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n\n    this._commitIndex = 0;\n    /**\n     * @protected\n     * @type {Array}\n     */\n\n    this._instructions = [];\n    /**\n     * Uncommitted instructions.\n     * @protected\n     * @type {Array}\n     */\n\n    this._activeInstructions = [];\n    /**\n     * This indicates that there have been changes to the activeInstruction list since the last updateInstructions call.\n     * @protected\n     * @type {Boolean}\n     * @default false\n     */\n\n    this._dirty = false;\n    /**\n     * Index to draw from if a store operation has happened.\n     * @protected\n     * @type {Number}\n     * @default 0\n     */\n\n    this._storeIndex = 0;\n    /**\n     * Maps the familiar ActionScript `curveTo()` method to the functionally similar {@link easeljs.Graphics#quadraticCurveTo} method.\n     * @param {Number} cpx\n     * @param {Number} cpy\n     * @param {Number} x\n     * @param {Number} y\n     * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n     * @chainable\n     */\n\n    this.curveTo = this.quadraticCurveTo;\n    /**\n     * Maps the familiar ActionScript `drawRect()` method to the functionally similar {@link easeljs.Graphics#rect} method.\n     * @param {Number} x\n     * @param {Number} y\n     * @param {Number} w Width of the rectangle\n     * @param {Number} h Height of the rectangle\n     * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n     * @chainable\n     */\n\n    this.drawRect = this.rect; // tiny api\n\n    this.mt = this.moveTo;\n    this.lt = this.lineTo;\n    this.at = this.arcTo;\n    this.bt = this.bezierCurveTo;\n    this.qt = this.quadraticCurveTo;\n    this.a = this.arc;\n    this.r = this.rect;\n    this.cp = this.closePath;\n    this.c = this.clear;\n    this.f = this.beginFill;\n    this.lf = this.beginLinearGradientFill;\n    this.rf = this.beginRadialGradientFill;\n    this.bf = this.beginBitmapFill;\n    this.ef = this.endFill;\n    this.ss = this.setStrokeStyle;\n    this.sd = this.setStrokeDash;\n    this.s = this.beginStroke;\n    this.ls = this.beginLinearGradientStroke;\n    this.rs = this.beginRadialGradientStroke;\n    this.bs = this.beginBitmapStroke;\n    this.es = this.endStroke;\n    this.dr = this.drawRect;\n    this.rr = this.drawRoundRect;\n    this.rc = this.drawRoundRectComplex;\n    this.dc = this.drawCircle;\n    this.de = this.drawEllipse;\n    this.dp = this.drawPolyStar;\n    this.p = this.decodePath;\n    this.clear();\n  }\n  /**\n   * Returns a CSS compatible color string based on the specified RGB numeric color values in the format\n   * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n   * It also supports passing a single hex color value as the first param, and an optional alpha value as the second\n   * param.\n   *\n   * @example\n   * Graphics.getRGB(50, 100, 150, 0.5); // rgba(50,100,150,0.5)\n   * Graphics.getRGB(0xFF00FF, 0.2); // rgba(255,0,255,0.2)\n   *\n   * @static\n   * @param {Number} r The red component for the color, between 0 and 0xFF (255).\n   * @param {Number} g The green component for the color, between 0 and 0xFF (255).\n   * @param {Number} b The blue component for the color, between 0 and 0xFF (255).\n   * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n   * @return {String} A CSS compatible color string based on the specified RGB numeric color values in the format\n   * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n   */\n\n\n  static getRGB(r, g, b, alpha) {\n    if (r != null && b == null) {\n      alpha = g;\n      b = r & 0xFF;\n      g = r >> 8 & 0xFF;\n      r = r >> 16 & 0xFF;\n    }\n\n    if (alpha == null) {\n      return `rgb(${r},${g},${b})`;\n    } else {\n      return `rgba(${r},${g},${b},${alpha})`;\n    }\n  }\n  /**\n   * Returns a CSS compatible color string based on the specified HSL numeric color values in the format \"hsla(360,100,100,1.0)\",\n   * or if alpha is null then in the format \"hsl(360,100,100)\".\n   *\n   * @example\n   * Graphics.getHSL(150, 100, 70); // hsl(150,100,70)\n   *\n   * @static\n   * @param {Number} hue The hue component for the color, between 0 and 360.\n   * @param {Number} saturation The saturation component for the color, between 0 and 100.\n   * @param {Number} lightness The lightness component for the color, between 0 and 100.\n   * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n   * @return {String} A CSS compatible color string based on the specified HSL numeric color values in the format\n   * \"hsla(360,100,100,1.0)\", or if alpha is null then in the format \"hsl(360,100,100)\".\n   */\n\n\n  static getHSL(hue, saturation, lightness, alpha) {\n    if (alpha == null) {\n      return `hsl(${hue % 360},${saturation}%,${lightness}%)`;\n    } else {\n      return `hsl(${hue % 360},${saturation}%,${lightness}%,${alpha})`;\n    }\n  }\n  /**\n   * Returns the graphics instructions array. Each entry is a graphics command object (ex. Graphics.Fill, Graphics.Rect)\n   * Modifying the returned array directly is not recommended, and is likely to result in unexpected behaviour.\n   *\n   * This property is mainly intended for introspection of the instructions (ex. for graphics export).\n   * @type {Array}\n   * @readonly\n   */\n\n\n  get instructions() {\n    this._updateInstructions();\n\n    return this._instructions;\n  }\n  /**\n   * Returns true if this Graphics instance has no drawing commands.\n   * @return {Boolean} Returns true if this Graphics instance has no drawing commands.\n   */\n\n\n  isEmpty() {\n    return !(this._instructions.length || this._activeInstructions.length);\n  }\n  /**\n   * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n   * Returns true if the draw was handled (useful for overriding functionality).\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   *\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   * @param {Object} data Optional data that is passed to graphics command exec methods. When called from a Shape instance, the shape passes itself as the data parameter. This can be used by custom graphic commands to insert contextual data.\n   */\n\n\n  draw(ctx, data) {\n    this._updateInstructions();\n\n    let instr = this._instructions;\n    const l = instr.length;\n\n    for (let i = this._storeIndex; i < l; i++) {\n      instr[i].exec(ctx, data);\n    }\n  }\n  /**\n   * Draws only the path described for this Graphics instance, skipping any non-path instructions, including fill and\n   * stroke descriptions. Used for `DisplayObject.mask` to draw the clipping path, for example.\n   *\n   * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n   *\n   * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n   */\n\n\n  drawAsPath(ctx) {\n    this._updateInstructions();\n\n    let instr,\n        instrs = this._instructions;\n    const l = instrs.length;\n\n    for (let i = this._storeIndex; i < l; i++) {\n      // the first command is always a beginPath command.\n      if ((instr = instrs[i]).path !== false) {\n        instr.exec(ctx);\n      }\n    }\n  }\n  /**\n   * Moves the drawing point to the specified position.\n   * A tiny API method \"mt\" also exists.\n   * @param {Number} x The x coordinate the drawing point should move to.\n   * @param {Number} y The y coordinate the drawing point should move to.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls).\n   * @chainable\n   */\n\n\n  moveTo(x, y) {\n    return this.append(new MoveTo(x, y), true);\n  }\n  /**\n   * Draws a line from the current drawing point to the specified position, which become the new current drawing\n   * point. Note that you *must* call {@link easeljs.Graphics#moveTo} before the first `lineTo()`.\n   * A tiny API method \"lt\" also exists.\n   * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#complex-shapes-(paths) \"WHATWG spec\"}\n   * @param {Number} x The x coordinate the drawing point should draw to.\n   * @param {Number} y The y coordinate the drawing point should draw to.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  lineTo(x, y) {\n    return this.append(new LineTo(x, y));\n  }\n  /**\n   * Draws an arc with the specified control points and radius.\n   * A tiny API method \"at\" also exists.\n   * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arcto \"WHATWG spec\"}\n   * @param {Number} x1\n   * @param {Number} y1\n   * @param {Number} x2\n   * @param {Number} y2\n   * @param {Number} radius\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  arcTo(x1, y1, x2, y2, radius) {\n    return this.append(new ArcTo(x1, y1, x2, y2, radius));\n  }\n  /**\n   * Draws an arc defined by the radius, startAngle and endAngle arguments, centered at the position (x, y).\n   * A tiny API method \"a\" also exists.\n   *\n   * @example\n   * // draw a full circle with a radius of 20 centered at (100, 100)\n   * arc(100, 100, 20, 0, Math.PI*2);\n   *\n   * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arc \"WHATWG spec\"}\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} radius\n   * @param {Number} startAngle Measured in radians.\n   * @param {Number} endAngle Measured in radians.\n   * @param {Boolean} anticlockwise\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  arc(x, y, radius, startAngle, endAngle, anticlockwise) {\n    return this.append(new Arc(x, y, radius, startAngle, endAngle, anticlockwise));\n  }\n  /**\n   * Draws a quadratic curve from the current drawing point to (x, y) using the control point (cpx, cpy).\n   * A tiny API method \"qt\" also exists.\n   * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-quadraticcurveto \"WHATWG spec\"}\n   * @param {Number} cpx\n   * @param {Number} cpy\n   * @param {Number} x\n   * @param {Number} y\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  quadraticCurveTo(cpx, cpy, x, y) {\n    return this.append(new QuadraticCurveTo(cpx, cpy, x, y));\n  }\n  /**\n   * Draws a bezier curve from the current drawing point to (x, y) using the control points (cp1x, cp1y) and (cp2x, cp2y).\n   * A tiny API method \"bt\" also exists.\n   * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-beziercurveto \"WHATWG spec\"}\n   * @param {Number} cp1x\n   * @param {Number} cp1y\n   * @param {Number} cp2x\n   * @param {Number} cp2y\n   * @param {Number} x\n   * @param {Number} y\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n    return this.append(new BezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y));\n  }\n  /**\n   * Draws a rectangle at (x, y) with the specified width and height using the current fill and/or stroke.\n   * A tiny API method \"r\" also exists.\n   * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-rect \"WHATWG spec\"}\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w Width of the rectangle\n   * @param {Number} h Height of the rectangle\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  rect(x, y, w, h) {\n    return this.append(new Rect(x, y, w, h));\n  }\n  /**\n   * Closes the current path, effectively drawing a line from the current drawing point to the first drawing point specified\n   * since the fill or stroke was last set.\n   * A tiny API method \"cp\" also exists.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  closePath() {\n    return this._activeInstructions.length ? this.append(new ClosePath()) : this;\n  }\n  /**\n   * Clears all drawing instructions, effectively resetting this Graphics instance. Any line and fill styles will need\n   * to be redefined to draw shapes following a clear call.\n   * A tiny API method \"c\" also exists.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  clear() {\n    this._instructions.length = this._activeInstructions.length = this._commitIndex = 0;\n    this._strokeStyle = this._oldStrokeStyle = this._stroke = this._fill = this._strokeDash = this._oldStrokeDash = null;\n    this._dirty = this._strokeIgnoreScale = false;\n    return this;\n  }\n  /**\n   * Begins a fill with the specified color. This ends the current sub-path.\n   * A tiny API method \"f\" also exists.\n   * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n   * null will result in no fill.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  beginFill(color) {\n    return this._setFill(color ? new Fill(color) : null);\n  }\n  /**\n   * Begins a linear gradient fill defined by the line (x0, y0) to (x1, y1).\n   * A tiny API method \"lf\" also exists.\n   *\n   * @example <caption>Define a black to white vertical gradient ranging from 20px to 120px, and draw a square to display it</caption>\n   * graphics.beginLinearGradientFill([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n   *\n   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n   * drawing from red to blue.\n   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n   * the first color to 10% then interpolating to the second color at 90%.\n   * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n   * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  beginLinearGradientFill(colors, ratios, x0, y0, x1, y1) {\n    return this._setFill(new Fill().linearGradient(colors, ratios, x0, y0, x1, y1));\n  }\n  /**\n   * Begins a radial gradient fill. This ends the current sub-path.\n   * A tiny API method \"rf\" also exists.\n   *\n   * @example <caption>Define a red to blue radial gradient centered at (100, 100), with a radius of 50, and draw a circle to display it</caption>\n   * graphics.beginRadialGradientFill([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50).drawCircle(100, 100, 50);\n   *\n   * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n   * a gradient drawing from red to blue.\n   * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n   * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n   * @param {Number} x0 Center position of the inner circle that defines the gradient.\n   * @param {Number} y0 Center position of the inner circle that defines the gradient.\n   * @param {Number} r0 Radius of the inner circle that defines the gradient.\n   * @param {Number} x1 Center position of the outer circle that defines the gradient.\n   * @param {Number} y1 Center position of the outer circle that defines the gradient.\n   * @param {Number} r1 Radius of the outer circle that defines the gradient.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  beginRadialGradientFill(colors, ratios, x0, y0, r0, x1, y1, r1) {\n    return this._setFill(new Fill().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n  }\n  /**\n   * Begins a pattern fill using the specified image. This ends the current sub-path.\n   * A tiny API method \"bf\" also exists.\n   * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n   * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n   * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n   * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n   * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n   * @param {easeljs.Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n   * will be applied relative to the parent transform.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  beginBitmapFill(image, repetition, matrix) {\n    return this._setFill(new Fill(null, matrix).bitmap(image, repetition));\n  }\n  /**\n   * Ends the current sub-path, and begins a new one with no fill. Functionally identical to `beginFill(null)`.\n   * A tiny API method \"ef\" also exists.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  endFill() {\n    return this.beginFill();\n  }\n  /**\n   * Sets the stroke style.\n   * A tiny API method \"ss\" also exists.\n   *\n   * @example\n   * graphics.setStrokeStyle(8,\"round\").beginStroke(\"#F00\");\n   *\n   * @param {Number} thickness The width of the stroke.\n   * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n   * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n   * the tiny API.\n   * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n   * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n   * for use with the tiny API.\n   * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n   * controls at what point a mitered joint will be clipped.\n   * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n   * of active transformations.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  setStrokeStyle(thickness, caps = 0, joints = 0, miterLimit = 10, ignoreScale = false) {\n    this._updateInstructions(true);\n\n    this._strokeStyle = this.command = new StrokeStyle(thickness, caps, joints, miterLimit, ignoreScale); // ignoreScale lives on Stroke, not StrokeStyle, so we do a little trickery:\n\n    if (this._stroke) {\n      this._stroke.ignoreScale = ignoreScale;\n    }\n\n    this._strokeIgnoreScale = ignoreScale;\n    return this;\n  }\n  /**\n   * Sets or clears the stroke dash pattern.\n   * A tiny API method `sd` also exists.\n   *\n   * @example\n   * graphics.setStrokeDash([20, 10], 0);\n   *\n   * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n   * For example, `[20,10]` would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n   * Passing null or an empty array will clear the existing stroke dash.\n   * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  setStrokeDash(segments, offset = 0) {\n    this._updateInstructions(true);\n\n    this._strokeDash = this.command = new StrokeDash(segments, offset);\n    return this;\n  }\n  /**\n   * Begins a stroke with the specified color. This ends the current sub-path.\n   * A tiny API method \"s\" also exists.\n   *\n   * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n   * null will result in no stroke.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  beginStroke(color) {\n    return this._setStroke(color ? new Stroke(color) : null);\n  }\n  /**\n   * Begins a linear gradient stroke defined by the line (x0, y0) to (x1, y1). This ends the current sub-path.\n   * A tiny API method \"ls\" also exists.\n   *\n   * @example <caption>Define a black to white vertical gradient ranging from 20px to 120px, and draw a square to display it</caption>\n   * graphics.setStrokeStyle(10)\n   *   .beginLinearGradientStroke([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120)\n   *   .drawRect(20, 20, 120, 120);\n   *\n   * @param {Array<String>} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n   * a gradient drawing from red to blue.\n   * @param {Array<Number>} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n   * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n   * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n   * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n   * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  beginLinearGradientStroke(colors, ratios, x0, y0, x1, y1) {\n    return this._setStroke(new Stroke().linearGradient(colors, ratios, x0, y0, x1, y1));\n  }\n  /**\n   * Begins a radial gradient stroke. This ends the current sub-path.\n   * A tiny API method \"rs\" also exists.\n   *\n   * @example <caption>Define a red to blue radial gradient centered at (100, 100), with a radius of 50, and draw a rectangle to display it</caption>\n   * graphics.setStrokeStyle(10)\n   *   .beginRadialGradientStroke([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50)\n   *   .drawRect(50, 90, 150, 110);\n   *\n   * @param {Array<String>} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n   * a gradient drawing from red to blue.\n   * @param {Array<Number>} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n   * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n   * to 100%.\n   * @param {Number} x0 Center position of the inner circle that defines the gradient.\n   * @param {Number} y0 Center position of the inner circle that defines the gradient.\n   * @param {Number} r0 Radius of the inner circle that defines the gradient.\n   * @param {Number} x1 Center position of the outer circle that defines the gradient.\n   * @param {Number} y1 Center position of the outer circle that defines the gradient.\n   * @param {Number} r1 Radius of the outer circle that defines the gradient.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  beginRadialGradientStroke(colors, ratios, x0, y0, r0, x1, y1, r1) {\n    return this._setStroke(new Stroke().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n  }\n  /**\n   * Begins a pattern fill using the specified image. This ends the current sub-path. Note that unlike bitmap fills,\n   * strokes do not currently support a matrix parameter due to limitations in the canvas API.\n   * A tiny API method \"bs\" also exists.\n   *\n   * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n   * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n   * @param {String} [repetition=\"repeat\"] Indicates whether to repeat the image in the fill area. One of\n   * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  beginBitmapStroke(image, repetition = \"repeat\") {\n    // NOTE: matrix is not supported for stroke because transforms on strokes also affect the drawn stroke width.\n    return this._setStroke(new Stroke().bitmap(image, repetition));\n  }\n  /**\n   * Ends the current sub-path, and begins a new one with no stroke. Functionally identical to `beginStroke(null)`.\n   * A tiny API method \"es\" also exists.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  endStroke() {\n    return this.beginStroke();\n  }\n  /**\n   * Draws a rounded rectangle with all corners with the specified radius.\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} w\n   * @param {Number} h\n   * @param {Number} radius Corner radius.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  drawRoundRect(x, y, w, h, radius) {\n    return this.drawRoundRectComplex(x, y, w, h, radius, radius, radius, radius);\n  }\n  /**\n   * Draws a rounded rectangle with different corner radii. Supports positive and negative corner radii.\n   * A tiny API method \"rc\" also exists.\n   * @param {Number} x The horizontal coordinate to draw the round rect.\n   * @param {Number} y The vertical coordinate to draw the round rect.\n   * @param {Number} w The width of the round rect.\n   * @param {Number} h The height of the round rect.\n   * @param {Number} radiusTL Top left corner radius.\n   * @param {Number} radiusTR Top right corner radius.\n   * @param {Number} radiusBR Bottom right corner radius.\n   * @param {Number} radiusBL Bottom left corner radius.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  drawRoundRectComplex(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n    return this.append(new RoundRect(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL));\n  }\n  /**\n   * Draws a circle with the specified radius at (x, y).\n   * A tiny API method \"dc\" also exists.\n   *\n   * @example\n   * let g = new Graphics();\n   * g.setStrokeStyle(1);\n   * g.beginStroke(Graphics.getRGB(0,0,0));\n   * g.beginFill(Graphics.getRGB(255,0,0));\n   * g.drawCircle(0,0,3);\n   * let s = new Shape(g);\n   * s.x = 100;\n   * s.y = 100;\n   * stage.addChild(s);\n   * stage.update();\n   *\n   * @param {Number} x x coordinate center point of circle.\n   * @param {Number} y y coordinate center point of circle.\n   * @param {Number} radius Radius of circle.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  drawCircle(x, y, radius) {\n    return this.append(new Circle(x, y, radius));\n  }\n  /**\n   * Draws an ellipse (oval) with a specified width (w) and height (h). Similar to {@link easels.Graphics#drawCircle},\n   * except the width and height can be different.\n   * A tiny API method \"de\" also exists.\n   * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {@link easels.Graphics#drawCircle}\n   * which draws from center.\n   * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {@link easels.Graphics#drawCircle}\n   * which draws from the center.\n   * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n   * number.\n   * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  drawEllipse(x, y, w, h) {\n    return this.append(new Ellipse(x, y, w, h));\n  }\n  /**\n   * Draws a star if pointSize is greater than 0, or a regular polygon if pointSize is 0 with the specified number of points.\n   * A tiny API method \"dp\" also exists.\n   *\n   * @example <caption>Draw a 5 pointed star shape centered at 100, 100 and with a radius of 50</caption>\n   * graphics.beginFill(\"#FF0\").drawPolyStar(100, 100, 50, 5, 0.6, -90);\n   * // Note: -90 makes the first point vertical\n   *\n   * @param {Number} x Position of the center of the shape.\n   * @param {Number} y Position of the center of the shape.\n   * @param {Number} radius The outer radius of the shape.\n   * @param {Number} sides The number of points on the star or sides on the polygon.\n   * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n   * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n   * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n   * directly to the right of the center.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  drawPolyStar(x, y, radius, sides, pointSize, angle) {\n    return this.append(new PolyStar(x, y, radius, sides, pointSize, angle));\n  }\n  /**\n   * Appends a graphics command object to the graphics queue. Command objects expose an \"exec\" method\n   * that accepts two parameters: the Context2D to operate on, and an arbitrary data object passed into\n   * {@link easeljs.Graphics#draw}. The latter will usually be the Shape instance that called draw.\n   *\n   * This method is used internally by Graphics methods, such as drawCircle, but can also be used directly to insert\n   * built-in or custom graphics commands.\n   *\n   * @example\n   * // attach data to our shape, so we can access it during the draw:\n   * shape.color = \"red\";\n   *\n   * // append a Circle command object:\n   * shape.graphics.append(new Graphics.Circle(50, 50, 30));\n   *\n   * // append a custom command object with an exec method that sets the fill style\n   * // based on the shape's data, and then fills the circle.\n   * shape.graphics.append({\n   *   exec: (ctx, shape) => {\n   *     ctx.fillStyle = shape.color;\n   *     ctx.fill();\n   *   }\n   * });\n   *\n   * @param {Object} command A graphics command object exposing an \"exec\" method.\n   * @param {Boolean} clean The clean param is primarily for internal use. A value of true indicates that a command does not generate a path that should be stroked or filled.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  append(command, clean) {\n    this._activeInstructions.push(command);\n\n    this.command = command;\n\n    if (!clean) {\n      this._dirty = true;\n    }\n\n    return this;\n  }\n  /**\n   * Decodes a compact encoded path string into a series of draw instructions.\n   * This format is not intended to be human readable, and is meant for use by authoring tools.\n   * The format uses a base64 character set, with each character representing 6 bits, to define a series of draw\n   * commands.\n   *\n   * Each command is comprised of a single \"header\" character followed by a variable number of alternating x and y\n   * position values. Reading the header bits from left to right (most to least significant): bits 1 to 3 specify the\n   * type of operation (0-moveTo, 1-lineTo, 2-quadraticCurveTo, 3-bezierCurveTo, 4-closePath, 5-7 unused). Bit 4\n   * indicates whether position values use 12 bits (2 characters) or 18 bits (3 characters), with a one indicating the\n   * latter. Bits 5 and 6 are currently unused.\n   *\n   * Following the header is a series of 0 (closePath), 2 (moveTo, lineTo), 4 (quadraticCurveTo), or 6 (bezierCurveTo)\n   * parameters. These parameters are alternating x/y positions represented by 2 or 3 characters (as indicated by the\n   * 4th bit in the command char). These characters consist of a 1 bit sign (1 is negative, 0 is positive), followed\n   * by an 11 (2 char) or 17 (3 char) bit integer value. All position values are in tenths of a pixel. Except in the\n   * case of move operations which are absolute, this value is a delta from the previous x or y position (as\n   * appropriate).\n   *\n   * For example, the string \"A3cAAMAu4AAA\" represents a line starting at -150,0 and ending at 150,0.\n   * <br />A - bits 000000. First 3 bits (000) indicate a moveTo operation. 4th bit (0) indicates 2 chars per\n   * parameter.\n   * <br />n0 - 110111011100. Absolute x position of -150.0px. First bit indicates a negative value, remaining bits\n   * indicate 1500 tenths of a pixel.\n   * <br />AA - 000000000000. Absolute y position of 0.\n   * <br />I - 001100. First 3 bits (001) indicate a lineTo operation. 4th bit (1) indicates 3 chars per parameter.\n   * <br />Au4 - 000000101110111000. An x delta of 300.0px, which is added to the previous x value of -150.0px to\n   * provide an absolute position of +150.0px.\n   * <br />AAA - 000000000000000000. A y delta value of 0.\n   *\n   * A tiny API method \"p\" also exists.\n   *\n   * @param {String} str The path string to decode.\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  decodePath(str) {\n    let instructions = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath];\n    let paramCount = [2, 2, 4, 6, 0];\n    let i = 0;\n    const l = str.length;\n    let params = [];\n    let x = 0,\n        y = 0;\n    let base64 = Graphics._BASE_64;\n\n    while (i < l) {\n      let c = str.charAt(i);\n      let n = base64[c];\n      let fi = n >> 3; // highest order bits 1-3 code for operation.\n\n      let f = instructions[fi]; // check that we have a valid instruction & that the unused bits are empty:\n\n      if (!f || n & 3) {\n        throw `Bad path data (@${i}):c`;\n      }\n\n      const pl = paramCount[fi];\n\n      if (!fi) {\n        x = y = 0;\n      } // move operations reset the position.\n\n\n      params.length = 0;\n      i++;\n      let charCount = (n >> 2 & 1) + 2; // 4th header bit indicates number size for this operation.\n\n      for (let p = 0; p < pl; p++) {\n        let num = base64[str.charAt(i)];\n        let sign = num >> 5 ? -1 : 1;\n        num = (num & 31) << 6 | base64[str.charAt(i + 1)];\n\n        if (charCount === 3) {\n          num = num << 6 | base64[str.charAt(i + 2)];\n        }\n\n        num = sign * num / 10;\n\n        if (p % 2) {\n          x = num += x;\n        } else {\n          y = num += y;\n        }\n\n        params[p] = num;\n        i += charCount;\n      }\n\n      f.apply(this, params);\n    }\n\n    return this;\n  }\n  /**\n   * Stores all graphics commands so they won't be executed in future draws. Calling store() a second time adds to\n   * the existing store. This also affects `drawAsPath()`.\n   *\n   * This is useful in cases where you are creating vector graphics in an iterative manner (ex. generative art), so\n   * that only new graphics need to be drawn (which can provide huge performance benefits), but you wish to retain all\n   * of the vector instructions for later use (ex. scaling, modifying, or exporting).\n   *\n   * Note that calling store() will force the active path (if any) to be ended in a manner similar to changing\n   * the fill or stroke.\n   *\n   * For example, consider a application where the user draws lines with the mouse. As each line segment (or collection of\n   * segments) are added to a Shape, it can be rasterized using {@link easeljs.DisplayObject#updateCache},\n   * and then stored, so that it can be redrawn at a different scale when the application is resized, or exported to SVGraphics.\n   *\n   * @example\n   * // set up cache:\n   * shape.cache(0,0,500,500,scale);\n   *\n   * // when the user drags, draw a new line:\n   * shape.graphics.moveTo(oldX,oldY).lineTo(newX,newY);\n   * // then draw it into the existing cache:\n   * shape.updateCache(\"source-over\");\n   * // store the new line, so it isn't redrawn next time:\n   * shape.store();\n   *\n   * // then, when the window resizes, we can re-render at a different scale:\n   * // first, unstore all our lines:\n   * shape.unstore();\n   * // then cache using the new scale:\n   * shape.cache(0,0,500,500,newScale);\n   * // finally, store the existing commands again:\n   * shape.store();\n   *\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  store() {\n    this._updateInstructions(true);\n\n    this._storeIndex = this._instructions.length;\n    return this;\n  }\n  /**\n   * Unstores any graphics commands that were previously stored using {@link easeljs.Graphics#store}\n   * so that they will be executed in subsequent draw calls.\n   *\n   * @return {easeljs.Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  unstore() {\n    this._storeIndex = 0;\n    return this;\n  }\n  /**\n   * Returns a clone of this Graphics instance. Note that the individual command objects are not cloned.\n   * @return {easeljs.Graphics} A clone of the current Graphics instance.\n   */\n\n\n  clone() {\n    let o = new Graphics();\n    o.command = this.command;\n    o._stroke = this._stroke;\n    o._strokeStyle = this._strokeStyle;\n    o._strokeDash = this._strokeDash;\n    o._strokeIgnoreScale = this._strokeIgnoreScale;\n    o._fill = this._fill;\n    o._instructions = this._instructions.slice();\n    o._commitIndex = this._commitIndex;\n    o._activeInstructions = this._activeInstructions.slice();\n    o._dirty = this._dirty;\n    o._storeIndex = this._storeIndex;\n    return o;\n  }\n  /**\n   * Returns a string representation of this object.\n   * @return {String} a string representation of the instance.\n   */\n\n\n  toString() {\n    return `[${this.constructor.name}]`;\n  }\n  /**\n   * @param {Boolean} commit\n   * @protected\n   */\n\n\n  _updateInstructions(commit) {\n    let instr = this._instructions,\n        active = this._activeInstructions,\n        commitIndex = this._commitIndex;\n\n    if (this._dirty && active.length) {\n      instr.length = commitIndex; // remove old, uncommitted commands\n\n      instr.push(Graphics.beginCmd);\n      const l = active.length,\n            ll = instr.length;\n      instr.length = ll + l;\n\n      for (let i = 0; i < l; i++) {\n        instr[i + ll] = active[i];\n      }\n\n      if (this._fill) {\n        instr.push(this._fill);\n      }\n\n      if (this._stroke) {\n        // doesn't need to be re-applied if it hasn't changed.\n        if (this._strokeDash !== this._oldStrokeDash) {\n          instr.push(this._strokeDash);\n        }\n\n        if (this._strokeStyle !== this._oldStrokeStyle) {\n          instr.push(this._strokeStyle);\n        }\n\n        if (commit) {\n          this._oldStrokeDash = this._strokeDash;\n          this._oldStrokeStyle = this._strokeStyle;\n        }\n\n        instr.push(this._stroke);\n      }\n\n      this._dirty = false;\n    }\n\n    if (commit) {\n      active.length = 0;\n      this._commitIndex = instr.length;\n    }\n  }\n\n  /**\n   * @param {easeljs.Graphics.Fill} fill\n   * @protected\n   */\n  _setFill(fill) {\n    this._updateInstructions(true);\n\n    this.command = this._fill = fill;\n    return this;\n  }\n  /**\n   * @param {easeljs.Graphics.Stroke} stroke\n   * @protected\n   */\n\n\n  _setStroke(stroke) {\n    this._updateInstructions(true);\n\n    if (this.command = this._stroke = stroke) {\n      stroke.ignoreScale = this._strokeIgnoreScale;\n    }\n\n    return this;\n  }\n\n  static get LineTo() {\n    return LineTo;\n  }\n\n  static get MoveTo() {\n    return MoveTo;\n  }\n\n  static get ArcTo() {\n    return ArcTo;\n  }\n\n  static get Arc() {\n    return Arc;\n  }\n\n  static get QuadraticCurveTo() {\n    return QuadraticCurveTo;\n  }\n\n  static get BezierCurveTo() {\n    return BezierCurveTo;\n  }\n\n  static get Rect() {\n    return Rect;\n  }\n\n  static get ClosePath() {\n    return ClosePath;\n  }\n\n  static get BeginPath() {\n    return BeginPath;\n  }\n\n  static get Fill() {\n    return Fill;\n  }\n\n  static get Stroke() {\n    return Stroke;\n  }\n\n  static get StrokeStyle() {\n    return StrokeStyle;\n  }\n\n  static get StrokeDash() {\n    return StrokeDash;\n  }\n\n  static get RoundRect() {\n    return RoundRect;\n  }\n\n  static get Circle() {\n    return Circle;\n  }\n\n  static get Ellipse() {\n    return Ellipse;\n  }\n\n  static get PolyStar() {\n    return PolyStar;\n  }\n\n}\n/**\n * @see {@link easeljs.Graphics#lineTo}\n * @alias easeljs.Graphics.LineTo\n * @param {Number} x\n * @param {Number} y\n */\n\nclass LineTo {\n  constructor(x, y) {\n    /**\n     * @type {Number}\n     */\n    this.x = x;\n    /**\n     * @type {Number}\n     */\n\n    this.y = y;\n  }\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  exec(ctx) {\n    ctx.lineTo(this.x, this.y);\n  }\n\n}\n/**\n * @see {@link easeljs.Graphics#moveTo}\n * @alias easeljs.Graphics.MoveTo\n * @param {Number} x\n * @param {Number} y\n */\n\n\nclass MoveTo {\n  constructor(x, y) {\n    /**\n     * @type {Number}\n     */\n    this.x = x;\n    /**\n     * @type {Number}\n     */\n\n    this.y = y;\n  }\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n\n\n  exec(ctx) {\n    ctx.moveTo(this.x, this.y);\n  }\n\n}\n/**\n * @see {@link easeljs.Graphics#arcTo}\n * @alias easeljs.Graphics.ArcTo\n * @param {Number} x1\n * @param {Number} y1\n * @param {Number} x2\n * @param {Number} y2\n * @param {Number} radius\n */\n\n\nclass ArcTo {\n  constructor(x1, y1, x2, y2, radius) {\n    /**\n     * @type {Number}\n     */\n    this.x1 = x1;\n    /**\n     * @type {Number}\n     */\n\n    this.y1 = y1;\n    /**\n     * @type {Number}\n     */\n\n    this.x2 = x2;\n    /**\n     * @type {Number}\n     */\n\n    this.y2 = y2;\n    /**\n     * @type {Number}\n     */\n\n    this.radius = radius;\n  }\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  exec(ctx) {\n    ctx.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n  }\n\n}\n/**\n * @see {@link easeljs.Graphics#arc}\n * @alias easeljs.Graphics.Arc\n * @param {Number} x\n * @param {Number} y\n * @param {Number} radius\n * @param {Number} startAngle\n * @param {Number} endAngle\n * @param {Boolean} [anticlockwise=false]\n */\n\n\nclass Arc {\n  constructor(x, y, radius, startAngle, endAngle, anticlockwise = false) {\n    /**\n     * @type {Number}\n     */\n    this.x = x;\n    /**\n     * @type {Number}\n     */\n\n    this.y = y;\n    /**\n     * @type {Number}\n     */\n\n    this.radius = radius;\n    /**\n     * @type {Number}\n     */\n\n    this.startAngle = startAngle;\n    /**\n     * @type {Number}\n     */\n\n    this.endAngle = endAngle;\n    /**\n     * @type {Boolean}\n     */\n\n    this.anticlockwise = anticlockwise;\n  }\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  exec(ctx) {\n    ctx.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n  }\n\n}\n/**\n * @see {@link easeljs.Graphics#quadraticCurveTo}\n * @alias easeljs.Graphics.QuadraticCurveTo\n * @param {Number} cpx\n * @param {Number} cpy\n * @param {Number} x\n * @param {Number} y\n */\n\n\nclass QuadraticCurveTo {\n  constructor(cpx, cpy, x, y) {\n    /**\n     * @property cpx\n     * @type Number\n     */\n    this.cpx = cpx;\n    /**\n     * @property cpy\n     * @type Number\n     */\n\n    this.cpy = cpy;\n    /**\n     * @property x\n     * @type Number\n     */\n\n    this.x = x;\n    /**\n     * @property y\n     * @type Number\n     */\n\n    this.y = y;\n  }\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  exec(ctx) {\n    ctx.quadraticCurveTo(this.cpx, this.cpy, this.x, this.y);\n  }\n\n}\n/**\n * @see {@link easeljs.Graphics#bezierCurveTo}\n * @alias easeljs.Graphics.BezierCurveTo\n * @param {Number} cp1x\n * @param {Number} cp1y\n * @param {Number} cp2x\n * @param {Number} cp2y\n * @param {Number} x\n * @param {Number} y\n */\n\n\nclass BezierCurveTo {\n  constructor(cp1x, cp1y, cp2x, cp2y, x, y) {\n    /**\n     * @type {Number}\n     */\n    this.cp1x = cp1x;\n    /**\n     * @type {Number}\n     */\n\n    this.cp1y = cp1y;\n    /**\n     * @type {Number}\n     */\n\n    this.cp2x = cp2x;\n    /**\n     * @type {Number}\n     */\n\n    this.cp2y = cp2y;\n    /**\n     * @type {Number}\n     */\n\n    this.x = x;\n    /**\n     * @type {Number}\n     */\n\n    this.y = y;\n  }\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  exec(ctx) {\n    ctx.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.x, this.y);\n  }\n\n}\n/**\n * @see {@link easeljs.Graphics#rect}\n * @alias easeljs.Graphics.Rect\n * @param {Number} x\n * @param {Number} y\n * @param {Number} w\n * @param {Number} h\n */\n\n\nclass Rect {\n  constructor(x, y, w, h) {\n    /**\n     * @type {Number}\n     */\n    this.x = x;\n    /**\n     * @type {Number}\n     */\n\n    this.y = y;\n    /**\n     * @type {Number}\n     */\n\n    this.w = w;\n    /**\n     * @type {Number}\n     */\n\n    this.h = h;\n  }\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  exec(ctx) {\n    ctx.rect(this.x, this.y, this.w, this.h);\n  }\n\n}\n/**\n * @see {@link easeljs.Graphics#closePath}\n * @alias easeljs.Graphics.ClosePath\n */\n\n\nclass ClosePath {\n  constructor() {}\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  exec(ctx) {\n    ctx.closePath();\n  }\n\n}\n/**\n * @see {@link easeljs.Graphics#beginPath}\n * @alias easeljs.Graphics.BeginPath\n */\n\n\nclass BeginPath {\n  constructor() {}\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  exec(ctx) {\n    ctx.beginPath();\n  }\n\n}\n/**\n * @see {@link easeljs.Graphics#beginFill}\n * @alias easeljs.Graphics.Fill\n * @param {Object} style A valid Context2D fillStyle.\n * @param {Matrix2D} matrix\n */\n\n\nclass Fill {\n  constructor(style, matrix) {\n    /**\n     * A valid Context2D fillStyle.\n     * @type {Object}\n     */\n    this.style = style;\n    /**\n     * @type {easeljs.Matrix2D}\n     */\n\n    this.matrix = matrix;\n    /**\n     * @type {Boolean}\n     */\n\n    this.path = false;\n  }\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  exec(ctx) {\n    if (!this.style) {\n      return;\n    }\n\n    ctx.fillStyle = this.style;\n    let mtx = this.matrix;\n\n    if (mtx) {\n      ctx.save();\n      ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n    }\n\n    ctx.fill();\n\n    if (mtx) {\n      ctx.restore();\n    }\n  }\n  /**\n   * Creates a linear gradient style and assigns it to {@link easeljs.Graphics.Fill#style}.\n   * @see {@link easeljs.Graphics#beginLinearGradientFill}\n   * @param {Array<String>} colors\n   * @param {Array<Number>} ratios\n   * @param {Number} x0\n   * @param {Number} y0\n   * @param {Number} x1\n   * @param {Number} y1\n   * @return {easeljs.Graphics.Fill} Returns this Fill object for chaining or assignment.\n   */\n\n\n  linearGradient(colors, ratios, x0, y0, x1, y1) {\n    let o = this.style = Graphics._ctx.createLinearGradient(x0, y0, x1, y1);\n\n    const l = colors.length;\n\n    for (let i = 0; i < l; i++) {\n      o.addColorStop(ratios[i], colors[i]);\n    }\n\n    o.props = {\n      colors,\n      ratios,\n      x0,\n      y0,\n      x1,\n      y1,\n      type: \"linear\"\n    };\n    return this;\n  }\n  /**\n   * Creates a linear gradient style and assigns it to {@link easeljs.Graphics.Fill#style}.\n   * @see {@link easeljs.Graphics#beginRadialGradientFill}\n   * @param {Array<String>} colors\n   * @param {Array<Number>} ratios\n   * @param {Number} x0\n   * @param {Number} y0\n   * @param {Number} r0\n   * @param {Number} x1\n   * @param {Number} y1\n   * @param {Number} r1\n   * @return {easeljs.Graphics.Fill} Returns this Fill object for chaining or assignment.\n   */\n\n\n  radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1) {\n    let o = this.style = Graphics._ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\n\n    const l = colors.length;\n\n    for (let i = 0; i < l; i++) {\n      o.addColorStop(ratios[i], colors[i]);\n    }\n\n    o.props = {\n      colors,\n      ratios,\n      x0,\n      y0,\n      r0,\n      x1,\n      y1,\n      r1,\n      type: \"radial\"\n    };\n    return this;\n  }\n  /**\n   * Creates a linear gradient style and assigns it to {@link easeljs.Graphics.Fill#style}.\n   * @see {@link easeljs.Graphics#beginBitmapFill}\n   * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image  Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n   * @param {String} [repetition=\"\"] One of: repeat, repeat-x, repeat-y, or no-repeat.\n   * @return {easeljs.Graphics.Fill} Returns this Fill object for chaining or assignment.\n   */\n\n\n  bitmap(image, repetition = \"\") {\n    if (image.naturalWidth || image.getContext || image.readyState >= 2) {\n      let o = this.style = Graphics._ctx.createPattern(image, repetition);\n\n      o.props = {\n        image,\n        repetition,\n        type: \"bitmap\"\n      };\n    }\n\n    return this;\n  }\n\n}\n/**\n * @see {@link easeljs.Graphics#beginStroke}\n * @alias easeljs.Graphics.Stroke\n * @extends easeljs.Graphics.Fill\n * @param {Object} style A valid Context2D fillStyle.\n * @param {Boolean} ignoreScale\n */\n\n\nclass Stroke extends Fill {\n  constructor(style, ignoreScale) {\n    super();\n    /**\n     * A valid Context2D strokeStyle.\n     * @type {Object}\n     */\n\n    this.style = style;\n    /**\n     * @type {Boolean}\n     */\n\n    this.ignoreScale = ignoreScale;\n    /**\n     * @type {Boolean}\n     */\n\n    this.path = false;\n  }\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @override\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  exec(ctx) {\n    if (!this.style) {\n      return;\n    }\n\n    ctx.strokeStyle = this.style;\n\n    if (this.ignoreScale) {\n      ctx.save();\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n    }\n\n    ctx.stroke();\n\n    if (this.ignoreScale) {\n      ctx.restore();\n    }\n  }\n\n}\n/**\n * @see {@link easeljs.Graphics#setStrokeStyle}\n * @alias easeljs.Graphics.StrokeStyle\n * @param {Number} [width=1]\n * @param {String} [caps=butt]\n * @param {String} [joints=miter]\n * @param {Number} [miterLimit=10]\n * @param {Boolean} [ignoreScale=false]\n */\n\n\nclass StrokeStyle {\n  constructor(width = 1, caps = \"butt\", joints = \"miter\", miterLimit = 10, ignoreScale = false) {\n    /**\n     * @type {Number}\n     */\n    this.width = width;\n    /**\n     * One of: butt, round, square\n     * @type {String}\n     */\n\n    this.caps = caps;\n    /**\n     * One of: round, bevel, miter\n     * @type {String}\n     */\n\n    this.joints = joints;\n    /**\n     * @type {Number}\n     */\n\n    this.miterLimit = miterLimit;\n    /**\n     * @type {Boolean}\n     */\n\n    this.ignoreScale = ignoreScale;\n    /**\n     * @type {Boolean}\n     */\n\n    this.path = false;\n  }\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  exec(ctx) {\n    ctx.lineWidth = this.width;\n    ctx.lineCap = isNaN(this.caps) ? this.caps : Graphics._STROKE_CAPS_MAP[this.caps];\n    ctx.lineJoin = isNaN(this.joints) ? this.joints : Graphics._STROKE_JOINTS_MAP[this.joints];\n    ctx.miterLimit = this.miterLimit;\n    ctx.ignoreScale = this.ignoreScale;\n  }\n\n}\n/**\n * @see {@link easeljs.Graphics#setStrokeDash}\n * @alias easeljs.Graphics.StrokeDash\n * @param {Array} [segments=[]]\n * @param {Number} [offset=0]\n */\n\n\nclass StrokeDash {\n  constructor(segments = [], offset = 0) {\n    /**\n     * @type {Array}\n     */\n    this.segments = segments;\n    /**\n     * @type {Number}\n     */\n\n    this.offset = offset;\n  }\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  exec(ctx) {\n    if (ctx.setLineDash) {\n      // feature detection.\n      ctx.setLineDash(this.segments);\n      ctx.lineDashOffset = this.offset;\n    }\n  }\n\n}\n/**\n * @see {@link easeljs.Graphics#drawRoundRectComplex}\n * @alias easeljs.Graphics.RoundRect\n * @param {Number} x\n * @param {Number} y\n * @param {Number} w\n * @param {Number} h\n * @param {Number} radiusTL\n * @param {Number} radiusTR\n * @param {Number} radiusBR\n * @param {Number} radiusBL\n */\n\n\nclass RoundRect {\n  constructor(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n    /**\n     * @type {Number}\n     */\n    this.x = x;\n    /**\n     * @type {Number}\n     */\n\n    this.y = y;\n    /**\n     * @type {Number}\n     */\n\n    this.w = w;\n    /**\n     * @type {Number}\n     */\n\n    this.h = h;\n    /**\n     * @type {Number}\n     */\n\n    this.radiusTL = radiusTL;\n    /**\n     * @type {Number}\n     */\n\n    this.radiusTR = radiusTR;\n    /**\n     * @type {Number}\n     */\n\n    this.radiusBR = radiusBR;\n    /**\n     * @type {Number}\n     */\n\n    this.radiusBL = radiusBL;\n  }\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  exec(ctx) {\n    let max = (this.w < this.h ? this.w : this.h) / 2;\n    let mTL = 0,\n        mTR = 0,\n        mBR = 0,\n        mBL = 0;\n    let x = this.x,\n        y = this.y,\n        w = this.w,\n        h = this.h;\n    let rTL = this.radiusTL,\n        rTR = this.radiusTR,\n        rBR = this.radiusBR,\n        rBL = this.radiusBL;\n\n    if (rTL < 0) {\n      rTL *= mTL = -1;\n    }\n\n    if (rTL > max) {\n      rTL = max;\n    }\n\n    if (rTR < 0) {\n      rTR *= mTR = -1;\n    }\n\n    if (rTR > max) {\n      rTR = max;\n    }\n\n    if (rBR < 0) {\n      rBR *= mBR = -1;\n    }\n\n    if (rBR > max) {\n      rBR = max;\n    }\n\n    if (rBL < 0) {\n      rBL *= mBL = -1;\n    }\n\n    if (rBL > max) {\n      rBL = max;\n    }\n\n    ctx.moveTo(x + w - rTR, y);\n    ctx.arcTo(x + w + rTR * mTR, y - rTR * mTR, x + w, y + rTR, rTR);\n    ctx.lineTo(x + w, y + h - rBR);\n    ctx.arcTo(x + w + rBR * mBR, y + h + rBR * mBR, x + w - rBR, y + h, rBR);\n    ctx.lineTo(x + rBL, y + h);\n    ctx.arcTo(x - rBL * mBL, y + h + rBL * mBL, x, y + h - rBL, rBL);\n    ctx.lineTo(x, y + rTL);\n    ctx.arcTo(x - rTL * mTL, y - rTL * mTL, x + rTL, y, rTL);\n    ctx.closePath();\n  }\n\n}\n/**\n * @see {@link easeljs.Graphics#drawCircle}\n * @alias easeljs.Graphics.Circle\n * @param {Number} x\n * @param {Number} y\n * @param {Number} radius\n */\n\n\nclass Circle {\n  constructor(x, y, radius) {\n    /**\n     * @type {Number}\n     */\n    this.x = x;\n    /**\n     * @type {Number}\n     */\n\n    this.y = y;\n    /**\n     * @type {Number}\n     */\n\n    this.radius = radius;\n  }\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  exec(ctx) {\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n  }\n\n}\n/**\n * @see {@link easeljs.Graphics#drawEllipse}\n * @alias easeljs.Graphics.Ellipse\n * @param {Number} x\n * @param {Number} y\n * @param {Number} w\n * @param {Number} h\n */\n\n\nclass Ellipse {\n  constructor(x, y, w, h) {\n    /**\n     * @type {Number}\n     */\n    this.x = x;\n    /**\n     * @type {Number}\n     */\n\n    this.y = y;\n    /**\n     * @type {Number}\n     */\n\n    this.w = w;\n    /**\n     * @type {Number}\n     */\n\n    this.h = h;\n  }\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  exec(ctx) {\n    let x = this.x,\n        y = this.y;\n    let w = this.w,\n        h = this.h;\n    let k = 0.5522848;\n    let ox = w / 2 * k;\n    let oy = h / 2 * k;\n    let xe = x + w;\n    let ye = y + h;\n    let xm = x + w / 2;\n    let ym = y + h / 2;\n    ctx.moveTo(x, ym);\n    ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n    ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n    ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n    ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  }\n\n}\n/**\n *  @see {@link easeljs.Graphics#drawPolyStar}\n * @alias easeljs.Graphics.PolyStar\n * @param {Number} x\n * @param {Number} y\n * @param {Number} radius\n * @param {Number} sides\n * @param {Number} [pointSize=0]\n * @param {Number} [angle=0]\n */\n\n\nclass PolyStar {\n  constructor(x, y, radius, sides, pointSize = 0, angle = 0) {\n    /**\n     * @type {Number}\n     */\n    this.x = x;\n    /**\n     * @type {Number}\n     */\n\n    this.y = y;\n    /**\n     * @type {Number}\n     */\n\n    this.radius = radius;\n    /**\n     * @type {Number}\n     */\n\n    this.sides = sides;\n    /**\n     * @type {Number}\n     */\n\n    this.pointSize = pointSize;\n    /**\n     * @type {Number}\n     */\n\n    this.angle = angle;\n  }\n  /**\n   * Execute the Graphics command in the provided Canvas context.\n   * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n   */\n\n\n  exec(ctx) {\n    let x = this.x,\n        y = this.y;\n    let radius = this.radius;\n    let angle = this.angle / 180 * Math.PI;\n    let sides = this.sides;\n    let ps = 1 - this.pointSize;\n    let a = Math.PI / sides;\n    ctx.moveTo(x + Math.cos(angle) * radius, y + Math.sin(angle) * radius);\n\n    for (let i = 0; i < sides; i++) {\n      angle += a;\n\n      if (ps != 1) {\n        ctx.lineTo(x + Math.cos(angle) * radius * ps, y + Math.sin(angle) * radius * ps);\n      }\n\n      angle += a;\n      ctx.lineTo(x + Math.cos(angle) * radius, y + Math.sin(angle) * radius);\n    }\n\n    ctx.closePath();\n  }\n\n}\n/**\n * A reusable instance of {@link easeljs.Graphics.BeginPath} to avoid unnecessary instantiation.\n * @static\n * @readonly\n * @type {easeljs.Graphics.BeginPath}\n */\n\n\nGraphics.beginCmd = new BeginPath();\n/**\n * Map of Base64 characters to values. Used by {@link easeljs.Graphics#decodePath}.\n * @static\n * @readonly\n * @protected\n * @type {Object}\n */\n\nGraphics._BASE_64 = {\n  \"A\": 0,\n  \"B\": 1,\n  \"C\": 2,\n  \"D\": 3,\n  \"E\": 4,\n  \"F\": 5,\n  \"G\": 6,\n  \"H\": 7,\n  \"I\": 8,\n  \"J\": 9,\n  \"K\": 10,\n  \"L\": 11,\n  \"M\": 12,\n  \"N\": 13,\n  \"O\": 14,\n  \"P\": 15,\n  \"Q\": 16,\n  \"R\": 17,\n  \"S\": 18,\n  \"T\": 19,\n  \"U\": 20,\n  \"V\": 21,\n  \"W\": 22,\n  \"X\": 23,\n  \"Y\": 24,\n  \"Z\": 25,\n  \"a\": 26,\n  \"b\": 27,\n  \"c\": 28,\n  \"d\": 29,\n  \"e\": 30,\n  \"f\": 31,\n  \"g\": 32,\n  \"h\": 33,\n  \"i\": 34,\n  \"j\": 35,\n  \"k\": 36,\n  \"l\": 37,\n  \"m\": 38,\n  \"n\": 39,\n  \"o\": 40,\n  \"p\": 41,\n  \"q\": 42,\n  \"r\": 43,\n  \"s\": 44,\n  \"t\": 45,\n  \"u\": 46,\n  \"v\": 47,\n  \"w\": 48,\n  \"x\": 49,\n  \"y\": 50,\n  \"z\": 51,\n  \"0\": 52,\n  \"1\": 53,\n  \"2\": 54,\n  \"3\": 55,\n  \"4\": 56,\n  \"5\": 57,\n  \"6\": 58,\n  \"7\": 59,\n  \"8\": 60,\n  \"9\": 61,\n  \"+\": 62,\n  \"/\": 63\n};\n/**\n * Maps numeric values for the caps parameter of {@link easeljs.Graphics#setStrokeStyle} to\n * corresponding string values. This is primarily for use with the tiny API.<br />\n * The mappings are as follows:\n * <ul>\n *   <li>0 to \"butt\"</li>\n *   <li>1 to \"round\"</li>\n *   <li>2 to \"square\".</li>\n * </ul>\n *\n * @example <caption>Set line caps to \"square\"</caption>\n * graphics.ss(16, 2);\n *\n * @static\n * @readonly\n * @protected\n * @type {Array<String>}\n */\n\nGraphics._STROKE_CAPS_MAP = [\"butt\", \"round\", \"square\"];\n/**\n * Maps numeric values for the joints parameter of {@link easeljs.Graphics#setStrokeStyle} to\n * corresponding string values. This is primarily for use with the tiny API.<br />\n * The mappings are as follows:\n * <ul>\n *   <li>0 to \"miter\"</li>\n *   <li>1 to \"round\"</li>\n *   <li>2 to \"bevel\".</li>\n * </ul>\n *\n * @example <caption>Set the line joints to \"bevel\"</caption>\n * graphics.ss(16, 0, 2);\n *\n * @static\n * @readonly\n * @protected\n * @type {Array<String>}\n */\n\nGraphics._STROKE_JOINTS_MAP = [\"miter\", \"round\", \"bevel\"];\n/**\n * @static\n * @readonly\n * @protected\n * @type {CanvasRenderingContext2D}\n */\n\nGraphics._ctx = createCanvas().getContext(\"2d\");\n\n/**\n * @license MovieClip\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * The MovieClip class associates a TweenJS Timeline with an EaselJS {@link easeljs.Container}. It allows\n * you to create objects which encapsulate timeline animations, state changes, and synched actions. Due to the\n * complexities inherent in correctly setting up a MovieClip, it is largely intended for tool output and is not included\n * in the main EaselJS library.\n *\n * Currently MovieClip only works properly if it is tick based (as opposed to time based) though some concessions have\n * been made to support time-based timelines in the future.\n *\n * It is recommended to use `tween.to()` to animate and set properties (use no duration to have it set\n * immediately), and the `tween.wait()` method to create delays between animations. Note that using the\n * `tween.set()` method to affect properties will likely not provide the desired result.\n *\n * @memberof easeljs\n * @example <caption>Animate two shapes back and forth</caption>\n * let stage = new Stage(\"canvas\");\n * Ticker.addEventListener(\"tick\", stage);\n *\n * let mc = new MovieClip(null, 0, true, {start:20});\n * stage.addChild(mc);\n *\n * let child1 = new Shape(\n *   new Graphics().beginFill(\"#999999\").drawCircle(30,30,30)\n * );\n * let child2 = new Shape(\n *   new Graphics().beginFill(\"#5a9cfb\").drawCircle(30,30,30)\n * );\n *\n * mc.timeline.addTween(\n *   Tween.get(child1).to({x:0}).to({x:60}, 50).to({x:0}, 50)\n * );\n * mc.timeline.addTween(\n *   Tween.get(child2).to({x:60}).to({x:0}, 50).to({x:60}, 50)\n * );\n *\n * mc.gotoAndPlay(\"start\");\n *\n * @extends easeljs.Container\n * @param {Object} [props] The configuration properties to apply to this instances.\n * This object will also be passed into the Timeline instance associated with this MovieClip.\n * See the documentation for Timeline for a list of supported props.\n */\n\nclass MovieClip extends Container {\n  constructor(props) {\n    super();\n    !MovieClip.inited && MovieClip.init();\n    /**\n     * Controls how this MovieClip advances its time. Must be one of 0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED).\n     * See each constant for a description of the behaviour.\n     * @type {Number}\n     * @default 0\n     */\n\n    this.mode = props.mode != null ? props.mode : MovieClip.INDEPENDENT;\n    /**\n     * Specifies what the first frame to play in this movieclip, or the only frame to display if mode is SINGLE_FRAME.\n     * @type {Number}\n     * @default 0\n     */\n\n    this.startPosition = props.startPosition != null ? props.startPosition : 0;\n    /**\n       * Specifies how many times this MovieClip should loop. A value of -1 indicates it should loop indefinitely. A value of\n       * 1 would cause it to loop once (ie. play a total of twice).\n       * @property loop\n     * @type {Number}\n     * @default -1\n     */\n\n    if (typeof props.loop === \"number\") {\n      this.loop = props.loop;\n    } else if (props.loop === false) {\n      this.loop = 0;\n    } else {\n      this.loop = -1;\n    }\n    /**\n     * The current frame of the movieclip.\n     * @type Number\n     * @default 0\n     * @readonly\n     */\n\n\n    this.currentFrame = 0;\n    /**\n       * The TweenJS Timeline that is associated with this MovieClip. This is created automatically when the MovieClip\n       * instance is initialized. Animations are created by adding <a href=\"http://tweenjs.com\">TweenJS</a> Tween\n       * instances to the timeline.\n       *\n       * Elements can be added and removed from the timeline by toggling an \"_off\" property\n       * using the `tweenInstance.to()` method. Note that using `Tween.set` is not recommended to\n       * create MovieClip animations. The following example will toggle the target off on frame 0, and then back on for\n       * frame 1. You can use the \"visible\" property to achieve the same effect.\n       *\n       * @example\n       * let tween = Tween.get(target).to({x:0}).to({x:100}, 30);\n       * let mc = new MovieClip();\n       * mc.timeline.addTween(tween);\n       *\n       * @example\n       * Tween.get(target).to({_off:false})\n       *   .wait(1).to({_off:true})\n       *   .wait(1).to({_off:false});\n       *\n       * @type {easeljs.Timeline}\n     */\n\n    this.timeline = new Timeline(Object.assign({\n      useTicks: true,\n      paused: true\n    }, props));\n    /**\n     * If true, the MovieClip's position will not advance when ticked.\n     * @type {Boolean}\n     * @default false\n     */\n\n    this.paused = props.paused != null ? props.paused : false;\n    /**\n     * If true, actions in this MovieClip's tweens will be run when the playhead advances.\n     * @type {Boolean}\n     * @default true\n     */\n\n    this.actionsEnabled = true;\n    /**\n     * If true, the MovieClip will automatically be reset to its first frame whenever the timeline adds\n     * it back onto the display list. This only applies to MovieClip instances with mode=INDEPENDENT.\n     * <br><br>\n     * For example, if you had a character animation with a \"body\" child MovieClip instance\n     * with different costumes on each frame, you could set `body.autoReset = false`, so that\n     * you can manually change the frame it is on, without worrying that it will be reset\n     * automatically.\n     * @type {Boolean}\n     * @default true\n     */\n\n    this.autoReset = true;\n    /**\n     * An array of bounds for each frame in the MovieClip. This is mainly intended for tool output.\n     * @type {Array}\n     */\n\n    this.frameBounds = this.frameBounds || props.frameBounds; // frameBounds are set on the prototype in Animate.\n\n    /**\n     * By default MovieClip instances advance one frame per tick. Specifying a framerate for the MovieClip\n     * will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n     * framerate.\n     *\n     * For example, if a MovieClip with a framerate of 10 is placed on a Stage being updated at 40fps, then the MovieClip will\n     * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n     * vary slightly between frames.\n     *\n     * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n     * passed into {@link easeljs.Stage#update}.\n     * @type {Number}\n     * @default null\n     */\n\n    this.framerate = null;\n    /**\n     * @type {Number}\n     * @default 0\n     * @private\n     */\n\n    this._synchOffset = 0;\n    /**\n     * @type {Number}\n     * @default -1\n     * @private\n     */\n\n    this._rawPosition = -1; // TODO: evaluate using a ._reset Boolean prop instead of -1.\n\n    /**\n     * The time remaining from the previous tick, only applicable when .framerate is set.\n     * @type {Number}\n     * @private\n     */\n\n    this._t = 0;\n    /**\n     * List of display objects that are actively being managed by the MovieClip.\n     * @type {Object}\n     * @private\n     */\n\n    this._managed = {};\n    /**\n     * @type {Function}\n     * @private\n     */\n\n    this._bound_resolveState = this._resolveState.bind(this);\n  }\n\n  static init() {\n    if (MovieClip.inited) {\n      return;\n    } // plugins introduce some overhead to Tween, so we only install this if an MC is instantiated.\n\n\n    MovieClipPlugin.install();\n    MovieClip.inited = true;\n  } // TODO: can we just proxy `get currentFrame` to timeline.position as well? Ditto for `get loop` (or just remove entirely).\n  //\n\n  /**\n   * Returns an array of objects with label and position (aka frame) properties, sorted by position.\n   * @see {@link tweenjs.Timeline#labels}\n   * @type {Array}\n   * @readonly\n   */\n\n\n  get labels() {\n    return this.timeline.labels;\n  }\n  /**\n   * Returns the name of the label on or immediately before the current frame.\n   * @see {@link tweenjs.Timeline#currentLabel}\n   * for more information.\n   * @type {String}\n   * @readonly\n   */\n\n\n  get currentLabel() {\n    return this.timeline.currentLabel;\n  }\n  /**\n   * Returns the duration of this MovieClip in seconds or ticks.\n   * @see {@link tweenjs.Timeline#duration}\n   * @type {Number}\n   * @readonly\n   */\n\n\n  get duration() {\n    return this.timeline.duration;\n  }\n  /**\n   * Returns the duration of this MovieClip in seconds or ticks. Identical to {@link easeljs.MovieClip#duration}\n   * and provided for Adobe Flash/Animate API compatibility.\n   * @see {@link tweenjs.Timeline#duration}\n   * @type {Number}\n   * @readonly\n   */\n\n\n  get totalFrames() {\n    return this.duration;\n  }\n\n  isVisible() {\n    // children are placed in draw, so we can't determine if we have content.\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n  }\n\n  draw(ctx, ignoreCache) {\n    // draw to cache first:\n    if (this.drawCache(ctx, ignoreCache)) {\n      return true;\n    }\n\n    this._updateState();\n\n    super.draw(ctx, ignoreCache);\n    return true;\n  }\n  /**\n   * Sets paused to false.\n   */\n\n\n  play() {\n    this.paused = false;\n  }\n  /**\n   * Sets paused to true.\n   */\n\n\n  stop() {\n    this.paused = true;\n  }\n  /**\n   * Advances this movie clip to the specified position or label and plays the timeline.\n   * @param {String | Number} positionOrLabel The animation name or frame number to go to.\n   */\n\n\n  gotoAndPlay(positionOrLabel) {\n    this.play();\n\n    this._goto(positionOrLabel);\n  }\n  /**\n   * Advances this movie clip to the specified position or label and stops the timeline.\n   * @param {String | Number} positionOrLabel The animation or frame name to go to.\n   */\n\n\n  gotoAndStop(positionOrLabel) {\n    this.stop();\n\n    this._goto(positionOrLabel);\n  }\n  /**\n   * Advances the playhead. This occurs automatically each tick by default.\n   * @param {Number} [time] The amount of time in ms to advance by. Only applicable if framerate is set.\n  */\n\n\n  advance(time) {\n    if (this.mode !== MovieClip.INDEPENDENT) {\n      return;\n    } // update happens in draw for synched clips\n    // if this MC doesn't have a framerate, hunt ancestors for one:\n\n\n    let o = this,\n        fps = o.framerate;\n\n    while ((o = o.parent) && fps === null) {\n      if (o.mode === MovieClip.INDEPENDENT) {\n        fps = o._framerate;\n      }\n    }\n\n    this._framerate = fps;\n\n    if (this.paused) {\n      return;\n    } // calculate how many frames to advance:\n\n\n    let t = fps !== null && fps !== -1 && time !== null ? time / (1000 / fps) + this._t : 1;\n    let frames = t | 0;\n    this._t = t - frames; // leftover time, save to add to next advance.\n\n    while (frames--) {\n      this._updateTimeline(this._rawPosition + 1, false);\n    }\n  }\n  /**\n   * MovieClip instances cannot be cloned.\n   * @throws MovieClip cannot be cloned.\n   */\n\n\n  clone() {\n    // TODO: add support for this? Need to clone the Timeline & retarget tweens - pretty complex.\n    throw \"MovieClip cannot be cloned.\";\n  }\n\n  _updateState() {\n    if (this._rawPosition === -1 || this.mode !== MovieClip.INDEPENDENT) {\n      this._updateTimeline(-1);\n    }\n  }\n\n  _tick(evtObj) {\n    this.advance(evtObj && evtObj.delta);\n\n    super._tick(evtObj);\n  }\n  /**\n   * @param {String | Number} positionOrLabel The animation name or frame number to go to.\n   * @protected\n   */\n\n\n  _goto(positionOrLabel) {\n    let pos = this.timeline.resolve(positionOrLabel);\n\n    if (pos == null) {\n      return;\n    }\n\n    this._t = 0;\n\n    this._updateTimeline(pos, true);\n  }\n  /**\n   * @private\n   */\n\n\n  _reset() {\n    this._rawPosition = -1;\n    this._t = this.currentFrame = 0;\n    this.paused = false;\n  }\n  /**\n   * @param {Number} rawPosition\n   * @param {Boolean} jump Indicates whether this update is due to jumping (via gotoAndXX) to a new position.\n   * @protected\n   */\n\n\n  _updateTimeline(rawPosition, jump) {\n    let synced = this.mode !== MovieClip.INDEPENDENT,\n        tl = this.timeline;\n\n    if (synced) {\n      rawPosition = this.startPosition + (this.mode === MovieClip.SINGLE_FRAME ? 0 : this._synchOffset);\n    }\n\n    if (rawPosition < 1) {\n      rawPosition = 0;\n    }\n\n    if (this._rawPosition === rawPosition && !synced) {\n      return;\n    }\n\n    this._rawPosition = rawPosition; // update timeline position, ignoring actions if this is a graphic.\n\n    tl.loop = this.loop; // TODO: should we maintain this on MovieClip, or just have it on timeline?\n\n    tl.setPosition(rawPosition, synced || !this.actionsEnabled, jump, this._bound_resolveState);\n  }\n  /**\n   * Renders position 0 without running actions or updating _rawPosition.\n   * Primarily used by Animate CC to build out the first frame in the constructor of MC symbols.\n   * NOTE: not tested when run after the MC advances past the first frame.\n   * @protected\n   */\n\n\n  _renderFirstFrame() {\n    const tl = this.timeline,\n          pos = tl.rawPosition;\n    tl.setPosition(0, true, true, this._bound_resolveState);\n    tl.rawPosition = pos;\n  }\n  /**\n   * Runs via a callback after timeline property updates and before actions.\n   * @protected\n   */\n\n\n  _resolveState() {\n    let tl = this.timeline;\n    this.currentFrame = tl.position;\n\n    for (let n in this._managed) {\n      this._managed[n] = 1;\n    }\n\n    let tweens = tl.tweens;\n\n    for (let tween of tweens) {\n      let target = tween.target;\n\n      if (target === this || tween.passive) {\n        continue;\n      } // TODO: this assumes the actions tween from Animate has `this` as the target. Likely a better approach.\n\n\n      let offset = tween._stepPosition;\n\n      if (target instanceof DisplayObject) {\n        // motion tween.\n        this._addManagedChild(target, offset);\n      } else {\n        // state tween.\n        this._setState(target.state, offset);\n      }\n    }\n\n    let kids = this.children;\n\n    for (let i = kids.length - 1; i >= 0; i--) {\n      let id = kids[i].id;\n\n      if (this._managed[id] === 1) {\n        this.removeChildAt(i);\n        delete this._managed[id];\n      }\n    }\n  }\n  /**\n   * @param {Array} state\n   * @param {Number} offset\n   * @protected\n   */\n\n\n  _setState(state, offset) {\n    if (!state) {\n      return;\n    }\n\n    for (let i = state.length - 1; i >= 0; i--) {\n      let o = state[i];\n      let target = o.t;\n      let props = o.p;\n\n      for (let n in props) {\n        target[n] = props[n];\n      }\n\n      this._addManagedChild(target, offset);\n    }\n  }\n  /**\n   * Adds a child to the timeline, and sets it up as a managed child.\n   * @param {easeljs.MovieClip} child The child MovieClip to manage\n   * @param {Number} offset\n   * @private\n   */\n\n\n  _addManagedChild(child, offset) {\n    if (child._off) {\n      return;\n    }\n\n    this.addChildAt(child, 0);\n\n    if (child instanceof MovieClip) {\n      child._synchOffset = offset; // TODO: this does not precisely match Adobe Flash/Animate, which loses track of the clip if it is renamed or removed from the timeline, which causes it to reset.\n      // TODO: should also reset when MovieClip loops, though that will be a bit tricky to detect.\n\n      if (child.mode === MovieClip.INDEPENDENT && child.autoReset && !this._managed[child.id]) {\n        child._reset();\n      }\n    }\n\n    this._managed[child.id] = 2;\n  }\n  /**\n   * @param {easeljs.Matrix2D} matrix\n   * @param {Boolean} ignoreTransform\n   * @return {easeljs.Rectangle}\n   * @protected\n   */\n\n\n  _getBounds(matrix, ignoreTransform) {\n    let bounds = this.getBounds();\n\n    if (!bounds && this.frameBounds) {\n      bounds = this._rectangle.copy(this.frameBounds[this.currentFrame]);\n    }\n\n    if (bounds) {\n      return this._transformBounds(bounds, matrix, ignoreTransform);\n    }\n\n    return super._getBounds(matrix, ignoreTransform);\n  }\n\n}\n/**\n * The MovieClip will advance independently of its parent, even if its parent is paused.\n * This is the default mode.\n * @static\n * @type {String}\n * @default independent\n * @readonly\n */\n\nMovieClip.INDEPENDENT = \"independent\";\n/**\n * The MovieClip will only display a single frame (as determined by the startPosition property).\n * @static\n * @type {String}\n * @default single\n * @readonly\n */\n\nMovieClip.SINGLE_FRAME = \"single\";\n/**\n * The MovieClip will be advanced only when its parent advances and will be synched to the position of\n * the parent MovieClip.\n * @static\n * @type {String}\n * @default synched\n * @readonly\n */\n\nMovieClip.SYNCHED = \"synched\";\n/**\n * Has the MovieClipPlugin been installed to TweenJS yet?\n * @static\n * @type {Boolean}\n * @default false\n * @readonly\n */\n\nMovieClip.inited = false;\n/**\n * This plugin works with <a href=\"http://tweenjs.com\" target=\"_blank\">TweenJS</a> to prevent the startPosition property from tweening.\n * @todo update to new plugin model\n * @static\n * @inner\n */\n\nclass MovieClipPlugin {\n  constructor() {\n    throw \"MovieClipPlugin cannot be instantiated.\";\n  }\n  /**\n   * @private\n   */\n\n\n  static install() {\n    Tween.installPlugin(MovieClipPlugin);\n  }\n  /**\n   * @param {tweenjs.Tween} tween\n   * @param {String} prop\n   * @param {String|Number|Boolean} value\n   * @private\n   */\n\n\n  static init(tween, prop, value) {\n    return value;\n  }\n  /**\n   * @param {tweenjs.Tween} tween\n   * @param {String} prop\n   * @param {String | Number | Boolean} value\n   * @param {Array} startValues\n   * @param {Array} endValues\n   * @param {Number} ratio\n   * @param {Object} wait\n   * @param {Object} end\n   * @return {*}\n   */\n\n\n  static tween(tween, prop, value, startValues, endValues, ratio, wait, end) {\n    if (!(tween.target instanceof MovieClip)) {\n      return value;\n    }\n\n    return ratio === 1 ? endValues[prop] : startValues[prop];\n  }\n\n}\n/**\n * @static\n * @type {Number}\n * @default 100\n * @readonly\n */\n\n\nMovieClipPlugin.priority = 100;\n\n/**\n * @license Shadow\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * This class encapsulates the properties required to define a shadow to apply to a {@link easeljs.DisplayObject}\n * via its `shadow` property.\n *\n * @memberof easeljs\n * @example\n * img.shadow = new Shadow(\"#000000\", 5, 5, 10);\n *\n * @param {String} [color=black] The color of the shadow. This can be any valid CSS color value.\n * @param {Number} [offsetX=0] The x offset of the shadow in pixels.\n * @param {Number} [offsetY=0] The y offset of the shadow in pixels.\n * @param {Number} [blur=0] The size of the blurring effect.\n */\nclass Shadow {\n  constructor(color = \"black\", offsetX = 0, offsetY = 0, blur = 0) {\n    /**\n     * The color of the shadow. This can be any valid CSS color value.\n     * @type {String}\n     * @default black\n     */\n    this.color = color;\n    /**\n     * The x offset of the shadow.\n     * @type {Number}\n     * @default 0\n     */\n\n    this.offsetX = offsetX;\n    /**\n     * The y offset of the shadow.\n     * @type {Number}\n     * @default 0\n     */\n\n    this.offsetY = offsetY;\n    /**\n     * The blur of the shadow.\n     * @type {Number}\n     * @default 0\n     */\n\n    this.blur = blur;\n  }\n  /**\n   * Returns a string representation of this object.\n   * @return {String}\n   */\n\n\n  toString() {\n    return `[${this.constructor.name}]`;\n  }\n  /**\n   * Returns a clone of this Shadow instance.\n   * @return {Shadow} A clone of the current Shadow instance.\n   */\n\n\n  clone() {\n    return new Shadow(this.color, this.offsetX, this.offsetY, this.blur);\n  }\n\n}\n/**\n * An identity shadow object (all properties are set to 0).\n * @type {easeljs.Shadow}\n * @static\n * @readonly\n */\n\nShadow.identity = new Shadow(\"transparent\");\n\n/**\n * @license Shape\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * A Shape allows you to display vector art in the display list. It composites a {@link easeljs.Graphics}\n * instance which exposes all of the vector drawing methods. The Graphics instance can be shared between multiple Shape\n * instances to display the same vector graphics with different positions or transforms.\n *\n * If the vector art will not change between draws, you may want to use the {@link easeljs.DisplayObject#cache}\n * method to reduce the rendering cost.\n *\n * @memberof easeljs\n * @example\n * var graphics = new Graphics().beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n * var shape = new Shape(graphics);\n * // Alternatively use can also use the graphics property of the Shape class to renderer the same as above.\n * var shape = new Shape();\n * shape.graphics.beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n *\n * @extends easeljs.DisplayObject\n * @param {easeljs.Graphics} [graphics] The graphics instance to display. If null, a new Graphics instance will be created.\n */\n\nclass Shape extends DisplayObject {\n  constructor(graphics = new Graphics()) {\n    super();\n    /**\n     * The graphics instance to display.\n     * @type {easeljs.Graphics}\n     */\n\n    this.graphics = graphics;\n  }\n\n  isVisible() {\n    let hasContent = this.cacheCanvas || this.graphics && !this.graphics.isEmpty();\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  }\n\n  draw(ctx, ignoreCache = false) {\n    if (super.draw(ctx, ignoreCache)) {\n      return true;\n    }\n\n    this.graphics.draw(ctx, this);\n    return true;\n  }\n  /**\n   * Returns a clone of this Shape. Some properties that are specific to this instance's current context are reverted to\n   * their defaults (for example .parent).\n   * @override\n   * @param {Boolean} [recursive=false] If true, this Shape's {@link easeljs.Graphics} instance will also be\n   * cloned. If false, the Graphics instance will be shared with the new Shape.\n   */\n\n\n  clone(recursive = false) {\n    let g = recursive && this.graphics ? this.graphics.clone() : this.graphics;\n    return this._cloneProps(new Shape(g));\n  }\n\n}\n\n/**\n * @license SpriteSheet\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPliED, INCLUDING BUT NOT liMITED TO THE WARRANTIES\n * OF MERCHANTABIliTY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HolDERS BE liABLE FOR ANY CLAIM, DAMAGES OR OTHER liABIliTY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEAliNGS IN THE SOFTWARE.\n */\n/**\n * Encapsulates the properties and methods associated with a sprite sheet. A sprite sheet is a series of images (usually\n * animation frames) combined into a larger image (or images). For example, an animation consisting of eight 100x100\n * images could be combined into a single 400x200 sprite sheet (4 frames across by 2 high).\n * <br />\n * The data passed to the SpriteSheet constructor defines:\n * <ol>\n * \t<li> The source image or images to use.</li>\n * \t<li> The positions of individual image frames.</li>\n * \t<li> Sequences of frames that form named animations. Optional.</li>\n * \t<li> The target playback framerate. Optional.</li>\n * </ol>\n *\n * <h3>SpriteSheet Format</h3>\n * SpriteSheets are an object with two required properties (`images` and `frames`), and two optional properties\n * (`framerate` and `animations`). This makes them easy to define in javascript code, or in JSON.\n *\n * <h4>images</h4>\n * An array of source images. Images can be either an HTMlimage\n * instance, or a uri to an image. The former is recommended to control preloading.\n *\n * \timages: [image1, \"path/to/image2.png\"],\n *\n * <h4>frames</h4>\n * Defines the individual frames. There are two supported formats for frame data:\n * When all of the frames are the same size (in a grid), use an object with `width`, `height`, `regX`, `regY`,\n * and `count` properties.\n *\n * <ul>\n *  <li>`width` & `height` are required and specify the dimensions of the frames</li>\n *  <li>`regX` & `regY` indicate the registration point or \"origin\" of the frames</li>\n *  <li>`spacing` indicate the spacing between frames</li>\n *  <li>`margin` specify the margin around the image(s)</li>\n *  <li>`count` allows you to specify the total number of frames in the spritesheet; if omitted, this will\n *  be calculated based on the dimensions of the source images and the frames. Frames will be assigned\n *  indexes based on their position in the source images (left to right, top to bottom).</li>\n * </ul>\n *\n *  \tframes: {width:64, height:64, count:20, regX: 32, regY:64, spacing:0, margin:0}\n *\n * If the frames are of different sizes, use an array of frame definitions. Each definition is itself an array\n * with 4 required and 3 optional entries, in the order:\n *\n * <ul>\n *  <li>The first four, `x`, `y`, `width`, and `height` are required and define the frame rectangle.</li>\n *  <li>The fifth, `imageIndex`, specifies the index of the source image (defaults to 0)</li>\n *  <li>The last two, `regX` and `regY` specify the registration point of the frame</li>\n * </ul>\n *\n * \tframes: [\n * \t\t// x, y, width, height, imageIndex*, regX*, regY*\n * \t\t[64, 0, 96, 64],\n * \t\t[0, 0, 64, 64, 1, 32, 32]\n * \t\t// etc.\n * \t]\n *\n * <h4>animations</h4>\n * Optional. An object defining sequences of frames to play as named animations. Each property corresponds to an\n * animation of the same name. Each animation must specify the frames to play, and may\n * also include a relative playback `speed` (ex. 2 would playback at double speed, 0.5 at half), and\n * the name of the `next` animation to sequence to after it completes.\n *\n * There are three formats supported for defining the frames in an animation, which can be mixed and matched as appropriate:\n * <ol>\n * \t<li>for a single frame animation, you can simply specify the frame index\n *\n * \t\tanimations: {\n * \t\t\tsit: 7\n * \t\t}\n *\n * </li>\n * <li>\n *      for an animation of consecutive frames, you can use an array with two required, and two optional entries\n * \t\tin the order: `start`, `end`, `next`, and `speed`. This will play the frames from start to end inclusive.\n *\n * \t\tanimations: {\n * \t\t\t// start, end, next*, speed*\n * \t\t\trun: [0, 8],\n * \t\t\tjump: [9, 12, \"run\", 2]\n * \t\t}\n *\n *  </li>\n *  <li>\n *     for non-consecutive frames, you can use an object with a `frames` property defining an array of frame\n *     indexes to play in order. The object can also specify `next` and `speed` properties.\n *\n * \t\tanimations: {\n * \t\t\twalk: {\n * \t\t\t\tframes: [1,2,3,3,2,1]\n * \t\t\t},\n * \t\t\tshoot: {\n * \t\t\t\tframes: [1,4,5,6],\n * \t\t\t\tnext: \"walk\",\n * \t\t\t\tspeed: 0.5\n * \t\t\t}\n * \t\t}\n *\n *  </li>\n * </ol>\n * <strong>Note:</strong> the `speed` property was added in EaselJS 0.7.0. Earlier versions had a `frequency`\n * property instead, which was the inverse of `speed`. For example, a value of \"4\" would be 1/4 normal speed in\n * earlier versions, but is 4x normal speed in EaselJS 0.7.0+.\n *\n * <h4>framerate</h4>\n * Optional. Indicates the default framerate to play this spritesheet at in frames per second. See\n * {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} for more information.\n *\n * \t\tframerate: 20\n *\n * Note that the Sprite framerate will only work if the stage update method is provided with the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n * event generated by the {{#crossLink \"Ticker\"}}{{/crossLink}}.\n *\n * \t\tcreatejs.Ticker.on(\"tick\", handleTick);\n * \t\tfunction handleTick(event) {\n *\t\t\tstage.update(event);\n *\t\t}\n *\n * <h3>Example</h3>\n * To define a simple sprite sheet, with a single image \"sprites.jpg\" arranged in a regular 50x50 grid with three\n * animations: \"stand\" showing the first frame, \"run\" looping frame 1-5 inclusive, and \"jump\" playing frame 6-8 and\n * sequencing back to run.\n *\n * \t\tvar data = {\n * \t\t\timages: [\"sprites.jpg\"],\n * \t\t\tframes: {width:50, height:50},\n * \t\t\tanimations: {\n * \t\t\t\tstand:0,\n * \t\t\t\trun:[1,5],\n * \t\t\t\tjump:[6,8,\"run\"]\n * \t\t\t}\n * \t\t};\n * \t\tvar spriteSheet = new createjs.SpriteSheet(data);\n * \t\tvar animation = new createjs.Sprite(spriteSheet, \"run\");\n *\n * <h3>Generating SpriteSheet Images</h3>\n * Spritesheets can be created manually by combining images in PhotoShop, and specifying the frame size or\n * coordinates manually, however there are a number of tools that facilitate this.\n * <ul>\n *     <li>Exporting SpriteSheets or HTML5 content from Adobe Flash/Animate supports the EaselJS SpriteSheet format.</li>\n *     <li>The popular <a href=\"https://www.codeandweb.com/texturepacker/easeljs\" target=\"_blank\">Texture Packer</a> has\n *     EaselJS support.\n *     <li>SWF animations in Adobe Flash/Animate can be exported to SpriteSheets using <a href=\"http://createjs.com/zoe\" target=\"_blank\"></a></li>\n * </ul>\n *\n * <h3>Cross Origin Issues</h3>\n * <strong>Warning:</strong> Images loaded cross-origin will throw cross-origin security errors when interacted with\n * using:\n * <ul>\n *     <li>a mouse</li>\n *     <li>methods such as {{#crossLink \"Container/getObjectUnderPoint\"}}{{/crossLink}}</li>\n *     <li>Filters (see {{#crossLink \"Filter\"}}{{/crossLink}})</li>\n *     <li>caching (see {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}})</li>\n * </ul>\n * You can get around this by setting `crossOrigin` property on your images before passing them to EaselJS, or\n * setting the `crossOrigin` property on PreloadJS' LoadQueue or LoadItems.\n *\n * \t\tvar image = new Image();\n * \t\timg.crossOrigin=\"Anonymous\";\n * \t\timg.src = \"http://server-with-CORS-support.com/path/to/image.jpg\";\n *\n * If you pass string paths to SpriteSheets, they will not work cross-origin. The server that stores the image must\n * support cross-origin requests, or this will not work. For more information, check out\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\" target=\"_blank\">CORS overview on MDN</a>.\n *\n * @memberof easeljs\n * @extends core.EventDispatcher\n * @param {Object} data An object describing the SpriteSheet data.\n */\n\nclass SpriteSheet extends EventDispatcher {\n  constructor(data) {\n    super();\n    /**\n     * Indicates whether all images are finished loading.\n     * @type {Boolean}\n     * @readonly\n     */\n\n    this.complete = true;\n    /**\n     * Specifies the framerate to use by default for Sprite instances using the SpriteSheet. See the Sprite class\n     * {@link easeljs.Sprite#framerate} for more information.\n     * @type Number\n     */\n\n    this.framerate = 0;\n    /**\n     * @protected\n     * @type {Array}\n     */\n\n    this._animations = null;\n    /**\n     * @protected\n     * @type {Array}\n     */\n\n    this._frames = null;\n    /**\n     * @protected\n     * @type {Array}\n     */\n\n    this._images = null;\n    /**\n     * @protected\n     * @type {Object}\n     */\n\n    this._data = null;\n    /**\n     * @protected\n     * @type {Number}\n     */\n\n    this._loadCount = 0; // only used for simple frame defs:\n\n    /**\n     * @protected\n     * @type {Number}\n     */\n\n    this._frameHeight = 0;\n    /**\n     * @protected\n     * @type {Number}\n     */\n\n    this._frameWidth = 0;\n    /**\n     * @protected\n     * @type {Number}\n     */\n\n    this._numFrames = 0;\n    /**\n     * @protected\n     * @type {Number}\n     */\n\n    this._regX = 0;\n    /**\n     * @protected\n     * @type {Number}\n     */\n\n    this._regY = 0;\n    /**\n     * @protected\n     * @type {Number}\n     */\n\n    this._spacing = 0;\n    /**\n     * @protected\n     * @type {Number}\n     */\n\n    this._margin = 0;\n\n    this._parseData(data);\n  }\n  /**\n   * Returns an array of all available animation names available on this sprite sheet as strings.\n   * @type {Array}\n   * @readonly\n   */\n\n\n  get animations() {\n    return this._animations.slice();\n  }\n  /**\n   * Returns the total number of frames in the specified animation, or in the whole sprite\n   * sheet if the animation param is omitted. Returns 0 if the spritesheet relies on calculated frame counts, and\n   * the images have not been fully loaded.\n   * @param {String} animation The name of the animation to get a frame count for.\n   * @return {Number} The number of frames in the animation, or in the entire sprite sheet if the animation param is omitted.\n   */\n\n\n  getNumFrames(animation) {\n    if (animation == null) {\n      return this._frames ? this._frames.length : this._numFrames || 0;\n    } else {\n      let data = this._data[animation];\n\n      if (data == null) {\n        return 0;\n      } else {\n        return data.frames.length;\n      }\n    }\n  }\n  /**\n   * Returns an object defining the specified animation. The returned object contains:\n   * <ul>\n   * \t<li>frames: an array of the frame ids in the animation</li>\n   * \t<li>speed: the playback speed for this animation</li>\n   * \t<li>name: the name of the animation</li>\n   * \t<li>next: the default animation to play next. If the animation loops, the name and next property will be the same.</li>\n   * </ul>\n   * @param {String} name The name of the animation to get.\n   * @return {Object} a generic object with frames, speed, name, and next properties.\n   */\n\n\n  getAnimation(name) {\n    return this._data[name];\n  }\n  /**\n   * Returns an object specifying the image and source rect of the specified frame. The returned object has:\n   * <ul>\n   * \t<li>an image property holding a reference to the image object in which the frame is found</li>\n   * \t<li>a rect property containing a Rectangle instance which defines the boundaries for the frame within that image.</li>\n   * \t<li> A regX and regY property corresponding to the regX/Y values for the frame.\n   * </ul>\n   * @param {Number} frameIndex The index of the frame.\n   * @return {Object} a generic object with image and rect properties. Returns null if the frame does not exist.\n   */\n\n\n  getFrame(frameIndex) {\n    let frame;\n\n    if (this._frames && (frame = this._frames[frameIndex])) {\n      return frame;\n    }\n\n    return null;\n  }\n  /**\n   * Returns a {@link easeljs.Rectangle} instance defining the bounds of the specified frame relative\n   * to the origin.\n   *\n   * @param {Number} frameIndex The index of the frame.\n   * @param {easeljs.Rectangle} [rectangle] A Rectangle instance to copy the values into. By default a new instance is created.\n   * @return {easeljs.Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n   */\n\n\n  getFrameBounds(frameIndex, rectangle = new Rectangle()) {\n    let frame = this.getFrame(frameIndex);\n    return frame ? rectangle.setValues(-frame.regX, -frame.regY, frame.rect.width, frame.rect.height) : null;\n  }\n  /**\n   * Returns a string representation of this object.\n   * @return {String} a string representation of the instance.\n   */\n\n\n  toString() {\n    return `[${this.constructor.name}]`;\n  }\n  /**\n   * SpriteSheet cannot be cloned. A SpriteSheet can be shared by multiple Sprite instances without cloning it.\n   * @override\n   * @throws SpriteSheet cannot be cloned.\n   */\n\n\n  clone() {\n    throw \"SpriteSheet cannot be cloned.\";\n  }\n  /**\n   * @param {Object} data An object describing the SpriteSheet data.\n   * @protected\n   */\n\n\n  _parseData(data) {\n    if (data == null) {\n      return;\n    }\n\n    this.framerate = data.framerate || 0; // parse images:\n\n    if (data.images) {\n      for (let img of data.images) {\n        let a = this._images = [];\n        let src;\n\n        if (typeof img === \"string\") {\n          src = img;\n          img = document.createElement(\"img\");\n          img.src = src;\n        }\n\n        a.push(img);\n\n        if (!img.getContext && !img.naturalWidth) {\n          this._loadCount++;\n          this.complete = false;\n\n          img.onload = () => this._handleImageLoad(src);\n\n          img.onerror = () => this._handleImageError(src);\n        }\n      }\n    } // parse frames:\n\n\n    if (data.frames != null) {\n      if (Array.isArray(data.frames)) {\n        this._frames = [];\n\n        for (let arr of data.frames) {\n          this._frames.push({\n            image: this._images[arr[4] ? arr[4] : 0],\n            rect: new Rectangle(arr[0], arr[1], arr[2], arr[3]),\n            regX: arr[5] || 0,\n            regY: arr[6] || 0\n          });\n        }\n      } else {\n        let o = data.frames;\n        this._frameWidth = o.width;\n        this._frameHeight = o.height;\n        this._regX = o.regX || 0;\n        this._regY = o.regY || 0;\n        this._spacing = o.spacing || 0;\n        this._margin = o.margin || 0;\n        this._numFrames = o.count;\n\n        if (this._loadCount === 0) {\n          this._calculateFrames();\n        }\n      }\n    } // parse animations:\n\n\n    this._animations = [];\n\n    if (data.animations != null) {\n      this._data = {};\n      let o = data.animations;\n\n      for (let name in o) {\n        let anim = {\n          name\n        };\n        let obj = o[name];\n        let a;\n\n        if (typeof obj === \"number\") {\n          // single frame\n          a = anim.frames = [obj];\n        } else if (Array.isArray(obj)) {\n          // simple\n          if (obj.length === 1) {\n            anim.frames = [obj[0]];\n          } else {\n            anim.speed = obj[3];\n            anim.next = obj[2];\n            a = anim.frames = [];\n\n            for (let i = obj[0]; i <= obj[1]; i++) {\n              a.push(i);\n            }\n          }\n        } else {\n          // complex\n          anim.speed = obj.speed;\n          anim.next = obj.next;\n          let frames = obj.frames;\n          a = anim.frames = typeof frames === \"number\" ? [frames] : frames.slice(0);\n        }\n\n        if (anim.next === true || anim.next === undefined) {\n          anim.next = name;\n        } // loop\n\n\n        if (anim.next === false || a.length < 2 && anim.next === name) {\n          anim.next = null;\n        } // stop\n\n\n        if (!anim.speed) {\n          anim.speed = 1;\n        }\n\n        this._animations.push(name);\n\n        this._data[name] = anim;\n      }\n    }\n  }\n  /**\n   * @emits easeljs.SpriteSheet#event:complete\n   * @protected\n   * @param {Object} src\n   */\n\n\n  _handleImageLoad(src) {\n    if (--this._loadCount === 0) {\n      this._calculateFrames();\n\n      this.complete = true;\n      this.dispatchEvent(\"complete\");\n    }\n  }\n  /**\n   * @emits easeljs.SpriteSheet#event:complete\n   * @emits easeljs.SpriteSheet#event:error\n   * @protected\n   * @param {Object} src\n   */\n\n\n  _handleImageError(src) {\n    let errorEvent = new Event(\"error\");\n    errorEvent.src = src;\n    this.dispatchEvent(errorEvent); // Complete is still dispatched.\n\n    if (--this._loadCount === 0) {\n      this.dispatchEvent(\"complete\");\n    }\n  }\n  /**\n   * @protected\n   */\n\n\n  _calculateFrames() {\n    if (this._frames || this._frameWidth === 0) {\n      return;\n    }\n\n    this._frames = [];\n    let maxFrames = this._numFrames || 100000; // if we go over this, something is wrong.\n\n    let frameCount = 0,\n        frameWidth = this._frameWidth,\n        frameHeight = this._frameHeight;\n    let spacing = this._spacing,\n        margin = this._margin;\n\n    imgLoop: for (let i = 0, imgs = this._images, l = imgs.length; i < l; i++) {\n      let img = imgs[i],\n          imgW = img.width || img.naturalWidth,\n          imgH = img.height || img.naturalHeight;\n      let y = margin;\n\n      while (y <= imgH - margin - frameHeight) {\n        let x = margin;\n\n        while (x <= imgW - margin - frameWidth) {\n          if (frameCount >= maxFrames) {\n            break imgLoop;\n          }\n\n          frameCount++;\n\n          this._frames.push({\n            image: img,\n            rect: new Rectangle(x, y, frameWidth, frameHeight),\n            regX: this._regX,\n            regY: this._regY\n          });\n\n          x += frameWidth + spacing;\n        }\n\n        y += frameHeight + spacing;\n      }\n    }\n\n    this._numFrames = frameCount;\n  }\n\n}\n/**\n * Dispatched when all images are loaded.  Note that this only fires if the images\n * were not fully loaded when the sprite sheet was initialized. You should check the complete property\n * to prior to adding a listener. Ex.\n *\n * \tvar sheet = new createjs.SpriteSheet(data);\n * \tif (!sheet.complete) {\n * \t\t// not preloaded, listen for the complete event:\n * \t\tsheet.addEventListener(\"complete\", handler);\n * \t}\n *\n * @event easeljs.SpriteSheet#complete\n * @property {Object} target The object that dispatched the event.\n * @property {String} type The event type.\n * @since 0.6.0\n */\n\n/**\n * Dispatched when getFrame is called with a valid frame index. This is primarily intended for use by {@link easeljs.SpriteSheetBuilder}\n * when doing on-demand rendering.\n * @event easeljs.SpriteSheet#getframe\n * @property {Number} index The frame index.\n * @property {Object} frame The frame object that getFrame will return.\n */\n\n/**\n * Dispatched when an image encounters an error. A SpriteSheet will dispatch an error event for each image that\n * encounters an error, and will still dispatch a {@link easeljs.SpriteSheet#event:complete}\n * event once all images are finished processing, even if an error is encountered.\n * @event easeljs.SpriteSheet#error\n * @property {String} src The source of the image that failed to load.\n * @since 0.8.2\n */\n\n/**\n * @license Text\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * Display one or more lines of dynamic text (not user editable) in the display list. Line wrapping support (using the\n * lineWidth) is very basic, wrapping on spaces and tabs only. Note that as an alternative to Text, you can position HTML\n * text above or below the canvas relative to items in the display list using the {@link easeljs.DisplayObject#localToGlobal}\n * method, or using {@link easeljs.DOMElement}.\n *\n * <b>Please note that Text does not support HTML text, and can only display one font style at a time.</b> To use\n * multiple font styles, you will need to create multiple text instances, and position them manually.\n *\n * CreateJS Text supports web fonts (the same rules as Canvas). The font must be loaded and supported by the browser\n * before it can be displayed.\n *\n * <strong>Note:</strong> Text can be expensive to generate, so cache instances where possible. Be aware that not all\n * browsers will render Text exactly the same.\n *\n * @memberof easeljs\n * @extends easeljs.DisplayObject\n * @example\n * let text = new Text(\"Hello World\", \"20px Arial\", \"#ff7700\");\n * text.x = 100;\n * text.textBaseline = \"alphabetic\";\n *\n * @param {String} [text] The text to display.\n * @param {String} [font] The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold\n * 36px Arial\").\n * @param {String} [color] The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex.\n * \"#F00\", \"red\", or \"#FF0000\").\n */\n\nclass Text extends DisplayObject {\n  constructor(text, font, color) {\n    super();\n    /**\n     * The text to display.\n     * @type {String}\n     */\n\n    this.text = text;\n    /**\n     * The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold 36px Arial\").\n     * @type {String}\n     */\n\n    this.font = font;\n    /**\n     * The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex. \"#F00\"). Default is \"#000\".\n     * It will also accept valid canvas fillStyle values.\n     * @type {String}\n     */\n\n    this.color = color;\n    /**\n     * The horizontal text alignment. Any of \"start\", \"end\", \"left\", \"right\", and \"center\".\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles \"WHATWG spec\"}\n     * @type {String}\n     * @default left\n     */\n\n    this.textAlign = \"left\";\n    /**\n     * The vertical alignment point on the font. Any of \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", or \"bottom\".\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles \"WHATWG spec\"}\n     * @type {String}\n     * @default top\n    */\n\n    this.textBaseline = \"top\";\n    /**\n     * The maximum width to draw the text. If maxWidth is specified (not null), the text will be condensed or\n     * shrunk to make it fit in this width.\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles \"WHATWG spec\"}\n     * @type {Number}\n    */\n\n    this.maxWidth = null;\n    /**\n     * If greater than 0, the text will be drawn as a stroke (outline) of the specified width.\n     * @type {Number}\n     */\n\n    this.outline = 0;\n    /**\n     * Indicates the line height (vertical distance between baselines) for multi-line text. If null or 0,\n     * the value of getMeasuredLineHeight is used.\n     * @type {Number}\n     * @default 0\n     */\n\n    this.lineHeight = 0;\n    /**\n     * Indicates the maximum width for a line of text before it is wrapped to multiple lines. If null,\n     * the text will not be wrapped.\n     * @type {Number}\n     */\n\n    this.lineWidth = null;\n  }\n\n  isVisible() {\n    let hasContent = this.cacheCanvas || this.text != null && this.text !== \"\";\n    return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n  }\n\n  draw(ctx, ignoreCache) {\n    if (super.draw(ctx, ignoreCache)) {\n      return true;\n    }\n\n    let col = this.color || \"#000\";\n\n    if (this.outline) {\n      ctx.strokeStyle = col;\n      ctx.lineWidth = this.outline * 1;\n    } else {\n      ctx.fillStyle = col;\n    }\n\n    this._drawText(this._prepContext(ctx));\n\n    return true;\n  }\n  /**\n   * Returns the measured, untransformed width of the text without wrapping. Use getBounds for a more robust value.\n   * @return {Number} The measured, untransformed width of the text.\n   */\n\n\n  getMeasuredWidth() {\n    return this._getMeasuredWidth(this.text);\n  }\n  /**\n   * Returns an approximate line height of the text, ignoring the lineHeight property. This is based on the measured\n   * width of a \"M\" character multiplied by 1.2, which provides an approximate line height for most fonts.\n   * @return {Number} an approximate line height of the text, ignoring the lineHeight property. This is\n   * based on the measured width of a \"M\" character multiplied by 1.2, which approximates em for most fonts.\n   */\n\n\n  getMeasuredLineHeight() {\n    return this._getMeasuredWidth(\"M\") * 1.2;\n  }\n  /**\n   * Returns the approximate height of multi-line text by multiplying the number of lines against either the\n   * `lineHeight` (if specified) or {@link easeljs.Text#getMeasuredLineHeight}. Note that\n   * this operation requires the text flowing logic to run, which has an associated CPU cost.\n   * @return {Number} The approximate height of the untransformed multi-line text.\n   */\n\n\n  getMeasuredHeight() {\n    return this._drawText(null, {}).height;\n  }\n\n  getBounds() {\n    let rect = super.getBounds();\n\n    if (rect) {\n      return rect;\n    }\n\n    if (this.text == null || this.text === \"\") {\n      return null;\n    }\n\n    let o = this._drawText(null, {});\n\n    let w = this.maxWidth && this.maxWidth < o.width ? this.maxWidth : o.width;\n    let x = w * Text.H_OFFSETS[this.textAlign || \"left\"];\n    let lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n    let y = lineHeight * Text.V_OFFSETS[this.textBaseline || \"top\"];\n    return this._rectangle.setValues(x, y, w, o.height);\n  }\n  /**\n   * Returns an object with width, height, and lines properties. The width and height are the visual width and height\n   * of the drawn text. The lines property contains an array of strings, one for\n   * each line of text that will be drawn, accounting for line breaks and wrapping. These strings have trailing\n   * whitespace removed.\n   * @return {Object} An object with width, height, and lines properties.\n   */\n\n\n  getMetrics() {\n    let o = {\n      lines: []\n    };\n    o.lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n    o.vOffset = o.lineHeight * Text.V_OFFSETS[this.textBaseline || \"top\"];\n    return this._drawText(null, o, o.lines);\n  }\n  /**\n   * Returns a clone of the Text instance.\n   * @return {easeljs.Text} a clone of the Text instance.\n   */\n\n\n  clone() {\n    return this._cloneProps(new Text(this.text, this.font, this.color));\n  }\n  /**\n   * Returns a string representation of this object.\n   * @override\n   * @return {String} a string representation of the instance.\n   */\n\n\n  toString() {\n    return `[${this.constructor.name} (text=${this.text.length > 20 ? `${this.text.substr(0, 17)}...` : this.text})]`;\n  }\n  /**\n   * @param {easeljs.Text} o\n   * @protected\n   * @return {easeljs.Text} o\n   */\n\n\n  _cloneProps(o) {\n    super._cloneProps(o);\n\n    o.textAlign = this.textAlign;\n    o.textBaseline = this.textBaseline;\n    o.maxWidth = this.maxWidth;\n    o.outline = this.outline;\n    o.lineHeight = this.lineHeight;\n    o.lineWidth = this.lineWidth;\n    return o;\n  }\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {CanvasRenderingContext2D}\n   * @protected\n   */\n\n\n  _prepContext(ctx) {\n    ctx.font = this.font || \"10px sans-serif\";\n    ctx.textAlign = this.textAlign || \"left\";\n    ctx.textBaseline = this.textBaseline || \"top\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 2.5;\n    return ctx;\n  }\n  /**\n   * Draws multiline text.\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Object} o\n   * @param {Array} lines\n   * @return {Object}\n   * @protected\n   */\n\n\n  _drawText(ctx, o, lines) {\n    const paint = !!ctx;\n\n    if (!paint) {\n      ctx = Text._ctx;\n      ctx.save();\n\n      this._prepContext(ctx);\n    }\n\n    let lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n    let maxW = 0,\n        count = 0;\n    let hardLines = String(this.text).split(/(?:\\r\\n|\\r|\\n)/);\n\n    for (let str of hardLines) {\n      let w = null;\n\n      if (this.lineWidth != null && (w = ctx.measureText(str).width) > this.lineWidth) {\n        // text wrapping:\n        let words = str.split(/(\\s)/);\n        str = words[0];\n        w = ctx.measureText(str).width;\n        const l = words.length;\n\n        for (let i = 1; i < l; i += 2) {\n          // Line needs to wrap:\n          let wordW = ctx.measureText(words[i] + words[i + 1]).width;\n\n          if (w + wordW > this.lineWidth) {\n            if (paint) {\n              this._drawTextLine(ctx, str, count * lineHeight);\n            }\n\n            if (lines) {\n              lines.push(str);\n            }\n\n            if (w > maxW) {\n              maxW = w;\n            }\n\n            str = words[i + 1];\n            w = ctx.measureText(str).width;\n            count++;\n          } else {\n            str += words[i] + words[i + 1];\n            w += wordW;\n          }\n        }\n      }\n\n      if (paint) {\n        this._drawTextLine(ctx, str, count * lineHeight);\n      }\n\n      if (lines) {\n        lines.push(str);\n      }\n\n      if (o && w == null) {\n        w = ctx.measureText(str).width;\n      }\n\n      if (w > maxW) {\n        maxW = w;\n      }\n\n      count++;\n    }\n\n    if (o) {\n      o.width = maxW;\n      o.height = count * lineHeight;\n    }\n\n    if (!paint) {\n      ctx.restore();\n    }\n\n    return o;\n  }\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {String} text\n   * @param {Number} y\n   * @protected\n   */\n\n\n  _drawTextLine(ctx, text, y) {\n    // Chrome 17 will fail to draw the text if the last param is included but null, so we feed it a large value instead:\n    if (this.outline) {\n      ctx.strokeText(text, 0, y, this.maxWidth || 0xFFFF);\n    } else {\n      ctx.fillText(text, 0, y, this.maxWidth || 0xFFFF);\n    }\n  }\n  /**\n   * @param {String} text\n   * @protected\n   */\n\n\n  _getMeasuredWidth(text) {\n    let ctx = Text._ctx;\n    ctx.save();\n\n    let w = this._prepContext(ctx).measureText(text).width;\n\n    ctx.restore();\n    return w;\n  }\n\n}\n/**\n * Lookup table for the ratio to offset bounds x calculations based on the textAlign property.\n * @type {Object}\n * @readonly\n * @static\n */\n\nText.H_OFFSETS = {\n  start: 0,\n  left: 0,\n  center: -0.5,\n  end: -1,\n  right: -1\n};\n/**\n * Lookup table for the ratio to offset bounds y calculations based on the textBaseline property.\n * @type {Object}\n * @readonly\n * @static\n */\n\nText.V_OFFSETS = {\n  top: 0,\n  hanging: -0.01,\n  middle: -0.4,\n  alphabetic: -0.8,\n  ideographic: -0.85,\n  bottom: -1\n};\n/**\n * @property _ctx\n * @type {CanvasRenderingContext2D}\n * @private\n * @static\n */\n\nText._ctx = createCanvas().getContext(\"2d\");\n\n/**\n * @license AlphaMapFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * Applies a greyscale alpha map image (or canvas) to the target, such that the alpha channel of the result will\n * be copied from the red channel of the map, and the RGB channels will be copied from the target.\n *\n * Generally, it is recommended that you use {@link easeljs.AlphaMaskFilter}, because it has much better performance.\n *\n * @memberof easeljs\n * @extends easeljs.Filter\n * @example *\n * let box = new Shape();\n * box.graphics.beginLinearGradientFill([\"#ff0000\", \"#0000ff\"], [0, 1], 0, 0, 0, 100)\n * box.graphics.drawRect(0, 0, 100, 100);\n * box.cache(0, 0, 100, 100);\n * let bmp = new Bitmap(\"path/to/image.jpg\");\n * bmp.filters = [ new AlphaMapFilter(box.cacheCanvas) ];\n * bmp.cache(0, 0, 100, 100);\n *\n * @param {HTMLImageElement | HTMLCanvasElement} alphaMap The greyscale image (or canvas) to use as the alpha value for the\n * result. This should be exactly the same dimensions as the target.\n */\n\nclass AlphaMapFilter extends Filter {\n  constructor(alphaMap) {\n    super();\n    /**\n     * The greyscale image (or canvas) to use as the alpha value for the result. This should be exactly the same\n     * dimensions as the target.\n     * @type {HTMLImageElement | HTMLCanvasElement}\n     */\n\n    this.alphaMap = alphaMap;\n    /**\n     * @protected\n     * @type {HTMLImageElement | HTMLCanvasElement}\n     * @default null\n     */\n\n    this._alphaMap = null;\n    /**\n     * @protected\n     * @type {Uint8ClampedArray}\n     * @default null\n     */\n\n    this._mapData = null;\n    /**\n     * @protected\n     * @type {*}\n     * @default null\n     */\n\n    this._mapTexture = null;\n    this.FRAG_SHADER_BODY = `\n\t\t\tuniform sampler2D uAlphaSampler;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\t\t\t\tvec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\n\n\t\t\t\t// some image formats can have transparent white rgba(1,1,1, 0) when put on the GPU, this means we need a slight tweak\n\t\t\t\t// using ceil ensure that the colour will be used so long as it exists but pure transparency will be treated black\n\t\t\t\tgl_FragColor = vec4(color.rgb, color.a * (alphaMap.r * ceil(alphaMap.a)));\n\t\t\t}\n\t\t`;\n  }\n  /**\n   * @todo docs\n   * @param {*} gl\n   * @param {*} stage\n   * @param {*} shaderProgram\n   */\n\n\n  shaderParamSetup(gl, stage, shaderProgram) {\n    if (!this._mapTexture) {\n      this._mapTexture = gl.createTexture();\n    }\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n    stage.setTextureParams(gl);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.alphaMap);\n    gl.uniform1i(gl.getUniformLocation(shaderProgram, \"uAlphaSampler\"), 1);\n  }\n  /**\n   * @return {easeljs.AlphaMapFilter}\n   */\n\n\n  clone() {\n    let o = new AlphaMapFilter(this.alphaMap);\n    o._alphaMap = this._alphaMap;\n    o._mapData = this._mapData;\n    return o;\n  }\n\n  _applyFilter(imageData) {\n    if (!this.alphaMap) {\n      return true;\n    }\n\n    if (!this._prepAlphaMap()) {\n      return false;\n    } // TODO: update to support scenarios where the target has different dimensions.\n\n\n    let data = imageData.data;\n    let map = this._mapData;\n    const l = data.length;\n\n    for (let i = 0; i < l; i += 4) {\n      data[i + 3] = map[i] || 0;\n    }\n\n    return true;\n  }\n  /**\n   * @protected\n   */\n\n\n  _prepAlphaMap() {\n    if (!this.alphaMap) {\n      return false;\n    }\n\n    if (this.alphaMap === this._alphaMap && this._mapData) {\n      return true;\n    }\n\n    this._mapData = null;\n    let map = this._alphaMap = this.alphaMap;\n    let canvas = map;\n    let ctx;\n\n    if (map instanceof HTMLCanvasElement) {\n      ctx = canvas.getContext(\"2d\");\n    } else {\n      canvas = window.createjs && createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n      canvas.width = map.width;\n      canvas.height = map.height;\n      ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(map, 0, 0);\n    }\n\n    try {\n      this._mapData = ctx.getImageData(0, 0, map.width, map.height).data;\n      return true;\n    } catch (e) {\n      //if (!this.suppressCrossDomainErrors) throw new Error(\"unable to access local image data: \" + e);\n      return false;\n    }\n  }\n\n}\n\n/**\n * @license AlphaMaskFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * Applies the alpha from the mask image (or canvas) to the target, such that the alpha channel of the result will\n * be derived from the mask, and the RGB channels will be copied from the target. This can be used, for example, to\n * apply an alpha mask to a display object. This can also be used to combine a JPG compressed RGB image with a PNG32\n * alpha mask, which can result in a much smaller file size than a single PNG32 containing ARGB.\n *\n * <b>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</b>\n *\n * @memberof easeljs\n * @extends easeljs.Filter\n * @example\n * var box = new Shape();\n * box.graphics.beginLinearGradientFill([\"#000000\", \"rgba(0, 0, 0, 0)\"], [0, 1], 0, 0, 100, 100)\n * box.graphics.drawRect(0, 0, 100, 100);\n * box.cache(0, 0, 100, 100);\n * var bmp = new Bitmap(\"path/to/image.jpg\");\n * bmp.filters = [ new AlphaMaskFilter(box.cacheCanvas) ];\n * bmp.cache(0, 0, 100, 100);\n *\n * @param {HTMLImageElement | HTMLCanvasElement} mask\n */\n\nclass AlphaMaskFilter extends Filter {\n  constructor(mask) {\n    super();\n    /**\n     * The image (or canvas) to use as the mask.\n     * @type {HTMLImageElement | HTMLCanvasElement}\n     */\n\n    this.mask = mask;\n    this.usesContext = true;\n    this.FRAG_SHADER_BODY = `\n\t\t\tuniform sampler2D uAlphaSampler;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\t\t\t\tvec4 alphaMap = texture2D(uAlphaSampler, vTextureCoord);\n\n\t\t\t\tgl_FragColor = vec4(color.rgb, color.a * alphaMap.a);\n\t\t\t}\n\t\t`;\n  }\n  /**\n   * Applies the filter to the specified context.\n   *\n   * <strong>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</strong>\n   * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n   * @param {Number} x The x position to use for the source rect.\n   * @param {Number} y The y position to use for the source rect.\n   * @param {Number} width The width to use for the source rect.\n   * @param {Number} height The height to use for the source rect.\n   * @param {CanvasRenderingContext2D} [targetCtx] NOT SUPPORTED IN THIS FILTER. The 2D context to draw the result to. Defaults to the context passed to ctx.\n   * @param {Number} [targetX] NOT SUPPORTED IN THIS FILTER. The x position to draw the result to. Defaults to the value passed to x.\n   * @param {Number} [targetY] NOT SUPPORTED IN THIS FILTER. The y position to draw the result to. Defaults to the value passed to y.\n   * @return {Boolean} If the filter was applied successfully.\n   */\n\n\n  applyFilter(ctx, x, y, width, height, targetCtx, targetX, targetY) {\n    if (!this.mask) {\n      return true;\n    }\n\n    targetCtx = targetCtx || ctx;\n\n    if (targetX == null) {\n      targetX = x;\n    }\n\n    if (targetY == null) {\n      targetY = y;\n    }\n\n    targetCtx.save();\n\n    if (ctx != targetCtx) {\n      // TODO: support targetCtx and targetX/Y\n      // clearRect, then draw the ctx in?\n      return false;\n    }\n\n    targetCtx.globalCompositeOperation = \"destination-in\";\n    targetCtx.drawImage(this.mask, targetX, targetY);\n    targetCtx.restore();\n    return true;\n  }\n  /**\n   * @return {easeljs.AlphaMaskFilter}\n   */\n\n\n  clone() {\n    return new AlphaMaskFilter(this.mask);\n  }\n  /**\n   * @todo docs\n   * @param {*} gl\n   * @param {*} stage\n   * @param {*} shaderProgram\n   */\n\n\n  shaderParamSetup(gl, stage, shaderProgram) {\n    if (!this._mapTexture) {\n      this._mapTexture = gl.createTexture();\n    }\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, this._mapTexture);\n    stage.setTextureParams(gl);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.mask);\n    gl.uniform1i(gl.getUniformLocation(shaderProgram, \"uAlphaSampler\"), 1);\n  }\n\n}\n\n/**\n * @license BlurFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * BoxBlur Algorithm by Mario Klingemann, quasimondo.com\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * Applies a box blur to DisplayObjects. Note that this filter is fairly CPU intensive, particularly if the quality is\n * set higher than 1.\n *\n * @memberof easeljs\n * @extends easeljs.Filter\n * @example\n * let shape = new Shape().set({x:100,y:100});\n * shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n * let blurFilter = new BlurFilter(5, 5, 1);\n * shape.filters = [blurFilter];\n * let bounds = blurFilter.getBounds();\n * shape.cache(-50+bounds.x, -50+bounds.y, 100+bounds.width, 100+bounds.height);\n *\n * @param {Number} [blurX=0] The horizontal blur radius in pixels.\n * @param {Number} [blurY=0] The vertical blur radius in pixels.\n * @param {Number} [quality=1] The number of blur iterations.\n */\n\nclass BlurFilter extends Filter {\n  constructor(blurX = 0, blurY = 0, quality = 1) {\n    super();\n    /**\n     * @protected\n     * @default 0\n     * @type {Number}\n     */\n\n    this._blurX = blurX;\n    /**\n     * @protected\n     * @type {Array}\n     */\n\n    this._blurXTable = [];\n    /**\n     * @protected\n     * @type {Number}\n     * @default null\n     */\n\n    this._lastBlurX = null;\n    /**\n     * @default 0\n     * @type {Number}\n     */\n\n    this._blurY = blurY;\n    /**\n     * @protected\n     * @type {Array}\n     */\n\n    this._blurYTable = [];\n    /**\n     * @protected\n     * @type {Number}\n     * @default null\n     */\n\n    this._lastBlurY = null;\n    /**\n     * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n     * smoother blur, but take twice as long to run.\n     * @default 1\n     * @type {Number}\n     */\n\n    this._quality = isNaN(quality) || quality < 1 ? 1 : quality;\n    /**\n     * @protected\n     * @type {Number}\n     * @default null\n     */\n\n    this._lastQuality = null;\n    this.FRAG_SHADER_TEMPLATE = `\n\t\t\tuniform float xWeight[{{blurX}}];\n\t\t\tuniform float yWeight[{{blurY}}];\n\t\t\tuniform vec2 textureOffset;\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = vec4(0.0);\n\n\t\t\t\tfloat xAdj = ({{blurX}}.0-1.0)/2.0;\n\t\t\t\tfloat yAdj = ({{blurY}}.0-1.0)/2.0;\n\t\t\t\tvec2 sampleOffset;\n\n\t\t\t\tfor(int i=0; i<{{blurX}}; i++) {\n\t\t\t\t\tfor(int j=0; j<{{blurY}}; j++) {\n\t\t\t\t\t\tsampleOffset = vRenderCoord + (textureOffset * vec2(float(i)-xAdj, float(j)-yAdj));\n\t\t\t\t\t\tcolor += texture2D(uSampler, sampleOffset) * (xWeight[i] * yWeight[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = color.rgba;\n\t\t\t}\n\t\t`;\n  }\n  /**\n   * Horizontal blur radius in pixels.\n   * @type {Number}\n   */\n\n\n  get blurX() {\n    return this._blurX;\n  }\n\n  set blurX(blurX) {\n    if (isNaN(blurX) || blurX < 0) {\n      blurX = 0;\n    }\n\n    this._blurX = blurX;\n  }\n  /**\n   * Vertical blur radius in pixels.\n   * @type {Number}\n   */\n\n\n  get blurY() {\n    return this._blurY;\n  }\n\n  set blurY(blurY) {\n    if (isNaN(blurY) || blurY < 0) {\n      blurY = 0;\n    }\n\n    this._blurY = blurY;\n  }\n  /**\n   * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n   * smoother blur, but take twice as long to run.\n   * @type {Number}\n   */\n\n\n  get quality() {\n    return this._quality | 0;\n  }\n\n  set quality(quality) {\n    if (isNaN(quality) || quality < 0) {\n      quality = 0;\n    }\n\n    this._quality = quality;\n  }\n  /**\n   * @protected\n   * @type {*}\n   */\n\n\n  get _buildShader() {\n    const xChange = this._lastBlurX !== this._blurX;\n    const yChange = this._lastBlurY !== this._blurY;\n    const qChange = this._lastQuality !== this._quality;\n\n    if (xChange || yChange || qChange) {\n      if (xChange || qChange) {\n        this._blurXTable = this._getTable(this._blurX * this._quality);\n      }\n\n      if (yChange || qChange) {\n        this._blurYTable = this._getTable(this._blurY * this._quality);\n      }\n\n      this._updateShader();\n\n      this._lastBlurX = this._blurX;\n      this._lastBlurY = this._blurY;\n      this._lastQuality = this._quality;\n      return undefined; // force a rebuild\n    }\n\n    return this._compiledShader;\n  }\n\n  set _builtShader(value) {\n    this._compiledShader = value;\n  }\n\n  shaderParamSetup(gl, stage, shaderProgram) {\n    // load the normalized gaussian weight tables\n    gl.uniform1fv(gl.getUniformLocation(shaderProgram, \"xWeight\"), this._blurXTable);\n    gl.uniform1fv(gl.getUniformLocation(shaderProgram, \"yWeight\"), this._blurYTable); // what is the size of a single pixel in -1, 1 (webGL) space\n\n    gl.uniform2f(gl.getUniformLocation(shaderProgram, \"textureOffset\"), 2 / (stage._viewportWidth * this._quality), 2 / (stage._viewportHeight * this._quality));\n  }\n\n  getBounds(rect) {\n    let x = this.blurX | 0,\n        y = this.blurY | 0;\n\n    if (x <= 0 && y <= 0) {\n      return rect;\n    }\n\n    let q = Math.pow(this.quality, 0.2);\n    return (rect || new Rectangle()).pad(y * q + 1, x * q + 1, y * q + 1, x * q + 1);\n  }\n  /**\n   * @return {easeljs.BlurFilter}\n   */\n\n\n  clone() {\n    return new BlurFilter(this.blurX, this.blurY, this.quality);\n  }\n\n  _updateShader() {\n    let result = this.FRAG_SHADER_TEMPLATE;\n    result = result.replace(/{{blurX}}/g, this._blurXTable.length.toFixed(0));\n    result = result.replace(/{{blurY}}/g, this._blurYTable.length.toFixed(0));\n    this.FRAG_SHADER_BODY = result;\n  }\n\n  _getTable(spread) {\n    const EDGE = 4.2;\n\n    if (spread <= 1) {\n      return [1];\n    }\n\n    let result = [];\n    let count = Math.ceil(spread * 2);\n    count += count % 2 ? 0 : 1;\n    let adjust = count / 2 | 0;\n\n    for (let i = -adjust; i <= adjust; i++) {\n      let x = i / adjust * EDGE;\n      result.push(1 / Math.sqrt(2 * Math.PI) * Math.pow(Math.E, -(Math.pow(x, 2) / 4)));\n    }\n\n    let factor = result.reduce((a, b) => a + b, 0);\n    return result.map(currentValue => currentValue / factor);\n  }\n\n  _applyFilter(imageData) {\n    let radiusX = this._blurX >> 1;\n    if (isNaN(radiusX) || radiusX < 0) return false;\n    let radiusY = this._blurY >> 1;\n    if (isNaN(radiusY) || radiusY < 0) return false;\n    if (radiusX === 0 && radiusY === 0) return false;\n    let iterations = this.quality;\n    if (isNaN(iterations) || iterations < 1) iterations = 1;\n    iterations |= 0;\n    if (iterations > 3) iterations = 3;\n    if (iterations < 1) iterations = 1;\n    let px = imageData.data;\n    let x = 0,\n        y = 0,\n        i = 0,\n        p = 0,\n        yp = 0,\n        yi = 0,\n        yw = 0,\n        r = 0,\n        g = 0,\n        b = 0,\n        a = 0,\n        pr = 0,\n        pg = 0,\n        pb = 0,\n        pa = 0;\n    let divx = radiusX + radiusX + 1 | 0;\n    let divy = radiusY + radiusY + 1 | 0;\n    let w = imageData.width | 0;\n    let h = imageData.height | 0;\n    let w1 = w - 1 | 0;\n    let h1 = h - 1 | 0;\n    let rxp1 = radiusX + 1 | 0;\n    let ryp1 = radiusY + 1 | 0;\n    let ssx = {\n      r: 0,\n      b: 0,\n      g: 0,\n      a: 0\n    };\n    let sx = ssx;\n\n    for (i = 1; i < divx; i++) {\n      sx = sx.n = {\n        r: 0,\n        b: 0,\n        g: 0,\n        a: 0\n      };\n    }\n\n    sx.n = ssx;\n    let ssy = {\n      r: 0,\n      b: 0,\n      g: 0,\n      a: 0\n    };\n    let sy = ssy;\n\n    for (i = 1; i < divy; i++) {\n      sy = sy.n = {\n        r: 0,\n        b: 0,\n        g: 0,\n        a: 0\n      };\n    }\n\n    sy.n = ssy;\n    let si = null;\n    let mtx = BlurFilter.MUL_TABLE[radiusX] | 0;\n    let stx = BlurFilter.SHG_TABLE[radiusX] | 0;\n    let mty = BlurFilter.MUL_TABLE[radiusY] | 0;\n    let sty = BlurFilter.SHG_TABLE[radiusY] | 0;\n\n    while (iterations-- > 0) {\n      yw = yi = 0;\n      let ms = mtx;\n      let ss = stx;\n\n      for (y = h; --y > -1;) {\n        r = rxp1 * (pr = px[yi | 0]);\n        g = rxp1 * (pg = px[yi + 1 | 0]);\n        b = rxp1 * (pb = px[yi + 2 | 0]);\n        a = rxp1 * (pa = px[yi + 3 | 0]);\n        sx = ssx;\n\n        for (i = rxp1; --i > -1;) {\n          sx.r = pr;\n          sx.g = pg;\n          sx.b = pb;\n          sx.a = pa;\n          sx = sx.n;\n        }\n\n        for (i = 1; i < rxp1; i++) {\n          p = yi + ((w1 < i ? w1 : i) << 2) | 0;\n          r += sx.r = px[p];\n          g += sx.g = px[p + 1];\n          b += sx.b = px[p + 2];\n          a += sx.a = px[p + 3];\n          sx = sx.n;\n        }\n\n        si = ssx;\n\n        for (x = 0; x < w; x++) {\n          px[yi++] = r * ms >>> ss;\n          px[yi++] = g * ms >>> ss;\n          px[yi++] = b * ms >>> ss;\n          px[yi++] = a * ms >>> ss;\n          p = yw + ((p = x + radiusX + 1) < w1 ? p : w1) << 2;\n          r -= si.r - (si.r = px[p]);\n          g -= si.g - (si.g = px[p + 1]);\n          b -= si.b - (si.b = px[p + 2]);\n          a -= si.a - (si.a = px[p + 3]);\n          si = si.n;\n        }\n\n        yw += w;\n      }\n\n      ms = mty;\n      ss = sty;\n\n      for (x = 0; x < w; x++) {\n        yi = x << 2 | 0;\n        r = ryp1 * (pr = px[yi]) | 0;\n        g = ryp1 * (pg = px[yi + 1 | 0]) | 0;\n        b = ryp1 * (pb = px[yi + 2 | 0]) | 0;\n        a = ryp1 * (pa = px[yi + 3 | 0]) | 0;\n        sy = ssy;\n\n        for (i = 0; i < ryp1; i++) {\n          sy.r = pr;\n          sy.g = pg;\n          sy.b = pb;\n          sy.a = pa;\n          sy = sy.n;\n        }\n\n        yp = w;\n\n        for (i = 1; i <= radiusY; i++) {\n          yi = yp + x << 2;\n          r += sy.r = px[yi];\n          g += sy.g = px[yi + 1];\n          b += sy.b = px[yi + 2];\n          a += sy.a = px[yi + 3];\n          sy = sy.n;\n\n          if (i < h1) {\n            yp += w;\n          }\n        }\n\n        yi = x;\n        si = ssy;\n\n        if (iterations > 0) {\n          for (y = 0; y < h; y++) {\n            p = yi << 2;\n            px[p + 3] = pa = a * ms >>> ss;\n\n            if (pa > 0) {\n              px[p] = r * ms >>> ss;\n              px[p + 1] = g * ms >>> ss;\n              px[p + 2] = b * ms >>> ss;\n            } else {\n              px[p] = px[p + 1] = px[p + 2] = 0;\n            }\n\n            p = x + ((p = y + ryp1) < h1 ? p : h1) * w << 2;\n            r -= si.r - (si.r = px[p]);\n            g -= si.g - (si.g = px[p + 1]);\n            b -= si.b - (si.b = px[p + 2]);\n            a -= si.a - (si.a = px[p + 3]);\n            si = si.n;\n            yi += w;\n          }\n        } else {\n          for (y = 0; y < h; y++) {\n            p = yi << 2;\n            px[p + 3] = pa = a * ms >>> ss;\n\n            if (pa > 0) {\n              pa = 255 / pa;\n              px[p] = (r * ms >>> ss) * pa;\n              px[p + 1] = (g * ms >>> ss) * pa;\n              px[p + 2] = (b * ms >>> ss) * pa;\n            } else {\n              px[p] = px[p + 1] = px[p + 2] = 0;\n            }\n\n            p = x + ((p = y + ryp1) < h1 ? p : h1) * w << 2;\n            r -= si.r - (si.r = px[p]);\n            g -= si.g - (si.g = px[p + 1]);\n            b -= si.b - (si.b = px[p + 2]);\n            a -= si.a - (si.a = px[p + 3]);\n            si = si.n;\n            yi += w;\n          }\n        }\n      }\n    }\n\n    return true;\n  }\n\n}\n/**\n * Array of multiply values for blur calculations.\n * @type {Array}\n * @protected\n * @readonly\n * @static\n */\n\nBlurFilter.MUL_TABLE = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1];\n/**\n * Array of shift values for blur calculations.\n * @type {Array}\n * @protected\n * @static\n */\n\nBlurFilter.SHG_TABLE = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9];\n\n/**\n * @license ColorFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * Applies a color transform to DisplayObjects.\n *\n * @memberof easeljs\n * @extends easeljs.Filter\n * @example\n * let shape = new Shape().set({ x: 100, y: 100 });\n * shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n * shape.filters = [ new ColorFilter(0,0,0,1, 0,0,255,0) ];\n * shape.cache(-50, -50, 100, 100);\n *\n * @param {Number} [redMultiplier=1] The amount to multiply against the red channel. This is a range between 0 and 1.\n * @param {Number} [greenMultiplier=1] The amount to multiply against the green channel. This is a range between 0 and 1.\n * @param {Number} [blueMultiplier=1] The amount to multiply against the blue channel. This is a range between 0 and 1.\n * @param {Number} [alphaMultiplier=1] The amount to multiply against the alpha channel. This is a range between 0 and 1.\n * @param {Number} [redOffset=0] The amount to add to the red channel after it has been multiplied. This is a range\n * between -255 and 255.\n * @param {Number} [greenOffset=0] The amount to add to the green channel after it has been multiplied. This is a range\n * between -255 and 255.\n * @param {Number} [blueOffset=0] The amount to add to the blue channel after it has been multiplied. This is a range\n * between -255 and 255.\n * @param {Number} [alphaOffset=0] The amount to add to the alpha channel after it has been multiplied. This is a range\n * between -255 and 255.\n */\n\nclass ColorFilter extends Filter {\n  constructor(redMultiplier = 1, greenMultiplier = 1, blueMultiplier = 1, alphaMultiplier = 1, redOffset = 0, greenOffset = 0, blueOffset = 0, alphaOffset = 0) {\n    super();\n    /**\n     * Red channel multiplier.\n     * @type {Number}\n     */\n\n    this.redMultiplier = redMultiplier;\n    /**\n     * Green channel multiplier.\n     * @type {Number}\n     */\n\n    this.greenMultiplier = greenMultiplier;\n    /**\n     * Blue channel multiplier.\n     * @type {Number}\n     */\n\n    this.blueMultiplier = blueMultiplier;\n    /**\n     * Alpha channel multiplier.\n     * @type {Number}\n     */\n\n    this.alphaMultiplier = alphaMultiplier;\n    /**\n     * Red channel offset (added to value).\n     * @type {Number}\n     */\n\n    this.redOffset = redOffset;\n    /**\n     * Green channel offset (added to value).\n     * @type {Number}\n     */\n\n    this.greenOffset = greenOffset;\n    /**\n     * Blue channel offset (added to value).\n     * @type {Number}\n     */\n\n    this.blueOffset = blueOffset;\n    /**\n     * Alpha channel offset (added to value).\n     * @type {Number}\n     */\n\n    this.alphaOffset = alphaOffset;\n    this.FRAG_SHADER_BODY = `\n\t\t\tuniform vec4 uColorMultiplier;\n\t\t\tuniform vec4 uColorOffset;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\n\t\t\t\tgl_FragColor = (color * uColorMultiplier) + uColorOffset;\n\t\t\t}\n\t\t`;\n  }\n\n  shaderParamSetup(gl, stage, shaderProgram) {\n    gl.uniform4f(gl.getUniformLocation(shaderProgram, \"uColorMultiplier\"), this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier);\n    gl.uniform4f(gl.getUniformLocation(shaderProgram, \"uColorOffset\"), this.redOffset / 255, this.greenOffset / 255, this.blueOffset / 255, this.alphaOffset / 255);\n  }\n  /**\n   * @return {easeljs.ColorFilter}\n   */\n\n\n  clone() {\n    return new ColorFilter(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset);\n  }\n\n  _applyFilter(imageData) {\n    let data = imageData.data;\n    const l = data.length;\n\n    for (let i = 0; i < l; i += 4) {\n      data[i] = data[i] * this.redMultiplier + this.redOffset;\n      data[i + 1] = data[i + 1] * this.greenMultiplier + this.greenOffset;\n      data[i + 2] = data[i + 2] * this.blueMultiplier + this.blueOffset;\n      data[i + 3] = data[i + 3] * this.alphaMultiplier + this.alphaOffset;\n    }\n\n    return true;\n  }\n\n}\n\n/**\n * @license ColorMatrix\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Provides helper functions for assembling a matrix for use with the {@link easeljs.ColorMatrixFilter}.\n * Most methods return the instance to facilitate chained calls.\n *\n * @memberof easeljs\n * @example\n * colorMatrix.adjustHue(20).adjustBrightness(50);\n *\n * @param {Number} brightness\n * @param {Number} contrast\n * @param {Number} saturation\n * @param {Number} hue\n */\nclass ColorMatrix {\n  constructor(brightness, contrast, saturation, hue) {\n    this.setColor(brightness, contrast, saturation, hue);\n  }\n  /**\n   * Resets the instance with the specified values.\n   * @param {Number} brightness\n   * @param {Number} contrast\n   * @param {Number} saturation\n   * @param {Number} hue\n   * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  setColor(brightness, contrast, saturation, hue) {\n    return this.reset().adjustColor(brightness, contrast, saturation, hue);\n  }\n  /**\n   * Resets the matrix to identity values.\n   * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  reset() {\n    return this.copy(ColorMatrix.IDENTITY_MATRIX);\n  }\n  /**\n   * Shortcut method to adjust brightness, contrast, saturation and hue. Equivalent to calling adjustHue(hue), adjustContrast(contrast),\n   * adjustBrightness(brightness), adjustSaturation(saturation), in that order.\n   * @param {Number} brightness\n   * @param {Number} contrast\n   * @param {Number} saturation\n   * @param {Number} hue\n   * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  adjustColor(brightness, contrast, saturation, hue) {\n    return this.adjustBrightness(brightness).adjustContrast(contrast).adjustSaturation(saturation).adjustHue(hue);\n  }\n  /**\n   * Adjusts the brightness of pixel color by adding the specified value to the red, green and blue channels.\n   * Positive values will make the image brighter, negative values will make it darker.\n   * @param {Number} value A value between -255 & 255 that will be added to the RGB channels.\n   * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  adjustBrightness(value) {\n    if (value === 0 || isNaN(value)) {\n      return this;\n    }\n\n    value = this._cleanValue(value, 255);\n\n    this._multiplyMatrix([1, 0, 0, 0, value, 0, 1, 0, 0, value, 0, 0, 1, 0, value, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n\n    return this;\n  }\n  /**\n   * Adjusts the contrast of pixel color.\n   * Positive values will increase contrast, negative values will decrease contrast.\n   * @param {Number} value A value between -100 & 100.\n   * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  adjustContrast(value) {\n    if (value === 0 || isNaN(value)) {\n      return this;\n    }\n\n    value = this._cleanValue(value, 100);\n    let x;\n\n    if (value < 0) {\n      x = 127 + value / 100 * 127;\n    } else {\n      x = value % 1;\n\n      if (x === 0) {\n        x = ColorMatrix.DELTA_INDEX[value];\n      } else {\n        x = ColorMatrix.DELTA_INDEX[value << 0] * (1 - x) + ColorMatrix.DELTA_INDEX[(value << 0) + 1] * x; // use linear interpolation for more granularity.\n      }\n\n      x = x * 127 + 127;\n    }\n\n    this._multiplyMatrix([x / 127, 0, 0, 0, 0.5 * (127 - x), 0, x / 127, 0, 0, 0.5 * (127 - x), 0, 0, x / 127, 0, 0.5 * (127 - x), 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n\n    return this;\n  }\n  /**\n   * Adjusts the color saturation of the pixel.\n   * Positive values will increase saturation, negative values will decrease saturation (trend towards greyscale).\n   * @param {Number} value A value between -100 & 100.\n   * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  adjustSaturation(value) {\n    if (value === 0 || isNaN(value)) {\n      return this;\n    }\n\n    value = this._cleanValue(value, 100);\n    let x = 1 + (value > 0 ? 3 * value / 100 : value / 100);\n    let lumR = 0.3086;\n    let lumG = 0.6094;\n    let lumB = 0.0820;\n\n    this._multiplyMatrix([lumR * (1 - x) + x, lumG * (1 - x), lumB * (1 - x), 0, 0, lumR * (1 - x), lumG * (1 - x) + x, lumB * (1 - x), 0, 0, lumR * (1 - x), lumG * (1 - x), lumB * (1 - x) + x, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n\n    return this;\n  }\n  /**\n   * Adjusts the hue of the pixel color.\n   * @param {Number} value A value between -180 & 180.\n   * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  adjustHue(value) {\n    if (value === 0 || isNaN(value)) {\n      return this;\n    }\n\n    value = this._cleanValue(value, 180) / 180 * Math.PI;\n    let cosVal = Math.cos(value);\n    let sinVal = Math.sin(value);\n    let lumR = 0.213;\n    let lumG = 0.715;\n    let lumB = 0.072;\n\n    this._multiplyMatrix([lumR + cosVal * (1 - lumR) + sinVal * -lumR, lumG + cosVal * -lumG + sinVal * -lumG, lumB + cosVal * -lumB + sinVal * (1 - lumB), 0, 0, lumR + cosVal * -lumR + sinVal * 0.143, lumG + cosVal * (1 - lumG) + sinVal * 0.140, lumB + cosVal * -lumB + sinVal * -0.283, 0, 0, lumR + cosVal * -lumR + sinVal * -(1 - lumR), lumG + cosVal * -lumG + sinVal * lumG, lumB + cosVal * (1 - lumB) + sinVal * lumB, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n\n    return this;\n  }\n  /**\n   * Concatenates (multiplies) the specified matrix with this one.\n   * @param {Array} matrix An array or ColorMatrix instance.\n   * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  concat(matrix) {\n    matrix = this._fixMatrix(matrix);\n\n    if (matrix.length != ColorMatrix.LENGTH) {\n      return this;\n    }\n\n    this._multiplyMatrix(matrix);\n\n    return this;\n  }\n  /**\n   * @return {easeljs.ColorMatrix} A clone of this ColorMatrix.\n   */\n\n\n  clone() {\n    return new ColorMatrix().copy(this);\n  }\n  /**\n   * Return a length 25 (5x5) array instance containing this matrix's values.\n   * @return {Array} An array holding this matrix's values.\n   */\n\n\n  toArray() {\n    const arr = [];\n    const l = ColorMatrix.LENGTH;\n\n    for (let i = 0; i < l; i++) {\n      arr[i] = this[i];\n    }\n\n    return arr;\n  }\n  /**\n   * Copy the specified matrix's values to this matrix.\n   * @param {Array | easeljs.ColorMatrix} matrix An array or ColorMatrix instance.\n   * @return {easeljs.ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n   * @chainable\n   */\n\n\n  copy(matrix) {\n    const l = ColorMatrix.LENGTH;\n\n    for (let i = 0; i < l; i++) {\n      this[i] = matrix[i];\n    }\n\n    return this;\n  }\n  /**\n   * Returns a string representation of this object.\n   * @return {String} a string representation of the instance.\n   */\n\n\n  toString() {\n    return `[${this.constructor.name}]`;\n  }\n  /**\n   * @param {Array} matrix\n   * @protected\n   */\n\n\n  _multiplyMatrix(matrix) {\n    let col = [];\n\n    for (let i = 0; i < 5; i++) {\n      for (let j = 0; j < 5; j++) {\n        col[j] = this[j + i * 5];\n      }\n\n      for (let j = 0; j < 5; j++) {\n        let val = 0;\n\n        for (let k = 0; k < 5; k++) {\n          val += matrix[j + k * 5] * col[k];\n        }\n\n        this[j + i * 5] = val;\n      }\n    }\n  }\n  /**\n   * Make sure values are within the specified range, hue has a limit of 180, brightness is 255, others are 100.\n   * @param {Number} value The raw number\n   * @param {Number} limit The maximum that the number can be. The minimum is the limit * -1.\n   * @protected\n   */\n\n\n  _cleanValue(value, limit) {\n    return Math.min(limit, Math.max(-limit, value));\n  }\n  /**\n   * Makes sure matrixes are 5x5 (25 long).\n   * @param {Array} matrix\n   * @protected\n   */\n\n\n  _fixMatrix(matrix) {\n    if (matrix instanceof ColorMatrix) {\n      matrix = matrix.toArray();\n    }\n\n    if (matrix.length < ColorMatrix.LENGTH) {\n      matrix = matrix.slice(0, matrix.length).concat(ColorMatrix.IDENTITY_MATRIX.slice(matrix.length, ColorMatrix.LENGTH));\n    } else if (matrix.length > ColorMatrix.LENGTH) {\n      matrix = matrix.slice(0, ColorMatrix.LENGTH);\n    }\n\n    return matrix;\n  }\n\n}\n/**\n * Array of delta values for contrast calculations.\n * @type {Array<Number>}\n * @protected\n * @readonly\n * @static\n */\n\nColorMatrix.DELTA_INDEX = Object.freeze([0, 0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1, 0.11, 0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24, 0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42, 0.44, 0.46, 0.48, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65, 0.68, 0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98, 1.0, 1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54, 1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0, 2.12, 2.25, 2.37, 2.50, 2.62, 2.75, 2.87, 3.0, 3.2, 3.4, 3.6, 3.8, 4.0, 4.3, 4.7, 4.9, 5.0, 5.5, 6.0, 6.5, 6.8, 7.0, 7.3, 7.5, 7.8, 8.0, 8.4, 8.7, 9.0, 9.4, 9.6, 9.8, 10.0]);\n/**\n * Identity matrix values.\n * @type {Array<Number>}\n * @protected\n * @readonly\n * @static\n */\n\nColorMatrix.IDENTITY_MATRIX = Object.freeze([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\n/**\n * The constant length of a color matrix.\n * @type {Number}\n * @protected\n * @readonly\n * @static\n */\n\nColorMatrix.LENGTH = 25;\n\n/**\n * @license ColorMatrixFilter\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * Allows you to carry out complex color operations such as modifying saturation, brightness, or inverting. See the\n * {@link easeljs.ColorMatrix} for more information on changing colors. For an easier color transform,\n * consider the {@link easeljs.ColorFilter}.\n *\n *\n * @memberof easeljs\n * @extends easeljs.Filter\n * @example\n * let shape = new Shape().set({ x: 100, y: 100 });\n * shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 50);\n * let matrix = new ColorMatrix().adjustHue(180).adjustSaturation(100);\n * shape.filters = [ new ColorMatrixFilter(matrix) ];\n * shape.cache(-50, -50, 100, 100);\n *\n * @param {Array | easeljs.ColorMatrix} matrix A 4x5 matrix describing the color operation to perform.\n */\n\nclass ColorMatrixFilter extends Filter {\n  constructor(matrix) {\n    super();\n    /**\n     * A 4x5 matrix describing the color operation to perform.\n     * @type {Array | easeljs.ColorMatrix}\n     */\n\n    this.matrix = matrix;\n    this.FRAG_SHADER_BODY = `\n\t\t\tuniform mat4 uColorMatrix;\n\t\t\tuniform vec4 uColorMatrixOffset;\n\n\t\t\tvoid main (void) {\n\t\t\t\tvec4 color = texture2D(uSampler, vRenderCoord);\n\n\t\t\t\tmat4 m = uColorMatrix;\n\t\t\t\tvec4 newColor = vec4(0,0,0,0);\n\t\t\t\tnewColor.r = color.r*m[0][0] + color.g*m[0][1] + color.b*m[0][2] + color.a*m[0][3];\n\t\t\t\tnewColor.g = color.r*m[1][0] + color.g*m[1][1] + color.b*m[1][2] + color.a*m[1][3];\n\t\t\t\tnewColor.b = color.r*m[2][0] + color.g*m[2][1] + color.b*m[2][2] + color.a*m[2][3];\n\t\t\t\tnewColor.a = color.r*m[3][0] + color.g*m[3][1] + color.b*m[3][2] + color.a*m[3][3];\n\n\t\t\t\tgl_FragColor = newColor + uColorMatrixOffset;\n\t\t\t}\n\t\t`;\n  }\n\n  shaderParamSetup(gl, stage, shaderProgram) {\n    let mat = this.matrix;\n    let colorMatrix = new Float32Array([mat[0], mat[1], mat[2], mat[3], mat[5], mat[6], mat[7], mat[8], mat[10], mat[11], mat[12], mat[13], mat[15], mat[16], mat[17], mat[18]]);\n    gl.uniformMatrix4fv(gl.getUniformLocation(shaderProgram, \"uColorMatrix\"), false, colorMatrix);\n    gl.uniform4f(gl.getUniformLocation(shaderProgram, \"uColorMatrixOffset\"), mat[4] / 255, mat[9] / 255, mat[14] / 255, mat[19] / 255);\n  }\n  /**\n   * @return {easeljs.ColorMatrixFilter}\n   */\n\n\n  clone() {\n    return new ColorMatrixFilter(this.matrix);\n  }\n\n  _applyFilter(imageData) {\n    let data = imageData.data;\n    const l = data.length;\n    let r, g, b, a;\n    let mtx = this.matrix;\n    let m0 = mtx[0],\n        m1 = mtx[1],\n        m2 = mtx[2],\n        m3 = mtx[3],\n        m4 = mtx[4];\n    let m5 = mtx[5],\n        m6 = mtx[6],\n        m7 = mtx[7],\n        m8 = mtx[8],\n        m9 = mtx[9];\n    let m10 = mtx[10],\n        m11 = mtx[11],\n        m12 = mtx[12],\n        m13 = mtx[13],\n        m14 = mtx[14];\n    let m15 = mtx[15],\n        m16 = mtx[16],\n        m17 = mtx[17],\n        m18 = mtx[18],\n        m19 = mtx[19];\n\n    for (let i = 0; i < l; i += 4) {\n      r = data[i];\n      g = data[i + 1];\n      b = data[i + 2];\n      a = data[i + 3];\n      data[i] = r * m0 + g * m1 + b * m2 + a * m3 + m4; // red\n\n      data[i + 1] = r * m5 + g * m6 + b * m7 + a * m8 + m9; // green\n\n      data[i + 2] = r * m10 + g * m11 + b * m12 + a * m13 + m14; // blue\n\n      data[i + 3] = r * m15 + g * m16 + b * m17 + a * m18 + m19; // alpha\n    }\n\n    return true;\n  }\n\n}\n\n/*\n* @license ButtonHelper\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * The ButtonHelper is a helper class to create interactive buttons from {@link easeljs.MovieClip} or\n * {@link easeljs.Sprite} instances. This class will intercept mouse events from an object, and\n * automatically call {@link easeljs.Sprite#gotoAndStop} or {@link easlejs.Sprite#gotoAndPlay},\n * to the respective animation labels, add a pointer cursor, and allows the user to define a hit state frame.\n *\n * The ButtonHelper instance does not need to be added to the stage, but a reference should be maintained to prevent\n * garbage collection.\n *\n * Note that over states will not work unless you call {@link easeljs.Stage#enableMouseOver}.\n *\n * @memberof easeljs\n * @example\n * let helper = new ButtonHelper(sprite, \"out\", \"over\", \"down\", false, sprite, \"hit\");\n * sprite.addEventListener(\"click\", (evt) => {\n *   // clicked\n * }));\n *\n * @param {easeljs.Sprite | easeljs.MovieClip} target The instance to manage.\n * @param {String} [outLabel=\"out\"] The label or animation to go to when the user rolls out of the button.\n * @param {String} [overLabel=\"over\"] The label or animation to go to when the user rolls over the button.\n * @param {String} [downLabel=\"down\"] The label or animation to go to when the user presses the button.\n * @param {Boolean} [play=false] If the helper should call \"gotoAndPlay\" or \"gotoAndStop\" on the button when changing\n * states.\n * @param {easeljs.DisplayObject} [hitArea] An optional item to use as the hit state for the button. If this is not defined,\n * then the button's visible states will be used instead. Note that the same instance as the \"target\" argument can be\n * used for the hitState.\n * @param {String} [hitLabel] The label or animation on the hitArea instance that defines the hitArea bounds. If this is\n * null, then the default state of the hitArea will be used.\n */\nclass ButtonHelper {\n  constructor(target, outLabel = \"out\", overLabel = \"over\", downLabel = \"down\", play = false, hitArea, hitLabel) {\n    if (!target.addEventListener) {\n      return;\n    }\n    /**\n     * The target for this button helper.\n     * @type {easeljs.MovieClip | easeljs.Sprite}\n     * @readonly\n     */\n\n\n    this.target = target;\n    /**\n     * The label name or frame number to display when the user mouses out of the target.\n     * @default \"over\"\n     * @type {String | Number}\n     */\n\n    this.overLabel = overLabel;\n    /**\n     * The label name or frame number to display when the user mouses over the target.\n     * @default \"out\"\n     * @type {String | Number}\n     */\n\n    this.outLabel = outLabel;\n    /**\n     * The label name or frame number to display when the user presses on the target.\n     * @default \"down\"\n     * @type {String | Number}\n     */\n\n    this.downLabel = downLabel == null;\n    /**\n     * If true, then ButtonHelper will call gotoAndPlay, if false, it will use gotoAndStop.\n     * @default false\n     * @type {Boolean}\n     */\n\n    this.play = play;\n    /**\n     * @type {Boolean}\n     * @protected\n     */\n\n    this._isPressed = false;\n    /**\n     * @type {Boolean}\n     * @protected\n     */\n\n    this._isOver = false;\n    /**\n     * @type {Boolean}\n     * @protected\n     */\n\n    this._enabled = false;\n    target.mouseChildren = false; // prevents issues when children are removed from the display list when state changes.\n\n    this.enabled = true;\n    this.handleEvent({});\n\n    if (hitArea) {\n      if (hitLabel) {\n        hitArea.actionsEnabled = false;\n        hitArea.gotoAndStop && hitArea.gotoAndStop(hitLabel);\n      }\n\n      target.hitArea = hitArea;\n    }\n  }\n  /**\n   * Enables or disables the button functionality on the target.\n   * @type {Boolean}\n   */\n\n\n  get enabled() {\n    return this._enabled;\n  }\n\n  set enabled(enabled) {\n    if (enabled === this._enabled) {\n      return;\n    }\n\n    let o = this.target;\n    this._enabled = enabled;\n\n    if (enabled) {\n      o.cursor = \"pointer\";\n      o.addEventListener(\"rollover\", this);\n      o.addEventListener(\"rollout\", this);\n      o.addEventListener(\"mousedown\", this);\n      o.addEventListener(\"pressup\", this);\n\n      if (o._reset) {\n        o.__reset = o._reset;\n        o._reset = this._reset;\n      }\n    } else {\n      o.cursor = null;\n      o.removeEventListener(\"rollover\", this);\n      o.removeEventListener(\"rollout\", this);\n      o.removeEventListener(\"mousedown\", this);\n      o.removeEventListener(\"pressup\", this);\n\n      if (o.__reset) {\n        o._reset = o.__reset;\n        delete o.__reset;\n      }\n    }\n  }\n  /**\n   * Returns a string representation of this object.\n   * @return {String} a string representation of the instance.\n   */\n\n\n  toString() {\n    return `[${this.constructor.name}]`;\n  }\n  /**\n   * @param {Object} evt The mouse event to handle.\n   * @protected\n   */\n\n\n  handleEvent(evt) {\n    let label,\n        t = this.target,\n        type = evt.type;\n\n    if (type === \"mousedown\") {\n      this._isPressed = true;\n      label = this.downLabel;\n    } else if (type === \"pressup\") {\n      this._isPressed = false;\n      label = this._isOver ? this.overLabel : this.outLabel;\n    } else if (type === \"rollover\") {\n      this._isOver = true;\n      label = this._isPressed ? this.downLabel : this.overLabel;\n    } else {\n      // rollout and default\n      this._isOver = false;\n      label = this._isPressed ? this.overLabel : this.outLabel;\n    }\n\n    if (this.play) {\n      t.gotoAndPlay && t.gotoAndPlay(label);\n    } else {\n      t.gotoAndStop && t.gotoAndStop(label);\n    }\n  }\n  /**\n   * Injected into target. Preserves the paused state through a reset.\n   * @protected\n   */\n\n\n  _reset() {\n    // TODO: explore better ways to handle this issue. This is hacky & disrupts object signatures.\n    let p = this.paused;\n\n    this.__reset();\n\n    this.paused = p;\n  }\n\n}\n\n/**\n * @license Touch\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Global utility for working with multi-touch enabled devices in EaselJS. Currently supports W3C Touch API (iOS and\n * modern Android browser) and the Pointer API (IE), including ms-prefixed events in IE10, and unprefixed in IE11.\n *\n * Ensure that you {{#crossLink \"Touch/disable\"}}{{/crossLink}} touch when cleaning up your application. You do not have\n * to check if touch is supported to enable it, as it will fail gracefully if it is not supported.\n *\n * <strong>Note:</strong> It is important to disable Touch on a stage that you are no longer using:\n *\n * @memberof easeljs\n * @name easeljs.Touch\n * @example\n * let stage = new Stage(\"canvasId\");\n * Touch.enable(stage);\n */\nvar Touch = Touch = {\n  /**\n   * Returns `true` if touch is supported in the current browser.\n   * @return {Boolean} Indicates whether touch is supported in the current browser.\n   */\n  isSupported() {\n    return !!('ontouchstart' in window || // iOS & Android\n    window.MSPointerEvent && window.navigator.msMaxTouchPoints > 0 // IE10\n    || window.PointerEvent && window.navigator.maxTouchPoints > 0); // IE11+\n  },\n\n  /**\n   * Enables touch interaction for the specified EaselJS {@link easeljs.Stage}. Currently supports iOS\n   * (and compatible browsers, such as modern Android browsers), and IE10/11. Supports both single touch and\n   * multi-touch modes. Extends the EaselJS {@link easeljs.MouseEvent} model, but without support for\n   * double click or over/out events.\n   * @param {easeljs.Stage} stage The Stage to enable touch on.\n   * @param {Boolean} [singleTouch=false] If `true`, only a single touch will be active at a time.\n   * @param {Boolean} [allowDefault=false] If `true`, then default gesture actions (ex. scrolling, zooming) will be\n   * allowed when the user is interacting with the target canvas.\n   * @return {Boolean} Returns `true` if touch was successfully enabled on the target stage.\n   */\n  enable(stage, singleTouch = false, allowDefault = false) {\n    if (!stage || !stage.canvas || !this.isSupported()) {\n      return false;\n    }\n\n    if (stage.__touch) {\n      return true;\n    } // inject required properties on stage:\n\n\n    stage.__touch = {\n      pointers: {},\n      multitouch: !singleTouch,\n      preventDefault: !allowDefault,\n      count: 0\n    }; // note that in the future we may need to disable the standard mouse event model before adding\n    // these to prevent duplicate calls. It doesn't seem to be an issue with iOS devices though.\n\n    if ('ontouchstart' in window) {\n      this._IOS_enable(stage);\n    } else if (window.PointerEvent || window.MSPointerEvent) {\n      this._IE_enable(stage);\n    }\n\n    return true;\n  },\n\n  /**\n   * Removes all listeners that were set up when calling `Touch.enable()` on a stage.\n   * @param {easeljs.Stage} stage The Stage to disable touch on.\n   */\n  disable(stage) {\n    if (!stage) {\n      return;\n    }\n\n    if ('ontouchstart' in window) {\n      this._IOS_disable(stage);\n    } else if (window.PointerEvent || window.MSPointerEvent) {\n      this._IE_disable(stage);\n    }\n\n    delete stage.__touch;\n  },\n\n  /**\n   * @private\n   * @param {easeljs.Stage} stage\n   */\n  _IOS_enable(stage) {\n    let canvas = stage.canvas;\n\n    let f = stage.__touch.f = e => this._IOS_handleEvent(stage, e);\n\n    canvas.addEventListener(\"touchstart\", f, false);\n    canvas.addEventListener(\"touchmove\", f, false);\n    canvas.addEventListener(\"touchend\", f, false);\n    canvas.addEventListener(\"touchcancel\", f, false);\n  },\n\n  /**\n   * @private\n   * @param {easeljs.Stage} stage\n   */\n  _IOS_disable(stage) {\n    let canvas = stage.canvas;\n\n    if (!canvas) {\n      return;\n    }\n\n    let f = stage.__touch.f;\n    canvas.removeEventListener(\"touchstart\", f, false);\n    canvas.removeEventListener(\"touchmove\", f, false);\n    canvas.removeEventListener(\"touchend\", f, false);\n    canvas.removeEventListener(\"touchcancel\", f, false);\n  },\n\n  /**\n   * @private\n   * @param {easeljs.Stage} stage\n   * @param {Object} e The event to handle\n   */\n  _IOS_handleEvent(stage, e) {\n    if (!stage) {\n      return;\n    }\n\n    if (stage.__touch.preventDefault) {\n      e.preventDefault && e.preventDefault();\n    }\n\n    let touches = e.changedTouches;\n    let type = e.type;\n    const l = touches.length;\n\n    for (let touch of touches) {\n      let id = touch.identifier;\n\n      if (touch.target != stage.canvas) {\n        continue;\n      }\n\n      if (type === \"touchstart\") {\n        this._handleStart(stage, id, e, touch.pageX, touch.pageY);\n      } else if (type === \"touchmove\") {\n        this._handleMove(stage, id, e, touch.pageX, touch.pageY);\n      } else if (type === \"touchend\" || type === \"touchcancel\") {\n        this._handleEnd(stage, id, e);\n      }\n    }\n  },\n\n  /**\n   * @private\n   * @param {easeljs.Stage} stage\n   */\n  _IE_enable(stage) {\n    let canvas = stage.canvas;\n\n    let f = stage.__touch.f = e => this._IE_handleEvent(stage, e);\n\n    if (window.PointerEvent === undefined) {\n      canvas.addEventListener(\"MSPointerDown\", f, false);\n      window.addEventListener(\"MSPointerMove\", f, false);\n      window.addEventListener(\"MSPointerUp\", f, false);\n      window.addEventListener(\"MSPointerCancel\", f, false);\n\n      if (stage.__touch.preventDefault) {\n        canvas.style.msTouchAction = \"none\";\n      }\n    } else {\n      canvas.addEventListener(\"pointerdown\", f, false);\n      window.addEventListener(\"pointermove\", f, false);\n      window.addEventListener(\"pointerup\", f, false);\n      window.addEventListener(\"pointercancel\", f, false);\n\n      if (stage.__touch.preventDefault) {\n        canvas.style.touchAction = \"none\";\n      }\n    }\n\n    stage.__touch.activeIDs = {};\n  },\n\n  /**\n   * @private\n   * @param {easeljs.Stage} stage\n   */\n  _IE_disable(stage) {\n    let f = stage.__touch.f;\n\n    if (window.PointerEvent === undefined) {\n      window.removeEventListener(\"MSPointerMove\", f, false);\n      window.removeEventListener(\"MSPointerUp\", f, false);\n      window.removeEventListener(\"MSPointerCancel\", f, false);\n\n      if (stage.canvas) {\n        stage.canvas.removeEventListener(\"MSPointerDown\", f, false);\n      }\n    } else {\n      window.removeEventListener(\"pointermove\", f, false);\n      window.removeEventListener(\"pointerup\", f, false);\n      window.removeEventListener(\"pointercancel\", f, false);\n\n      if (stage.canvas) {\n        stage.canvas.removeEventListener(\"pointerdown\", f, false);\n      }\n    }\n  },\n\n  /**\n   * @private\n   * @param {easeljs.Stage} stage\n   * @param {Object} e The event to handle.\n   */\n  _IE_handleEvent(stage, e) {\n    if (!stage) {\n      return;\n    }\n\n    if (stage.__touch.preventDefault) {\n      e.preventDefault && e.preventDefault();\n    }\n\n    let type = e.type;\n    let id = e.pointerId;\n    let ids = stage.__touch.activeIDs;\n\n    if (type === \"MSPointerDown\" || type === \"pointerdown\") {\n      if (e.srcElement != stage.canvas) {\n        return;\n      }\n\n      ids[id] = true;\n\n      this._handleStart(stage, id, e, e.pageX, e.pageY);\n    } else if (ids[id]) {\n      // it's an id we're watching\n      if (type === \"MSPointerMove\" || type === \"pointermove\") {\n        this._handleMove(stage, id, e, e.pageX, e.pageY);\n      } else if (type === \"MSPointerUp\" || type === \"MSPointerCancel\" || type === \"pointerup\" || type === \"pointercancel\") {\n        delete ids[id];\n\n        this._handleEnd(stage, id, e);\n      }\n    }\n  },\n\n  /**\n   * @private\n   * @param {easeljs.Stage} stage\n   * @param {String | Number} id\n   * @param {Object} e\n   * @param {Number} x\n   * @param {Number} y\n   */\n  _handleStart(stage, id, e, x, y) {\n    let props = stage.__touch;\n\n    if (!props.multitouch && props.count) {\n      return;\n    }\n\n    let ids = props.pointers;\n\n    if (ids[id]) {\n      return;\n    }\n\n    ids[id] = true;\n    props.count++;\n\n    stage._handlePointerDown(id, e, x, y);\n  },\n\n  /**\n   * @private\n   * @param {easeljs.Stage} stage\n   * @param {String | Number} id\n   * @param {Object} e\n   * @param {Number} x\n   * @param {Number} y\n   */\n  _handleMove(stage, id, e, x, y) {\n    if (!stage.__touch.pointers[id]) {\n      return;\n    }\n\n    stage._handlePointerMove(id, e, x, y);\n  },\n\n  /**\n   * @private\n   * @param {easeljs.Stage} stage\n   * @param {String | Number} id\n   * @param {Object} e\n   */\n  _handleEnd(stage, id, e) {\n    // TODO: cancel should be handled differently for proper UI (ex. an up would trigger a click, a cancel would more closely resemble an out).\n    let props = stage.__touch;\n    let ids = props.pointers;\n\n    if (!ids[id]) {\n      return;\n    }\n\n    props.count--;\n\n    stage._handlePointerUp(id, e, true);\n\n    delete ids[id];\n  }\n\n};\n\n/**\n * @license SpriteSheetBuilder\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * The SpriteSheetBuilder allows you to generate {@link easeljs.SpriteSheet} instances at run time\n * from any display object. This can allow you to maintain your assets as vector graphics (for low file size), and\n * render them at run time as SpriteSheets for better performance.\n *\n * SpriteSheets can be built either synchronously, or asynchronously, so that large SpriteSheets can be generated\n * without locking the UI.\n *\n * Note that the \"images\" used in the generated SpriteSheet are actually canvas elements, and that they will be\n * sized to the nearest power of 2 up to the value of {@link easeljs.SpriteSheetBuilder#maxWidth}\n * or {@link easeljs.SpriteSheetBuilder#maxHeight}.\n *\n * @memberof easeljs\n * @extends core.EventDispatcher\n *\n * @param {Number} [framerate=0] The {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} of\n * {@link easeljs.SpriteSheet} instances that are created.\n */\n\nclass SpriteSheetBuilder extends EventDispatcher {\n  constructor(framerate = 0) {\n    super();\n    /**\n     * The maximum width for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n     * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n     * dimensions, then additional images will be created as needed.\n     * @type {Number}\n     * @default 2048\n    */\n\n    this.maxWidth = 2048;\n    /**\n     * The maximum height for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n     * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n     * dimensions, then additional images will be created as needed.\n     * @type {Number}\n     * @default 2048\n     */\n\n    this.maxHeight = 2048;\n    /**\n     * The SpriteSheet that was generated. This will be null before a build is completed successfully.\n     * @type {easeljs.SpriteSheet}\n     */\n\n    this.spriteSheet = null;\n    /**\n     * The scale to apply when drawing all frames to the SpriteSheet. This is multiplied against any scale specified\n     * in the addFrame call. This can be used, for example, to generate a SpriteSheet at run time that is tailored\n     * to the a specific device resolution (ex. tablet vs mobile).\n     * @type {Number}\n     * @default 1\n     */\n\n    this.scale = 1;\n    /**\n    * The padding to use between frames. This is helpful to preserve antialiasing on drawn vector content.\n    * @type {Number}\n    * @default 1\n    */\n\n    this.padding = 1;\n    /**\n     * A number from 0.01 to 0.99 that indicates what percentage of time the builder can use. This can be\n     * thought of as the number of seconds per second the builder will use. For example, with a timeSlice value of 0.3,\n     * the builder will run 20 times per second, using approximately 15ms per build (30% of available time, or 0.3s per second).\n     * Defaults to 0.3.\n     * @type {Number}\n     * @default 0.3\n     */\n\n    this.timeSlice = 0.3;\n    /**\n     * A value between 0 and 1 that indicates the progress of a build, or -1 if a build has not\n     * been initiated.\n     * @type {Number}\n     * @default -1\n     * @readonly\n     */\n\n    this.progress = -1;\n    /**\n     * A {@link easeljs.SpriteSheet#framerate} value that will be passed to new SpriteSheet instances that are\n     * created. If no framerate is specified (or it is 0), then SpriteSheets will use the {@link core.Ticker} framerate.\n     * @type {Number}\n     * @default 0\n     */\n\n    this.framerate = framerate;\n    /**\n     * @protected\n     * @type {Array}\n     */\n\n    this._frames = [];\n    /**\n     * @protected\n     * @type {Array}\n     */\n\n    this._animations = {};\n    /**\n     * @protected\n     * @type {Array}\n     */\n\n    this._data = null;\n    /**\n     * @protected\n     * @type {Number}\n     */\n\n    this._nextFrameIndex = 0;\n    /**\n     * @protected\n     * @type {Number}\n     */\n\n    this._index = 0;\n    /**\n     * @protected\n     * @type {Number}\n     */\n\n    this._timerID = null;\n    /**\n     * @protected\n     * @type {Number}\n     */\n\n    this._scale = 1;\n  }\n  /**\n   * Adds a frame to the {@link easeljs.SpriteSheet}. Note that the frame will not be drawn until you\n   * call {@link easeljs.SpriteSheetBuilder#build} method. The optional setup params allow you to have\n   * a function run immediately before the draw occurs. For example, this allows you to add a single source multiple\n   * times, but manipulate it or its children to change it to generate different frames.\n   *\n   * Note that the source's transformations (x, y, scale, rotate, alpha) will be ignored, except for regX/Y. To apply\n   * transforms to a source object and have them captured in the SpriteSheet, simply place it into a {@link easeljs.Container}\n   * and pass in the Container as the source.\n   * @param {easeljs.DisplayObject} source The source {{#crossLink \"DisplayObject\"}}{{/crossLink}}  to draw as the frame.\n   * @param {easeljs.Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the\n   * source to draw to the frame. If not specified, it will look for a `getBounds` method, bounds property, or\n   * `nominalBounds` property on the source to use. If one is not found, the frame will be skipped.\n   * @param {Number} [scale=1] Optional. The scale to draw this frame at. Default is 1.\n   * @param {Function} [setupFunction] A function to call immediately before drawing this frame. It will be called with two parameters: the source, and setupData.\n   * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n   * @return {Number} The index of the frame that was just added, or null if a sourceRect could not be determined.\n   */\n\n\n  addFrame(source, sourceRect, scale = 1, setupFunction, setupData) {\n    if (this._data) {\n      throw SpriteSheetBuilder.ERR_RUNNING;\n    }\n\n    let rect = sourceRect || source.bounds || source.nominalBounds || source.getBounds && source.getBounds();\n\n    if (!rect) {\n      return null;\n    }\n\n    return this._frames.push({\n      source,\n      sourceRect: rect,\n      scale,\n      funct: setupFunction,\n      data: setupData,\n      index: this._frames.length,\n      height: rect.height * scale\n    }) - 1;\n  }\n  /**\n   * Adds an animation that will be included in the created {@link easeljs.SpriteSheet}.\n   * @param {String} name The name for the animation.\n   * @param {Array} frames An array of frame indexes that comprise the animation. Ex. [3,6,5] would describe an animation\n   * that played frame indexes 3, 6, and 5 in that order.\n   * @param {String} [next] Specifies the name of the animation to continue to after this animation ends. You can\n   * also pass false to have the animation stop when it ends. By default it will loop to the start of the same animation.\n   * @param {Number} [speed] Specifies a frame advance speed for this animation. For example, a value of 0.5 would\n   * cause the animation to advance every second tick. Note that earlier versions used `frequency` instead, which had\n   * the opposite effect.\n   */\n\n\n  addAnimation(name, frames, next, speed) {\n    if (this._data) {\n      throw SpriteSheetBuilder.ERR_RUNNING;\n    }\n\n    this._animations[name] = {\n      frames,\n      next,\n      speed\n    };\n  }\n  /**\n   * This will take a {@link easeljs.MovieClip} instance, and add its frames and labels to this\n   * builder. Labels will be added as an animation running from the label index to the next label. For example, if\n   * there is a label named \"foo\" at frame 0 and a label named \"bar\" at frame 10, in a MovieClip with 15 frames, it\n   * will add an animation named \"foo\" that runs from frame index 0 to 9, and an animation named \"bar\" that runs from\n   * frame index 10 to 14.\n   *\n   * Note that this will iterate through the full MovieClip with {@link easeljs.MovieClip#actionsEnabled}\n   * set to `false`, ending on the last frame.\n   * @param {easeljs.MovieClip} source The source MovieClip instance to add to the SpriteSheet.\n   * @param {easeljs.Rectangle} [sourceRect] A Rectangle defining the portion of the source to\n   * draw to the frame. If not specified, it will look for a {{#crossLink \"DisplayObject/getBounds\"}}{{/crossLink}}\n   * method, `frameBounds` Array, `bounds` property, or `nominalBounds` property on the source to use. If one is not\n   * found, the MovieClip will be skipped.\n   * @param {Number} [scale=1] The scale to draw the movie clip at.\n   * @param {Function} [setupFunction] A function to call immediately before drawing each frame. It will be called\n   * with three parameters: the source, setupData, and the frame index.\n   * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n   * @param {Function} [labelFunction] This method will be called for each MovieClip label that is added with four\n   * parameters: the label name, the source MovieClip instance, the starting frame index (in the movieclip timeline)\n   * and the end index. It must return a new name for the label/animation, or `false` to exclude the label.\n   */\n\n\n  addMovieClip(source, sourceRect, scale = 1, setupFunction, setupData, labelFunction) {\n    if (this._data) {\n      throw SpriteSheetBuilder.ERR_RUNNING;\n    }\n\n    let rects = source.frameBounds;\n    let rect = sourceRect || source.bounds || source.nominalBounds || source.getBounds && source.getBounds();\n\n    if (!rect && !rects) {\n      return;\n    }\n\n    let baseFrameIndex = this._frames.length;\n    const duration = source.timeline.duration;\n\n    for (let i = 0; i < duration; i++) {\n      let r = rects && rects[i] ? rects[i] : rect;\n      this.addFrame(source, r, scale, this._setupMovieClipFrame, {\n        i,\n        f: setupFunction,\n        d: setupData\n      });\n    }\n\n    const labels = source.timeline._labels;\n    let lbls = [];\n\n    for (let n in labels) {\n      lbls.push({\n        index: labels[n],\n        label: n\n      });\n    }\n\n    if (lbls.length) {\n      lbls.sort((a, b) => a.index - b.index);\n\n      for (let i = 0, l = lbls.length; i < l; i++) {\n        let label = lbls[i].label;\n        let start = baseFrameIndex + lbls[i].index;\n        let end = baseFrameIndex + (i === l - 1 ? duration : lbls[i + 1].index);\n        let frames = [];\n\n        for (let i = start; i < end; i++) {\n          frames.push(i);\n        }\n\n        if (labelFunction) {\n          label = labelFunction(label, source, start, end);\n\n          if (!label) {\n            continue;\n          }\n        }\n\n        this.addAnimation(label, frames, true); // for now, this loops all animations.\n      }\n    }\n  }\n  /**\n   * Builds a {@link easeljs.SpriteSheet} instance based on the current frames.\n   * @return {easeljs.SpriteSheet} The created SpriteSheet instance, or null if a build is already running or an error\n   * occurred.\n   */\n\n\n  build() {\n    if (this._data) {\n      throw SpriteSheetBuilder.ERR_RUNNING;\n    }\n\n    this._startBuild();\n\n    while (this._drawNext()) {}\n\n    this._endBuild();\n\n    return this.spriteSheet;\n  }\n  /**\n   * Asynchronously builds a {@link easeljs.SpriteSheet} instance based on the current frames. It will\n   * run 20 times per second, using an amount of time defined by `timeSlice`. When it is complete it will call the\n   * specified callback.\n   * @param {Number} [timeSlice] Sets the timeSlice property on this instance.\n   */\n\n\n  buildAsync(timeSlice) {\n    if (this._data) {\n      throw SpriteSheetBuilder.ERR_RUNNING;\n    }\n\n    this.timeSlice = timeSlice;\n\n    this._startBuild();\n\n    this._timerID = setTimeout(() => this._run(), 50 - Math.max(0.01, Math.min(0.99, this.timeSlice || 0.3)) * 50);\n  }\n  /**\n   * Stops the current asynchronous build.\n   */\n\n\n  stopAsync() {\n    clearTimeout(this._timerID);\n    this._data = null;\n  }\n  /**\n   * Returns a string representation of this object.\n   * @override\n   * @return {String} a string representation of the instance.\n   */\n\n\n  toString() {\n    return `[${this.constructor.name}]`;\n  }\n  /**\n   * @protected\n   */\n\n\n  _startBuild() {\n    let pad = this.padding || 0;\n    this.progress = 0;\n    this.spriteSheet = null;\n    this._index = 0;\n    this._scale = this.scale;\n    let dataFrames = [];\n    this._data = {\n      images: [],\n      frames: dataFrames,\n      framerate: this.framerate,\n      animations: this._animations // TODO: should we \"clone\" _animations in case someone adds more animations after a build?\n\n    };\n\n    let frames = this._frames.slice();\n\n    frames.sort((a, b) => a.height <= b.height ? -1 : 1);\n\n    if (frames[frames.length - 1].height + pad * 2 > this.maxHeight) {\n      throw SpriteSheetBuilder.ERR_DIMENSIONS;\n    }\n\n    let y = 0,\n        x = 0;\n    let img = 0;\n\n    while (frames.length) {\n      let o = this._fillRow(frames, y, img, dataFrames, pad);\n\n      if (o.w > x) {\n        x = o.w;\n      }\n\n      y += o.h;\n\n      if (!o.h || !frames.length) {\n        let canvas = window.createjs && createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n        canvas.width = this._getSize(x, this.maxWidth);\n        canvas.height = this._getSize(y, this.maxHeight);\n        this._data.images[img] = canvas;\n\n        if (!o.h) {\n          x = y = 0;\n          img++;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   * @return {Number} The width & height of the row.\n   */\n  _setupMovieClipFrame(source, data) {\n    let ae = source.actionsEnabled;\n    source.actionsEnabled = false;\n    source.gotoAndStop(data.i);\n    source.actionsEnabled = ae;\n    data.f && data.f(source, data.d, data.i);\n  }\n  /**\n   * @protected\n   * @return {Number} The width & height of the row.\n   */\n\n\n  _getSize(size, max) {\n    let pow = 4;\n\n    while (Math.pow(2, ++pow) < size) {}\n\n    return Math.min(max, Math.pow(2, pow));\n  }\n\n  /**\n   * @protected\n   * @param {Array} frames\n   * @param {Number} y\n   * @param {HTMLImageElement} img\n   * @param {Object} dataFrames\n   * @param {Number} pad\n   * @return {Number} The width & height of the row.\n   */\n  _fillRow(frames, y, img, dataFrames, pad) {\n    let w = this.maxWidth;\n    let maxH = this.maxHeight;\n    y += pad;\n    let h = maxH - y;\n    let x = pad;\n    let height = 0;\n\n    for (let i = frames.length - 1; i >= 0; i--) {\n      let frame = frames[i];\n      let sc = this._scale * frame.scale;\n      let rect = frame.sourceRect;\n      let source = frame.source;\n      let rx = Math.floor(sc * rect.x - pad);\n      let ry = Math.floor(sc * rect.y - pad);\n      let rh = Math.ceil(sc * rect.height + pad * 2);\n      let rw = Math.ceil(sc * rect.width + pad * 2);\n\n      if (rw > w) {\n        throw SpriteSheetBuilder.ERR_DIMENSIONS;\n      }\n\n      if (rh > h || x + rw > w) {\n        continue;\n      }\n\n      frame.img = img;\n      frame.rect = new Rectangle(x, y, rw, rh);\n      height = height || rh;\n      frames.splice(i, 1);\n      dataFrames[frame.index] = [x, y, rw, rh, img, Math.round(-rx + sc * source.regX - pad), Math.round(-ry + sc * source.regY - pad)];\n      x += rw;\n    }\n\n    return {\n      w: x,\n      h: height\n    };\n  }\n  /**\n   * @protected\n   */\n\n\n  _endBuild() {\n    this.spriteSheet = new SpriteSheet(this._data);\n    this._data = null;\n    this.progress = 1;\n    this.dispatchEvent(\"complete\");\n  }\n  /**\n   * @protected\n   */\n\n\n  _run() {\n    let ts = Math.max(0.01, Math.min(0.99, this.timeSlice || 0.3)) * 50;\n    let t = new Date().getTime() + ts;\n    let complete = false;\n\n    while (t > new Date().getTime()) {\n      if (!this._drawNext()) {\n        complete = true;\n        break;\n      }\n    }\n\n    if (complete) {\n      this._endBuild();\n    } else {\n      this._timerID = setTimeout(() => this._run(), 50 - ts);\n    }\n\n    let p = this.progress = this._index / this._frames.length;\n\n    if (this.hasEventListener(\"progress\")) {\n      let evt = new Event(\"progress\");\n      evt.progress = p;\n      this.dispatchEvent(evt);\n    }\n  }\n  /**\n   * @protected\n   * @return {Boolean} Returns false if this is the last draw.\n   */\n\n\n  _drawNext() {\n    let frame = this._frames[this._index];\n    let sc = frame.scale * this._scale;\n    let rect = frame.rect;\n    let sourceRect = frame.sourceRect;\n    let canvas = this._data.images[frame.img];\n    let ctx = canvas.getContext(\"2d\");\n    frame.funct && frame.funct(frame.source, frame.data);\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(rect.x, rect.y, rect.width, rect.height);\n    ctx.clip();\n    ctx.translate(Math.ceil(rect.x - sourceRect.x * sc), Math.ceil(rect.y - sourceRect.y * sc));\n    ctx.scale(sc, sc);\n    frame.source.draw(ctx); // display object will draw itself.\n\n    ctx.restore();\n    return ++this._index < this._frames.length;\n  }\n\n}\n/**\n * @static\n * @readonly\n * @protected\n * @type {String}\n */\n\nSpriteSheetBuilder.ERR_DIMENSIONS = \"frame dimensions exceed max spritesheet dimensions\";\n/**\n * @static\n * @readonly\n * @protected\n * @type {String}\n */\n\nSpriteSheetBuilder.ERR_RUNNING = \"a build is already running\";\n/**\n * Dispatched when a build completes.\n * @event easeljs.SpriteSheetBuilder#complete\n * @property {Object} target The object that dispatched the event.\n * @property {String} type The event type.\n * @since 0.6.0\n */\n\n/**\n * Dispatched when an asynchronous build has progress.\n * @event easeljs.SpriteSheetBuilder#progress\n * @property {Object} target The object that dispatched the event.\n * @property {String} type The event type.\n * @property {Number} progress The current progress value (0-1).\n * @since 0.6.0\n */\n\n/*\n* @license SpriteSheetUtils\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n/**\n * The SpriteSheetUtils class is a collection of static methods for working with {{#crossLink \"SpriteSheet\"}}{{/crossLink}}s.\n * A sprite sheet is a series of images (usually animation frames) combined into a single image on a regular grid. For\n * example, an animation consisting of 8 100x100 images could be combined into a 400x200 sprite sheet (4 frames across\n * by 2 high). The SpriteSheetUtils class uses a static interface and should not be instantiated.\n *\n * @memberof easeljs\n * @name easeljs.SpriteSheetUtils\n */\n\nvar SpriteSheetUtils = SpriteSheetUtils = {\n  /**\n   * @protected\n   * @type {HTMLCanvasElement | Object}\n   */\n  _workingCanvas: createCanvas(),\n\n  /**\n   * @protected\n   * @type {CanvasRenderingContext2D}\n   */\n  get _workingContext() {\n    return this._workingCanvas.getContext(\"2d\");\n  },\n\n  /**\n   * Returns a single frame of the specified sprite sheet as a new PNG image. An example of when this may be useful is\n   * to use a spritesheet frame as the source for a bitmap fill.\n   *\n   * <strong>WARNING:</strong> In almost all cases it is better to display a single frame using a {@link easeljs.Sprite}\n   * with a {@link easeljs.Sprite#gotoAndStop} call than it is to slice out a frame using this\n   * method and display it with a Bitmap instance. You can also crop an image using the {@link easeljs.Bitmap#sourceRect}\n   * property of {@link easeljs.Bitmap}.\n   *\n   * The extractFrame method may cause cross-domain warnings since it accesses pixels directly on the canvas.\n   *\n   * @param {easeljs.SpriteSheet} spriteSheet The SpriteSheet instance to extract a frame from.\n   * @param {Number | String} frameOrAnimation The frame number or animation name to extract. If an animation\n   * name is specified, only the first frame of the animation will be extracted.\n   * @return {HTMLImageElement} a single frame of the specified sprite sheet as a new PNG image.\n   */\n  extractFrame(spriteSheet, frameOrAnimation) {\n    if (isNaN(frameOrAnimation)) {\n      frameOrAnimation = spriteSheet.getAnimation(frameOrAnimation).frames[0];\n    }\n\n    let data = spriteSheet.getFrame(frameOrAnimation);\n\n    if (!data) {\n      return null;\n    }\n\n    let r = data.rect;\n    let canvas = this._workingCanvas;\n    canvas.width = r.width;\n    canvas.height = r.height;\n\n    this._workingContext.drawImage(data.image, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height);\n\n    let img = document.createElement(\"img\");\n    img.src = canvas.toDataURL(\"image/png\");\n    return img;\n  },\n\n  /**\n   * @protected\n   * @param {easeljs.SpriteSheet} spriteSheet\n   * @param {Number} count\n   * @param {Number} h\n   * @param {Number} v\n   */\n  _flip(spriteSheet, count, h, v) {\n    let imgs = spriteSheet._images;\n    let canvas = this._workingCanvas;\n    let ctx = this._workingContext;\n    const il = imgs.length / count;\n\n    for (let i = 0; i < il; i++) {\n      let src = imgs[i];\n      src.__tmp = i; // a bit hacky, but faster than doing indexOf below.\n\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.clearRect(0, 0, canvas.width + 1, canvas.height + 1);\n      canvas.width = src.width;\n      canvas.height = src.height;\n      ctx.setTransform(h ? -1 : 1, 0, 0, v ? -1 : 1, h ? src.width : 0, v ? src.height : 0);\n      ctx.drawImage(src, 0, 0);\n      let img = document.createElement(\"img\");\n      img.src = canvas.toDataURL(\"image/png\"); // work around a strange bug in Safari:\n\n      img.width = src.width || src.naturalWidth;\n      img.height = src.height || src.naturalHeight;\n      imgs.push(img);\n    }\n\n    let frames = spriteSheet._frames;\n    const fl = frames.length / count;\n\n    for (let i = 0; i < fl; i++) {\n      let src = frames[i];\n      let rect = src.rect.clone();\n      let img = imgs[src.image.__tmp + il * count];\n      let frame = {\n        image: img,\n        rect,\n        regX: src.regX,\n        regY: src.regY\n      };\n\n      if (h) {\n        rect.x = (img.width || img.naturalWidth) - rect.x - rect.width; // update rect\n\n        frame.regX = rect.width - src.regX; // update registration point\n      }\n\n      if (v) {\n        rect.y = (img.height || img.naturalHeight) - rect.y - rect.height; // update rect\n\n        frame.regY = rect.height - src.regY; // update registration point\n      }\n\n      frames.push(frame);\n    }\n\n    let sfx = `_${h ? \"h\" : \"\"}${v ? \"v\" : \"\"}`;\n    let names = spriteSheet._animations;\n    let data = spriteSheet._data;\n    const al = names.length / count;\n\n    for (let i = 0; i < al; i++) {\n      let name = names[i];\n      let src = data[name];\n      let anim = {\n        name: name + sfx,\n        speed: src.speed,\n        next: src.next,\n        frames: []\n      };\n\n      if (src.next) {\n        anim.next += sfx;\n      }\n\n      let frames = src.frames;\n\n      for (let i = 0, l = frames.length; i < l; i++) {\n        anim.frames.push(frames[i] + fl * count);\n      }\n\n      data[anim.name] = anim;\n      names.push(anim.name);\n    }\n  }\n\n};\n\n/**\n * @license WebGLInspector\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * A utility and helper class designed to work with {{#crossLink \"StageGL\"}}{{/crossLink}} to help investigate and\n * test performance or display problems. It contains logging functions to analyze behaviour and performance testing\n * utilities.\n *\n * @memberof easeljs\n * @extends core.EventDispatcher\n *\n * @param {StageGL} stage The default stage to use when none is supplied.\n */\n\nclass WebGLInspector extends EventDispatcher {\n  constructor(stage) {\n    super();\n    /**\n     * The internal reference to the default stage this Inspector is for.\n     * @protected\n     * @type {easeljs.StageGL}\n     */\n\n    this._stage = stage;\n  }\n  /**\n   * Utility function for use with {@link easeljs.WebGLInspector#logDepth}. Logs an item's position and registration.\n   * Useful to see if something is being forced off screen or has an integer position.\n   * @param {easeljs.DisplayObject} item The item we're currently logging about.\n   * @param {String} [prepend] The string to show before the item, usually formatting for a tree view.\n   * @static\n   */\n\n\n  static dispProps(item, prepend = \"\") {\n    let p = `\\tP: ${item.x.toFixed(2)}x${item.y.toFixed(2)}\\t`;\n    let r = `\\tR: ${item.regX.toFixed(2)}x${item.regY.toFixed(2)}\\t`;\n\n    WebGLInspector._log(prepend, `${item.toString()}\\t`, p, r);\n  }\n  /**\n   * Log with alternateOutput if available, defaulting to the console.\n   * @param {...*} info The info to log.\n   * @static\n   */\n\n\n  static _log(...info) {\n    if (WebGLInspector.alternateOutput) {\n      WebGLInspector.alternateOutput.log(...info);\n    } else {\n      console.log(...info);\n    }\n  }\n  /**\n   * Perform all of the logging reports at once.\n   * @param {easeljs.StageGL} [stage] The stage to log information for.\n   */\n\n\n  log(stage) {\n    if (!stage) {\n      stage = this._stage;\n    }\n\n    WebGLInspector._log(`Batches Per Draw: ${(stage._batchID / stage._drawID).toFixed(4)}`);\n\n    this.logContextInfo(stage._webGLContext);\n    this.logDepth(stage.children, \"\");\n    this.logTextureFill(stage);\n  }\n  /**\n   * Replace the stage's Draw command with an empty draw command. This is useful for testing performance, and ignoring rendering.\n   * @param {StageGL} [stage=] The stage to log information for.\n   * @param {Boolean} [enabled] Force enabled. If left undefined, it will toggle.\n   */\n\n\n  toggleGPUDraw(stage, enabled) {\n    if (!stage) {\n      stage = this._stage;\n    }\n\n    if (enabled === undefined) {\n      enabled = !!stage._drawBuffers_;\n    }\n\n    if (enabled && stage._drawBuffers_) {\n      stage._drawBuffers = stage._drawBuffers_;\n      stage._drawBuffers_ = undefined;\n    } else {\n      stage._drawBuffers_ = stage._drawBuffers;\n\n      stage._drawBuffers = function _inspectorDrawBuffers(gl) {\n        if (this.vocalDebug) {\n          WebGLInspector._log(`BlankDraw[${this._drawID}:${this._batchID}] : ${this.batchReason}`);\n        }\n      };\n    }\n  }\n  /**\n   * Recursively walk the entire display tree, log the attached items, and display it in a tree view.\n   * @param {Array} [children] The children array to walk through.\n   * @param {String} [prepend] What to prepend to this output from this point onwards.\n   * @param {Function} [logFunc] Custom logging function, mainly for filtering or formatting output.\n   */\n\n\n  logDepth(children, prepend = \"\", logFunc = WebGLInspector._log) {\n    if (!children) {\n      children = this._stage.children;\n    }\n\n    const l = children.length;\n\n    for (let i = 0; i < l; i++) {\n      let child = children[i];\n      logFunc(`${prepend}-`, child);\n\n      if (child.children && child.children.length) {\n        this.logDepth(child.children, `|${prepend}`, logFunc);\n      }\n    }\n  }\n  /**\n   * Examine the context and provide information about its capabilities.\n   * @param {WebGLRenderingContext} [gl] The WebGL context to inspect.\n   */\n\n\n  logContextInfo(gl) {\n    if (!gl) {\n      gl = this._stage._webGLContext;\n    }\n\n    let data = `\n\t\t\t== LOG:\\n\n\t\t\tMax textures per draw: ${gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)}\\n\n\t\t\tMax textures active: ${gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS)}\\n\n\t\t\t\\n\n\t\t\tMax texture size: ${gl.getParameter(gl.MAX_TEXTURE_SIZE) / 2}\\n\n\t\t\tMax cache size: ${gl.getParameter(gl.MAX_RENDERBUFFER_SIZE) / 2}\\n\n\t\t\t\\n\n\t\t\tMax attributes per vertex: ${gl.getParameter(gl.MAX_VERTEX_ATTRIBS)}\\n\n\t\t\tWebGL Version string: ${gl.getParameter(gl.VERSION)}\\n\n\t\t\t======\n\t\t`;\n\n    WebGLInspector._log(data);\n  }\n  /**\n   * Simulate renders and watch what happens for textures moving around between draw calls. A texture moving between\n   * slots means it was removed and then re-added to draw calls. Performance may be better if it was allowed to stay\n   * in place.\n   * @param {StageGL} [stage] The stage to log information for.\n   */\n\n\n  logTextureFill(stage) {\n    if (!stage) {\n      stage = this._stage;\n    }\n\n    let dict = stage._textureDictionary;\n    let count = stage._batchTextureCount;\n\n    WebGLInspector._log(`${textureMax}: ${count}`);\n\n    let output = [];\n\n    for (let n in dict) {\n      let str = n.replace(window.location.origin, \"\");\n      let tex = dict[n];\n      let shifted = tex._lastActiveIndex ? tex._lastActiveIndex === tex._activeIndex : false;\n      output.push({\n        src,\n        element: tex,\n        shifted\n      });\n      tex._lastActiveIndex = tex._activeIndex;\n    }\n\n    output.sort((a, b) => {\n      if (a.element._drawID === stage._drawID) {\n        return 1;\n      }\n\n      if (a.element._drawID < b.element._drawID) {\n        return -1;\n      }\n\n      return 0;\n    });\n    const l = output.length;\n\n    for (let i = 0; i < l; i++) {\n      let out = output[i];\n      let active = out.element._drawID === stage._drawID;\n\n      WebGLInspector._log(`[${out.src}] ${active ? \"ACTIVE\" : \"stale\"} ${out.shifted ? \"steady\" : \"DRIFT\"}`, out.element);\n    }\n  }\n\n}\n/**\n * Alternate output for debugging situations where \"console\" is not available, i.e. Mobile or remote debugging.\n * Expects object with a \"log\" function that takes any number of params.\n * @type {Console}\n * @default null\n * @static\n * @protected\n */\n\nWebGLInspector.alternateOutput = null;\n\n/**\n * The core classes of EaselJS.\n * @namespace easeljs\n *\n * @example\n * import { Stage, Shape } from \"@createjs/easeljs\";\n * const stage = new Stage(\"myCanvas\");\n * const shape = new Shape();\n * shape.graphics.beginFill(\"red\").drawCircle(0, 0, 50);\n * stage.addChild(shape);\n * stage.update();\n */\n\nexports.StageGL = StageGL;\nexports.Stage = Stage;\nexports.Container = Container;\nexports.DisplayObject = DisplayObject;\nexports.Bitmap = Bitmap;\nexports.BitmapText = BitmapText;\nexports.DOMElement = DOMElement;\nexports.Graphics = Graphics;\nexports.MovieClip = MovieClip;\nexports.Shadow = Shadow;\nexports.Shape = Shape;\nexports.Sprite = Sprite;\nexports.SpriteSheet = SpriteSheet;\nexports.Text = Text;\nexports.MouseEvent = MouseEvent;\nexports.AlphaMapFilter = AlphaMapFilter;\nexports.AlphaMaskFilter = AlphaMaskFilter;\nexports.BitmapCache = BitmapCache;\nexports.BlurFilter = BlurFilter;\nexports.ColorFilter = ColorFilter;\nexports.ColorMatrix = ColorMatrix;\nexports.ColorMatrixFilter = ColorMatrixFilter;\nexports.Filter = Filter;\nexports.DisplayProps = DisplayProps;\nexports.Matrix2D = Matrix2D;\nexports.Point = Point;\nexports.Rectangle = Rectangle;\nexports.ButtonHelper = ButtonHelper;\nexports.Touch = Touch;\nexports.SpriteSheetBuilder = SpriteSheetBuilder;\nexports.SpriteSheetUtils = SpriteSheetUtils;\nexports.uid = uid;\nexports.createCanvas = createCanvas;\nexports.WebGLInspector = WebGLInspector;\n\nexports.Event = Event;\nexports.EventDispatcher = EventDispatcher;\nexports.Ticker = Ticker;\n\n\t\t\t\tvar cjs = window.createjs = window.createjs || {};\n\t\t\t\tvar v = cjs.v = cjs.v || {};\n\t\t\t\nv.easeljs = \"NEXT\";\n"]}